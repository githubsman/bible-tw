<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<script id="versionArea" type="text/javascript">
//<![CDATA[
var version = {title: "TiddlyWiki", major: 2, minor: 7, revision: 1, date: new Date("March 11, 2013"), extensions: {}};

//]]>
</script>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="copyright" content="
TiddlyWiki created by Jeremy Ruston, (jeremy [at] osmosoft [dot] com)

Copyright (c) Jeremy Ruston 2004-2007
Copyright (c) UnaMesa Association 2007-2012

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.

Redistributions in binary form must reproduce the above copyright notice, this
list of conditions and the following disclaimer in the documentation and/or other
materials provided with the distribution.

Neither the name of the UnaMesa Association nor the names of its contributors may be
used to endorse or promote products derived from this software without specific
prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.

" />
<!--PRE-HEAD-START-->
<!--{{{-->
<link rel="shortcut icon" href="/recipes/tiddlywiki-com_public/tiddlers/favicon.ico" />
<link href="/index.xml" rel="alternate"
	type="application/rss+xml" title="tiddlywiki.com's RSS feed" />
<!--}}}-->
<!--PRE-HEAD-END-->
<title> Bible Notes </title>
<style id="styleArea" type="text/css">
#saveTest {display:none;}
#messageArea {display:none;}
#copyright {display:none;}
#storeArea {display:none;}
#storeArea div {padding:0.5em; margin:1em 0em 0em 0em; border-color:#fff #666 #444 #ddd; border-style:solid; border-width:2px; overflow:auto;}
#shadowArea {display:none;}
#javascriptWarning {width:100%; text-align:center; font-weight:bold; background-color:#dd1100; color:#fff; padding:1em 0em;}

</style>
<!--POST-HEAD-START-->

<!--POST-HEAD-END-->
</head>
<body onload="main();" onunload="if(window.unload) unload();">
<!--PRE-BODY-START-->

<!--PRE-BODY-END-->
<div id="copyright">
Welcome to TiddlyWiki created by Jeremy Ruston; Copyright &copy; 2004-2007 Jeremy Ruston, Copyright &copy; 2007-2011 UnaMesa Association
</div>
<noscript>
<div id="javascriptWarning">
This page requires JavaScript to function properly.<br /><br />If you are using Microsoft Internet Explorer you may need to click on the yellow bar above and select 'Allow Blocked Content'. You must then click 'Yes' on the following security warning.
</div>

</noscript>
<div id="saveTest"></div>
<div id="backstageCloak"></div>
<div id="backstageButton"></div>
<div id="backstageArea"><div id="backstageToolbar"></div></div>
<div id="backstage">
	<div id="backstagePanel"></div>
</div>
<div id="contentWrapper"></div>
<div id="contentStash"></div>
<div id="shadowArea">
<div title="ColorPalette">
<pre>Background: #fff
Foreground: #000
PrimaryPale: #8cf
PrimaryLight: #18f
PrimaryMid: #04b
PrimaryDark: #014
SecondaryPale: #ffc
SecondaryLight: #fe8
SecondaryMid: #db4
SecondaryDark: #841
TertiaryPale: #eee
TertiaryLight: #ccc
TertiaryMid: #999
TertiaryDark: #666
Error: #f88
</pre>
</div>
<div title="EditTemplate">
<pre>&lt;!--{{{--&gt;
&lt;div class='toolbar' macro='toolbar [[ToolbarCommands::EditToolbar]]'&gt;&lt;/div&gt;
&lt;div class='title' macro='view title'&gt;&lt;/div&gt;
&lt;div class='editor' macro='edit title'&gt;&lt;/div&gt;
&lt;div macro='annotations'&gt;&lt;/div&gt;
&lt;div class='editor' macro='edit text'&gt;&lt;/div&gt;
&lt;div class='editor' macro='edit tags'&gt;&lt;/div&gt;&lt;div class='editorFooter'&gt;&lt;span macro='message views.editor.tagPrompt'&gt;&lt;/span&gt;&lt;span macro='tagChooser excludeLists'&gt;&lt;/span&gt;&lt;/div&gt;
&lt;!--}}}--&gt;
</pre>
</div>
<div title="GettingStarted">
<pre>To get started with this blank [[TiddlyWiki]], you'll need to modify the following tiddlers:
* [[SiteTitle]] &amp; [[SiteSubtitle]]: The title and subtitle of the site, as shown above (after saving, they will also appear in the browser title bar)
* [[MainMenu]]: The menu (usually on the left)
* [[DefaultTiddlers]]: Contains the names of the tiddlers that you want to appear when the TiddlyWiki is opened
You'll also need to enter your username for signing your edits: &lt;&lt;option txtUserName&gt;&gt;
</pre>
</div>
<div title="ImportTiddlers">
<pre>&lt;&lt;importTiddlers&gt;&gt;
</pre>
</div>
<div title="MarkupPreHead">
<pre>&lt;!--{{{--&gt;
&lt;link rel='alternate' type='application/rss+xml' title='RSS' href='index.xml' /&gt;
&lt;!--}}}--&gt;
</pre>
</div>
<div title="OptionsPanel">
<pre>These [[InterfaceOptions]] for customising [[TiddlyWiki]] are saved in your browser

Your username for signing your edits. Write it as a [[WikiWord]] (eg [[JoeBloggs]])

&lt;&lt;option txtUserName&gt;&gt;
&lt;&lt;option chkSaveBackups&gt;&gt; [[SaveBackups]]
&lt;&lt;option chkAutoSave&gt;&gt; [[AutoSave]]
&lt;&lt;option chkRegExpSearch&gt;&gt; [[RegExpSearch]]
&lt;&lt;option chkCaseSensitiveSearch&gt;&gt; [[CaseSensitiveSearch]]
&lt;&lt;option chkAnimate&gt;&gt; [[EnableAnimations]]

----
Also see [[AdvancedOptions]]
</pre>
</div>
<div title="PageTemplate">
<pre>&lt;!--{{{--&gt;
&lt;div class='header' role='banner' macro='gradient vert [[ColorPalette::PrimaryLight]] [[ColorPalette::PrimaryMid]]'&gt;
&lt;div class='headerShadow'&gt;
&lt;span class='siteTitle' refresh='content' tiddler='SiteTitle'&gt;&lt;/span&gt;&amp;nbsp;
&lt;span class='siteSubtitle' refresh='content' tiddler='SiteSubtitle'&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;div class='headerForeground'&gt;
&lt;span class='siteTitle' refresh='content' tiddler='SiteTitle'&gt;&lt;/span&gt;&amp;nbsp;
&lt;span class='siteSubtitle' refresh='content' tiddler='SiteSubtitle'&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id='mainMenu' role='navigation' refresh='content' tiddler='MainMenu'&gt;&lt;/div&gt;
&lt;div id='sidebar'&gt;
&lt;div id='sidebarOptions' role='navigation' refresh='content' tiddler='SideBarOptions'&gt;&lt;/div&gt;
&lt;div id='sidebarTabs' role='complementary' refresh='content' force='true' tiddler='SideBarTabs'&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id='displayArea' role='main'&gt;
&lt;div id='messageArea'&gt;&lt;/div&gt;
&lt;div id='tiddlerDisplay'&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;!--}}}--&gt;
</pre>
</div>
<div title="StyleSheetColors">
<pre>/*{{{*/
body {background:[[ColorPalette::Background]]; color:[[ColorPalette::Foreground]];}

a {color:[[ColorPalette::PrimaryMid]];}
a:hover {background-color:[[ColorPalette::PrimaryMid]]; color:[[ColorPalette::Background]];}
a img {border:0;}

h1,h2,h3,h4,h5,h6 {color:[[ColorPalette::SecondaryDark]]; background:transparent;}
h1 {border-bottom:2px solid [[ColorPalette::TertiaryLight]];}
h2,h3 {border-bottom:1px solid [[ColorPalette::TertiaryLight]];}

.button {color:[[ColorPalette::PrimaryDark]]; border:1px solid [[ColorPalette::Background]];}
.button:hover {color:[[ColorPalette::PrimaryDark]]; background:[[ColorPalette::SecondaryLight]]; border-color:[[ColorPalette::SecondaryMid]];}
.button:active {color:[[ColorPalette::Background]]; background:[[ColorPalette::SecondaryMid]]; border:1px solid [[ColorPalette::SecondaryDark]];}

.header {background:[[ColorPalette::PrimaryMid]];}
.headerShadow {color:[[ColorPalette::Foreground]];}
.headerShadow a {font-weight:normal; color:[[ColorPalette::Foreground]];}
.headerForeground {color:[[ColorPalette::Background]];}
.headerForeground a {font-weight:normal; color:[[ColorPalette::PrimaryPale]];}

.tabSelected {color:[[ColorPalette::PrimaryDark]];
	background:[[ColorPalette::TertiaryPale]];
	border-left:1px solid [[ColorPalette::TertiaryLight]];
	border-top:1px solid [[ColorPalette::TertiaryLight]];
	border-right:1px solid [[ColorPalette::TertiaryLight]];
}
.tabUnselected {color:[[ColorPalette::Background]]; background:[[ColorPalette::TertiaryMid]];}
.tabContents {color:[[ColorPalette::PrimaryDark]]; background:[[ColorPalette::TertiaryPale]]; border:1px solid [[ColorPalette::TertiaryLight]];}
.tabContents .button {border:0;}

#sidebar {}
#sidebarOptions input {border:1px solid [[ColorPalette::PrimaryMid]];}
#sidebarOptions .sliderPanel {background:[[ColorPalette::PrimaryPale]];}
#sidebarOptions .sliderPanel a {border:none;color:[[ColorPalette::PrimaryMid]];}
#sidebarOptions .sliderPanel a:hover {color:[[ColorPalette::Background]]; background:[[ColorPalette::PrimaryMid]];}
#sidebarOptions .sliderPanel a:active {color:[[ColorPalette::PrimaryMid]]; background:[[ColorPalette::Background]];}

.wizard {background:[[ColorPalette::PrimaryPale]]; border:1px solid [[ColorPalette::PrimaryMid]];}
.wizard h1 {color:[[ColorPalette::PrimaryDark]]; border:none;}
.wizard h2 {color:[[ColorPalette::Foreground]]; border:none;}
.wizardStep {background:[[ColorPalette::Background]]; color:[[ColorPalette::Foreground]];
	border:1px solid [[ColorPalette::PrimaryMid]];}
.wizardStep.wizardStepDone {background:[[ColorPalette::TertiaryLight]];}
.wizardFooter {background:[[ColorPalette::PrimaryPale]];}
.wizardFooter .status {background:[[ColorPalette::PrimaryDark]]; color:[[ColorPalette::Background]];}
.wizard .button {color:[[ColorPalette::Foreground]]; background:[[ColorPalette::SecondaryLight]]; border: 1px solid;
	border-color:[[ColorPalette::SecondaryPale]] [[ColorPalette::SecondaryDark]] [[ColorPalette::SecondaryDark]] [[ColorPalette::SecondaryPale]];}
.wizard .button:hover {color:[[ColorPalette::Foreground]]; background:[[ColorPalette::Background]];}
.wizard .button:active {color:[[ColorPalette::Background]]; background:[[ColorPalette::Foreground]]; border: 1px solid;
	border-color:[[ColorPalette::PrimaryDark]] [[ColorPalette::PrimaryPale]] [[ColorPalette::PrimaryPale]] [[ColorPalette::PrimaryDark]];}

.wizard .notChanged {background:transparent;}
.wizard .changedLocally {background:#80ff80;}
.wizard .changedServer {background:#8080ff;}
.wizard .changedBoth {background:#ff8080;}
.wizard .notFound {background:#ffff80;}
.wizard .putToServer {background:#ff80ff;}
.wizard .gotFromServer {background:#80ffff;}

#messageArea {border:1px solid [[ColorPalette::SecondaryMid]]; background:[[ColorPalette::SecondaryLight]]; color:[[ColorPalette::Foreground]];}
#messageArea .button {color:[[ColorPalette::PrimaryMid]]; background:[[ColorPalette::SecondaryPale]]; border:none;}

.popupTiddler {background:[[ColorPalette::TertiaryPale]]; border:2px solid [[ColorPalette::TertiaryMid]];}

.popup {background:[[ColorPalette::TertiaryPale]]; color:[[ColorPalette::TertiaryDark]]; border-left:1px solid [[ColorPalette::TertiaryMid]]; border-top:1px solid [[ColorPalette::TertiaryMid]]; border-right:2px solid [[ColorPalette::TertiaryDark]]; border-bottom:2px solid [[ColorPalette::TertiaryDark]];}
.popup hr {color:[[ColorPalette::PrimaryDark]]; background:[[ColorPalette::PrimaryDark]]; border-bottom:1px;}
.popup li.disabled {color:[[ColorPalette::TertiaryMid]];}
.popup li a, .popup li a:visited {color:[[ColorPalette::Foreground]]; border: none;}
.popup li a:hover {background:[[ColorPalette::SecondaryLight]]; color:[[ColorPalette::Foreground]]; border: none;}
.popup li a:active {background:[[ColorPalette::SecondaryPale]]; color:[[ColorPalette::Foreground]]; border: none;}
.popupHighlight {background:[[ColorPalette::Background]]; color:[[ColorPalette::Foreground]];}
.listBreak div {border-bottom:1px solid [[ColorPalette::TertiaryDark]];}

.tiddler .defaultCommand {font-weight:bold;}

.shadow .title {color:[[ColorPalette::TertiaryDark]];}

.title {color:[[ColorPalette::SecondaryDark]];}
.subtitle {color:[[ColorPalette::TertiaryDark]];}

.toolbar {color:[[ColorPalette::PrimaryMid]];}
.toolbar a {color:[[ColorPalette::TertiaryLight]];}
.selected .toolbar a {color:[[ColorPalette::TertiaryMid]];}
.selected .toolbar a:hover {color:[[ColorPalette::Foreground]];}

.tagging, .tagged {border:1px solid [[ColorPalette::TertiaryPale]]; background-color:[[ColorPalette::TertiaryPale]];}
.selected .tagging, .selected .tagged {background-color:[[ColorPalette::TertiaryLight]]; border:1px solid [[ColorPalette::TertiaryMid]];}
.tagging .listTitle, .tagged .listTitle {color:[[ColorPalette::PrimaryDark]];}
.tagging .button, .tagged .button {border:none;}

.footer {color:[[ColorPalette::TertiaryLight]];}
.selected .footer {color:[[ColorPalette::TertiaryMid]];}

.error, .errorButton {color:[[ColorPalette::Foreground]]; background:[[ColorPalette::Error]];}
.warning {color:[[ColorPalette::Foreground]]; background:[[ColorPalette::SecondaryPale]];}
.lowlight {background:[[ColorPalette::TertiaryLight]];}

.zoomer {background:none; color:[[ColorPalette::TertiaryMid]]; border:3px solid [[ColorPalette::TertiaryMid]];}

.imageLink, #displayArea .imageLink {background:transparent;}

.annotation {background:[[ColorPalette::SecondaryLight]]; color:[[ColorPalette::Foreground]]; border:2px solid [[ColorPalette::SecondaryMid]];}

.viewer .listTitle {list-style-type:none; margin-left:-2em;}
.viewer .button {border:1px solid [[ColorPalette::SecondaryMid]];}
.viewer blockquote {border-left:3px solid [[ColorPalette::TertiaryDark]];}

.viewer table, table.twtable {border:2px solid [[ColorPalette::TertiaryDark]];}
.viewer th, .viewer thead td, .twtable th, .twtable thead td {background:[[ColorPalette::SecondaryMid]]; border:1px solid [[ColorPalette::TertiaryDark]]; color:[[ColorPalette::Background]];}
.viewer td, .viewer tr, .twtable td, .twtable tr {border:1px solid [[ColorPalette::TertiaryDark]];}

.viewer pre {border:1px solid [[ColorPalette::SecondaryLight]]; background:[[ColorPalette::SecondaryPale]];}
.viewer code {color:[[ColorPalette::SecondaryDark]];}
.viewer hr {border:0; border-top:dashed 1px [[ColorPalette::TertiaryDark]]; color:[[ColorPalette::TertiaryDark]];}

.highlight, .marked {background:[[ColorPalette::SecondaryLight]];}

.editor input {border:1px solid [[ColorPalette::PrimaryMid]];}
.editor textarea {border:1px solid [[ColorPalette::PrimaryMid]]; width:100%;}
.editorFooter {color:[[ColorPalette::TertiaryMid]];}
.readOnly {background:[[ColorPalette::TertiaryPale]];}

#backstageArea {background:[[ColorPalette::Foreground]]; color:[[ColorPalette::TertiaryMid]];}
#backstageArea a {background:[[ColorPalette::Foreground]]; color:[[ColorPalette::Background]]; border:none;}
#backstageArea a:hover {background:[[ColorPalette::SecondaryLight]]; color:[[ColorPalette::Foreground]]; }
#backstageArea a.backstageSelTab {background:[[ColorPalette::Background]]; color:[[ColorPalette::Foreground]];}
#backstageButton a {background:none; color:[[ColorPalette::Background]]; border:none;}
#backstageButton a:hover {background:[[ColorPalette::Foreground]]; color:[[ColorPalette::Background]]; border:none;}
#backstagePanel {background:[[ColorPalette::Background]]; border-color: [[ColorPalette::Background]] [[ColorPalette::TertiaryDark]] [[ColorPalette::TertiaryDark]] [[ColorPalette::TertiaryDark]];}
.backstagePanelFooter .button {border:none; color:[[ColorPalette::Background]];}
.backstagePanelFooter .button:hover {color:[[ColorPalette::Foreground]];}
#backstageCloak {background:[[ColorPalette::Foreground]]; opacity:0.6; filter:alpha(opacity=60);}
/*}}}*/
</pre>
</div>
<div title="StyleSheetLayout">
<pre>/*{{{*/
* html .tiddler {height:1%;}

body {font-size:.75em; font-family:arial,helvetica; margin:0; padding:0;}

h1,h2,h3,h4,h5,h6 {font-weight:bold; text-decoration:none;}
h1,h2,h3 {padding-bottom:1px; margin-top:1.2em;margin-bottom:0.3em;}
h4,h5,h6 {margin-top:1em;}
h1 {font-size:1.35em;}
h2 {font-size:1.25em;}
h3 {font-size:1.1em;}
h4 {font-size:1em;}
h5 {font-size:.9em;}

hr {height:1px;}

a {text-decoration:none;}

dt {font-weight:bold;}

ol {list-style-type:decimal;}
ol ol {list-style-type:lower-alpha;}
ol ol ol {list-style-type:lower-roman;}
ol ol ol ol {list-style-type:decimal;}
ol ol ol ol ol {list-style-type:lower-alpha;}
ol ol ol ol ol ol {list-style-type:lower-roman;}
ol ol ol ol ol ol ol {list-style-type:decimal;}

.txtOptionInput {width:11em;}

#contentWrapper .chkOptionInput {border:0;}

.externalLink {text-decoration:underline;}

.indent {margin-left:3em;}
.outdent {margin-left:3em; text-indent:-3em;}
code.escaped {white-space:nowrap;}

.tiddlyLinkExisting {font-weight:bold;}
.tiddlyLinkNonExisting {font-style:italic;}

/* the 'a' is required for IE, otherwise it renders the whole tiddler in bold */
a.tiddlyLinkNonExisting.shadow {font-weight:bold;}

#mainMenu .tiddlyLinkExisting,
	#mainMenu .tiddlyLinkNonExisting,
	#sidebarTabs .tiddlyLinkNonExisting {font-weight:normal; font-style:normal;}
#sidebarTabs .tiddlyLinkExisting {font-weight:bold; font-style:normal;}

.header {position:relative;}
.header a:hover {background:transparent;}
.headerShadow {position:relative; padding:4.5em 0 1em 1em; left:-1px; top:-1px;}
.headerForeground {position:absolute; padding:4.5em 0 1em 1em; left:0; top:0;}

.siteTitle {font-size:3em;}
.siteSubtitle {font-size:1.2em;}

#mainMenu {position:absolute; left:0; width:10em; text-align:right; line-height:1.6em; padding:1.5em 0.5em 0.5em 0.5em; font-size:1.1em;}

#sidebar {position:absolute; right:3px; width:16em; font-size:.9em;}
#sidebarOptions {padding-top:0.3em;}
#sidebarOptions a {margin:0 0.2em; padding:0.2em 0.3em; display:block;}
#sidebarOptions input {margin:0.4em 0.5em;}
#sidebarOptions .sliderPanel {margin-left:1em; padding:0.5em; font-size:.85em;}
#sidebarOptions .sliderPanel a {font-weight:bold; display:inline; padding:0;}
#sidebarOptions .sliderPanel input {margin:0 0 0.3em 0;}
#sidebarTabs .tabContents {width:15em; overflow:hidden;}

.wizard {padding:0.1em 1em 0 2em;}
.wizard h1 {font-size:2em; font-weight:bold; background:none; padding:0; margin:0.4em 0 0.2em;}
.wizard h2 {font-size:1.2em; font-weight:bold; background:none; padding:0; margin:0.4em 0 0.2em;}
.wizardStep {padding:1em 1em 1em 1em;}
.wizard .button {margin:0.5em 0 0; font-size:1.2em;}
.wizardFooter {padding:0.8em 0.4em 0.8em 0;}
.wizardFooter .status {padding:0 0.4em; margin-left:1em;}
.wizard .button {padding:0.1em 0.2em;}

#messageArea {position:fixed; top:2em; right:0; margin:0.5em; padding:0.5em; z-index:2000; _position:absolute;}
.messageToolbar {display:block; text-align:right; padding:0.2em;}
#messageArea a {text-decoration:underline;}

.tiddlerPopupButton {padding:0.2em;}
.popupTiddler {position: absolute; z-index:300; padding:1em; margin:0;}

.popup {position:absolute; z-index:300; font-size:.9em; padding:0; list-style:none; margin:0;}
.popup .popupMessage {padding:0.4em;}
.popup hr {display:block; height:1px; width:auto; padding:0; margin:0.2em 0;}
.popup li.disabled {padding:0.4em;}
.popup li a {display:block; padding:0.4em; font-weight:normal; cursor:pointer;}
.listBreak {font-size:1px; line-height:1px;}
.listBreak div {margin:2px 0;}

.tabset {padding:1em 0 0 0.5em;}
.tab {margin:0 0 0 0.25em; padding:2px;}
.tabContents {padding:0.5em;}
.tabContents ul, .tabContents ol {margin:0; padding:0;}
.txtMainTab .tabContents li {list-style:none;}
.tabContents li.listLink { margin-left:.75em;}

#contentWrapper {display:block;}
#splashScreen {display:none;}

#displayArea {margin:1em 17em 0 14em;}

.toolbar {text-align:right; font-size:.9em;}

.tiddler {padding:1em 1em 0;}

.missing .viewer,.missing .title {font-style:italic;}

.title {font-size:1.6em; font-weight:bold;}

.missing .subtitle {display:none;}
.subtitle {font-size:1.1em;}

.tiddler .button {padding:0.2em 0.4em;}

.tagging {margin:0.5em 0.5em 0.5em 0; float:left; display:none;}
.isTag .tagging {display:block;}
.tagged {margin:0.5em; float:right;}
.tagging, .tagged {font-size:0.9em; padding:0.25em;}
.tagging ul, .tagged ul {list-style:none; margin:0.25em; padding:0;}
.tagClear {clear:both;}

.footer {font-size:.9em;}
.footer li {display:inline;}

.annotation {padding:0.5em; margin:0.5em;}

* html .viewer pre {width:99%; padding:0 0 1em 0;}
.viewer {line-height:1.4em; padding-top:0.5em;}
.viewer .button {margin:0 0.25em; padding:0 0.25em;}
.viewer blockquote {line-height:1.5em; padding-left:0.8em;margin-left:2.5em;}
.viewer ul, .viewer ol {margin-left:0.5em; padding-left:1.5em;}

.viewer table, table.twtable {border-collapse:collapse; margin:0.8em 1.0em;}
.viewer th, .viewer td, .viewer tr,.viewer caption,.twtable th, .twtable td, .twtable tr,.twtable caption {padding:3px;}
table.listView {font-size:0.85em; margin:0.8em 1.0em;}
table.listView th, table.listView td, table.listView tr {padding:0 3px 0 3px;}

.viewer pre {padding:0.5em; margin-left:0.5em; font-size:1.2em; line-height:1.4em; overflow:auto;}
.viewer code {font-size:1.2em; line-height:1.4em;}

.editor {font-size:1.1em;}
.editor input, .editor textarea {display:block; width:100%; font:inherit;}
.editorFooter {padding:0.25em 0; font-size:.9em;}
.editorFooter .button {padding-top:0; padding-bottom:0;}

.fieldsetFix {border:0; padding:0; margin:1px 0px;}

.zoomer {font-size:1.1em; position:absolute; overflow:hidden;}
.zoomer div {padding:1em;}

* html #backstage {width:99%;}
* html #backstageArea {width:99%;}
#backstageArea {display:none; position:relative; overflow: hidden; z-index:150; padding:0.3em 0.5em;}
#backstageToolbar {position:relative;}
#backstageArea a {font-weight:bold; margin-left:0.5em; padding:0.3em 0.5em;}
#backstageButton {display:none; position:absolute; z-index:175; top:0; right:0;}
#backstageButton a {padding:0.1em 0.4em; margin:0.1em;}
#backstage {position:relative; width:100%; z-index:50;}
#backstagePanel {display:none; z-index:100; position:absolute; width:90%; margin-left:3em; padding:1em;}
.backstagePanelFooter {padding-top:0.2em; float:right;}
.backstagePanelFooter a {padding:0.2em 0.4em;}
#backstageCloak {display:none; z-index:20; position:absolute; width:100%; height:100px;}

.whenBackstage {display:none;}
.backstageVisible .whenBackstage {display:block;}
/*}}}*/
</pre>
</div>
<div title="StyleSheetLocale">
<pre>/***
StyleSheet for use when a translation requires any css style changes.
This StyleSheet can be used directly by languages such as Chinese, Japanese and Korean which need larger font sizes.
***/
/*{{{*/
body {font-size:0.8em;}
#sidebarOptions {font-size:1.05em;}
#sidebarOptions a {font-style:normal;}
#sidebarOptions .sliderPanel {font-size:0.95em;}
.subtitle {font-size:0.8em;}
.viewer table.listView {font-size:0.95em;}
/*}}}*/
</pre>
</div>
<div title="StyleSheetPrint">
<pre>/*{{{*/
@media print {
#mainMenu, #sidebar, #messageArea, .toolbar, #backstageButton, #backstageArea {display: none !important;}
#displayArea {margin: 1em 1em 0em;}
noscript {display:none;} /* Fixes a feature in Firefox 1.5.0.2 where print preview displays the noscript content */
}
/*}}}*/
</pre>
</div>
<div title="ViewTemplate">
<pre>&lt;!--{{{--&gt;
&lt;div class='toolbar' role='navigation' macro='toolbar [[ToolbarCommands::ViewToolbar]]'&gt;&lt;/div&gt;
&lt;div class='title' macro='view title'&gt;&lt;/div&gt;
&lt;div class='subtitle'&gt;&lt;span macro='view modifier link'&gt;&lt;/span&gt;, &lt;span macro='view modified date'&gt;&lt;/span&gt; (&lt;span macro='message views.wikified.createdPrompt'&gt;&lt;/span&gt; &lt;span macro='view created date'&gt;&lt;/span&gt;)&lt;/div&gt;
&lt;div class='tagging' macro='tagging'&gt;&lt;/div&gt;
&lt;div class='tagged' macro='tags'&gt;&lt;/div&gt;
&lt;div class='viewer' macro='view text wikified'&gt;&lt;/div&gt;
&lt;div class='tagClear'&gt;&lt;/div&gt;
&lt;!--}}}--&gt;
</pre>
</div>

</div>
<!--POST-SHADOWAREA-->
<div id="storeArea">
<div title="1Chron-01-01-note" modifier="SDM" created="201010310501" modified="201211170216" tags="Comment" book_key="580001a">
<pre>Chap 17 --  Here we find the Temple site identified as Mount Moriah.

30:1-12 Reminiscent of Paul's proclamation and its reception in Athens, &lt;&lt;Bbl Acts 17:32 &gt;&gt;-34  Delitzsch says that &lt;&lt;Bbl Is 22:1 &gt;&gt;-14  pertains to this crisis (Isaiah, p.389ff).</pre>
</div>
<div title="1Cor-01-01-note" modifier="SDM" created="201010310317" modified="201211222337" tags="Comment" book_key="220001a">
<pre>1:1-10     The introduction resounds with the Name of the Lord Jesus Christ and with reminders of their eternal status and calling, all in preparation for vs. 10.
1:12    I am Christ's    --  Perhaps they claimed special guidance as gnostics; or one faction had somehow reduced Christ to a party-leader in the earthly terms; or perhaps Paul is making a rhetorical point.
1:16    The comment is a mark of Paul's consideration; he is sparing his own argument for a moment to include everybody.
&lt;&lt;Bbl 1Cor 1:18 abbr &gt;&gt;    [[Division]]
&lt;&lt;Bbl 1Cor 1:20 abbr &gt;&gt;    see &lt;&lt;Bbl Is 19:11 &gt;&gt;, &lt;&lt;Bbl Is 29:14 &gt;&gt;
&lt;&lt;Bbl 1Cor 1:21 abbr &gt;&gt;    As Pastor Sam puts it, &quot;He has not chosen the qualified; rather, He has qualified the chosen.&quot;
1:22-25 the Jews seek signs and stumble over weakness; the Greeks seek wisdom and stumble over foolishness.
1:25    see &lt;&lt;Bbl Jer 50:36 &gt;&gt;
&lt;&lt;Bbl 1Cor 1:26 abbr &gt;&gt;    noble   [eugenes], well-born
1:28    base   [agenes], low-born, lowly in estate.  Grosheide, p. 52, f.n.
1:27    see the Book of Judges and consider Samuel.
1:28    nullify , that is, make not; this verse would bear study.
1:29    This theme would bear study.

2:1-5   see &lt;&lt;Bbl 1Sam 17:45 &gt;&gt;
&lt;&lt;Bbl 1Cor 2:4 abbr &gt;&gt; see &lt;&lt;Bbl 1Cor 4:20 &gt;&gt;
&lt;&lt;Bbl 1Cor 2:12 abbr &gt;&gt;    possibly the source of the term zietgiest ??
    Paul has established a theme here: what God has given.   1:4, 21, 30; 2:7, 9.
2:13    thoughts  and words  are set off in italics.
2:14    see &lt;&lt;Bbl 1Jn 3:1 &gt;&gt;
&lt;&lt;Bbl 1Cor 2:15 abbr &gt;&gt; I am appraised by no natural man.  Cf &lt;&lt;Bbl Pr 28:5 &gt;&gt;.  Sunglasses, as used by many people, are a worldly approximation; they seem to announce hidden knowledge and say, &quot;You are unable to assess me.&quot;  When truly spiritual people meet, there is true spiritual recognition.
    A good picture of this is found at a stop-light intersection at early morning.  When the sun is rising directly behind you and pouring into the windshield of some poor fellow across the way, you can scrutinize him thoroughly  --  while he is mustering all endurance just to see if the light has turned green.
2:16    see &lt;&lt;Bbl Is 55:8 &gt;&gt;
{{hilite_2{
&quot;For who has known the mind of the Lord, that he should instruct him?&quot; But we have Christ's mind.
}}}
&lt;&lt;Bbl 1Cor 2:26 abbr &gt;&gt;    James says that faith without works is like the body without the spirit.  I think I would have reversed the order of his analogy, because the body is material, visible, like works; and also because the body is the less essential element.  James clearly is thinking differently.

</pre>
</div>
<div title="1Cor-03-01-note" modifier="SDM" created="201211222334" modified="201211250300" tags="Comment" book_key="">
<pre>3:4  In aspiring to anything other than Christ, we lose out.  How can one rise above that which is most highly esteemed?
3:7 One edge of the sword.
3:8 The other edge.  Possibly the thinking is this:  God's agents are nothing, vs. 7; therefore they are one, no distinction being possible; yet, vs. 8 continues, they receive a personally significant reward for their personally significant labor.
3:9 For, the thought continues, they are indeed His agents.
    God's edifice   --  (I have been presumptious recently in claiming a Greek origin for our term edifice.  Actually it is from the Latin.)  God's building is the institution of His Kingdom, used of the eternal Church, the eternal Church of the local assembly, and the person of the believer.  It finds a spiritual converse in the tower of Babel.
3:11    see &lt;&lt;Bbl Mt 7:24 &gt;&gt;-27
&lt;&lt;Bbl 1Cor 3:12 abbr &gt;&gt;    It seems the six materials listed fall into two catagories:  non-flammable and flammable.  (Glen Martin, on the other hand, proposed that God's fire will do away with all of them.)
3:13    Fire always simplifies, always reduces, always reveals.
    If the remark on 3:12 is correct, then the term quality  does not refer to a sliding scale of value, but rather to one of two essential characteristics:  eternal or temporal value.  Within those two characteristics, we recognize degrees of durability.  But the significance of these degrees practically disappears as we see their essential quality.  So it is with degrees of torment in Hell, or degrees of bliss or favor in Heaven:  however mitigated the punishment of a &quot;righteous sinner&quot; (as some rabbis say) may be, he is still separated from God by the abyss.  However attenuated the reward of a child of God, he still rests on God's bosum.  (But we must note that damnation and joy are not the subject of these verses, rather Paul is talking about the worth of one's Christian ministry.)
3:15    see &lt;&lt;Bbl Amos 3:12 &gt;&gt;, &lt;&lt;Bbl Amos 4:11 &gt;&gt;; &lt;&lt;Bbl Zec 3:1 &gt;&gt;-7
&lt;&lt;Bbl 1Cor 3:16 abbr &gt;&gt;    see &lt;&lt;Bbl Rom 8:9 &gt;&gt;, &lt;&lt;Bbl Eph 2:21 &gt;&gt;, &lt;&lt;Bbl 1Cor 6:19 &gt;&gt;
&lt;&lt;Bbl 1Cor 3:18 abbr &gt;&gt;    see &lt;&lt;Bbl Is 5:21 &gt;&gt;, &lt;&lt;Bbl 1Cor 8:2 &gt;&gt;,&lt;&lt;Bbl 1Cor 13:8 &gt;&gt;-12 , &lt;&lt;Bbl Gal 6:3 &gt;&gt;
&lt;&lt;Bbl 1Cor 3:21 abbr &gt;&gt;-23     Paul is emphasizing our tremendous authority in Christ in a passage that parallels &lt;&lt;Bbl 1Cor 2:15 &gt;&gt;-16 .

&lt;&lt;Bbl 1Cor 4:6 abbr &gt;&gt; The NAS says &quot;figuratively&quot;, but commentaries seem to disagree ??
4:10    see &lt;&lt;Bbl Amos 5:13 &gt;&gt;
&lt;&lt;Bbl 1Cor 4:13 abbr &gt;&gt;    see &lt;&lt;Bbl Mt 20:25 &gt;&gt;-28
&lt;&lt;Bbl 1Cor 4:16 abbr &gt;&gt;    see &lt;&lt;Bbl 1Cor 11:1 &gt;&gt;, &lt;&lt;Bbl Php 3:17 &gt;&gt;, &lt;&lt;Bbl Php 4:9 &gt;&gt;, &lt;&lt;Bbl 1Ths 1:6 &gt;&gt;
&lt;&lt;Bbl 1Cor 4:20 abbr &gt;&gt;    see &lt;&lt;Bbl 1Cor 2:4 &gt;&gt;

&lt;&lt;Bbl 1Cor 5:1 abbr &gt;&gt; The expression of incest seems euphemistic, but it may also allude to &lt;&lt;Bbl Lv 20:11 &gt;&gt;.
&lt;&lt;Bbl 1Cor 5:5 abbr &gt;&gt; see &lt;&lt;Bbl 1Cor 3:17 &gt;&gt;, &lt;&lt;Bbl Pr 23:14 &gt;&gt;, &lt;&lt;Bbl 1Tim 1:20 &gt;&gt;
&lt;&lt;Bbl 1Cor 5:9 abbr &gt;&gt; Mention of another letter.  Also, see [[Discipline-Church]]
5:11    see &lt;&lt;Bbl Mt 18:17 &gt;&gt;</pre>
</div>
<div title="1Cor-06-01-note" modifier="SDM" created="201009262304" modified="201212162057" tags="Christ Faith Comment typography" book_key="220001a">
<pre>&lt;&lt;Bbl 1Cor 6:2 0 &gt;&gt;    Again, the theme of our authority in Christ.
&lt;&lt;Bbl 1Cor 6:9 0 &gt;&gt;
* //nor male prostitutes// -- μαλακοὶ; refers to soft clothing; used for contrast about John the Immerser.
* //nor homosexual offenders//  -- ἀρσενοκοῖται; male + bed
These refer to the passive and active partners in consensual homosexual acts (source: ESV footnote).

6:13    Some things are aspects of life in the world.  They will cease.  Other things, such as immorality, are aspects of a life that is of the world.  The bodily function of eating will disappear, but the body itself is a permanent, eternal vessel.
6:14    see &lt;&lt;Bbl 1Jn 4:2 &gt;&gt;, &lt;&lt;Bbl 1Jn 5:20 &gt;&gt;; the perfect participle tense in both of these verses seems to declare that Jesus is seated in His glorified flesh through eternity.  This verse here the first support for that idea that I have noticed elsewhere in scripture.  Paul's argument seems to depend on it.
6:20    see &lt;&lt;Bbl 1Cor 7:23 &gt;&gt;

&lt;&lt;Bbl 1Cor 7:1 abbr &gt;&gt;-9   Celibacy is for Paul a high calling.  Like all callings, of course, one has to have been called!  The words Jesus used to qualify his statement about eunuchs  --  &quot;Not everyone can receive this word, but only those to whom it is given&quot;  --  can well be applied to Paul's exhortation.
* //Who is the first person in the Bible who didn't have this gift?  Adam!//
* &lt;&lt;Bbl Lk 2:37 &gt;&gt; presents a woman free from the distraction described by Paul.
7:5 A form of fasting.  I always read the last clause as meaning that you ought to quit the fast in order to avoid temptation; but Mike Westphall once told me his interpretation, that the fast is in fact undertaken to avoid it (//Dry-dock for the Ship of Love//).  Cf &lt;&lt;Bbl Mt 4:10 &gt;&gt;
7:7,10,12,25,40    Paul makes some remarkable admissions.  He is exercising in a wonderful way his authority and liberty in giving advice, but he very carefully circumscribes the advice with these attributes.
7:7 //I, however, God://  A beautiful admission.  It could be applied to any aspect of godly living.  We all wish everybody was like ourselves; however, God has arranged things differently.  It is, in casual terms, the subjective and the Objective.
7:14    This sanctification is temporal; two verses later he refers to eternal salvation.
7:15    see &lt;&lt;Bbl Heb 12:14 &gt;&gt;
&lt;&lt;Bbl 1Cor 7:20 abbr &gt;&gt;-27     Note statement in the Declaration of Independence that no change of governments should be taken lightly.  This truth applies to all senses of the term government.
7:28    see &lt;&lt;Bbl Mt 19:10 &gt;&gt;-11
&lt;&lt;Bbl 1Cor 7:29 abbr &gt;&gt;-35     The heart behind the instruction.  To any who may be chafing under this word, he gives release:  &quot;Not to put a restraint upon you.&quot;  See &lt;&lt;Bbl Num 6:6 &gt;&gt;-8 , &lt;&lt;Bbl Lv 21:1 &gt;&gt;-6 .
&lt;&lt;Bbl 1Cor 7:29 abbr &gt;&gt;    &lt;&lt;Bbl Lv 21:1 &gt;&gt;-6 , &lt;&lt;Bbl Num 6:6 &gt;&gt;-8
&lt;&lt;Bbl 1Cor 7:33 abbr &gt;&gt;-34     &lt;&lt;Bbl 1Kings 11:4 &gt;&gt;-8

&lt;&lt;Bbl 1Cor 8:1 abbr &gt;&gt;-13  Compares closely with &lt;&lt;Bbl Rom 14:1 &gt;&gt; - 15:6
&lt;&lt;Bbl 1Cor 8:2 abbr &gt;&gt; see &lt;&lt;Bbl Is 5:21 &gt;&gt;,&lt;&lt;Bbl 1Cor 3:18 &gt;&gt;,&lt;&lt;Bbl 1Cor 13:8 &gt;&gt;-12 , &lt;&lt;Bbl Gal 6:3 &gt;&gt;
&lt;&lt;Bbl 1Cor 8:10 abbr &gt;&gt;-11     Knowledge   --  that which puffs up, says vs. 1.

9:1-23  &quot;Paul's proud boast&quot;  --  he exercises it directly in &lt;&lt;Bbl Acts 20:33 &gt;&gt;-35 .
9:1 Paul covers, respectively, his
## sense of vocation
## independence
## vision
## service and accomplishment
&lt;&lt;Bbl 1Cor 9:19 abbr &gt;&gt;-23     see &lt;&lt;Bbl Php 2:5 &gt;&gt;-8
&lt;&lt;Bbl 1Cor 9:22 abbr &gt;&gt;    Weak  as described in chap. 8.

10:1 -- &quot;Upon this [[Rock]] I will build My church.&quot; &lt;&lt;Bbl Num 20:9 &gt;&gt;
10:2    Image of the Spirit and the water
10:6    examples   --  [typos], types; RSV says &quot;warnings.&quot;  There follows a list of five incidents from Exodus and Numbers.
&lt;&lt;Bbl 1Cor 10:18 abbr &gt;&gt; - 11:1 -- Compares closely with &lt;&lt;Bbl Rom 14:1 &gt;&gt; - 15:6.
&lt;&lt;Bbl 1Cor 10:18 abbr &gt;&gt;   &lt;&lt;Bbl Rom 9:13 &gt;&gt;.
&lt;&lt;Bbl 1Cor 10:20 abbr &gt;&gt;-22    See &lt;&lt;Bbl Dt 32:16 &gt;&gt;-17 .
&lt;&lt;Bbl 1Cor 10:31 abbr &gt;&gt;   Seems to refer directly to &lt;&lt;Bbl Zech 7:6 &gt;&gt;</pre>
</div>
<div title="1Cor-11-01-note" modifier="SDM" created="201010310318" modified="201211230311" tags="Comment" book_key="220001a">
<pre>11:4-6 Paul deals with some public aspects of public worship.  He is describing current mores, not prescribing new ones.  For a woman to come without a shawl would have been like arriving in a two-piece bikini today.  Prostitutes had their heads shaved.
11:26   According to F.F. Bruce, this probably refers to a spoken Passion narrative.
11:27-29    unworthy manner   --  not acknowledging the complete useless of our flesh.  Judas certainly violated this principle.  See &lt;&lt;Bbl Pr 4:17 &gt;&gt;, &lt;&lt;Bbl Pr 30:20 &gt;&gt;.

&lt;&lt;Bbl 1Cor 12:3 abbr &gt;&gt;    see many verses in John's writings (&lt;&lt;Bbl 1Jn 4:2 &gt;&gt;-3 ), also &lt;&lt;Bbl Is 26:13 &gt;&gt;.
&lt;&lt;Bbl 1Cor 12:12 abbr &gt;&gt;-31    Compares closely with &lt;&lt;Bbl Rom 12:3 &gt;&gt;-8 .  Also, look ahead to 14:1.

13:1    It's praise, to be sure, with its own value; compare &lt;&lt;Bbl Ps 150:5 &gt;&gt;.
From //knowing// to //annoying//
13:13   Love continues in Heaven, unlike the others.  &lt;&lt;Bbl 1Jn 3:2 &gt;&gt;  &quot;Abandon hope, all ye who enter here&quot;  was the entrance-sign to Dante's hell; in a way it could as well be posted at Heaven.

14:1    Closes the passage, as 12:31 opened it.
14:11   More of the fruit of Babel.
14:23   I believe in our time we must deal with more than the //spiritualy ignorant or ungifted// -- we must accommodate the traumatized and also the adversely indoctrinated.
14:33   The NIV closes one sentence with the word peace  and throws the rest in with the next verse.  Wherever we place the clause, Paul is saying that the consensus of the church is indicative of the will of God.  John says something like this in &lt;&lt;Bbl 1Jn 2:18 &gt;&gt;.
&lt;&lt;Bbl 1Cor 14:34 abbr &gt;&gt;-35    The larger context might lead one to restrict the command of v. 34 to tongues and prophecy, but verse 35 includes normal speech.

15:1-2  Four whichs   --  good preaching.
15:21-22,45-50  Compares closely with &lt;&lt;Bbl Rom 5:12 &gt;&gt;-19 .
&lt;&lt;Bbl 1Cor 15:23 abbr &gt;&gt;   &lt;&lt;Bbl Pr 27:17 &gt;&gt; about //good// company.
15:27   &lt;&lt;Bbl Heb 2:8 &gt;&gt; quotes the same Psalm and draws a similar conclusion.
15:29   If for  means &quot;concerning&quot;, then &lt;&lt;Bbl Col 2:12 &gt;&gt; would be another verse with the same idea.  Hobbs (Preaching Values from the Papyri, pp 39-40) evinces this view.
15:32   See &lt;&lt;Bbl 1Tim 4:17 &gt;&gt;.
&lt;&lt;Bbl 1Cor 15:33 abbr &gt;&gt;-33    The question of the resurrection seems to be the only point addressed by Paul as a doctrinal division among the Corinthians (v. 12).  Here he says that bad company corrupts good morals, but the context implies another point:  bad doctrine corrupts good morals.  A doctrine denying the resurrection will lessen a sense of daily spiritual responsibility.  </pre>
</div>
<div title="1John-01-01-note" modifier="SDM" created="201010310232" tags="Comment" book_key="380001a">
<pre>I John

General Notes

The phrase &quot;we know&quot; ties together much of the book.

1:1-2   The emphasis on eye-witness truth which marks some of John's passages is, I am told, part of his argument against the gnostic doctrine which held the advent of Jesus to be less than fully human, fully physical.
1:8 Compare &lt;&lt;Bbl Pr 28:13 &gt;&gt;.

&lt;&lt;Bbl Pr 2:1 abbr &gt;&gt; The same word as in John's gospel, indicating someone called alongside.
2:2 Here is a sharp statement for unlimited atonement, like &lt;&lt;Bbl 1Tim 4:10 &gt;&gt;.
&lt;&lt;Bbl 1Tim 2:4 abbr &gt;&gt; &quot;I have come to know Him&quot;    --  this is a perfect participle.
2:15    Compare &lt;&lt;Bbl Jms 4:4 &gt;&gt;.
&lt;&lt;Bbl Jms 2:18 abbr &gt;&gt;-19  From among your own selves   --  compare &lt;&lt;Bbl Acts 20:29 &gt;&gt;-30 .

&lt;&lt;Bbl Acts 3:1 abbr &gt;&gt; Wuest renders great   as &quot;exotic&quot;.
    Compare &lt;&lt;Bbl 1Cor 2:14 &gt;&gt;.
&lt;&lt;Bbl 1Cor 3:2 abbr &gt;&gt; See &lt;&lt;Bbl Mt 10:24 &gt;&gt;-25 ; &lt;&lt;Bbl Lk 6:10 &gt;&gt;.
&lt;&lt;Bbl 1Cor 3:15 abbr &gt;&gt;    This follows the reference to Cain, vs.12.
3:20    Compare &lt;&lt;Bbl Ps 119:32 &gt;&gt;.
&lt;&lt;Bbl Ps 3:23 abbr &gt;&gt; Compare &lt;&lt;Bbl Jn 6:29 &gt;&gt;.

&lt;&lt;Bbl Jn 4:2 abbr &gt;&gt; has come  is a perfect participle (compare 5:20), indicating that He is even now in the flesh .
4:3 Refering to gnosticism.
4:6 Compare &lt;&lt;Bbl 1Tim 6:3 &gt;&gt;-7 .

&lt;&lt;Bbl 1Tim 5:3 abbr &gt;&gt; see &lt;&lt;Bbl Dt 28:11 &gt;&gt;-14 .
&lt;&lt;Bbl Dt 5:13 abbr &gt;&gt; See &lt;&lt;Bbl Jn 19:35 &gt;&gt;.
&lt;&lt;Bbl Jn 5:19 &gt;&gt;b;    John Stott calls this &quot;a fact of great solemnity.&quot;
5:20    See 4:2</pre>
</div>
<div title="1Kings-01-01-note" modifier="SDM" created="201211170213" modified="201301121951" tags="Comment" book_key="580001a">
<pre>!! General Notes
Concerning the division of the tribes, see E.C. Wine's The Hebrew Republic, pp. 119-120.

1:5 see &lt;&lt;Bbl 2Sam 15:1 &gt;&gt;

&lt;&lt;Bbl 2Sam 2:6 abbr &gt;&gt;-9   Already referring to wisdom.
2:22    The excuse Solomon might easily have been seeking, for the man seems treacherous.  Or perhaps, as I've read, this was a powerful jealousy for the woman for whom the Song of Songs was composed.

3:1-3   Already the beginnings of his apostasy.
3:15    Why do we say, &quot;It was only a dream?&quot;
3:26-27 An encounter with the wisdom of God  --  with all its import of life and death.  The decision concerns not ownership but life and murder.  A study in righteousness; the issue of genetic motherhood is transcended by righteousness.  Indeed, this may be the sole reference of Solomon's concluding statement.
3:28    Larger historical significance of the story.

&lt;&lt;Bbl 1Kings 10:1&gt;&gt;  See [[Witness]] and &lt;&lt;Bbl Mt 12:42&gt;&gt;

16:1    This is the crucial text for dating the Exodus at 1445 BC.

17:10
{{{
So he arose and went to Zarephath; and when he came to the gate of the city, behold, a widow was there gathering sticks: and he called to her, and said, ÃÂ¢ÃÂÃÂPlease get me a little water in a vessel, that I may drink.ÃÂ¢ÃÂÃÂ

17.11As she was going to get it, he called to her, and said, ÃÂ¢ÃÂÃÂPlease bring me a morsel of bread in your hand.ÃÂ¢ÃÂÃÂ

17.12She said, ÃÂ¢ÃÂÃÂAs Yahweh your God lives, I donÃÂ¢ÃÂÃÂt have a cake, but a handful of meal in the jar, and a little oil in the jar. Behold, I am gathering two sticks, that I may go in and bake it for me and my son, that we may eat it, and die.ÃÂ¢ÃÂÃÂ
}}}

18  This chapter preaches of the incapacity of mere religion to show power.  In the soaking of the sacrifice I see my own journey through darkness, prior to recieving the fire of God.

&lt;&lt;Bbl 1Kings 19:18&gt;&gt;    Imagine the French underground resistance in WWII.
19:19-21    Elijah had a distinctive appearance; in &lt;&lt;Bbl 2King 1:8 &gt;&gt; King Ahaziah identifies Elijah when his messengers describe the man with the hairy garment (whether all prophets had the garment or Elisha knew of Elijah's personal apparel is not clear).  Thus Elisha knew what had happened when the cloak fell upon him.
19:19   The idea apparently is that twelve teams, each followed by a plowman, were at work; the pair  of vs. 21 reinforces this.  In any case, Elisha is indicated by the oxen as a wealthy man, which brings to mind the rich young ruler.
19:20   Elijah's reply to the younger states, &quot;I have put no claim on you yet&quot;.  This same self-divestment is found at the end of their relationship, &lt;&lt;Bbl 2King 2:2 &gt;&gt;-6 .   How much more should we cling to the One who said with directness, &quot;Follow Me!&quot;
19:21   Elisha &quot;put his hand to the plow,&quot; and he never looked back.  He not only destroyed the remnant of his old life, but positively he made it a sacrifice.  He left no provision for the flesh, but displayed the new creation in which &quot;old things are passed away.&quot;  No Peter he, to return to fishing!

</pre>
</div>
<div title="1Peter-01-01-note" modifier="SDM" created="201010310234" modified="201211200338" tags="Comment" book_key="375001a">
<pre>* [[Peter]]

&lt;&lt;Bbl 1Peter 1:3 abbr &gt;&gt;   God and Father of our Lord Jesus Christ   --  Christ's dual nature.
1:17    see &lt;&lt;Bbl Ez 18:30 &gt;&gt;.
&lt;&lt;Bbl 1Peter 1:18 abbr &gt;&gt;  see &lt;&lt;Bbl Ez 20:4 &gt;&gt;.
&lt;&lt;Bbl 1Peter 1:21 abbr &gt;&gt;  Outside of this resurrection, our faith and hope would be in something other than God.

2:5 See [[Sacrifice]]
&lt;&lt;Bbl 1Pt 2:11 abbr &gt;&gt;    Jesus makes a like statement in &lt;&lt;Bbl Mt 5:16 &gt;&gt;.
&lt;&lt;Bbl 1Pt 2:12 abbr &gt;&gt;    see &lt;&lt;Bbl Mt 5:11 &gt;&gt;
&lt;&lt;Bbl 1Pt 2:20 abbr &gt;&gt;    Do not sinners do the same?  Jacob under Laban provides a case study.
2:23    entrusted Himself   --  see 4:19

&lt;&lt;Bbl 1Pt 3:16&gt;&gt; John Piper is persuasive that Christ did not &quot;go down to hell and preach,&quot; but this refers to Noah's witness.

4:18    Perhaps a quote of &lt;&lt;Bbl Pr 11:31 &gt;&gt;.
&lt;&lt;Bbl 1Pt 4:19 abbr &gt;&gt;    //Entrust// - The word relates to making a deposit.  Charles Swindoll points out that banks typically have a stated maximum on deposits because they want to limit their liability.  Not God!

&lt;&lt;Bbl 1Pt 5:5 abbr &gt;&gt; Don Fraser:  &quot;And I've got enough problems in my life without God opposing me.&quot;
5:10    see &lt;&lt;Bbl Lk 22:31 &gt;&gt;</pre>
</div>
<div title="1Sam-01-01-note" modifier="SDM" created="201010310421" modified="201211250020" tags="Comment" book_key="501001a">
<pre>&gt;Samuel, like Moses (&lt;&lt;Bbl Ps 99:6 &gt;&gt;; &lt;&lt;Bbl Jer 15:1 &gt;&gt;), arrived in one of Israel's darkest hours.  He was the last of the judges to guide his people (&lt;&lt;Bbl 1Sam 7:15&gt;&gt;), and the first of the prophets.  He embodied the prophetic motive and he established the position of the prophet before the king.

1:6-11  A humble woman, made humble through circumstances.
1:8 His contentment may have increased the sense of hurt.
1:14    Eli seems to misjudge so much.
&lt;&lt;Bbl 1Sam 1:18 abbr &gt;&gt;    [[Faith]].
1: 27-28    A cheerful sacrifice, followed by her &lt;&lt;Bbl song 2:1 &gt;&gt;-10  Some of this song (e.g., vs. 5) may have been sung for Peninnah's benefit.
2:29    Three-fold sin.

&lt;&lt;Bbl 1Sam 3:1 abbr &gt;&gt;-2   Delizsch observes that Eli's failing vision explains why Samuel would hasten to his bedside when called.  However, note the connection between vss. 1 &amp; 2.
3:4 Reference to the lamp going out for the evening:  &lt;&lt;Bbl Ex 3:8 &gt;&gt;; &lt;&lt;Bbl Ex 27:21 &gt;&gt;; &lt;&lt;Bbl Lv 14:2 &gt;&gt;; &lt;&lt;Bbl 2Chron 13:11 &gt;&gt;.  So this is the wee hours of the morning, and there is a similarity between the lamp about to go out, the dimness of Eli's old age, and the night almost passed through to brilliant day.
3:4-6   Samuel matures to accountability; his age is not given.
3:19    The LORD is the subject in upholding Samuel's words, but the statement attests to the boy's integrity.  With 2:21,26, these words echo the statements of the Christ's development as a child.
3:8 Eli shows rare discernment here.
3:19-20 see 9:6.
3:21  --  4:1   An awfully bad chapter division.

4:1 But the stone is not yet raised nor the place named, see 7:12
4:3-4,13,22 These verses show a strong spirit of idolatry concerning the ark of God, whose true glory had been quite subverted.
    The ark has a biography of its own, the Adventures of the Ark from Exodus to Revelation.  It is summarized in the Moody Atlas, pp. 110-111.
4:3 Let us take to ourselves   --  Disquieting amount of first-person-as-subject in this.
4:4 Contrast of holiness and rebellion.
4:8 see 6:6.
4:13    Eli's interest is misplaced  --  idolatrously.

5:1-5   an open spoiling of and triumph over wicked spiritual principalities.
5:8 Probably carried with as much care as it had ever recieved.
5:10    Similar perhaps to the consternation which greets toxic waste dumpsite proposals.

6:4 Perhaps the ark had been 'round to Gaza and Ashkelon also (5:1,6,8,10, 6:17).
6:5 Are mice implied earlier in the account?
6:9 An interesting possibility of mere coincidence.  Wishful thinking which God does not ignore.
6:19    One of the more dramatic manifestations of the ark's power and holiness.
6:21    Continuation of the game of &quot;hot potato&quot;!

7:1ff.  These verses belong with the preceding ones; like the opening of 4, this is a lousy division.
7:2-3   Samuel exhorts the people to a &quot;sorrow that produces repentance.&quot;  The two verses are not to be divided; a vav consecutive joins them.
7:4 The climax and turning point.
7:6 Delizsch says this is a figure of repentance; &lt;&lt;Bbl 2Sam 14:14 &gt;&gt;; &lt;&lt;Bbl Ps 22:15 &gt;&gt;; &lt;&lt;Bbl Lam 2:19 &gt;&gt;.
&lt;&lt;Bbl 1Sam 7:12 abbr &gt;&gt;    Significant because of the earlier defeat, 4:1-11</pre>
</div>
<div title="1Sam-08-01-note" modifier="SDM" created="201211240200" modified="201211250033" tags="Comment" book_key="">
<pre>8:5 Why didn't they ask for another judge?  Was Samuel remiss somehow?
8:7-9   The true meaning of rejection, and possibly a word of comfort for Samuel; see &lt;&lt;Bbl Jn 15:18 &gt;&gt;-21 .  &quot;Now you know the pain I have felt, Samuel.&quot;  The request of the people is equated with idolatry.  Samuel's identification with the grief of God is also shown in 15:11,35.
8:15-17 A tithe, that which had been reserved for the Lord.
8:19    &quot;Crucify Him!&quot;
8:20    Something, please, a bit more reliable than the ark of God in chapter four.
8:21    Prayer

9:9 The precise detail in this paragraph extends even to explaining specific vocabulary.
9:13    invited  - foreshadowing the honor about to be revealed in vss. 19ff.

10:7    Full trust and rein (reign) from the beginning.
10:12   see 19:24
10:25   Perhaps a civil-government rendering of the Law  --  doubtless providing for some of the &quot;procedure&quot; described in 8:9-17.
10:27   But apparently, unlike Samuel, their trust isn't in the Lord either.

11:12-15    So like David does Saul behave in this verse.
11:14   The history of Gilgal (&quot;rolling&quot;) is significant here.

12  Samuel's sermon.
12:3-5  Compare Moses' statement, &lt;&lt;Bbl Num 16:15 &gt;&gt;.  And Paul, &lt;&lt;Bbl 2Cor 7:2 &gt;&gt;.
&lt;&lt;Bbl 1Sam 12:14 abbr &gt;&gt;   Against the idea of the king as federal spiritual head.
12:21   i.e., idols ??

13:2    Israel's first standing army.
13:6    i.e., wherever they could!
13:9ff  Saul's first mistake and calamity, and the first test of his leadership and power.  When some are abandoning him the temptation comes  --  just as it did for Jesus, and Paul also, the temptation to rely on man.  Contrast 30:6
13:13   This book usually provides a full introduction to any event.
13:14   David is introduced, next reference 15:28.

14:16   see 13:8
14:24   To bind up the whole nation under an oath seems as presumptious as it is unprecedented.
14:27   The ironic result of earlier events.  The same victory caused the inspiration for the oath and the absence of Jonathon resulting in its violation.
14:29   A true statement  --  with a yet more dire fulfillment impending.
14:33   In their zeal not to sin against Saul, they sin against God's law.
14:40   Nervously I'm sure.

15:21   Blame-laying.
15:24   Man-pleasing seems to be at the root of Saul's downfall.
15:28   see 13:14</pre>
</div>
<div title="1Sam-16-01-note" modifier="SDM" created="201211240154" modified="201211250034" tags="Comment" book_key="">
<pre>16:6    Samuel's natural expectation after the time he found Saul  --  vss. 1-5 seem to allude to that precedent.
16:7    see &lt;&lt;Bbl Is 11:3 &gt;&gt;; &lt;&lt;Bbl Jn 7:24 &gt;&gt;, &lt;&lt;Bbl Jn 8:15 &gt;&gt;
&lt;&lt;Bbl 1Sam 16:18 abbr &gt;&gt;   Saul was interested in valiant men anyway, see 14:52, also &lt;&lt;Bbl Pr 18:16 &gt;&gt;, &lt;&lt;Bbl Pr 22:29 &gt;&gt;.

&lt;&lt;Bbl 1Sam 17:29 abbr &gt;&gt;-30    A kingly response.
17:34-37    First his part, then God's.
17:35   Here he will rescue Israel as he had once rescued a lamb, which says a big thing about God's compassion for us.  See &lt;&lt;Bbl Jn 10:11 &gt;&gt;-13 , &lt;&lt;Bbl Lk 16:10 &gt;&gt;, &lt;&lt;Bbl Lk 19:17 &gt;&gt;.
&lt;&lt;Bbl 1Sam 17:38 abbr &gt;&gt;   For he loved him, 16:21.  David, as Saul's armor bearer, recognizes the armor.  Saul seems utterly without discernment.  We know he is a huge man and it seems that David has trouble even walking around with the armor on.  Perhaps, in the belief that David will be killed, Saul is making a symbolic gesture.  In any case it is most like a pastor who doesn't equip the congregation rightly.
17:41   In battle the armor bearer follows.  This is ceremonial.
17:43   i.e., presumably David as a stick.
17:45-47    This challenge would have been impossible using Saul's weapons.  Built on the faith of 14:6, it absolutely glorifies God, as Paul does in &lt;&lt;Bbl 1Cor 2:1 &gt;&gt;-5 .  Note too that as a leader, he hauls the rest in with himself.
17:55-58    I have trouble understanding this.

18:1    In David's victory of chapter 17, Jonathan recognized the same power at work in his own slaughter of the Philistines (14:1-15).  It's like John the Baptist leaping in the womb.  See 20:17.
18:4    A strong sign of covenant, similar to an incident in Bruce Olsen's Bruchko.
18:8-9,12,15,28-29  Saul's fear of David.
18:11   He wasn't trying for David's sleeve.  A biography of Saul's spear, or all his weapons, would be interesting as a device to follow his life.  31:10 probably the conclusion.
18:13   A demotion?  What is meant by the proverb (also vs. 16) ??
18:21   Perhaps that David would have additional recognition as royalty?  But see vs. 25.

[[1Sam-19-01-note]]</pre>
</div>
<div title="1Sam-19-01-note" modifier="SDM" created="201211240204" modified="201211250034" tags="Comment" book_key="">
<pre>19:20-24    Like Balaam.  Refers also back to 10:12.

20:17   A deepening of 18:1ff.
20:19   Which is the eventful day   ??   What does Ezel signify ??
20:32   see &lt;&lt;Bbl Lk 23:22 &gt;&gt;
&lt;&lt;Bbl 1Sam 20:40 abbr &gt;&gt;   Perhaps Jonathon, overcome by emotion, forgets the clandestine nature of the meeting.

&lt;&lt;Bbl 1Sam 21:6 abbr &gt;&gt;    As Jesus was to state, nothing consecrated is withheld from a consecrated man.  In fact there are rich parallels between David and Jesus at this point -- &lt;&lt;Bbl Mk 2:25 &gt;&gt;ff.
21:7    see 22:9-22
21:13   Scribbling on the door of the gate would be sharply symbolic.
21:15   What sarcasm!

22:2    The afflicted of the world, like the parable of the feast.    Like the first-ever recovery group.
22:18   Men of the cloth.
22:23   Jesus offers just this promise to us in &lt;&lt;Bbl Jn 15:18 &gt;&gt;-20 .

&lt;&lt;Bbl 1Sam 23:14 abbr &gt;&gt;   Sound guerrilla tactics.
23:17   see 24:20.  But Jonathon will die  --  another victim of Saul's hatred of God.
23:22   &quot;I am told&quot;  --  such pomposity.

24:4    Was Saul wearing the robe ??
24:22   For David does not trust Saul.

25:2-4  Odd syntax in the NAS.
25:10-11    Ostensibly that he doesn't know these are David's men for sure.
25:20   She anticipates his route.  Like Jacob, the gift goes on ahead.
25:22   The KJV is more interesting.
25:37   She's courageous, too.
25:39   Possibly the memory of this turn of events inspired the murder of Uriah later.</pre>
</div>
<div title="1Sam-26-01-note" modifier="SDM" created="201211240209" modified="201211250034" tags="Comment" book_key="">
<pre>26:8    Saul had tried to do this for David.
26:20   Partridge   --  i.e., for sport ??
26:24   An appeal not to Saul but to the Lord, the source of David's life.

28:1    Testing this new loyalty.
    Concerning the medium of Endor, see Vine's OT Dict., p. 59.

29  God's deliverance from a dilemma.

30:6    The opposite of Saul's response to disloyalty, see 13:9ff.
30:10   Weak from grief and disheartenment, see 30:4,6.
30:13-15    David again gains favor with the afflicted.
30:22   Inevitable problems with this army of outcasts.  We should not be surprised when those humble enough to have recieved salvation show frailty.
30:24-25    Graciously calls it a division of labor.

31:4    Pierce me through   --  interesting repetition of the phrase.
31:10   Just as the sword of Goliath had been enshrined. </pre>
</div>
<div title="1Thes-01-01-note" modifier="SDM" created="201010310308" modified="201212072129" tags="Comment" book_key="201001a">
<pre>* &lt;&lt;Bbl 1Thes 2:2 &gt;&gt; Insulted is a word used of Christ before the soldiers  (need to confirm this)
* 2:14 -16    A description of Paul himself, before his repentance.</pre>
</div>
<div title="1Tim-01-01-note" modifier="SDM" created="201010310258" modified="201201041436" tags="Comment" book_key="320001a">
<pre>&lt;&lt;Bbl 1Tim 2:15 &gt;&gt; How is it that delivery of the child results in deliverance of the woman?
4:12    B answers A; the doing of the second part will fulfill the first.

6:8 &lt;&lt;Bbl Mt 6:25 &gt;&gt; has the same two catagories.
    I include a car among my needs, but there really is a bottom line at which the car is a luxury.  God lets us work with a financial overhead, but does not let us depend on it.
6:10    A love of money :  a vain imagination:  the desire for a universal commodity (which is the ideal objective of any currency), a personal power of passage by which one may limit God's soveriegnty.   </pre>
</div>
<div title="2Cor-01-01-note" modifier="SDM" created="201010261938" modified="201211250035" tags="Comment" book_key="220001a">
<pre>&lt;&lt;Bbl 2Cor 2:10 abbr &gt;&gt;   If we will take this attitude, we can find release from the steady accumulation of bitternesses which otherwise will sink our ministry.

4:2 -- renouncing [[Shame]]
4:4-6   The work of the evangelist is couched between verses which describe, first, the work of Satan, and second, the illuminating grace of God.
4:7 See &lt;&lt;Bbl Jer 32:17 &gt;&gt;.
&lt;&lt;Bbl 2Cor 4:17 abbr &gt;&gt;-18     God reveals the motive.  In the furnace the weightiest element goes to the bottom and there becomes pure.  Hell is pure, and heaven is pure.  God is the weightiest element in the godly person, so difficult circumstances work to reveal God in his life.
    For the unseen, see [[Invisible-Visible]].

5:5 see &lt;&lt;Bbl Eph 1:13 &gt;&gt;
&lt;&lt;Bbl 2Cor 5:20 abbr &gt;&gt;    Diplomatic immunity might preach by analogy.

6:14    Refers to &lt;&lt;Bbl Dt 22:10 &gt;&gt;.

&lt;&lt;Bbl 2Cor 9:7 abbr &gt;&gt; The word here rendered cheerful is related to our English word &quot;hilarious&quot; and could be translated as &quot;merrily, with pleasure&quot;.

12:15   A crux.

13:10   Severity, says Paul, does not come naturally to me; like the &quot;strange work&quot; of &lt;&lt;Bbl Is 28:21 &gt;&gt;.  </pre>
</div>
<div title="2John-01-01-note" modifier="SDM" created="201010310300" tags="Comment" book_key="380001a">
<pre>&lt;&lt;Bbl 2Jn 1:10 &gt;&gt; Compare &lt;&lt;Bbl 2The 3:6 &gt;&gt;.  </pre>
</div>
<div title="2Kings-01-01-note" modifier="SDM" created="201211170213" modified="201301121952" tags="Comment" book_key="580001a">
<pre>2:9 According to some notes of mine, seven great miracles are recorded for the older, and fourteen for the one who asked a double portion.
2:12-13 Elisha rends his own, old clothing and takes up his mentor's garment.  This reminds us of the time he broke up the plow and sacrificed the oxen.
&lt;&lt;Bbl 2Kings 2:16&gt;&gt;ff Elisha faces his first leadership crisis when his proteges demand to form a search party in pursuit of Elijah.  To be sure, Elijah had been well known to appear spontaneously and surprisingly, sometimes where least expected (and this tendency was even fulfilled into the next era).  But one is struck by the the refusal of the men to accept Elisha's decision.  Elisha perhaps is learning that just when you want most to receive support, it may only be yours as a leader to give it instead.  And, that prophets don;t always know what's up.  The prophets are learning too:  they learn that Elisha does know what's up.  I imagine in future episodes, Elisha need only to raise one eyebrow to summon the credulity of his fellows.
2:24    &quot;All that is necessary is to admit that the worthless spirit which prevailed in Bethel was openly manifested in the ridicule of the children, and that these boys knew Elisha, and in his person insulted the prophet of the Lord.&quot;   --  C.F. Keil
    Note, too, that forty-two young men were killed.  It had to have been a mob.

&lt;&lt;Bbl 2Kings 4:8&gt;&gt;-10  The Shunnamite woman is a study in Christian virtue.  Her godliness has led to prominence .
4:9 Spiritual recognition.
4:10    Her request has both initiative and respect, and her husband respects her  --  even though she is barren.  Interestingly, his blessing on her request will result in a child.
4:14    Her husband is old  is not mentioned to explain her childlessness, because the procreative power of the male is not much limited by age; rather Gehazi is stating that the provision for her life, found for a woman of that time first in her husband and afterwards in her offspring, is soon to disappear.

&lt;&lt;Bbl 2Kings 6:21&gt;&gt;-23 How like the disciple Peter.

7:17-20 Perhaps he resisted the crowd.

&lt;&lt;Bbl 2Kings 20:13&gt;&gt;  See [[Witness]] </pre>
</div>
<div title="2Peter-01-01-note" modifier="SDM" created="201010310233" tags="Comment" book_key="375001a">
<pre>&lt;&lt;Bbl 2Pt 1:5&gt;&gt;-7 This describes the divine nature  described in the two preceding verses.

1:20    Wuest says:  &quot;...every prophecy of scripture does not originate from any private explanation (held by the writer of that scripture), for not by the desire of man did prophecy come aforetime, but being carried along by the Holy Spirit men spoke words from God who is the ultimate source (of what they spoke).&quot;

2:12    See &lt;&lt;Bbl 2Sam 23:7 &gt;&gt;.

&lt;&lt;Bbl 2Pt 3:9&gt;&gt;    see &lt;&lt;Bbl Ez 18:23 &gt;&gt;
&lt;&lt;Bbl Ez 3:14 abbr &gt;&gt;-16  Peter's glorious vindication of Paul, and the reason why modern critics reject this letter.  Note Peter's humility and his readiness to classify Paul's writings with the rest of the Scriptures.    </pre>
</div>
<div title="2Sam-01-01-note" modifier="SDM" created="201010310421" modified="201211250035" tags="Comment" book_key="501001a">
<pre>II Samuel

The Sons of Zuruiah:

&lt;&lt;Bbl 2Sam 2:13 &gt;&gt;
    &lt;&lt;Bbl 2Sam 3:26 &gt;&gt;-30
    &lt;&lt;Bbl 2Sam 8:16 &gt;&gt;
    &lt;&lt;Bbl 2Sam 16:6 &gt;&gt;-10
    &lt;&lt;Bbl 2Sam 18:2 &gt;&gt;
    &lt;&lt;Bbl 2Sam 19:21 &gt;&gt;-23
    &lt;&lt;Bbl 2Sam 20:6 &gt;&gt;-23
    &lt;&lt;Bbl 2Sam 21:17 &gt;&gt;
    &lt;&lt;Bbl 2Sam 23:18 &gt;&gt;-19
    &lt;&lt;Bbl 2Sam 24:2 &gt;&gt;-9
&lt;&lt;Bbl 1Kings 1:7 &gt;&gt;
    &lt;&lt;Bbl 1Kings 2:5 &gt;&gt;

[[Mephibosheth]]

1:19    //How the mnighty have fallen// -- this is only used in our time as a jeer.  How shocking and disrespectful this would be to David's Israel.
&lt;&lt;Bbl 2Sam 2:22 abbr &gt;&gt;    see 3:27
2:27    &quot;You started it&quot;  --  a cycle of vengeance.

3:9 An interesting admission.

4:1 Apparently they had still been counting him as their own.

5:3 Note the title.
5:8 The probable shaft used for the attack was discovered by Sir Charles Warren about 1870  (Moody Bible Atlas).
5:21    More spoiling of the principalities.

6   Continuing Adventures of the Ark
6:1 Very reverential.
6:3 A new cart, perhaps remembering the Philistines.
6:6 God seems less concerned about the Ark's possible upset than He does its possible desecration.  Perhaps Uzzah had a caretaker attitude (like Martha's) that kept him from worshiping in spirit and in truth.  Or  --  and this is chilling  --  maybe he just violated that one little rule.  Why couldn't they simply carry it as it had been designed?
6:9 The same ending as in all these Ark stories!
6:11    No doubt because of his faith in keeping the thing.
6:23    And yet apparently David himself lays no curse on her, but speaks prophetically.

7:3-5   It seems quite incorrect to suppose (as I've heard it preached) that the two were in disobedience for having this idea.
7:5,11,16,25-29 God is building a house for David, not the other way around.
7:10    &quot;I go to prepare a place for you...&quot;
7:12-15 The opening of Solomon's biography.
7:17    One must not overlook the importance of a prophet's faithfulness.
7:19    &quot;But as it turns out, that was tiddlywinks compared to what you are declaring now.  That's the sort of thing men in their most prideful moments are prone to do  --  what You, the most holy and unfailing God, are now doing  (vs. 28 also).&quot;
7:27    Prayer based on promises.  A house  suggests security  --  of one's person and family, of salvation, of Heaven.

8:9-10  Quintessentially diplomatic.</pre>
</div>
<div title="2Sam-09-01-note" modifier="SDM" created="201211240213" modified="201211250036" tags="Comment" book_key="501009a">
<pre>9   See [[Mephibosheth]].
9:7 i.e., of the original family inheritance.

10:5    David's humiliations have instilled compassion.
10:19   Powers of enemy alliance being destroyed.

&lt;&lt;Bbl 2Sam 11:1 abbr &gt;&gt;    Interesting note of warfare.

11:2    Was Bathsheba making a display of herself?   Some say she certainly was.
11:3    &lt;&lt;Bbl 2Sam 23:39 &gt;&gt; for Uriah's renown as a warrior.
&lt;&lt;Bbl 2Sam 11:8 abbr &gt;&gt;-10 //Uriah, take a hint!//  David may have expected and even tacitly requested that Uriah cover for him, as John Edwards did of his close aide Andrew Young.  It's possible the Uriah was aware of David's game and refused to play ... and paid the price.  And Bathsheba's game?
11:11   What reverence.  Everyone seems conscious of the temporary housing of the Ark.
11:15   see &lt;&lt;Bbl 1Sam 18:17 &gt;&gt;  --  Saul's strategy.  It must have seemed so little like murder to a king being tempted.

12:3    A highly emotional appeal, especially as it's being made to a long-time shepherd.
12:1-6  God is not reproving the adultery or the murder so much as the lack of compassion!
12:9    see &lt;&lt;Bbl Acts 2:23 &gt;&gt;
&lt;&lt;Bbl 2Sam 12:11 abbr &gt;&gt;-12    &quot;Shout it on the housetops&quot;  --  &lt;&lt;Bbl Lk 12:2 &gt;&gt;-3 .  The rooftop upon which this prophesy is to be fulfilled (&lt;&lt;Bbl 2Sam 16:22 &gt;&gt;) is the very same rooftop from which David observed Bathsheba.
12:13   David's repentance is more concerned with the offense than its punishment.
12:14   The death of the child could be considered kindness from the Lord.  Any succession to the throne would have been violently contested.
    The occasion to blaspheme  is included vs. 10-12.
    see &lt;&lt;Bbl Jms 1:15 &gt;&gt;, where lust concieves sin and gives birth to death.
12:16   For he knows God's mercy, vs. 22.
12:28   As Jerusalem was named after David, see &lt;&lt;Bbl 1Sam 5:9 &gt;&gt;.
&lt;&lt;Bbl 1Sam 12:31 abbr &gt;&gt;   Torture !! ??  One of few comparable events is &lt;&lt;Bbl Jud 8:16 &gt;&gt;.  But wait!  The NIV gives a different rendering, and much more palatable.</pre>
</div>
<div title="2Sam-13-01-note" modifier="SDM" created="201211240217" modified="201211250036" tags="Comment" book_key="501013a">
<pre>13:6    David is always a pastor, a shepherd.
&lt;&lt;Bbl 2Sam 13:13 abbr &gt;&gt;-14 -- interesting converse with Shechem and Dinah, &lt;&lt;Bbl Gn 34:2 &gt;&gt;-3
13:15   see &lt;&lt;Bbl Ez 16:37 &gt;&gt;
&lt;&lt;Bbl 2Sam 13:20 abbr &gt;&gt;   Plan of vengeance requires this diplomatic guile.
13:39   see 12:22-23

14:3    Check the KJV  --  origin of expression ??
14:7    see &lt;&lt;Bbl Mt 12:20 &gt;&gt;
&lt;&lt;Bbl 2Sam 14:11 abbr &gt;&gt;   God is the creator of lawful vengeance.

15:4    Appeal to historical roots.
15:24-26    More adventures.  His habitation   --  David may have anticipated seeing the Temple, though he knew he could not build it.  In any case this wording reminds me of the many statements in the Psalms about God's house.  David's confidence in God does not require the trappings of power.

16:5    A son of Saul, and thus under David's blessing.
16:12   That is, to the degree that I am cursed without defending myself, let me be blessed.
16:22   As prophesied in 12:11-12.
16:23   I do not trust my old notes, but the name Ahithophel may have a strong meaning.  According to the same notes, his son Eliam was one of David's thirty mighty men, and Eliam's daughter was Bathsheba.

17:23   Joining with Absalom produced its own Judgment.

18:20   Perhaps Joab recalls the fate of the men announcing Saul's death.
18:24-27    Positive confession!

20:1-2  Apparently resulting from 19:40-43.

21:14 //God was entreated// -- Weekley gives Coverdale's rendering (see entry for //Atone//), // at one with the londe.//

24:24   See &lt;&lt;Bbl Gn 22:2 &quot;&quot; note &gt;&gt;.  </pre>
</div>
<div title="2Thes-01-01-note" modifier="SDM" created="201112262249" modified="201212072129" tags="Comment" book_key="201002a">
<pre>* &lt;&lt;Bbl 2Thes 2:4 &gt;&gt;   Compare &lt;&lt;Bbl Is 14:13 &gt;&gt;.
* &lt;&lt;Bbl 2Thes 2:11 abbr &gt;&gt;-12  Compare &lt;&lt;Bbl 2Cor 4:3 &gt;&gt;-4 .

* &lt;&lt;Bbl 2Thes 3:6 abbr &gt;&gt;-15  deals with disassociation.
* 3:11  A word-play, workers and busy-bodies.  Vine's amplifies the meaning of busybodies. </pre>
</div>
<div title="2Tim-01-01-note" modifier="SDM" created="201010310258" modified="201211230414" tags="Comment" book_key="33001a">
<pre>{{hilite_2{
endure hardship for the Good News according to the power of God.
}}}
* God upholds us -- this is a major theme.  //Join me in suffering!// -- but holy suffering //according to the power of God.//
* God guards (1:12) and through Him we guard (1:14).
* Paul places our suffering in the context of eternity past and eternity future.

&lt;&lt;Bbl 2Tim 1:12 abbr &gt;&gt;   Wonderful trust.  Paul trusted the Lord for the Gospel truth; Elisha for the Shunnamite's child, Abraham for Isaac, Jesus for Peter, John the Immerser for his Messiah.

2:18    This heresy seems to have upset the Thessalonians; I think much of the letters is given to refuting it.
2:19  Is foundation  related to the house concept that follows?
2:20-21   i.e., the Church.  Be an honorable vessel.  //These things// is from vss. 14,16.

3:17  This gives an important //why,// a purpose for the Scriptures  --  and tells us that God's goodness is Scripture-goodness.

&lt;&lt;Bbl 2Tim 4:6 abbr &gt;&gt;   //Analuo// is the word Paul uses for his departure from this world; a term (from which we have analysis ) referring either to the unmooring of a ship or the breaking down of an encampment; &quot;The time has come for me to sail away,&quot; C. Williams renders it.  &lt;&lt;Bbl Php 1:23 &gt;&gt; uses a verbal form.  See also &lt;&lt;Bbl 2Cor 5:1 &gt;&gt;. </pre>
</div>
<div title="A-Buffer-NoteStash" modifier="SDM" created="201012280058" modified="201212211603" book_key="">
<pre>*
* NT is better than OT.  Natural to want to compare self with OT characters.  But not forget that they did NOT have God's Spirit - likewise the early disciples.  But, note that 1Cor tells us to compare...

{{annotation{
Purpose of {{{_Buffer}}} is to retain super-fast unprocessed notes.
 }}}</pre>
</div>
<div title="A-Test" modifier="SDM" created="201303010206" modified="201303010246" book_key="">
<pre>&lt;&lt;include &quot;./Bbl/bible_txt.htm&quot; filters:&quot;[[Matthew-07-01]]&quot;&gt;&gt;</pre>
</div>
<div title="A-Test-results" modifier="SDM" created="201303010232" modified="201303030253" book_key="">
<pre>&lt;&lt;list noCase title &quot;2&quot; filter &quot;[tag[Scriptr]]&quot;&gt;&gt;</pre>
</div>
<div title="AbegoSoftwareServer" creator="psd" modifier="blaine" created="201102111106" modified="201102111306" tags="systemServer">
<pre>|''URL:''|http://tiddlywiki.abego-software.de/|
|''Description:''|UdoBorkowski's Extensions for TiddlyWiki|
|''Author:''|UdoBorkowski|</pre>
</div>
<div title="About These Notes" modifier="SDM" created="201012101522" modified="201304031704" tags="wiki" book_key="" changecount="1">
<pre>[[HowTo]] ... [[Dev-Overview]] @@color:red;ALERT@@ ... Other info: +++
* I'm prone to what has been called [[bike-shedding|http://communitymgt.wikia.com/wiki/Bikeshedding]] -- focusing on easily-summarized topics, to the neglect of more challenging (and often more important) material.  All I can say is this set of notes was often a passive approach to investigation, and that was intentional.  Many notes need a review.
!!! Some history
* From 1983 to 1998, these were hand entries.  In about 1995 I started transcribing them a word-processing document.  From 2000 to 2010, they fossilized in MS Word because it was too hard to load and navigate the document.
* In September 2010 I imported the document into this [[TiddlyWiki|http://www.tiddlywiki.com]] and I was immediately able to make good use of my notes.  A month later I experimented with a complete Bible text and came to love the [[World English Bible]] project.
* In late 2012 I improved my javascript to improve performance and succeeded with //Previous// and //Next// links (except for an occasional bug which misses the adjacent tiddler).
* Early 2013 -- [[SharedTiddlersPlugin]] resolves many issues.
{{floatright small small{
&lt;&lt;include &quot;./Bbl/bible_txt.htm&quot; filters:&quot;[tag[Scriptr]]&quot;&gt;&gt;
}}}
===
&lt;&lt;tiddler HideTiddlerTags&gt;&gt;</pre>
</div>
<div title="Abraham" modifier="SDM" created="201004120330" modified="201203070131" book_key="">
<pre>One man, and one family, is chosen to represent God's love and care for the fallen world.
* &lt;&lt;Bbl Gn 12:1&gt;&gt;-3
* &lt;&lt;Bbl Gn 12:7&gt;&gt;-8
* &lt;&lt;Bbl Gn 13:14&gt;&gt;-18
* &lt;&lt;Bbl Gn 15:1&gt;&gt;-21
* &lt;&lt;Bbl Gn 17:1&gt;&gt;-22
* &lt;&lt;Bbl Gn 18:1&gt;&gt;-33
* &lt;&lt;Bbl Gn 21:1&gt;&gt;
* &lt;&lt;Bbl Gn 22:1&gt;&gt;-18
* Friend of God:    &lt;&lt;Bbl 2Chr 20:7&gt;&gt;; &lt;&lt;Bbl Is 41:8 &gt;&gt;; &lt;&lt;Bbl Jms 2:23 &gt;&gt;; see also &lt;&lt;Bbl Job 29 4&gt;&gt;
* A prophet:        &lt;&lt;Bbl Gn 20:7 &gt;&gt;.
* Heir to the world:    &lt;&lt;Bbl Rom 4:13 &gt;&gt;, [[Inheritance]]
* [[Covenant]]:  &lt;&lt;Bbl Gn 12:1 &gt;&gt;-2 , &lt;&lt;Bbl Gn 17:7 &gt;&gt;
* Almost the first word in the NT is Abraham.  Matthew knows that he is tracing the beginning of not only Jesus' genealogy but of His Gospel.
* [[Faith]]:  &lt;&lt;Bbl Gal 3:8 &gt;&gt;, &lt;&lt;Bbl Rom 4:3 &gt;&gt;
* Faith looking above:  &lt;&lt;Bbl Heb 11:9 &gt;&gt;-10
* &lt;&lt;Bbl Acts 3:25 &gt;&gt;-26 </pre>
</div>
<div title="Acceptance" modifier="SDM" created="201208081404" modified="201211221615" book_key="">
<pre>* Like the Calvinist who fell down the stairs:  Picked himself up, checked his bones, slapped some dust off his pants and said //Thank God that's over with!//
* //Accepting hardship as a pathway to peace...//
* //entrust ourselves to a loving Creator to do what is right// -- Peter
* [[Contentment]]
* [[Submission]]
!!! Prayer for Grace
Expand +++
&lt;&lt;&lt;
@@color:indigo;O Lord Jesus Christ,
Thank You for Your complete and never-ending love
which shines in my life through Christ.
Today, in obedience to your claim upon me
I surrender my life to You.
Today, all that I am, and all that I have,
is wholly and unconditionally Yours.
Set me free from preoccupation with myself.
Use me -- where You want, when You want,
with whom You want, for as long as you want.
Amen.@@
&lt;&lt;&lt;
===</pre>
</div>
<div title="Accountability" modifier="SDM" created="201109071357" modified="201210071801" book_key="">
<pre>* [[Reproof]]
* [[Confession]]
* [[Openness]]
* [[ImmoralityAvoid]]
* [[PersonalRelations]]
* &lt;&lt;Bbl 2Kings 12:15 &gt;&gt;, &lt;&lt;Bbl 2Kings 22:7 abbr &gt;&gt; -- The Temple workmen in Josiah's reign were considered so faithful that no accounting was required (two citations in the account).  This tells us that accountability IS the norm.  It also tells us flexibility is possible; but the two citations reflect a high view of accountability.
!!! Evasion
* [[Deceit]], [[Subversion]]
* 'Gene, how could you even ask such a thing?' -- crazy-making.
* 'Gene, we're big boys, so let's skip these questions and just talk.'  //Gene Getz//</pre>
</div>
<div title="Acts-01-01-note" modifier="SDM" created="201010310321" modified="201301132025" tags="Comment" book_key="180001a">
<pre>One of Luke's primary purposes in Acts is to validate Paul's apostleship and ministry.  The dispute over the equal treatment of the widows starts a narrative thread that proceeds directly through several episodes to Paul's conversion.
----
&lt;&lt;Bbl Lk 2:1 abbr &gt;&gt;-7   Bears close comparison with &lt;&lt;Bbl Gn 11:1 &gt;&gt;-9 , the tower of Babel.  Themes of unity, power, God's intervention, and of course language and understanding.  Note also that from Babel a large multitude is scattered, and at Pentecost it is gathered (leading to the in-gathering at Peter's sermon).  At Babel they hoped to  //make a name for ourselves,//-  securing man-made unity; at Pentecost they gathered in the name of Jesus, the source of their true [[Unity]].  Pentecost is the sequel to Babel.
&lt;&lt;Bbl Lk 2:6 abbr &gt;&gt; Obviously the disciples weren't in a huddle, facing into each other.  They were out facing the crowds, preaching loudly.
2:9-11  The list of [[Nations]] would include representatives of today's Iran, Iraq, Israel, Turkey, Egypt, Libya, Saudi Arabia, Greece, Italy.
** This is a large portion of the 10/40 window; Saudi Arabia has the highest percentage of Protestant Christians (mostly expatriates such as Filipinos).  Taken all together, fewer than four our of a thousand would be a Protestant Christian (Operation World, 1993).  So there is a prophetic significance we can perhaps apply today; God's word does not return to Him void.
** Also looks ahead to the promise of Revelation, //from every tongue.//
** It's interesting that Jews and Judeans (vs 9, 11) are lumped in with the other nations; reminiscent of some prophetic OT passages.
2:14-36
** Peter's first sermon contains a clear argument:  &quot;No one present is drunk.  Rather, Joel's prophecies of the final day are being fulfilled.  First, there are prophetic words (which you mistake for drunkenness).  Second, there are signs in the earth (as were noted at Christ's death).  Jesus of Nazareth is the Messiah!  He was killed and resurrected, as David prophesied would happen to the Messiah.  Also He has ascended into heaven, again as David prophesied of the Messiah.&quot;
** Note the dual fulfillment of Joel's prophecy; the new indwelling of the Spirit, and the incredible events surrounding Jesus' death, indicating that day of the sermon, and also the signs of the final day.   Peter thought them one and the same.
2:24    //agonies//, lit., birth pangs.
2:29    An apologetic we sometimes use.
2:39    In this moment of revelation, Peter looks ahead to something yet dimly revealed  --  the inclusion of the Gentiles.  He didn't know how it could happen, but he knew the Lord his God could  // call to Himself.//
2:42    The teaching was simply a continual recounting of the life and words of the Christ, and an exposition of the scriptures which pointed to Him.  Can we do any better?  Why are we so excited by novel doctrines?
----
3:17    see &lt;&lt;Bbl Lk 23:34 &gt;&gt;
&lt;&lt;Bbl Lk 3:25 abbr &gt;&gt;-26     Amazingly, Peter has the revelation insight to take the promise of &quot;blessing&quot; given to Abraham and interpret it to mean repentance and righteousness.</pre>
</div>
<div title="Acts-01-04-note" modifier="SDM" created="201211110234" modified="201301132019" tags="Comment" book_key="180004a">
<pre>4:1-2   The Sadducees are still stumbling over the doctrine of the resurrection.
4:28    see &lt;&lt;Bbl Mt 27:25 &gt;&gt;
&lt;&lt;Bbl Mt 4:32 abbr &gt;&gt;    Seems that this should open the chapter.
----
5:1 The sin was lying, but note the [[Hypocrisy]] underneath.
5:6,9   These may be written to echo &lt;&lt;Bbl Lv 10:4 &gt;&gt;-5 , the carrying out of Nadab and Abihu.
5:39    Gamaliel is utterly free of the description Jesus gave of those who, in persecuting the Church, think they are &quot;rendering service to God&quot;.  See 19:35-36.

7:58    See 22:20
----
11:27   This is the first recorded church collection, I believe.  See faith at work:  faith first in the prophecy, second in God's provision.  And if anyone lacked faith, perhaps giving for appearance sake, that person would be a witness as events confirmed the word.
!!! 12:5-19  Six stages of deliverance
# Deliverance not
# Deliverance, but without cognizance
# Deliverance with cognizance, but others unaware (Peter's //dawn// comes way before the dawn!)
# Deliverance, one girl (Rhoda) aware, but others can't believe
# Deliverance -- and the church is praising God!
# Deliverance -- the open scandal!
Perhaps we are like Peter sometimes, yet to //come to himself// (vs. 11) -- yet to appreciate our position in Christ.  Can compare to the servants in John 3.
----
13:6-12 compare with the magicians of Pharaoh.  The proconsul's heart is not hardened.
13:46   Cf &lt;&lt;Bbl Jn 3:18 &gt;&gt;.  We reject the current psychology, but must acknowledge that in these verses we choose our own destinies.</pre>
</div>
<div title="Acts-16-13-note" modifier="SDM" created="201112281610" modified="201208061616" tags="Comment" book_key="180016c">
<pre>17:32-34   Compare Hezekiah's announcement of the Passover and its reception (&lt;&lt;Bbl 2Chr 30:1 &gt;&gt;-12 ).
&lt;&lt;Bbl Acts 18:1 abbr &gt;&gt;-6  Here Paul becomes our model for the working missionary.  And the glorious fruit of this time is Aquila and Priscilla, who figure strongly through the rest of the chapter.
18:24-28    Apollos' qualifications were truly remarkable; much like those of Paul.  What did Aquila and Priscilla find lacking?
18:28   As Peter did in his sermon of Acts 2.   see &lt;&lt;Bbl Acts 5:35 abbr &gt;&gt;-39; &lt;&lt;Bbl Jud 6:31 &gt;&gt;.
----
20:29-30    Compare &lt;&lt;Bbl 1Jn 2:18 &gt;&gt;-19 .
&lt;&lt;Bbl Acts 20:33 abbr &gt;&gt;-35    This is &quot;Paul's proud boast,&quot; explained in &lt;&lt;Bbl 1Cor 9:1 &gt;&gt;-23 .

&lt;&lt;Bbl Acts 22:19 abbr &gt;&gt;     Paul maybe saying, but I have such a great testimony!
22:20   See 7:58.

23:3    see &lt;&lt;Bbl Ez 13:10 &gt;&gt;

&lt;&lt;Bbl Acts 24:25 abbr &gt;&gt;   This and &lt;&lt;Bbl Acts 24:28 abbr &gt;&gt; indicate the positive evangelistic effect which Paul presented through his legal appeals.

26:28   has another possible rendering:  &quot;Would you so easily persuade me to be a Christian?</pre>
</div>
<div title="Addiction" modifier="SDM" created="201209012231" modified="201209241522" book_key="">
<pre>* [[Sin]], [[Idolatry]]
* &lt;&lt;Bbl Pr 26:11 &quot;&quot; note &gt;&gt;
* &lt;&lt;Bbl Pr 23:20 &gt;&gt;-21</pre>
</div>
<div title="Adornment" modifier="SDM" created="201010131808" modified="201304031859" book_key="" changecount="1">
<pre>* Cosmetics: 2Kng 9:30, &lt;&lt;Bbl Jer 4:30 &gt;&gt;
* [[Gold]]
* Earrings:  &lt;&lt;Bbl Gn 35:4 &gt;&gt;, &lt;&lt;Bbl Ex 32:2 &gt;&gt;ff, &lt;&lt;Bbl Ex 33:5 &gt;&gt;-6 ; &lt;&lt;Bbl Ex 35:22 &gt;&gt;; &lt;&lt;Bbl Num 31:50 &gt;&gt;; &lt;&lt;Bbl Jud 8:24 &gt;&gt;-27 , &lt;&lt;Bbl Ez 16:17 &gt;&gt;.
* [[Clothing]]
* [[Pride]]</pre>
</div>
<div title="Advanced download options" creator="psd" modifier="jermolene" created="201102111106" modified="201301171556" tags="help">
<pre>When you click on the [[download|Download]] button, the website will detect your browser and operating system, and trigger a download for either an empty ~TiddlyWiki file or, if you're running [[Safari]] or [[Opera]], a zip file which also includes the TiddlySaver file. This is version &lt;&lt;version&gt;&gt; of ~TiddlyWiki.

Advanced users may find these download options helpful (right click the link and select &quot;Save as&quot; to download):
*[[An empty TiddlyWiki file|http://www.tiddlywiki.com/empty.html]]
*[[A zip file containing an empty TiddlyWiki file plus a TiddlySaver file|http://www.tiddlywiki.com/empty.zip]]
*[[A copy of this website (TiddlyWiki.com) minus images|#]]
*[[The TiddlySaver.jar file on its own|http://www.tiddlywiki.com/TiddlySaver.jar]]
Finally, these links may be useful:
*[[Downloading]] instructions for the main browsers
*A list of supported [[Browsers]]
*Archive of older versions of TiddlyWiki at http://tiddlywiki.com/archive/
</pre>
</div>
<div title="Amen" modifier="SDM" created="201004120330" modified="201201101455" book_key="">
<pre>* In general, God says Yes.  [[God's promises are Yes|./Bbl/2Cor.htm#1#17]]
* //Amen, amen// is a phrase that occurs only in John's gospel.  George Murray proposes that Jesus only used it to introduce a statement that He knew would not be received by His hearers.  &quot;There's no way you could possibly believe this, but it is true, it is true.&quot;
* see also &lt;&lt;Bbl 1Chr 17:1 &gt;&gt;-15 , &lt;&lt;Bbl 1Cor 3:21 &gt;&gt;-23 ; &lt;&lt;Bbl Rom 8:31 &gt;&gt;-32 ; &lt;&lt;Bbl Gn 2:15 &gt;&gt;-17 ; &lt;&lt;Bbl Ps 21:1 &gt;&gt;-6 , &lt;&lt;Bbl Ps 37:4 &gt;&gt;; &lt;&lt;Bbl Mt 7:7 &gt;&gt;-11 ; &lt;&lt;Bbl Lk 12:32 &gt;&gt;.
* Also &lt;&lt;Bbl Mk 10:35 &gt;&gt;-40 .
* As a title for Christ, see &lt;&lt;Bbl Is 65:16 &gt;&gt; (Heb); &lt;&lt;Bbl 2Cor 1:20 &gt;&gt;;  &lt;&lt;Bbl Rev 3:14 &gt;&gt;.
* The rendering &quot;So be it&quot; seems to come from the way the LXX handled the Hebrew term.</pre>
</div>
<div title="Anger" modifier="SDM" created="201004120330" modified="201011031911">
<pre>&lt;&lt;Bbl Eph 4:26 &gt;&gt;; &lt;&lt;Bbl Jms 1:19 &gt;&gt;-20 .</pre>
</div>
<div title="Anointing" modifier="SDM" created="201012132236" modified="201208081604" book_key="">
<pre>* [[Authority]], [[Favor]]
* [[SpiritOfChrist]]
* [[Oil]], //unction//
* [[Christ]], //Messiah, Anointed//
* &lt;&lt;Bbl Heb 1:9 &gt;&gt;
----
God anoints a //person// for a //role://
## [[King]]
## [[Priest]]
## ... and the occasional [[Prophet|Prophecy]]
He does not anoint a place, event or time.</pre>
</div>
<div title="AnotherExampleStyleSheet" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="examples">
<pre>This tiddler shows some more complex effects that can be obtained with cunning use of CSS. Not all of these will work properly on all browsers because of differences in CSS implementation, but they should fail gracefully.

You can have special formatting for a specific, named tiddler like this:
{{{
#tiddlerHelloThere .title {
background-color: #99aaee;
}
}}}

Or for the first displayed tiddler:
{{{
div.tiddler:first-child .title {
font-size: 28pt;
}
}}}

Or just for the first line of every tiddler:
{{{
.viewer:first-line {
background-color: #999999;
}
}}}

Or just for the first letter of every tiddler:
{{{
.viewer:first-letter {
float: left;
font-size: 28pt;
font-weight: bold;
}
}}}

Or just for tiddlers tagged with a particular tag (note that this won't work for tags that contain spaces):
{{{
div[tags~=&quot;welcome&quot;].tiddler .viewer {
background-color: #ffccaa;
}

div[tags~=&quot;features&quot;].tiddler .viewer {
background-color: #88aaff;
}
}}}</pre>
</div>
<div title="Apostle" modifier="SDM" created="201004120330" modified="201207062103" book_key="">
<pre>* One set aside for a special purpose.   -- apo-, from + stellein, to send.  The verb, to send forth, is regular NT  --  but the noun is not.
* In New Testament, used two ways:  First, used by Jesus to denote the Twelve: &lt;&lt;Bbl Lk 6:12 &gt;&gt;-16 ; &lt;&lt;Bbl Mt 19:28 &gt;&gt;; &lt;&lt;Bbl Act 2:24 &gt;&gt;; &lt;&lt;Bbl Rev 21:14 &gt;&gt;.  Second, to denote those who preach the gospel, and perhaps specifically those who build churches, area missionaries: &lt;&lt;Bbl Act 14:14 &gt;&gt;; &lt;&lt;Bbl Eph 4:13 &gt;&gt;; &lt;&lt;Bbl Rom 16:7 &gt;&gt;; &lt;&lt;Bbl 1Thes 2:6 &gt;&gt;.  F.F. Bruce comments in Colossians concerning the salutation.
* &quot;Missionary&quot; is the Vulgate form of our word apostle.
* Jesus:    &lt;&lt;Bbl Heb 3:1 &gt;&gt;
* Paul: &lt;&lt;Bbl 1Cor 9:1 &gt;&gt;-2 .
* Smile:  //It is general acknowledged that the apostle Peter was, at some point, robbed to pay the apostle Paul.//</pre>
</div>
<div title="Atonement" modifier="SDM" created="201004120330" modified="201211190419" book_key="">
<pre>* &lt;&lt;Bbl Gal 3:13 &quot;&quot; note &gt;&gt;
* [[Favor]]
* [[Substitution]]
* Weekley gives a thorough etymology.  Literally, at-one-ment, from the anglo-saxon.   See [[2Sam-21-01-note]].
* The Wycliffe Ency. has an interesting analysis and a list of &quot;Scriptural Formulations&quot;.
* Unlimited &amp; to all nations:  &lt;&lt;Bbl Is 19:23 &gt;&gt;-25 , &lt;&lt;Bbl Is 56:6 &gt;&gt;-8 , &lt;&lt;Bbl Is 66:19 &gt;&gt;-21 , &lt;&lt;Bbl 1Jo 2:2 &gt;&gt;, &lt;&lt;Bbl 1Tim 4:10 &gt;&gt; or &lt;&lt;Bbl 2Tim 4:10 &gt;&gt;, &lt;&lt;Bbl 2Pe 2:1 &gt;&gt;, &lt;&lt;Bbl Mt 26:20 &gt;&gt;-28 .
* despising of:     &lt;&lt;Bbl 1Sam 3:14 &gt;&gt;, &lt;&lt;Bbl 1Sam 2:17 &gt;&gt;; &lt;&lt;Bbl Heb 2:3 &gt;&gt;, &lt;&lt;Bbl Heb 6:4 &gt;&gt;-8 , &lt;&lt;Bbl Heb 10:29 &gt;&gt;
* [[Sacrifice]], [[Redemption]]
* [[Selection]] (limited atonement)
* &quot;George ~MacDonald rejected the doctrine of penal substitutionary atonement as developed by John Calvin, which argues that Christ has taken the place of sinners and is punished by God in their place... The problem was not the need to appease a wrathful God but the disease of cosmic evil itself.&quot;  This Wikipedia article goes on to say ~MacDonald didn't subscribe to our orthodox view of Hell.</pre>
</div>
<div title="Attitude" modifier="SDM" created="201210091520" modified="201211250314" book_key="">
<pre>* [[ThoughtLife]]
</pre>
</div>
<div title="Authority" modifier="SDM" created="201004120330" modified="201211201324" book_key="">
<pre>* See Vine's.  This word is indeed the root of the English word author.
!!! of God
* [[Sovereignty]]
!!! Spiritual
* &quot;Thy kingdom come&quot;  See [[King]], [[KingdomOfGod]], [[Principalities]]
* sovereignty of God over:  &lt;&lt;Bbl Num 22:6 &gt;&gt;; &lt;&lt;Bbl Jn 11:40 &gt;&gt;-51 ; &lt;&lt;Bbl Col 2:10 &gt;&gt;
* true power:   &lt;&lt;Bbl Jer 1:4 &gt;&gt;, &lt;&lt;Bbl Mt 9:6 &gt;&gt;, &lt;&lt;Bbl Mt 10:1 &gt;&gt;, &lt;&lt;Bbl Mt 21:25 &gt;&gt;; &lt;&lt;Bbl 1Cor 4:20 &gt;&gt;.
* laying on of hands:       &lt;&lt;Bbl 1Tim 5:22 &gt;&gt;
* [[Elder]], [[Priest]]
!!! Earthly
* ordained by [[God]]:              &lt;&lt;Bbl Ex 22:28 &gt;&gt;; &lt;&lt;Bbl 1Sam 26:9 &gt;&gt;
* sovereignty of God over:      &lt;&lt;Bbl Dan 4:17 &gt;&gt;; &lt;&lt;Bbl Pr 21:1 &gt;&gt;
* [[Obedience]]
* see F.F. Bruce, Romans, p. 54  footnote
* [[Marriage]]
* [[Responsibility]] of:        &lt;&lt;Bbl 2Sam 24:17 &gt;&gt;; &lt;&lt;Bbl Pr 16:10 &gt;&gt;; &lt;&lt;Bbl Mic 3:1 &gt;&gt;
* non-responsibility of:        &lt;&lt;Bbl 1Sam 12:14 &gt;&gt;
* [[Judgment]] upon:            &lt;&lt;Bbl Ex 12:12 &gt;&gt;; &lt;&lt;Bbl Is 3:14 &gt;&gt;-15 ; &lt;&lt;Bbl Ez 21:12 &gt;&gt;
* over Jeremiah:            &lt;&lt;Bbl Jer 38:24 &gt;&gt;-28
* false authority:              &lt;&lt;Bbl Hos 3:4 &gt;&gt;, &lt;&lt;Bbl Hos 8:4 &gt;&gt;, &lt;&lt;Bbl Hos 13:10 &gt;&gt;-11 ; &lt;&lt;Bbl Pr 19:10 &gt;&gt;
* as an idol:               &lt;&lt;Bbl Hos 3:4 &gt;&gt; ([[Idolatry]])

----
* [[Government]]
* Master: &lt;&lt;Bbl Gn 4:7 &gt;&gt;; &lt;&lt;Bbl Is 26:13 &gt;&gt;; &lt;&lt;Bbl Dt 28:36 &gt;&gt;; &lt;&lt;Bbl Ruth 2:22 &gt;&gt;; &lt;&lt;Bbl 2Chron 12:8 &gt;&gt;; &lt;&lt;Bbl Hos 2:7 &gt;&gt;; &lt;&lt;Bbl Lk 15:17 &gt;&gt;-19 ; &lt;&lt;Bbl Josh 24:14 &gt;&gt;-20 ; &lt;&lt;Bbl Mt 6:24 &gt;&gt;
* [[Statism]]
* [[Individual]] vs. Group -- Authority through identification (husband is //head=source//)
* [[Disciple]]</pre>
</div>
<div title="AutoSave" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="features options">
<pre>If you check this box in the InterfaceOptions, TiddlyWiki will automatically SaveChanges every time you edit a tiddler. In that way there's a lot less chance of you losing any information.

However, if you also have the SaveBackups checkbox ticked, you'll end up with a lot of archived files. You may prefer to select either one or the other.</pre>
</div>
<div title="Backsliding" modifier="SDM" created="201004120330" modified="201012061524">
<pre>&lt;&lt;Bbl Zph 1:12 &gt;&gt;; &lt;&lt;Bbl Ps 85:8 &gt;&gt;; &lt;&lt;Bbl Pr 14:14 &gt;&gt;, &lt;&lt;Bbl Pr 25:26 &gt;&gt;, &lt;&lt;Bbl Pr 26:11 &gt;&gt;; &lt;&lt;Bbl Jn 5:14 &gt;&gt;; &lt;&lt;Bbl 1Pt 2:18 &gt;&gt;-22 ; &lt;&lt;Bbl Mt 12:43 &gt;&gt;-45 ; &lt;&lt;Bbl Heb 2:3 &gt;&gt;, &lt;&lt;Bbl Heb 6:4 &gt;&gt;-8 , &lt;&lt;Bbl Heb 10:26 &gt;&gt;-31 ; &lt;&lt;Bbl Is 57:17 &gt;&gt;-21 .
//Apostasy//
[[Temptation]], [[Commitment]]</pre>
</div>
<div title="BackstageArea" creator="psd" modifier="colmbritton" created="201102111106" modified="201102211427" tags="features">
<pre>One of the great strengths of TiddlyWiki is the way that its interface can be customised by editting various shadow tiddlers. However, a problem that has consistently emerged is the difficulty of reconciling the needs of authors, who need access to the full array of TiddlyWiki features, and the needs of ordinary readers, who generally benefit from seeing a restricted set of functionality more suited to their needs.

The new backstage area in release 2.2 offers a solution to this conundrum by providing a consistent way of accessing authoring functionality that is independent of the interface customisations (so, even if you blast away the contents of your PageTemplate, you can still access the backstage area).

The backstage area is only available when a TiddlyWiki is edittable - typically meaning that it's been opened off of a {{{file://}}} URL. It appears as an unobtrusive link in the topright corner of the page. Clicking it reveals the backstage toolbar consisting of commands like {{{saveChanges}}} and drop-down tasks like ImportTiddlers, SyncMacro, PluginManager and Tweak (which provides access to the new [[options macro]]).</pre>
</div>
<div title="Banner" modifier="SDM" created="201210282105" modified="201211162145" book_key="">
<pre>Hebrew term is //thing raised up.//
!!! Usages
* &lt;&lt;Bbl Ex 17:15 &gt;&gt; the serpent -- //Yahweh Nissi//.
* &lt;&lt;Bbl Num 21:4&gt;&gt;-9 Moses' hands, lifted up during battle.
* &lt;&lt;Bbl Ps 20:5 &gt;&gt;
* &lt;&lt;Bbl Ps 60:4 &gt;&gt;
* &lt;&lt;Bbl Is 11:20 &gt;&gt;-12
!!! Significance
* [[Gathering]] as for battle or counsel.
* Thus, creating and signaling [[Unity]].
* Indicates [[Preservation]], thus brings [[Hope]] (our national anthem).
* [[Proclamation]] -- the very opposite of hiding.
* [[Guidance]] -- the tribes marched under their respective banners.
!!! Christ
* &lt;&lt;Bbl Jn 3:14 &gt;&gt;, &lt;&lt;Bbl Jn 12:32 &gt;&gt; //the Son of Man be lifted up...//</pre>
</div>
<div title="Baptism" modifier="SDM" created="201012061733" modified="201211190404" book_key="">
<pre>!! Spiritual
&lt;&lt;Bbl Mk 1:8 &gt;&gt;; &lt;&lt;Bbl Acts 1:5 &gt;&gt;; &lt;&lt;Bbl 1Cor 12:13 &gt;&gt;-27, &lt;&lt;Bbl Rom 3:24 &gt;&gt;; 5:15-21; 12:5; &lt;&lt;Bbl 1Cor 1:2 &gt;&gt;; 5:19; 15:22b; &lt;&lt;Bbl 2Cor 5:17 &gt;&gt;; &lt;&lt;Bbl Gal 1:22 &gt;&gt;; 2:17; 3:28; &lt;&lt;Bbl Eph 1:4 &gt;&gt;; 2:12; 3:6; 4:32; &lt;&lt;Bbl 2Tim 2:10 &gt;&gt;; &lt;&lt;Bbl 1Thes 4:16 &gt;&gt;
!! Water
* ''~SoF:'' @@color:brown;Baptism (&lt;&lt;Bbl Mt 28:18 &gt;&gt;-20 ; &lt;&lt;Bbl Rom 6:3 &gt;&gt;-4 ; &lt;&lt;Bbl Col 2:12 &gt;&gt;)@@
* [[Water]]
* //washing//
* Geerhardus Vos says the baptism of Jesus by John was for God's people corporately, Jesus representing Israel to God; thus it //fulfills righteousness.//</pre>
</div>
<div title="Basic Formatting" creator="matt" modifier="psd" created="201102111425" modified="201102151515" tags="formatting">
<pre>|Style|Formatting|h
|''bold''|{{{''bold''}}} - two single-quotes, not a double-quote|
|//italics//|{{{//italics//}}}|
|''//bold italics//''|{{{''//bold italics//''}}}|
|__underline__|{{{__underline__}}}|
|--strikethrough--|{{{--Strikethrough--}}}|
|super^^script^^|{{{super^^script^^}}}|
|sub~~script~~|{{{sub~~script~~}}}|
|@@Highlight@@|{{{@@Highlight@@}}}|
|{{{plain text}}}|{{{ {{{PlainText No ''Formatting''}}} }}}|
|/%this text will be invisible%/hidden text|{{{/%this text will be invisible%/}}}|
</pre>
</div>
<div title="Benefit" modifier="SDM" created="201201282231" modified="201211201354" book_key="">
<pre>* [[Blessing]]
* //Forget not all His benefits ...//\
* //O taste and see that the Lord is good//
* Paul Lyon mentions the compounding interest of godly living</pre>
</div>
<div title="Bible-Index" modifier="SDM" created="201211031822" modified="201304031532" tags="menu excludeListsTempDisable" book_key="" changecount="1">
<pre>&lt;&lt;tabs &quot;Gospels&quot;
&quot;Torah&quot; &quot;First Five Books&quot; tabTorah
&quot;Histories&quot; &quot;Histories&quot; tabHistories
&quot;Poetry&quot; &quot;Poetry&quot; tabPoetry
&quot;Prophets&quot; &quot;Prophets&quot; tabProphets
&quot;Gospels&quot; &quot;Gospels and Acts&quot; tabGospels
&quot;Paul&quot; &quot;Paul's Letters&quot; tabPaul
&quot;Letters&quot; &quot;other Letters&quot; tabLetters
&gt;&gt;  &lt;&lt;tiddler HideTiddlerTags&gt;&gt;

</pre>
</div>
<div title="BibleHyperlink" modifier="SDM" created="201210282109" modified="201304050141" tags="systemConfig macro excludeLists" book_key="" changecount="1">
<pre>/***
[[BibleHyperlinkInfo]] for info
***/

//{{{

config.macros.BblProx = {
  handler: function (place, macroName, params, wikifier, paramString, tiddler) {

    var dir = params[0];
    var thisTiddler = params[1] || tiddler.title;

    var array_ch_vs_ref = thisTiddler.split(&quot;-&quot;);
    var bk = array_ch_vs_ref[0];
    var ch = array_ch_vs_ref[1];
    var vs = array_ch_vs_ref[2];
    ch = ch.replace(/^0+/, &quot;&quot;);
    vs = vs.replace(/^0+/, &quot;&quot;);

    var strSuffix = &quot;-note&quot;;
    if ( thisTiddler.slice(-5) != strSuffix ) { strSuffix = &quot;&quot;; }

    store.suspendNotifications();

    var strLinkMe;
    strLinkMe = funcLinkProx(bk, ch, vs, strSuffix, dir);
    store.resumeNotifications();
    store.notifyAll();

    strLabel = &quot;{{tiny{//&quot; + strLinkMe + &quot;//}}}&quot;;
    if ( strLinkMe == &quot;&quot; ) {
        wikify(' . . . . . ', place);
    } else if ( dir == 'p' ) {
        wikify(strLabel + ' [[Prev|' + strLinkMe + ']]', place);
    } else {
        wikify('[[Next|' + strLinkMe + ']] ' + strLabel, place);
    }
  }
};

config.macros.BblMatchNote = {
  handler: function (place, macroName, params, wikifier, paramString, tiddler) {

    var thisTiddler = params[0] || tiddler.title;

    var array_ch_vs_ref = thisTiddler.split(&quot;-&quot;);
    var bk = array_ch_vs_ref[0];
    var ch = array_ch_vs_ref[1];
    ch = ch.replace(/&quot;0&quot;/g,&quot;&quot;);
    var vs = array_ch_vs_ref[2];
    vs = vs.replace(/&quot;0&quot;/g,&quot;&quot;);

    strSuffix = &quot;-note&quot;;

    store.suspendNotifications();

    var strLinkMe;
    strLinkMe = funcLinkProx(bk, ch, vs, strSuffix, &quot;m&quot;);
    store.resumeNotifications();
    store.notifyAll();

    strLabel = &quot;Notes&quot;;
    wikify('[[' + strLabel + &quot;|&quot; + strLinkMe + ']]', place);

  }
};

config.macros.Bbl = {
  handler: function (place, macroName, params, wikifier, paramString, tiddler) {

    var book = params[0];
    var strLink = book;
    strLink = parseBook(book);

    var ch_vs_ref = params[1] || &quot;1:1&quot;;
    var array_ch_vs_ref = ch_vs_ref.split(&quot;:&quot;);
    var ch = array_ch_vs_ref[0];
    var vs = array_ch_vs_ref[1];

    var book_show = params[2] || &quot;&quot;;

    var entry_type = params[3] || &quot;t&quot;; // t=text  n=note
    var strSuffix = &quot;&quot;;
    if (entry_type == 'note') { strSuffix = &quot;-note&quot; }

    var strLinkMe;
    strLinkMe = funcLinkProx(strLink, ch, vs, strSuffix, &quot;m&quot;);
    store.resumeNotifications();
    store.notifyAll();

    //wikify(strLinkMe, place);
    var strLabel;
    strLabel = ch + &quot;:&quot; + vs;
    if (book_show == '') { strLabel = book + &quot; &quot; + strLabel }
    if (entry_type == 'note') { strLabel = strLabel + &quot; note&quot; }


    var strLinkFinal;
    if (entry_type == 'note') { 
        strLinkFinal = &quot;[[&quot; + strLabel + &quot;|&quot; + strLinkMe + &quot;]]&quot;;
    } else { 

        strLinkFinal = &quot;&lt;&lt;showPopup tiddler:[[&quot; + strLinkMe + &quot;]] label:'&quot; + strLabel + &quot;' tip:'Use open button to make the passage stick open' buttonClass:'bibleLink' popupClass:'holyquote' &gt;&gt;&quot;;
    }

    wikify(strLinkFinal, place);
  }
};
    function funcLinkProx(book, ch, vs, suffix, dir) {
      var ch_n = ch;
      var vs_n = vs;
      var ch_pad = &quot;&quot;;
      var vs_pad = &quot;&quot;;
      var strLinkFinal = &quot;&quot;;
      var found = false;
     if ( dir == &quot;p&quot; || dir == &quot;m&quot; ) {
      if ( dir == &quot;p&quot; ) { vs_n = --vs_n; }
      do  {
        //TODO add another leading zero where book==&quot;Psalms&quot; and ch_pad &lt; 100
        //   Can change -2 to -3 for this to work.
        ch_pad = (&quot;0&quot; + ch_n).slice (-2);
        do  {
            vs_pad = (&quot;0&quot; + vs_n).slice (-2);
            strLinkFinal = book + &quot;-&quot; + ch_pad + &quot;-&quot; + vs_pad + suffix;
            //return strLinkFinal;
            found = store.tiddlerExists(strLinkFinal);
            if (found) { return strLinkFinal;  }
            vs_n = --vs_n;
        } while ( vs_n &gt; 0 )
        vs_n = 95;
        ch_n = --ch_n;
      } while ( ch_n &gt; 0 )
     } else {         //dir == &quot;n&quot;
      vs_n = ++vs_n;
      do  {
        //TODO add another leading zero where book==&quot;Psalms&quot; and ch_pad &lt; 100
        ch_pad = (&quot;0&quot; + ch_n).slice (-2);
        do  {
            vs_pad = (&quot;0&quot; + vs_n).slice (-2);
            //alert(ch_pad + &quot; &quot; + ch_n + &quot; &quot; + vs_pad + &quot; &quot; + vs_n);
            strLinkFinal = book + &quot;-&quot; + ch_pad + &quot;-&quot; + vs_pad + suffix;
            found = store.tiddlerExists(strLinkFinal);
            if (found) { return strLinkFinal;  }
            vs_n = ++vs_n;
        } while ( vs_n &lt; 90 )
        vs_n = 1;
        ch_n = ++ch_n;
      } while ( ch_n &lt; 67 )
     }
     return &quot;&quot;;
    }
    function parseBook(raw) {
    var book = raw;
        if (raw == '1Jn') { book = '1John' }
        if (raw == '2Jn') { book = '2John' }
        if (raw == '3Jn') { book = '3John' }
        if (raw == '1Kng') { book = '1Kings' }
        if (raw == '2Kng') { book = '2Kings' }
        if (raw == '1Pt') { book = '1Peter' }
        if (raw == '2Pt') { book = '2Peter' }
        if (raw == 'Act') { book = 'Acts' }
        if (raw == 'Dan') { book = 'Daniel' }
        if (raw == 'Dt') { book = 'Deut' }
        if (raw == 'Ecc') { book = 'Eccl' }
        if (raw == 'Ez') { book = 'Ezekiel' }
        if (raw == 'Ex') { book = 'Exodus' }
        if (raw == 'Gn') { book = 'Genesis' }
        if (raw == 'Hab') { book = 'Habakkuk' }
        if (raw == 'Heb') { book = 'Hebrews' }
        if (raw == 'Hos') { book = 'Hosea' }
        if (raw == 'Is') { book = 'Isaiah' }
        if (raw == 'Jer') { book = 'Jeremiah' }
        if (raw == 'Jn') { book = 'John' }
        if (raw == 'Jms') { book = 'James' }
        if (raw == 'Jn') { book = 'John' }
        if (raw == 'Josh') { book = 'Joshua' }
        if (raw == 'Jud') { book = 'Judges' }
        if (raw == 'Lam') { book = 'Lamentations' }
        //if (raw == 'Lam') { book = 'Lament' } //ations' }

        if (raw == 'Lk') { book = 'Luke' }
        if (raw == 'Mal') { book = 'Malachi' }
        if (raw == 'Mk') { book = 'Mark' }
        if (raw == 'Mt') { book = 'Matthew' }
        if (raw == 'Neh') { book = 'Nehemiah' }
        if (raw == 'Php') { book = 'Philip' }
        if (raw == 'Pr') { book = 'Proverbs' }
        if (raw == 'Ps') { book = 'Psalms' }
        if (raw == 'Rom') { book = 'Romans' }
        if (raw == 'Tit') { book = 'Titus' }
        return book;
    }
//}}}
</pre>
</div>
<div title="BibleHyperlinkInfo" modifier="SDM" created="201201041415" modified="201302282219" tags="howto excludeLists wiki-link" book_key="">
<pre>[[BibleHyperlink]]
| Usage | Display |  Action |h
|{{{ &lt;&lt;Bbl Lk 15:1 &gt;&gt;   }}} |&lt;&lt;Bbl Lk 15:1 &gt;&gt;   &lt;&lt;Bbl Luke 15:1 &gt;&gt; |Points to self-same (vs.1) |
|{{{ &lt;&lt;Bbl Lk 6:49 &gt;&gt;   }}} |&lt;&lt;Bbl Lk 6:49 &gt;&gt;  |Points to self-same |
|{{{ &lt;&lt;Bbl Lk 8:15 abbr &gt;&gt;  }}} |&lt;&lt;Bbl Lk 8:15 abbr &gt;&gt; |Hunts back to earlier verse ''08-09''; also no book name |
|{{{ &lt;&lt;Bbl Lk 7:13 &gt;&gt;  }}} |&lt;&lt;Bbl Lk 7:13 &gt;&gt; |Hunts back to preceding chapter ''06-46'' |
|{{{ &lt;&lt;Bbl Lk 15:1 &quot;&quot; note &gt;&gt;   }}} |&lt;&lt;Bbl Lk 15:1 &quot;&quot; note &gt;&gt;  |Points to self-same (vs.1) ''note'' |
|{{{ &lt;&lt;Bbl Lk 6:49 &quot;&quot; note &gt;&gt;   }}} |&lt;&lt;Bbl Lk 6:49 &quot;&quot; note &gt;&gt;  |Points to self-same //note// |
|{{{ &lt;&lt;Bbl Lk 8:15 &quot;&quot; note &gt;&gt;  }}} |&lt;&lt;Bbl Lk 8:15 abbr note &gt;&gt; |Hunts back to ''2'' chapters!  ''06-46'' //note// |
|{{{ &lt;&lt;Bbl Lk 7:13 &quot;&quot; note &gt;&gt;  }}} |&lt;&lt;Bbl Lk 7:13 &quot;&quot; note &gt;&gt; |Hunts back to preceding chapter  ''06-46'' //note// |
|{{{ &lt;&lt;BblProx p Luke-08-09 &gt;&gt;  }}} |&lt;&lt;BblProx p Luke-08-09 &gt;&gt; |Hunts to previous chapter ''07-36'' from &lt;&lt;Bbl Lk 8:9 abbr &gt;&gt; |
|{{{ &lt;&lt;BblProx n Luke-08-09 &gt;&gt;  }}} |&lt;&lt;BblProx n Luke-08-09 &gt;&gt; |Hunts to next chapter 08-27 from &lt;&lt;Bbl Lk 8:9 abbr &gt;&gt; |
|{{{ &lt;&lt;BblMatchNote Luke-08-15 &gt;&gt;  }}} |&lt;&lt;BblMatchNote Luke-08-15 &gt;&gt; |Corresponding //note//  |</pre>
</div>
<div title="BibleHyperlinkInterbal" modifier="SDM" created="201212020549" modified="201212020553" tags="systemConfigDisable macro excludeLists" book_key="">
<pre>/***
[[BibleHyperlinkInfo]] for info
***/

//{{{

config.macros.ZBblProx = {
  handler: function (place, macroName, params, wikifier, paramString, tiddler) {

    var dir = params[0];
    var thisTiddler = params[1] || tiddler.title;

    var array_ch_vs_ref = thisTiddler.split(&quot;-&quot;);
    var bk = array_ch_vs_ref[0];
    var ch = array_ch_vs_ref[1];
    var vs = array_ch_vs_ref[2];
    ch = ch.replace(/^0+/, &quot;&quot;);
    vs = vs.replace(/^0+/, &quot;&quot;);

    var strSuffix = &quot;-note&quot;;
    if ( thisTiddler.slice(-5) != strSuffix ) { strSuffix = &quot;&quot;; }

    var strLinkMe;
    strLinkMe = funcLinkProx(bk, ch, vs, strSuffix, dir);
    strLabel = &quot;{{tiny{//&quot; + strLinkMe + &quot;//}}}&quot;;
    if ( strLinkMe == &quot;&quot; ) {
        wikify(' . . . . . ', place);
    } else if ( dir == 'p' ) {
        wikify(strLabel + ' [[Prev|' + strLinkMe + ']]', place);
    } else {
        wikify('[[Next|' + strLinkMe + ']] ' + strLabel, place);
    }
  }
};

config.macros.BblZZMatchNote = {
  handler: function (place, macroName, params, wikifier, paramString, tiddler) {

    var thisTiddler = params[0] || tiddler.title;

    var array_ch_vs_ref = thisTiddler.split(&quot;-&quot;);
    var bk = array_ch_vs_ref[0];
    var ch = array_ch_vs_ref[1];
    ch = ch.replace(/&quot;0&quot;/g,&quot;&quot;);
    var vs = array_ch_vs_ref[2];
    vs = vs.replace(/&quot;0&quot;/g,&quot;&quot;);

    strSuffix = &quot;-note&quot;;

    var strLinkMe;
    strLinkMe = funcLinkProx(bk, ch, vs, strSuffix, &quot;m&quot;);

    strLabel = &quot;Notes&quot;;
    wikify('[[' + strLabel + &quot;|&quot; + strLinkMe + ']]', place);

  }
};

config.macros.ZBbl = {
  handler: function (place, macroName, params, wikifier, paramString, tiddler) {

    var book = params[0];
    var strLink = book;
    strLink = parseBook(book);

    var ch_vs_ref = params[1] || &quot;1:1&quot;;
    var array_ch_vs_ref = ch_vs_ref.split(&quot;:&quot;);
    var ch = array_ch_vs_ref[0];
    var vs = array_ch_vs_ref[1];

    var book_show = params[2] || &quot;&quot;;

    var entry_type = params[3] || &quot;t&quot;; // t=text  n=note
    var strSuffix = &quot;&quot;;
    if (entry_type == 'note') { strSuffix = &quot;-note&quot; }

    var strLinkMe;
    strLinkMe = funcLinkProx(strLink, ch, vs, strSuffix, &quot;m&quot;);

    var strLabel;
    strLabel = ch + &quot;:&quot; + vs;
    if (book_show == '') { strLabel = book + &quot; &quot; + strLabel }
    if (entry_type == 'note') { strLabel = strLabel + &quot; note&quot; }

    wikify('[[' + strLabel + &quot;|&quot; + strLinkMe + ']]', place);
    //wikify(strLinkMe, place);
  }
};
    function funcLinkProx(book, ch, vs, suffix, dir) {
      var ch_n = ch;
      var vs_n = vs;
      var ch_pad = &quot;&quot;;
      var vs_pad = &quot;&quot;;
      var strLinkFinal = &quot;&quot;;
      var found = false;
     if ( dir == &quot;p&quot; || dir == &quot;m&quot; ) {
      if ( dir == &quot;p&quot; ) { vs_n = --vs_n; }
      do  {
        //TODO add another leading zero where book==&quot;Psalms&quot; and ch_pad &lt; 100
        //   Can change -2 to -3 for this to work.
        ch_pad = (&quot;0&quot; + ch_n).slice (-2);
        do  {
            vs_pad = (&quot;0&quot; + vs_n).slice (-2);
            strLinkFinal = book + &quot;-&quot; + ch_pad + &quot;-&quot; + vs_pad + suffix;
            found = store.tiddlerExists(strLinkFinal);
            if (found) { return strLinkFinal;  }
            vs_n = --vs_n;
        } while ( vs_n &gt; 0 )
        vs_n = 95;
        ch_n = --ch_n;
      } while ( ch_n &gt; 0 )
     } else {         //dir == &quot;n&quot;
      vs_n = ++vs_n;
      do  {
        //TODO add another leading zero where book==&quot;Psalms&quot; and ch_pad &lt; 100
        ch_pad = (&quot;0&quot; + ch_n).slice (-2);
        do  {
            vs_pad = (&quot;0&quot; + vs_n).slice (-2);
            //alert(ch_pad + &quot; &quot; + ch_n + &quot; &quot; + vs_pad + &quot; &quot; + vs_n);
            strLinkFinal = book + &quot;-&quot; + ch_pad + &quot;-&quot; + vs_pad + suffix;
            found = store.tiddlerExists(strLinkFinal);
            if (found) { return strLinkFinal;  }
            vs_n = ++vs_n;
        } while ( vs_n &lt; 90 )
        vs_n = 1;
        ch_n = ++ch_n;
      } while ( ch_n &lt; 67 )
     }
     return &quot;&quot;;
    }
    function parseBook(raw) {
    var book = raw;
        if (raw == '1Jn') { book = '1John' }
        if (raw == '2Jn') { book = '2John' }
        if (raw == '3Jn') { book = '3John' }
        if (raw == '1Kng') { book = '1Kings' }
        if (raw == '2Kng') { book = '2Kings' }
        if (raw == '1Pt') { book = '1Peter' }
        if (raw == '2Pt') { book = '2Peter' }
        if (raw == 'Act') { book = 'Acts' }
        if (raw == 'Dan') { book = 'Daniel' }
        if (raw == 'Dt') { book = 'Deut' }
        if (raw == 'Ecc') { book = 'Eccl' }
        if (raw == 'Ez') { book = 'Ezekiel' }
        if (raw == 'Ex') { book = 'Exodus' }
        if (raw == 'Gn') { book = 'Genesis' }
        if (raw == 'Lv') { book = 'Lev' }
        if (raw == 'Hab') { book = 'Habakkuk' }
        if (raw == 'Heb') { book = 'Hebrews' }
        if (raw == 'Hos') { book = 'Hosea' }
        if (raw == 'Is') { book = 'Isaiah' }
        if (raw == 'Jer') { book = 'Jeremiah' }
        if (raw == 'Jn') { book = 'John' }
        if (raw == 'Jms') { book = 'James' }
        if (raw == 'Jn') { book = 'John' }
        if (raw == 'Josh') { book = 'Joshua' }
        if (raw == 'Jud') { book = 'Judges' }
        if (raw == 'Lam') { book = 'Lamentations' }
        if (raw == 'Lk') { book = 'Luke' }
        if (raw == 'Mal') { book = 'Malachi' }
        if (raw == 'Mk') { book = 'Mark' }
        if (raw == 'Mt') { book = 'Matthew' }
        if (raw == 'Neh') { book = 'Nehemiah' }
        if (raw == 'Php') { book = 'Philip' }
        if (raw == 'Pr') { book = 'Proverbs' }
        if (raw == 'Ps') { book = 'Psalms' }
        if (raw == 'Rom') { book = 'Romans' }
        if (raw == 'Tit') { book = 'Titus' }
        return book;
    }
//}}}</pre>
</div>
<div title="BibleHyperlink_for_external_html" modifier="SDM" created="201201040338" modified="201211260352" tags="systemConfig macro excludeLists systemConfigDisable" book_key="">
<pre>//{{{
//  SEE BibleHyperlinkInfo

config.macros.xBbl = {
  handler: function (place, macroName, params, wikifier, paramString, tiddler) {


    loadTiddlers(label:John 1:23, tiddler:John-01-23, bible_wiki_txt.htm, noreport, nodirty, temporary);



}
};
//}}}</pre>
</div>
<div title="BidiXTWServer" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="systemServer">
<pre>|''URL:''|http://tiddlywiki.bidix.info/|
|''Description:''|Repository for BidiX's TiddlyWiki Extensions|
|''Author:''|BidiX|</pre>
</div>
<div title="Bird" modifier="SDM" created="201004120330" modified="201210212127" tags="Living-Animal" book_key="">
<pre>* &lt;&lt;Bbl Gn 15:11 &gt;&gt;, &lt;&lt;Bbl Gn 40:17 &gt;&gt;.
* &lt;&lt;Bbl Lv 6:8 &gt;&gt;-9 (?) leprosy
* Eagle:  &lt;&lt;Bbl Rev 19:4 &gt;&gt;
* The stain glass window in Casablanca
</pre>
</div>
<div title="Birth" modifier="SDM" created="201004120330" modified="201011031916">
<pre>&lt;&lt;Bbl Gn 3:12 &gt;&gt;; &lt;&lt;Bbl Mic 4:9 &gt;&gt;-10 ; &lt;&lt;Bbl Ecc 3:2 &gt;&gt;; &lt;&lt;Bbl Is 26:16 &gt;&gt;-19 , &lt;&lt;Bbl Is 42:14 &gt;&gt;, &lt;&lt;Bbl Is 65:23 &gt;&gt;; &lt;&lt;Bbl Jn 16:21 &gt;&gt;-22 ; &lt;&lt;Bbl Act 2:24 &gt;&gt; (agonies  is literally birth pangs); &lt;&lt;Bbl Rev 12:1 &gt;&gt;-6
[[Suffering]], [[Life]]</pre>
</div>
<div title="Blame" modifier="SDM" created="201011120117" modified="201210091517" book_key="">
<pre>* Adam blaming Eve -- an effect of guilt and [[Shame]].
* //A man's folly perverts his way, but his heart rages against the Lord//
* //Let no man say 'I am being tempted by God'...&quot;//
* [[Attitude]]</pre>
</div>
<div title="Blasphemy" modifier="SDM" created="201109271613" modified="201203072355" book_key="">
<pre>''Direct, deliberate insult of God.''
* In high school we sang: &quot; ... , super-star, who -- -- -- do you think you are!&quot;
* [[Sin]]</pre>
</div>
<div title="Blessing" modifier="SDM" created="201004120330" modified="201211161323" book_key="">
<pre>* commands to:     &lt;&lt;Bbl Mt 5:43 &gt;&gt;-48 , &lt;&lt;Bbl Lk 6:27 &gt;&gt;-38 , &lt;&lt;Bbl Rom 12:14 &gt;&gt;, &lt;&lt;Bbl 1Pe 3:9 &gt;&gt; -- //The LORD bless you and keep you//
* of Paul:          &lt;&lt;Bbl 1Cor 4:12 &gt;&gt;
* Blessing and {{anti{[[Curse]]}}} -- &lt;&lt;Bbl Gn 4:7 &gt;&gt;, &lt;&lt;Bbl Gn 12:3 &gt;&gt;, &lt;&lt;Bbl Dt 11:26 &gt;&gt;-28 , &lt;&lt;Bbl Dt 27:12 &gt;&gt;-13 , chap. 28, 30:1,15-20; &lt;&lt;Bbl Mt 7:24 &gt;&gt;-27
* Blessing God-- &lt;&lt;Bbl Ez 3:12 &gt;&gt;, &lt;&lt;Bbl Is 6:3 &gt;&gt;; &lt;&lt;Bbl 1Tim 2:17 &gt;&gt;, &lt;&lt;Bbl 1Tim 3:16 &gt;&gt;, &lt;&lt;Bbl 1Tim 6:13 &gt;&gt;-16 , &lt;&lt;Bbl 2Tim 4:18 &gt;&gt;, &lt;&lt;Bbl Rev 4:8 &gt;&gt;; &lt;&lt;Bbl Rev 5:12 &gt;&gt;-14 ; &lt;&lt;Bbl Rev 7:9 &gt;&gt;-12 .
//doxology, benediction//</pre>
</div>
<div title="Blood" modifier="SDM" created="201004120330" modified="201206211545" book_key="">
<pre>* essential to [[Life]]:       @@color:darkgreen;The Bible reveals that blood is in some sense the carrier of life.@@ // -- James Jordan//
* sacredness of:        &lt;&lt;Bbl Gn 9:4 &gt;&gt;-6 , &lt;&lt;Bbl Lv 3:17 &gt;&gt;, &lt;&lt;Bbl Num 35:33 &gt;&gt;, &lt;&lt;Bbl Heb 9:18 &gt;&gt;-22 .
!!! Symbol of guiltiness
* [[Responsibility]], [[Guilt]], [[Shame]]
* of a newborn (original sin):  &lt;&lt;Bbl Ez 16:6 &gt;&gt;
* of Abel:              &lt;&lt;Bbl Mt 23:35 &gt;&gt;; &lt;&lt;Bbl Heb 11:4 &gt;&gt;
* &lt;&lt;Bbl Gn 4:10 &gt;&gt;; &lt;&lt;Bbl Job 16:18 &gt;&gt;; &lt;&lt;Bbl Mt 23:35 &gt;&gt;, &lt;&lt;Bbl Mt 27:25 &gt;&gt;; &lt;&lt;Bbl Act 5:28 &gt;&gt;; &lt;&lt;Bbl Ez 18:13 &gt;&gt;; &lt;&lt;Bbl 1Cor 11:27 &gt;&gt;
!!! ... and guilt's remedy
* sprinkling of:        &lt;&lt;Bbl Lv 8:30 &gt;&gt;, &lt;&lt;Bbl Ex 24:7 &gt;&gt;.
* Christ's:             &lt;&lt;Bbl Lk 22:20 &gt;&gt; (see &lt;&lt;Bbl Ex 24:7 &gt;&gt;-8 ), &lt;&lt;Bbl Acts 20:28 &gt;&gt;; &lt;&lt;Bbl Heb 9:18 &gt;&gt;-28 .
* Passover:             &lt;&lt;Bbl Ex 12:13 &gt;&gt;;
* [[Sacrifice]]
* [[Atonement]]
* [[Covenant]]</pre>
</div>
<div title="Blue Letter Bible" modifier="SDM" created="201012102216" modified="201212211600" tags="wiki resource wiki-link excludeLists" book_key="">
<pre>* The Blue Letter Bible is a wonderful resource.  Find it at [[Blue Letter Bible|http://www.blueletterbible.org/]]
* Link format:  {{{ http://www.blueletterbible.org/Bible.cfm?b=Gal&amp;c=2&amp;v=20&amp;t=ESV#20 }}}
&lt;html&gt;&lt;form action=&quot;http://blb.org/search/preSearch.cfm&quot; onSubmit=&quot;if(this.cscs.value=='Optional Verse Range') this.cscs.value='';&quot; method=&quot;get&quot; target=&quot;_blank&quot;&gt;   &lt;p&gt;  &lt;input type=&quot;text&quot; name=&quot;Criteria&quot; /&gt; &lt;select name=&quot;Version&quot;&gt;
    &lt;option value=&quot;KJV&quot;&gt;KJV&lt;/option&gt;
    &lt;option value=&quot;NKJV&quot;&gt;NKJV&lt;/option&gt;
    &lt;option value=&quot;NLT&quot;&gt;NLT&lt;/option&gt;
    &lt;option value=&quot;NIV&quot;&gt;NIV&lt;/option&gt;
    &lt;option value=&quot;ESV&quot; selected=&quot;selected&quot;&gt;ESV&lt;/option&gt;
    &lt;option value=&quot;NASB&quot;&gt;NASB&lt;/option&gt;
    &lt;option value=&quot;RSV&quot;&gt;RSV&lt;/option&gt;
    &lt;option value=&quot;ASV&quot;&gt;ASV&lt;/option&gt;
    &lt;option value=&quot;YNG&quot;&gt;YNG&lt;/option&gt;
    &lt;option value=&quot;WEB&quot;&gt;WEB&lt;/option&gt;
    &lt;option value=&quot;HNV&quot;&gt;HNV&lt;/option&gt;
  &lt;/select&gt;  &lt;input type=&quot;text&quot; name=&quot;cscs&quot;
    title=&quot;Use semicolons to separate groups -
      Gen;Jdg;Psa-Mal;Rom 3-12; Mat 1:15;Mat 5:12-22&quot;
    value=&quot;Optional Verse Range&quot;
    onfocus=&quot;if(this.value=='Optional Verse Range')
      this.value='';&quot;
    onblur=&quot;if(this.value=='')
      this.value='Optional Verse Range';&quot; /&gt;   &lt;input type=&quot;submit&quot; value=&quot;Search&quot; /&gt;  &lt;/p&gt;&lt;/form&gt; &lt;/html&gt;</pre>
</div>
<div title="BobsPluginsServer" creator="psd" modifier="colmbritton" created="201102111106" modified="201102161206" tags="systemServer">
<pre>|''URL:''|http://bob.mcelrath.org/plugins.html|
|''Description:''|Bob ~McElrath's Plugins|
|''Author:''|~BobMcElrath|</pre>
</div>
<div title="Body" modifier="SDM" created="201004120330" modified="201209221833" book_key="">
<pre>* as a possession to be used or controlled:  &lt;&lt;Bbl Rom 6:13 &gt;&gt;; &lt;&lt;Bbl 1Cor 9:27 &gt;&gt;; &lt;&lt;Bbl 2Cor 4:7 &gt;&gt;;
* David's band of young soldiers upon appealing to the priest.
* possibly &lt;&lt;Bbl 1Thes 4:4 &gt;&gt; (Vine's has arguments relating to [[Vessel]]).
* metaphor for the -:       &lt;&lt;Bbl 1Cor 11:29 &gt;&gt; (possibly ??), 12:12-27; &lt;&lt;Bbl Col 1:8 &gt;&gt;,&lt;&lt;Bbl Col 2:19 &gt;&gt;.
* [[Humor idea|./scott_wiki.htm#BodyMetaphor]]</pre>
</div>
<div title="Book" modifier="SDM" created="201010131723" modified="201211250401" book_key="">
<pre>!!! Book of [[Life]]
&lt;&lt;Bbl Ps 56:8 abbr &gt;&gt;, &lt;&lt;Bbl Mal 3:16 &gt;&gt;-18 , &lt;&lt;Bbl Ex 32:32 &gt;&gt;, &lt;&lt;Bbl Is 4:3 &gt;&gt;, &lt;&lt;Bbl Is 30:8 &gt;&gt;, &lt;&lt;Bbl Is 34:16 &gt;&gt; (ironic), &lt;&lt;Bbl Ez 13:9 &gt;&gt;, &lt;&lt;Bbl Dan 7:11 &gt;&gt;, &lt;&lt;Bbl Dan 12:1 &gt;&gt;, &lt;&lt;Bbl Ps 69:28 &gt;&gt;, &lt;&lt;Bbl Phi 4:3 &gt;&gt;, &lt;&lt;Bbl Lk 10:20 &gt;&gt;.
&lt;&lt;Bbl Rev 3:5 abbr &gt;&gt;, &lt;&lt;Bbl Rev 5:1 &gt;&gt;-10 , &lt;&lt;Bbl Rev 13:8 &gt;&gt;, &lt;&lt;Bbl Rev 20:12 &gt;&gt;.
//Scroll//, [[Scripture]], writings</pre>
</div>
<div title="Boundaries" modifier="SDM" created="201211181852" book_key="">
<pre>* //Do not cast your pearls out to swine//</pre>
</div>
<div title="BreadcrumbsPlugin" modifier="ELSDesignStudios" created="200601291821" tags="systemConfig excludeLists">
<pre>/***
|Name|BreadcrumbsPlugin|
|Author|Eric Shulman|
|Source|http://www.TiddlyTools.com/#BreadcrumbsPlugin|
|Documentation|http://www.TiddlyTools.com/#BreadcrumbsPluginInfo|
|Version|2.1.0|
|License|[[Creative Commons Attribution-ShareAlike 2.5 License|http://creativecommons.org/licenses/by-sa/2.5/]]|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides|Story.prototype.displayTiddler,TiddlyWiki.prototype.deleteTiddler|
|Options|##Configuration|
|Description|list/jump to tiddlers viewed during this session plus &quot;back&quot; button/macro|
This plugin provides a list of links to all tiddlers opened during the session, creating a &quot;trail of breadcrumbs&quot; from one tiddler to the next, allowing you to quickly navigate to any previously viewed tiddler, or select 'home' to reset the display to the initial set of tiddlers that were open at the start of the session (i.e., when the document was loaded into the browser).
!!!!!Documentation
&lt;&lt;&lt;
see [[BreadcrumbsPluginInfo]]
&lt;&lt;&lt;
!!!!!Configuration
&lt;&lt;&lt;
&lt;&lt;option chkCreateDefaultBreadcrumbs&gt;&gt; automatically create breadcrumbs display (if needed)
&lt;&lt;option chkShowBreadcrumbs&gt;&gt; show/hide breadcrumbs display
&lt;&lt;option chkReorderBreadcrumbs&gt;&gt; re-order breadcrumbs when visiting a previously viewed tiddler
&lt;&lt;option chkBreadcrumbsHideHomeLink&gt;&gt; omit 'Home' link from breadcrumbs display
&lt;&lt;option chkBreadcrumbsSave&gt;&gt; prompt to save breadcrumbs when 'Home' link is pressed
&lt;&lt;option chkShowStartupBreadcrumbs&gt;&gt; show breadcrumbs for 'startup' tiddlers
&lt;&lt;option chkBreadcrumbsReverse&gt;&gt; show breadcrumbs in reverse order (most recent first)
&lt;&lt;option chkBreadcrumbsLimit&gt;&gt; limit breadcrumbs display to {{twochar{&lt;&lt;option txtBreadcrumbsLimit&gt;&gt;}}} items
&lt;&lt;option chkBreadcrumbsLimitOpenTiddlers&gt;&gt; limit open tiddlers to {{twochar{&lt;&lt;option txtBreadcrumbsLimitOpenTiddlers&gt;&gt;}}} items

&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2009.03.22 [2.1.0] added 'save breadcrumbs to tiddler' feature
| Please see [[BreadcrumbsPluginInfo]] for previous revision details |
2006.02.01 [1.0.0] initial release
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.BreadcrumbsPlugin= {major: 2, minor: 1, revision: 0, date: new Date(&quot;March 2, 2009&quot;)};

var co=config.options; // abbreviation

// show/hide display option (default is to SHOW breadcrumbs)
if (co.chkShowBreadcrumbs===undefined) co.chkShowBreadcrumbs=true;

// REORDER breadcrumbs when visiting previously viewed tiddler (default)
if (co.chkReorderBreadcrumbs===undefined) co.chkReorderBreadcrumbs=true;

// create default breadcrumbs display as needed (default is to CREATE)
if (co.chkCreateDefaultBreadcrumbs===undefined) co.chkCreateDefaultBreadcrumbs=true;

// show breadcrumbs for 'startup' tiddlers (default is FALSE = only show crumbs for tiddlers opened after startup)
if (co.chkShowStartupBreadcrumbs===undefined) co.chkShowStartupBreadcrumbs=false;

// show crumbs in reverse order (most recent first)
if (co.chkBreadcrumbsReverse===undefined) co.chkBreadcrumbsReverse=false;

// limit number of crumbs displayed
if (co.chkBreadcrumbsLimit===undefined) co.chkBreadcrumbsLimit=false;
if (co.txtBreadcrumbsLimit===undefined) co.txtBreadcrumbsLimit=5;

// limit number of open tiddlers
if (co.chkBreadcrumbsLimitOpenTiddlers===undefined) co.chkBreadcrumbsLimitOpenTiddlers=false;
if (co.txtBreadcrumbsLimitOpenTiddlers===undefined) co.txtBreadcrumbsLimitOpenTiddlers=3;

// omit home link from breadcrumbs display
if (co.chkBreadcrumbsHideHomeLink===undefined) co.chkBreadcrumbsHideHomeLink=false;

// prompt for 'save crumbs' when 'home' button is pressed
if (co.chkBreadcrumbsSave===undefined) co.chkBreadcrumbsSave=false;

config.macros.breadcrumbs =  {
    crumbs: [], // the list of current breadcrumbs
    askMsg: &quot;Save current breadcrumbs before clearing?\nPress OK to save, or CANCEL to continue without saving.&quot;,
    saveMsg: 'Enter the name of a tiddler in which to save the current breadcrumbs',
    saveTitle: 'SavedBreadcrumbs',
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var area=createTiddlyElement(place,&quot;span&quot;,null,&quot;breadCrumbs&quot;,null);
        area.setAttribute(&quot;homeSep&quot;,params[0]?params[0]:this.homeSeparator); // custom home separator
        area.setAttribute(&quot;crumbSep&quot;,params[1]?params[1]:this.crumbSeparator); // custom crumb separator
        this.render(area);
    },
    add: function (title) {
        var thisCrumb = title;
        var ind = this.crumbs.indexOf(thisCrumb);
        if(ind === -1)
            this.crumbs.push(thisCrumb);
        else if (config.options.chkReorderBreadcrumbs)
            this.crumbs.push(this.crumbs.splice(ind,1)[0]); // reorder crumbs
        else
            this.crumbs=this.crumbs.slice(0,ind+1); // trim crumbs
        if (config.options.chkBreadcrumbsLimitOpenTiddlers)
            this.limitOpenTiddlers();
        this.refresh();
        return false;
    },
    getAreas: function() {
        var crumbAreas=[];
        // find all DIVs with classname==&quot;breadCrumbs&quot;
        // Note: use try/catch to avoid &quot;Bad NPObject as private data&quot; fatal error  caused when
        // some versions of embedded QuickTime player element is accessed by hasClass() function.
        var all=document.getElementsByTagName(&quot;*&quot;);
        for (var i=0; i&lt;all.length; i++)
            try{ if (hasClass(all[i],&quot;breadCrumbs&quot;)) crumbAreas.push(all[i]); } catch(e) {;}
        // find single DIV w/fixed ID (backward compatibility)
        var byID=document.getElementById(&quot;breadCrumbs&quot;)
        if (byID &amp;&amp; !hasClass(byID,&quot;breadCrumbs&quot;)) crumbAreas.push(byID);
        if (!crumbAreas.length &amp;&amp; config.options.chkCreateDefaultBreadcrumbs) {
            // no existing crumbs display areas... create one...
            var defaultArea = createTiddlyElement(null,&quot;span&quot;,null,&quot;breadCrumbs&quot;,null);
            defaultArea.style.display= &quot;none&quot;;
            var targetArea= document.getElementById(&quot;tiddlerDisplay&quot;);
            targetArea.parentNode.insertBefore(defaultArea,targetArea);
            crumbAreas.push(defaultArea);
        }
        return crumbAreas;
    },
    refresh: function() {
        var crumbAreas=this.getAreas();
        for (var i=0; i&lt;crumbAreas.length; i++) {
            crumbAreas[i].style.display = config.options.chkShowBreadcrumbs?&quot;block&quot;:&quot;none&quot;;
            removeChildren(crumbAreas[i]);
            this.render(crumbAreas[i]);
        }
    },
    render: function(here) {
        var co=config.options; var out=&quot;&quot;
        var homeSep=here.getAttribute(&quot;homeSep&quot;); if (!homeSep) homeSep=this.homeSeparator;
        var crumbSep=here.getAttribute(&quot;crumbSep&quot;); if (!crumbSep) crumbSep=this.crumbSeparator;
        if (!co.chkBreadcrumbsHideHomeLink) {
            createTiddlyButton(here,&quot;Home&quot;,null,this.home,&quot;tiddlyLink tiddlyLinkExisting&quot;);
            out+=homeSep;
        }
        for (c=0; c&lt;this.crumbs.length; c++) // remove non-existing tiddlers from crumbs
            if (!store.tiddlerExists(this.crumbs[c]) &amp;&amp; !store.isShadowTiddler(this.crumbs[c]))
                this.crumbs.splice(c,1);
        var count=this.crumbs.length;
        if (co.chkBreadcrumbsLimit &amp;&amp; co.txtBreadcrumbsLimit&lt;count) count=co.txtBreadcrumbsLimit;
        var list=[];
        for (c=this.crumbs.length-count; c&lt;this.crumbs.length; c++) list.push('[['+this.crumbs[c]+']]');
        if (co.chkBreadcrumbsReverse) list.reverse();
        out+=list.join(crumbSep);
        wikify(out,here);
    },
    home: function() {
        var cmb=config.macros.breadcrumbs;
        if (config.options.chkBreadcrumbsSave &amp;&amp; confirm(cmb.askMsg)) cmb.saveCrumbs();
        story.closeAllTiddlers(); restart();
        cmb.crumbs = []; var crumbAreas=cmb.getAreas();
        for (var i=0; i&lt;crumbAreas.length; i++) crumbAreas[i].style.display = &quot;none&quot;;
        return false;
    },
    saveCrumbs: function() {
        var tid=prompt(this.saveMsg,this.saveTitle); if (!tid||!tid.length) return; // cancelled by user
        var t=store.getTiddler(tid);
        if(t &amp;&amp; !confirm(config.messages.overwriteWarning.format([tid]))) return;
        var who=config.options.txtUserName;
        var when=new Date();
        var text='[['+this.crumbs.join(']]\n[[')+']]';
        var tags=t?t.tags:[]; tags.pushUnique('story');
        var fields=t?t.fields:{};
        store.saveTiddler(tid,tid,text,who,when,tags,fields);
        story.displayTiddler(null,tid);
        story.refreshTiddler(tid,null,true);
        displayMessage(tid+' has been '+(t?'updated':'created'));
    },
    limitOpenTiddlers: function() {
        var limit=config.options.txtBreadcrumbsLimitOpenTiddlers; if (limit&lt;1) limit=1;
        for (c=this.crumbs.length-1; c&gt;=0; c--) {
            var tid=this.crumbs[c];
            var elem=document.getElementById(story.idPrefix+tid);
            if (elem) { // tiddler is displayed
                if (limit &lt;=0) { // display limit has been reached
                    if (elem.getAttribute(&quot;dirty&quot;)==&quot;true&quot;) { // tiddler is being edited
                        var msg=&quot;'&quot;+tid+&quot;' is currently being edited.\n\n&quot;;
                        msg+=&quot;Press OK to save and close this tiddler\nor press Cancel to leave it opened&quot;;
                        if (confirm(msg)) { story.saveTiddler(tid); story.closeTiddler(tid); }
                    }
                    else
                        story.closeTiddler(this.crumbs[c]);
                }
                limit--;
            }
        }
    }
};
if (config.macros.breadcrumbs.homeSeparator==undefined) // note: not a cookie
    config.macros.breadcrumbs.homeSeparator=&quot; | &quot;;
if (config.macros.breadcrumbs.crumbSeparator==undefined)  // note: not a cookie
    config.macros.breadcrumbs.crumbSeparator=&quot; &gt; &quot;;

config.commands.previousTiddler = {
    text: 'back',
    tooltip: 'view the previous tiddler',
    hideReadOnly: false,
    dateFormat: 'DDD, MMM DDth YYYY hh:0mm:0ss',
    handler: function(event,src,title) {
        var here=story.findContainingTiddler(src); if (!here) return;
        var crumbs=config.macros.breadcrumbs.crumbs;
        if (crumbs.length&gt;1) {
            var crumb=crumbs[crumbs.length-2];
            story.displayTiddler(here,crumb);
        }
        else
            config.macros.breadcrumbs.home();
        return false;
    }
};

config.macros.previousTiddler= {
    label: 'back',
    prompt: 'view the previous tiddler',
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var label=params.shift(); if (!label) label=this.label;
        var prompt=params.shift(); if (!prompt) prompt=this.prompt;
        createTiddlyButton(place,label,prompt,function() {
            var crumbs=config.macros.breadcrumbs.crumbs;
            if (crumbs.length&gt;1) {
                var crumb=crumbs[crumbs.length-2];
                story.displayTiddler(place,crumb);
            }
            else
                config.macros.breadcrumbs.home();
        });
    }
}

// hijack story.displayTiddler() so crumbs can be refreshed when a tiddler is displayed
if (Story.prototype.breadCrumbs_coreDisplayTiddler==undefined)
    Story.prototype.breadCrumbs_coreDisplayTiddler=Story.prototype.displayTiddler;
Story.prototype.displayTiddler = function(srcElement,tiddler,template,animate,slowly)
{
    var title=(tiddler instanceof Tiddler)?tiddler.title:tiddler;
    this.breadCrumbs_coreDisplayTiddler.apply(this,arguments);
    // if not displaying tiddler during document startup, then add it to the breadcrumbs
    // note: 'startingUp' flag is a global, set/reset by the core init() function
    if (!startingUp || config.options.chkShowStartupBreadcrumbs) config.macros.breadcrumbs.add(title);
}

// hijack store.removeTiddler() so crumbs can be refreshed when a tiddler is deleted
if (TiddlyWiki.prototype.breadCrumbs_coreRemoveTiddler==undefined)
    TiddlyWiki.prototype.breadCrumbs_coreRemoveTiddler=TiddlyWiki.prototype.removeTiddler;
TiddlyWiki.prototype.removeTiddler= function(title)
{
    this.breadCrumbs_coreRemoveTiddler.apply(this,arguments);
    config.macros.breadcrumbs.refresh();
}
//}}}</pre>
</div>
<div title="Broken" modifier="SDM" created="201004120330" modified="201210091517" book_key="">
<pre>* [[Need]], [[Lowliness]], [[Sin]], [[Depravity]]
* [[Freedom]]
* [[Attitude]]
* //crush, press//
* [[Vessel]] Something powerful is released.
* &lt;&lt;Bbl Jud 7:19 &gt;&gt; -- Joshua's army broke the clay pitchers  --  the torches, hidden inside, shined out.
* Jerusalem's walls //broken// and //burned with fire//
* &lt;&lt;Bbl Mt 15:34 &gt;&gt;-37 .  Why didn't he just make it become a lot of little loaves?  But he broke it, and kept breaking it.  Then they picked up the //broken pieces// (vs. 37).
* &lt;&lt;Bbl Mk 14:3 &gt;&gt;-9  The woman brought in perfume, but in order to put it on the feet the Jesus she had to break the alabaster vial.
* Jesus knew that in order for Him to be shared He would have to be broken.  [[LordsSupper]]
* &lt;&lt;Bbl Lk 24:25 &gt;&gt;-35 , especially vs. 35.
* In the garden, sin was isolated.  Now sin is normative. (Todd Tipton)
* @@color:indigo;Our life is full of brokenness -- broken relationships, broken promises, broken expectations. How can we live with that brokenness without becoming bitter and resentful except by returning again and again to God's faithful presence in our lives.@@ // -- Henri Nouwen//
* @@color:brown; My faithful request and admonition is that you join our company and associate with us, who are real, great, and hard-boiled sinners. You must by no means make Christ to seem paltry and trifling to us, as though He could be our Helper only when we want to be rid from imaginary, nominal, and childish sins. No, no! That would not be good for us.  He must rather be a Savior and Redeemer from real, great, grievous and damnable transgressions and iniquities, yes, from the very greatest and most shocking sins  --  to be brief, from all sins added together in a grand total.  You want to be a superficial sinner and, accordingly, expect to have in Christ a superficial Savior. You will have to get used to the belief that Christ is a real Savior and you are a real sinner. For God is neither jesting nor dealing in imaginary affairs, but He was greatly and most assuredly in earnest when He sent His own Son into the world and sacrificed Him for our sakes.@@ // -- Martin Luther, in a letter to Spalatin //</pre>
</div>
<div title="Brother" modifier="SDM" created="201012140339" modified="201112032033" book_key="">
<pre>* Brother with Christ -- &lt;&lt;Bbl Heb 2:11 &gt;&gt;-12 , &lt;&lt;Bbl Jn 20:17 &gt;&gt;, &lt;&lt;Bbl Rom 8:29 &gt;&gt;; &lt;&lt;Bbl Mt 12:49 &gt;&gt;-50 =&lt;&lt;Bbl Lk 8:19 &gt;&gt;-21 .
* [[Family]]</pre>
</div>
<div title="Browsers" creator="psd" modifier="jermolene" created="201102111106" modified="201203071602" tags="features">
<pre>Here is a table of web browsers that work with ~TiddlyWiki:

|!Browser |!Version |!Allows changes to be saved locally?|
|InternetExplorer |6.0+ |Yes |
|FireFox |1.0+ |Yes |
|[[Safari]] |1.0+ |Yes, using TiddlySaver plugin|
|[[Opera]] |? |Yes, using TiddlySaver plugin|
|Netscape Navigator |7.0+ |Yes |
|[[Camino]] |1.0+ |Yes |
|[[Chrome]] |All |Yes, using TiddlySaver plugin|
|[[iPhone]] |All |Yes. See [[iTW|http://www.apple.com/webapps/productivity/itwatiddlywikiforiphone.html]]|
|[[Wii]] |All |No |
|[[luakit]] |All |Yes |

See also the [[TiddlyWiki apps available for smartphones|MobileDevices]].



Please [[let us know|http://groups.google.com/group/TiddlyWiki]] of any additions or corrections.</pre>
</div>
<div title="Building" modifier="SDM" created="201211250303" tags="story">
<pre>[[House]]
[[Foundation]]
[[Door]]
[[Gate]]
[[Security]]
[[Tent]]
[[Tabernacle]]
[[Tower]]
[[BuildingUp]]
[[Individual]]</pre>
</div>
<div title="BuildingUp" modifier="SDM" created="201011011616" modified="201210211950" tags="House" book_key="">
<pre>* [[House]]
* &lt;&lt;Bbl Pr 27:17 &gt;&gt; -- //edification, encouragement//
* &lt;&lt;Bbl 1Cor 15:33 &gt;&gt; -- the negative opposite
* &lt;&lt;Bbl 1Pt 2:4&gt;&gt;-5 -- As you come to him, the living Stone -- rejected by men but chosen by God and precious to him -- you also, like living stones, are being built into a spiritual house to be a holy priesthood, offering spiritual sacrifices acceptable to God through Jesus Christ.
* //companionship//
* Instructions to Timothy
* Is  //the Lord God has given me the tongue of a disciple ... encourage the weary one with a word.//</pre>
</div>
<div title="Burden" modifier="SDM" created="201211211716" modified="201211230235" book_key="">
<pre>* &lt;&lt;Bbl Mt 11:18 &gt;&gt;
* &lt;&lt;Bbl Gal 1:1 &quot;&quot; note&gt;&gt;, &lt;&lt;Bbl Gal 3:13 &quot;&quot; note&gt;&gt;</pre>
</div>
<div title="ButtonMenu" modifier="SDM" created="201211291815" modified="201211301408" tags="macro excludeLists" book_key="">
<pre>&lt;&lt;top&gt;&gt; &lt;&lt;closeAll&gt;&gt;&lt;&lt;renameButton c 'Close all tiddlers'&gt;&gt; &lt;&lt;toggleSideBar '' '' hide&gt;&gt;&lt;&lt;renameButton '&gt;' &gt;&gt;  &lt;&lt;jump j '' top&gt;&gt; &lt;&lt;saveChanges&gt;&gt;&lt;&lt;renameButton s 'Save TiddlyWiki'&gt;&gt; {{button{[[B|Bible-Index]]}}} &lt;&lt;newTiddler&gt;&gt;&lt;&lt;renameButton n&gt;&gt;</pre>
</div>
<div title="CSS Formatting" creator="matt" modifier="jermolene" created="201102111426" modified="201111031822" tags="formatting">
<pre>!!Inline Styles
Apply CSS properties inline:
{{{
@@color:#4bbbbb;Some random text@@
}}}
Displays as:
@@color:#4bbbbb;Some random text@@
!!CSS classes
CSS classes can be applied to text blocks or runs. This form creates an HTML {{{&lt;span&gt;}}}:
{{{
{{customClassName{Some random text}}}
}}}
Displays as:
{{customClassName{Some random text}}}
This form generates an HTML {{{&lt;div&gt;}}}:
{{{
 {{customClassName{
 Some random text
 }}}
}}}
Displays as:
{{customClassName{
Some random text
}}}
</pre>
</div>
<div title="CamelCase" creator="matt" modifier="matt" created="201102211414" modified="201102211414">
<pre>CamelCase (camel case or camel-case)—also known as medial capitals—is the practice of writing compound words or phrases in which the elements are joined without spaces.</pre>
</div>
<div title="Camino" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="browsers">
<pre>The Mozilla-based [[Camino browser|http://www.caminobrowser.org/]] on Macintosh OS X works well with TiddlyWiki, including the ability to SaveChanges.</pre>
</div>
<div title="CancelTiddlerCommand" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="commands">
<pre>Abandons any pending edits to the current tiddler, and switches it the default view. It is used with the ToolbarMacro like this:
{{{
&lt;&lt;toolbar cancelTiddler&gt;&gt;
}}}</pre>
</div>
<div title="Celibacy" modifier="SDM" created="201004120330" modified="201211180029" book_key="">
<pre>&lt;&lt;Bbl Is 56:3 &gt;&gt;-8 ; &lt;&lt;Bbl Mt 19:11 &gt;&gt;-12 ; &lt;&lt;Bbl 1Cor 7:7 &gt;&gt;-35 ; &lt;&lt;Bbl Rev 14:1 &gt;&gt;</pre>
</div>
<div title="CharacterEncoding" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="troubleshooting">
<pre>When you upload a TiddlyWiki to a web server, if doesn't load properly, it may be a CharacterEncoding issue.

TiddlyWiki uses Unicode ~UTF-8 encoding and won't load properly if your host is serving it as ~ISO-8859-1. You should be able to check this by loading another page on the server in FireFox and selecting 'Page Info' on the 'Tools' menu.

If this is the case, it should be reasonably easy to sort out. We recommend that you contact your server host and ask them to serve it in ~UTF-8 mode. If you are more technically hands-on, you may be able to [[solve the issue yourself|http://www.w3.org/International/questions/qa-htaccess-charset]].</pre>
</div>
<div title="Chiasmus" modifier="SDM" created="201012132254" modified="201212181516" book_key="">
<pre>* Chiasmus is concentric parallelism whereby an author shapes his literary work in order to accentuate the main idea or theme he wishes to convey to his readers.
* Chiasmus involves two elements: inversion and balance.  These produce a third: climactic centrality.
* This exegesis is known generally as //form criticism.//
* Notable in Semitic Hebrew; but plenty to see the NT as well.
** [[source 1|http://www.inthebeginning.org/chiasmus/xfiles.htm]]
** [[source 2|http://www.wonderful1.com/Chiasms_in_the_Bible.html]]
!! Instances
* Job.  The whirlwind at the end parallels the catastrophes at the beginning.
* [[Eccl]] -- &lt;&lt;Bbl Eccl 11:3 &gt;&gt;-12:2b
* Genesis 17:1-25
* Opening section of [[Genesis-22-01-note]]
* Closing section of Romans -- [[Romans-12-01-note]]
* Gn 6:10 to 9:19 -- God remembered Noah (8:1)
* 2 Kings 2:2-25 -  -- and Elijah went up by a whirlwind into heaven.
* [[Psalms-023-01-note]]
* [[Psalms-074-01-note]]
* Hosea 1:9-2:23 --  -- But Me she forgot, --  says the LORD.
* 2 Chronicles 1:1 to 9:31 - --  the Life of Solomon, King of Israel.
* Joel tells me to look for an inverted parallelism John 1 to 5, 5 to 1, with other parallelisms embedded.  I'll find it in the Greek verbs, the &quot;was's&quot;. *
* [[John-02-01-note]]
!! Instances outside of the Bible
** My [[post|http://themanthursday.com/in-which-billy-collins-diminishes-his-rival-poet/]] on Billy Collins
* [[Parallelism]], //chiasm//</pre>
</div>
<div title="Christ" modifier="SDM" created="201010071849" modified="201212231919" tags="my_life" book_key="">
<pre>* [[Christ-DualNature]]
!!! The offices of Christ
* [[Prophet|Prophecy]]
* [[Priest]]
* [[King]]
* [[Savior|Salvation-Savior]]
* [[Son|Father-Son]]
!!! Other topics
* [[Hope]]</pre>
</div>
<div title="Christ-DualNature" modifier="SDM" created="201212231850" modified="201301141609" book_key="">
<pre>{|
| [[God]]
| [[Man]]
|-
| [[Sovereignty]]
| [[Identification]]
|-
| [[Glory]]
| [[Humility]]
|-
| [[Strength]], [[Power]]
| [[Weakness]]
|-
| [[Holiness]]&lt;br&gt; [[Righteousness]]
| Likeness of&lt;br&gt;[[Sin]]ful flesh
|-
| [[Life]]
| [[Death]]
|-
| [[King]]
| [[Servant]]
|-
| [[Wealth]]
| [[Poverty]]
|-
|colspan=&quot;2&quot;| [[Manifest ... Hidden|Invisible-Visible]]
|}

! [[God]]
* &lt;&lt;Bbl Jn 1:1 &gt;&gt;-3, &lt;&lt;Bbl Jn 1:14 &gt;&gt;, &lt;&lt;Bbl 1Jn 4:2 &gt;&gt;, &lt;&lt;Bbl 1Pt 1:20 &gt;&gt;
* &lt;&lt;Bbl Jn 10:30 &quot;&quot; note &gt;&gt;
* &lt;&lt;Bbl Acts 20:28&gt;&gt; -- the blood of God
* &lt;&lt;Bbl Col 1:17&gt;&gt;-20
* &lt;&lt;Bbl 1Cor 8:6 &gt;&gt;
* &lt;&lt;Bbl 2Cor 5:19&gt;&gt;
* &lt;&lt;Bbl 1Tim 3:16&gt;&gt;
! [[Man]]
* &lt;&lt;Bbl Jn 17:4 &gt;&gt;
* &lt;&lt;Bbl Mk 7:24 &gt;&gt;    //He couldn't escape notice// - well, we know from elsewhere that He ''could''.

!!! Puzzles
* &lt;&lt;Bbl Mt 4:11 &gt;&gt;  //And angels came and ministered to Him// -- mysterious.
* &lt;&lt;Bbl Lk 22:33 &quot;&quot; note &gt;&gt; to see another angel at work.
----
* [[Redemption]] rests upon his Nature, God and man.
* [[Sovereignty]]
!!! Kenosis
* &lt;&lt;Bbl Php 2:7 &gt;&gt; -- @@color:darkgreen;Neither Christ's divinity, nor His Divine attributes, nor the use of those attributes, nor His glory, was in any way emptied.  Rather, these were concealed under a veil of flesh. @@// -- Dan Musick //
* //Emptied// is vastly different from //concealed.//  If I'm going down to San Antonio for the day, would I rather leave home with my wallet emptied, or concealed?
* @@color:indigo;In order to exhort us to submission by His example, he shows, that when as God he might have displayed to the world the brightness of His glory, he gave up His right, and voluntarily emptied Himself; that he assumed the form of a servant, and, contented with that humble condition, suffered His divinity to be concealed under a veil of flesh.@@ // -- John Calvin //
*  @@color:navy;Veiled in flesh the Godhead see.  Hail, th' incarnate Diety!
* Dave Davidson was trying to wrap our heads around the correct doctrine.  But that was 1984, and it is perhaps the case that he hadn't wrapped his own head around it.
!!! Distortions of //Kenosis//
* Bill Johnson, Charisma Magazine, 2012:  //While Jesus is eternally God, He emptied Himself of His divinity and became a man (see Php. 2:7).  It's vital to note that He did all His miracles as a man, not as God.  If He did them as God, I would still be impressed.  But because He did them as a man yielded to God, I am not unsatisfied with my life, being compelled to follow the example He has given us. Jesus is the only model for us to follow.  //  Melisa's protest of this statement caused me to understand the truth, really for the first time.
* Other common formulations:
** //stripped himself of his divinity//
** //left his place in heaven to become an ordinary man//
* More [[here|http://kenosis.info/index.shtml#KenoticTheology]].</pre>
</div>
<div title="Chrome" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="browsers issues">
<pre>~TiddlyWiki works well in Google Chrome and Chromium using [[TiddlySaver]].
However, due to Chrome's [[lack of Java support on Mac OS and Linux|http://groups.google.com/group/tiddlywiki/browse_thread/thread/1f0e299198573e89]], it currently cannot save on those platforms.</pre>
</div>
<div title="Church" modifier="SDM" created="201211190407" modified="201211201320" book_key="">
<pre>&lt;&lt;Bbl Mt 16:18 &gt;&gt;; &lt;&lt;Bbl 1Cor 12:28 &gt;&gt;; &lt;&lt;Bbl Eph 4:4 &gt;&gt;-6; 5:25; &lt;&lt;Bbl Heb 12:28 &gt;&gt;

* comprised of all who are in Christ
&lt;&lt;Bbl Ps 103:12&gt;&gt;; &lt;&lt;Bbl Is 44:22 &gt;&gt;; &lt;&lt;Bbl Jn 3:16 &gt;&gt;; &lt;&lt;Bbl Acts 16:31 &gt;&gt;; &lt;&lt;Bbl Rom 3:20 &gt;&gt;-28; 4:3; 5:1, 21; 8:1, 30, 33-34; 10:4, 9; &lt;&lt;Bbl 2Cor 5:21 &gt;&gt;; &lt;&lt;Bbl Gal 2:16 &gt;&gt;; &lt;&lt;Bbl Eph 2:8 &gt;&gt;-9; &lt;&lt;Bbl Phil 3:9 &gt;&gt;; &lt;&lt;Bbl Tit 3:7 &gt;&gt;; &lt;&lt;Bbl Heb 10:14&gt;&gt;

* Christ the Head.
&lt;&lt;Bbl Eph 1:22 &gt;&gt;-23; 4:15-16; &lt;&lt;Bbl Col 1:18 &gt;&gt;; 2:19


* Manifest in local [[churches|Church-Local]]</pre>
</div>
<div title="Church-Local" modifier="SDM" created="201012132242" modified="201211190407" book_key="">
<pre>* sodality/modality
* [[Body]], [[House]], [[Marriage]], [[Family]], [[Fellowship]]
* [[Discipline-Church]]
* [[Leader]]
* Comparing the dysfunctional church to a retirement home where you can only remain in residence as long as you aren't too frail, sick or depressed.  (Arterburn?)
* &lt;&lt;Bbl Acts 9:31 &gt;&gt;; 20:28-30; &lt;&lt;Bbl Rom 16:5 &gt;&gt;; &lt;&lt;Bbl 1Cor 1:2 &gt;&gt;; 16:19; &lt;&lt;Bbl 2Cor 1:1 &gt;&gt;; &lt;&lt;Bbl 1Thes 1:1 &gt;&gt;; Philem. 1-2</pre>
</div>
<div title="Circumcision" modifier="SDM" created="201201201923" book_key="">
<pre>* When God gets a man's attention, he'll remember where his attention was got at.  </pre>
</div>
<div title="City" modifier="SDM" created="201210212019" book_key="">
<pre>* Urbanization forced in Egypt due to famine.
* Babel.
* Cain built a city.
* Lot and Zoar.
* Babylon.
!!! Righteous
* Jerusalem, and the New Jerusalem
* Ps 107 -- //He led them to a city.//</pre>
</div>
<div title="CloseOthersCommand" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="commands">
<pre>Closes all other open tiddlers, except for any that are being editted. It is used with the ToolbarMacro like this:
{{{
&lt;&lt;toolbar closeOthers&gt;&gt;
}}}</pre>
</div>
<div title="CloseTiddlerCommand" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="commands">
<pre>Closes the current tiddler, regardless of whether it is being editted. It is used with the ToolbarMacro like this:
{{{
&lt;&lt;toolbar closeTiddler&gt;&gt;
}}}</pre>
</div>
<div title="Closure" modifier="SDM" created="201208032024" modified="201209241550" book_key="">
<pre>* //Fulfillment, end of the ages, teleology, teleos//
* Gn 3.2 -- [[Rest]].</pre>
</div>
<div title="Clothing" modifier="SDM" created="201004120330" modified="201302121410" book_key="">
<pre>* Nakedness symbolizes man's pristine innocence, and [[Shame]] once this innocence was lost.  Clothing symbolizes his redeemed state.  We do not return to nudity, not even in Revelation; neither, apparently, are our eyes closed to the knowledge of [[GoodAndEvil]].
* &lt;&lt;Bbl Is 61:10 &gt;&gt;
* &lt;&lt;Bbl Rev 6:9 &gt;&gt;
* &lt;&lt;Bbl Zech 3:4 &gt;&gt;
* &lt;&lt;Bbl Lk 15:22 &gt;&gt;
* &lt;&lt;Bbl 2Cor 5:2 &gt;&gt;-4
* &lt;&lt;Bbl Gal 3:27 &gt;&gt;
* &lt;&lt;Bbl 1Pt 5:5 &gt;&gt;
* &lt;&lt;Bbl Rev 3:4 &gt;&gt;-5
* &lt;&lt;Bbl Rev 19:8 &gt;&gt;.
* David's emissaries; Isaiah's statements; wedding parables; &lt;&lt;Bbl Rev 3:18 &gt;&gt;, &lt;&lt;Bbl Rev 16:15 &gt;&gt;
* &lt;&lt;Bbl Rev 16:15 &gt;&gt;, &lt;&lt;Bbl Lv 18:6 &gt;&gt;ff
* Elijah's mantle
* Improper dress    &lt;&lt;Bbl Mt 22:11 &gt;&gt;
* [[Gender]]
* [[Footware]]
* The finest linen is known for revealing any slightest stain.  Herodotus noted four grades, the finest having 360 fibers per thread.
* [[Colors]]</pre>
</div>
<div title="Code Formatting" creator="matt" modifier="colmbritton" created="201102111426" modified="201102161148" tags="formatting">
<pre>Text such as computer code that should be displayed without wiki processing and preserving line breaks:
&amp;#123;&amp;#123;&amp;#123;
Some plain text including WikiLinks
&amp;#125;&amp;#125;&amp;#125;
Displays as:
{{{
Some plain text including WikiLinks
}}}
!See Also
[[Suppressing Formatting]]
</pre>
</div>
<div title="Col-01-01-note" modifier="SDM" created="201010310309" modified="201209241622" tags="Comment" book_key="201001a">
<pre>General Notes

Some themes:  Paul's conscious ministry to the world-wide Church; the mystery  of God's revelation; spiritual wisdom.

1:6 The Word bearing fruit in our hearts is microcosmic of its larger manifestations.
1:16-17 All things.
1:23    Not &quot;good clean living&quot;, but the hope of the gospel.

2:1 A world Christian.
2:12    Compare the baptism described in &lt;&lt;Bbl 1Cor 15:29 &gt;&gt;.
&lt;&lt;Bbl Col 2:15 abbr &gt;&gt; Cashiering
2:17    A picture of one thousand words.
2:22    &quot;It is not what goes into a man that defiles him.&quot;

3:1-2   Seek  the kingdom of &lt;&lt;Bbl Mt 6:19 &gt;&gt;-21 .  This verse sums up the preceding exhortation of 2:16-23  --  and should not be separated from them.
3:16    see &lt;&lt;Bbl Eph 5:19 &gt;&gt;
&lt;&lt;Bbl Col 3:17 abbr &gt;&gt; see &lt;&lt;Bbl Is 26:13 &gt;&gt;.  Word or deed   --  the former are covered in 3:18-25 - 4:1, the latter in 4:2-6.
3:20-21 Compare &lt;&lt;Bbl Eph 6:1 &gt;&gt;-4
3:22-24 Compare &lt;&lt;Bbl Eph 6:7 &gt;&gt;-8
&lt;&lt;Bbl Col 3:25 abbr &gt;&gt; The God who will not leave sin unpunished is described in &lt;&lt;Bbl Ex 20:7 &gt;&gt;.

&lt;&lt;Bbl Col 4:1 abbr &gt;&gt;  This may be the worst chapter division in the New Testament.
4:14-16 An interesting contrast.  </pre>
</div>
<div title="CollapseTiddlersPlugin" modifier="ELSDesignStudios" created="200601231504" tags="systemConfig excludeLists">
<pre>/***
|Name|CollapseTiddlersPlugin|
|Source|http://gensoft.revhost.net/Collapse.html|
|Version|2008.10.05|
|Author|Bradley Meck (modified by ELS)|
|License|unknown|
|~CoreVersion|2.1|
|Type|plugin|
|Requires|CollapsedTemplate|
|Overrides||
|Description|show/hide content of a tiddler while leaving tiddler title visible|

|ELS 10/5/2008: collapseAll() and expandAll(): added &quot;return false&quot; to button handlers to prevent IE page transition |
|ELS 3/6/2008: refactored code for size reduction, readability, and I18N/L10N-readiness.  Also added 'folded' flag to tiddler elements (for use by other plugins that need to know if tiddler is folded (e.g., [[SinglePageModePlugin]]) |
|ELS 10/11/2007: moved [[FoldFirst]] inline script and converted to {{{&lt;&lt;foldFirst&gt;&gt;}}} macro. |
|ELS 9/12/2007: suspend/resume SinglePageMode (SPM/TPM/BPM) when folding/unfolding tiddlers |
|ELS 6/5/2007: add &quot;return false&quot; at the end of each command handler to prevent IE 'page transition' problem. |
|ELS 3/30/2007: add a shadow definition for CollapsedTemplate.  Tweak ViewTemplate shadow so &quot;fold/unfold&quot; and &quot;focus&quot; toolbar items automatically appear when using default templates.  Remove error check for &quot;CollapsedTemplate&quot; existence, since shadow version will now always work as a fallback. |
|ELS 2/24/2006: added fallback to &quot;CollapsedTemplate&quot; if &quot;WebCollapsedTemplate&quot; is not found |
|ELS 2/6/2006: added check for 'readOnly' flag to use alternative &quot;WebCollapsedTemplate&quot; |

***/

//{{{
config.shadowTiddlers.CollapsedTemplate=
    &quot;&lt;!--{{{--&gt;\
    &lt;div class='toolbar' macro='toolbar expandTiddler collapseOthers closeTiddler closeOthers +editTiddler permalink references jump'&gt;&lt;/div&gt;\
    &lt;div class='title' macro='view title'&gt;&lt;/div&gt;\
    &lt;!--}}}--&gt;&quot;;

// automatically tweak shadow ViewTemplate to add &quot;collapseTiddler collapseOthers&quot; commands
config.shadowTiddlers.ViewTemplate=config.shadowTiddlers.ViewTemplate.replace(/closeTiddler/,&quot;collapseTiddler collapseOthers closeTiddler&quot;);

config.commands.collapseTiddler = {
    text: &quot;fold&quot;,
    tooltip: &quot;Collapse this tiddler&quot;,
    collapsedTemplate: &quot;CollapsedTemplate&quot;,
    webCollapsedTemplate: &quot;WebCollapsedTemplate&quot;,
    handler: function(event,src,title) {
        var e = story.findContainingTiddler(src); if (!e) return false;
        // don't fold tiddlers that are being edited!
        if(story.isDirty(e.getAttribute(&quot;tiddler&quot;))) return false;
        var t=config.commands.collapseTiddler.getCollapsedTemplate();
        config.commands.collapseTiddler.saveTemplate(e);
        config.commands.collapseTiddler.display(title,t);
        e.setAttribute(&quot;folded&quot;,&quot;true&quot;);
        return false;
    },
    getCollapsedTemplate: function() {
        if (readOnly&amp;&amp;store.tiddlerExists(this.webCollapsedTemplate))
            return this.webCollapsedTemplate;
        else
            return this.collapsedTemplate
    },
    saveTemplate: function(e) {
        if (e.getAttribute(&quot;savedTemplate&quot;)==undefined)
            e.setAttribute(&quot;savedTemplate&quot;,e.getAttribute(&quot;template&quot;));

    },
    // fold/unfold tiddler with suspend/resume of single/top/bottom-of-page mode
    display: function(title,t) {
        var opt=config.options;
        var saveSPM=opt.chkSinglePageMode; opt.chkSinglePageMode=false;
        var saveTPM=opt.chkTopOfPageMode; opt.chkTopOfPageMode=false;
        var saveBPM=opt.chkBottomOfPageMode; opt.chkBottomOfPageMode=false;
        story.displayTiddler(null,title,t);
        opt.chkBottomOfPageMode=saveBPM;
        opt.chkTopOfPageMode=saveTPM;
        opt.chkSinglePageMode=saveSPM;
    }
}

config.commands.expandTiddler = {
    text: &quot;unfold&quot;,
    tooltip: &quot;Expand this tiddler&quot;,
    handler: function(event,src,title) {
        var e = story.findContainingTiddler(src); if (!e) return false;
        var t = e.getAttribute(&quot;savedTemplate&quot;);
        config.commands.collapseTiddler.display(title,t);
        e.setAttribute(&quot;folded&quot;,&quot;false&quot;);
        return false;
    }
}

config.macros.collapseAll = {
    text: &quot;collapse all&quot;,
    tooltip: &quot;Collapse all tiddlers&quot;,
    handler: function(place,macroName,params,wikifier,paramString,tiddler){
        createTiddlyButton(place,this.text,this.tooltip,function(){
            story.forEachTiddler(function(title,tiddler){
                if(story.isDirty(title)) return;
                var t=config.commands.collapseTiddler.getCollapsedTemplate();


                config.commands.collapseTiddler.saveTemplate(tiddler);
                config.commands.collapseTiddler.display(title,t);
                tiddler.folded=true;
            });
            return false;
        })
    }
}

config.macros.expandAll = {
    text: &quot;expand all&quot;,
    tooltip: &quot;Expand all tiddlers&quot;,
    handler: function(place,macroName,params,wikifier,paramString,tiddler){
        createTiddlyButton(place,this.text,this.tooltip,function(){
            story.forEachTiddler(function(title,tiddler){
                var t=config.commands.collapseTiddler.getCollapsedTemplate();
                if(tiddler.getAttribute(&quot;template&quot;)!=t) return; // re-display only if collapsed
                var t=tiddler.getAttribute(&quot;savedTemplate&quot;);
                config.commands.collapseTiddler.display(title,t);
                tiddler.folded=false;
            });
            return false;
        })
    }
}

config.commands.collapseOthers = {
    text: &quot;focus&quot;,
    tooltip: &quot;Expand this tiddler and collapse all others&quot;,
    handler: function(event,src,title) {
        var e = story.findContainingTiddler(src); if (!e) return false;
        story.forEachTiddler(function(title,tiddler) {
            if(story.isDirty(title)) return;
            var t=config.commands.collapseTiddler.getCollapsedTemplate();
            if (e==tiddler) t=e.getAttribute(&quot;savedTemplate&quot;);
            config.commands.collapseTiddler.saveTemplate(tiddler);
            config.commands.collapseTiddler.display(title,t);
            tiddler.folded=(e!=tiddler);
        })
        return false;
    }
}

// {{{&lt;&lt;foldFirst&gt;&gt;}}} macro forces tiddler to be folded when *initially* displayed.
// Subsequent re-render does NOT re-fold tiddler, but closing/re-opening tiddler DOES cause it to fold first again.
config.macros.foldFirst = {
    handler: function(place,macroName,params,wikifier,paramString,tiddler){
        var e=story.findContainingTiddler(place);
        if (e.getAttribute(&quot;foldedFirst&quot;)==&quot;true&quot;) return; // already been folded once
        var title=e.getAttribute(&quot;tiddler&quot;)
        var t=config.commands.collapseTiddler.getCollapsedTemplate();
        config.commands.collapseTiddler.saveTemplate(e);
        config.commands.collapseTiddler.display(title,t);
        e.setAttribute(&quot;folded&quot;,&quot;true&quot;);
        e.setAttribute(&quot;foldedFirst&quot;,&quot;true&quot;); // only when tiddler is first rendered
        return false;
    }
}
//}}}</pre>
</div>
<div title="CollapsedTemplate" modifier="ELSDesignStudios" created="200601231511" tags="template excludeLists">
<pre>&lt;!--{{{--&gt;
&lt;div class='toolbar' macro='toolbar [[ToolbarCommands::CollapsedToolbar]]'&gt;&lt;/div&gt;
&lt;div class='title' macro='view title'&gt;&lt;/div&gt;
&lt;!--}}}--&gt;</pre>
</div>
<div title="ColorPalette" creator="jermolene" modifier="SDM" created="201211222355" modified="201301072155" tags="excludeLists" book_key="">
<pre>Name: MptwTeal
Background: #fff
Foreground: #000
PrimaryPale: #B5D1DF
PrimaryLight: #699
PrimaryMid: #366
PrimaryDark: #033
SecondaryPale: #ffc
SecondaryLight: #fe8
SecondaryMid: #db4
SecondaryDark: #841
TertiaryPale: #eee
TertiaryLight: #ccc
TertiaryMid: #999
TertiaryDark: #666
QuaternaryPale: #aef
QuaternaryLight: #8ad
QuaternaryMid: #38c
QuaternaryDark: #026
Error: #f88</pre>
</div>
<div title="ColorPalette shadows" creator="matt" modifier="matt" created="201102111436" modified="201102151510" tags="shadow">
<pre>This tiddler determines the colour scheme used within the TiddlyWiki.  When a new space is created the random color palette macro determines the default, however these can be overwritten directly in the ColorPalette tiddler.

{{{
Background: #e0e3f5
Foreground: #090d1e
PrimaryPale: #b9c2e8
PrimaryLight: #7485d2
PrimaryMid: #384fb1
PrimaryDark: #0c1126
SecondaryPale: #cbe8b9
SecondaryLight: #98d274
SecondaryMid: #67b138
SecondaryDark: #16260c
TertiaryPale: #e8bab9
TertiaryLight: #d27574
TertiaryMid: #b13a38
TertiaryDark: #260c0c
Error: #f88
ColorPaletteParameters: HSL([229|48], [0.5146822107288709],[0.1|0.8208696653333263])
}}}</pre>
</div>
<div title="ColorPalette-Reveal" modifier="SDM" created="201112082252" modified="201211230002" tags="stylesheet excludeLists" book_key="">
<pre>[[ColorPalette]]
&lt;&lt;paletteView [[ColorPalette]]&gt;&gt;

[[ColorPaletteBAK]]
&lt;&lt;paletteView [[ColorPaletteBAK]]&gt;&gt;</pre>
</div>
<div title="ColorPaletteBAK" modifier="SDM" created="201110201351" modified="201211230142" tags="excludeLists" book_key="">
<pre>Background: #fff
Foreground: #000
PrimaryPale: #aef
PrimaryLight: #8ad
PrimaryMid: #38c
PrimaryDark: #026
SecondaryPale: #ffc
SecondaryLight: #fe8
SecondaryMid: #db4
SecondaryDark: #841
TertiaryPale: #eee
TertiaryLight: #ccc
TertiaryMid: #999
TertiaryDark: #666
QuaternaryPale: #cf8
QuaternaryLight: #8f1
QuaternaryMid: #4b0
QuaternaryDark: #140
Error: #f88
</pre>
</div>
<div title="Colors" modifier="SDM" created="201208061459" modified="201211031806" book_key="">
<pre>* A collection of colors was precious.
** We find hard to imagine.
*** The tile-makers of Italy supposedly had a huge count of unique shades
*** Pantone color matching system (how many?)
*** LED colors (16 million)
* Gems; peacocks
* Fabrics, [[Clothing]]
** Joseph's coat
** Priestly robes (gems on breastplate)
** the Veil in the Temple
* Dust offers the plainest color</pre>
</div>
<div title="Comfort" modifier="SDM" created="201211211330" modified="201212011648" tags="story" book_key="">
<pre>* &lt;&lt;Bbl Rev 21:3&gt;&gt;
* Lewis refers to the &quot;old, strong meaning&quot; -- it's chicken soup, and we must include the deepest aspects.
* Mind map from Summer of 2002
* [[Provision]]
** [[Help]]
** [[Grace]]
* [[Hope]]
** [[Peace]]
** [[Encouragement]]
** [[Confidence]]
* [[BuildingUp]]
** [[Guidance]]
** [[SanctifiedProgressive]]
* [[SpiritOfChrist]]
** [[Power]]
** [[Strength]]
** [[Justice]]
* [[Host]]
** [[Marriage]]
** [[Identification]]!!! Limited
* 1 Samuel 1:8 Then said Elkanah her husband to her, Hannah, why weepest thou? and why eatest thou not? and why is thy heart grieved? am not I better to thee than ten sons?</pre>
</div>
<div title="CommentViewTemplate" modifier="SDM" created="201211092144" modified="201211222314" tags="template excludeLists" book_key="">
<pre>&lt;!--{{{--&gt;
&lt;div class='toolbar' macro='toolbar [[ToolbarCommands::ViewToolbar]]'&gt;&lt;/div&gt;
&lt;span class='title' macro='view title'&gt;&lt;/span&gt;
&lt;!-- &lt;div class='subtitle fine'&gt;
&lt;span macro='view modifier link'&gt;&lt;/span&gt;, &lt;span macro='view modified date'&gt;&lt;/span&gt; (&lt;span macro='message views.wikified.createdPrompt'&gt;&lt;/span&gt; &lt;span macro='view created date'&gt;&lt;/span&gt;)&lt;/div&gt; --&gt;
&lt;div class='subtitle fine'&gt;
&lt;!-- &lt;span macro='view modified date'&gt;&lt;/span&gt; --&gt; &lt;/div&gt;
&lt;div class='tagClear'&gt;&lt;/div&gt;
&lt;!--- &lt;div class='tagging' macro='tagging'&gt;&lt;/div&gt; //SDM --&gt;
&lt;div class='tagged' macro='tags'&gt;&lt;/div&gt;
&lt;div class='tagged'&gt;&lt;span&gt;&lt;span style='margin: 0px 10px;' macro=&quot;BblProx p&quot;&gt;&lt;/span&gt;&lt;span style='margin: 0px 10px;' macro=&quot;BblProx n&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class='viewer' macro='view text wikified'&gt;&lt;/div&gt;
&lt;div class='tagClear'&gt;&lt;/div&gt;
&lt;div class='toolbar' style='line-height:100%;margin-top:.5em;'&gt;&lt;a href=&quot;javascript:;&quot;
    onclick=&quot;window.scrollTo(0,ensureVisible(story.findContainingTiddler(this)));return false;&quot;
    onmouseover=&quot;this.title='scroll to top of '+story.findContainingTiddler(this).getAttribute('tiddler')&quot;&gt;&amp;#x25b2;&lt;/a&gt;
&lt;/div&gt;
&lt;div class='tagClear'&gt;&lt;/div&gt;
&lt;!--}}}--&gt;</pre>
</div>
<div title="Commitment" modifier="SDM" created="201211250631" modified="201302121412" tags="story" book_key="">
<pre>* &lt;&lt;Bbl Mt 13:46 &gt;&gt; -- a man who //bought a field//
* &lt;&lt;Bbl 1Pt 4:19 &gt;&gt;
[[Perseverance]]
[[Discipline]]
[[Waiting]]
[[Vigilence]]
[[SelfControl]]
[[Accountability]]
[[PersonalRelations]]
[[Jealousy]]
[[Zeal]]
[[Obedience]]
[[Faithfulness]]
[[Apostle]]
[[Covenant]]
[[Soldier]]
[[Servitude]]
[[Building]]</pre>
</div>
<div title="Community" creator="psd" modifier="jermolene" created="201102111106" modified="201301181410" tags="community help">
<pre>[&gt;img[tiddlywiki.org logo|http://trac.tiddlywiki.org/chrome/site/tworg_logo_med.jpg][http://www.tiddlywiki.org]]~TiddlyWiki today is the result of the efforts of dozens of people around the world generously contributing their time and skill, and offering considerable help and support.

The community has several hubs for different activities:
* The DiscussionForums on Google Groups
* The ~TiddlyWiki IRC room at irc://irc.freenode.net/TiddlyWiki
* TiddlyWiki code at http://github.com/TiddlyWiki/tiddlywiki
* TiddlyWiki issue tracker at https://github.com/TiddlyWiki/tiddlywiki/issues
* The community wiki at http://tiddlywiki.org/
* TiddlyWiki development resources at http://tiddlywiki.com/dev/

The community welcomes [[contributions|Contribute]].
</pre>
</div>
<div title="Compassion" modifier="SDM" created="201004120330" modified="201211250030" book_key="">
<pre>* Sympathy is merely the transference of emotion (Sam Cooksey); how does compassion transcend that?
* &lt;&lt;Bbl 2Sam 12:1 &quot;&quot; note &gt;&gt;-6; &lt;&lt;Bbl Pr 29:7 &gt;&gt;; &lt;&lt;Bbl Ez 34:2 &gt;&gt;-5 ; &lt;&lt;Bbl Mt 9:36 &gt;&gt;, &lt;&lt;Bbl Mt 14:13 &gt;&gt;-16 , &lt;&lt;Bbl Mt 15:32 &gt;&gt;, &lt;&lt;Bbl Mt 20:34 &gt;&gt;; &lt;&lt;Bbl Hos 11:8 &gt;&gt;-9  &lt;&lt;Bbl Is 55:6 &gt;&gt;-9
* [[Identification]]</pre>
</div>
<div title="Complacency" modifier="SDM" created="201211160314" book_key="">
<pre>Isaiah
Pro 32 -- the complacency of fools
Zeph 1:12
Ps 73:12</pre>
</div>
<div title="Compromise" modifier="SDM" created="201111280205" modified="201211080209" book_key="">
<pre>* &lt;&lt;Bbl Is 1:22 &gt;&gt;
* Lot
* Pilate
* Potiphar
* Herod //because of his guests//
* Darius //the laws of the Medes and the Persians//
* &lt;&lt;Bbl Pr 25:26 &gt;&gt; -- //A good man who gives way before the wicked//
* //Stolen bread is sweet// -- cognitive dissonance
* //lukewarm; syncretism//</pre>
</div>
<div title="Confession" modifier="SDM" created="201112050005" modified="201211162144" book_key="">
<pre>!! Of sin for [[Repentance]]
* @@color:darkgreen;The goal for those who come alongside an addict is not to be a priest-confessor.  The goal is to encourage the addict to keep walking in the light and to be alert to the deceptive ways we can be waylaid by Satan's influence.@@  //(E.T. Welch, __Addictions__ p. 188)//  This is important for people who feel the weekly check-in is somehow inimical to grace.
* [[Accountability]]
!! In general, kinds of confession
* [[Praise]]
* [[Worship]]
* [[Blasphemy]]
* [[Witness]]
* [[Proclamation]]
* {{anti{ [[Silence]] }</pre>
</div>
<div title="Confidence" modifier="SDM" created="201112070237" modified="201212050345" book_key="">
<pre>* &lt;&lt;Bbl Judges 13:23 &gt;&gt;
* &lt;&lt;Bbl 2Chron 30:18 &gt;&gt;ff -- Hezekiah's makeshift Passover
* Cited in the letter to the Hebrews
* [[Trust]]
* [[Faith]]</pre>
</div>
<div title="Configuration" creator="psd" modifier="jermolene" created="201102111106" modified="201110201351" tags="includeNew">
<pre>PageTemplate
|&gt;|&gt;|SiteTitle - SiteSubtitle|
|MainMenu|DefaultTiddlers&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;ViewTemplate&lt;br&gt;&lt;br&gt;EditTemplate|SideBarOptions|
|~|~|OptionsPanel|
|~|~|AdvancedOptions|
|~|~|&lt;&lt;tiddler Configuration.SideBarTabs&gt;&gt;|

''StyleSheet:'' StyleSheetColors - StyleSheetLayout - StyleSheetPrint

InterfaceOptions

SiteUrl

Extensive StartupParameters to control the startup beahviour of ~TiddlyWiki through specially crafted ~URLs
</pre>
</div>
<div title="Configuration.SideBarTabs" creator="psd" modifier="blaine" created="201102111106" modified="201102111310">
<pre>SideBarTabs
|[[Timeline|TabTimeline]]|[[All|TabAll]]|[[Tags|TabTags]]|&gt;|&gt;|[[More|TabMore]] |
|&gt;|&gt;||[[Missing|TabMoreMissing]]|[[Orphans|TabMoreOrphans]]|[[Shadowed|TabMoreShadowed]]|</pre>
</div>
<div title="Conflict" modifier="SDM" created="201011031912" modified="201209112036" book_key="">
<pre>Arguing, useless
* [[Dissension]] -- some material here should be moved.
&lt;&lt;Bbl Gn 45:24 abbr &gt;&gt;; &lt;&lt;Bbl 1Tim 6:20 &gt;&gt;-21 ; &lt;&lt;Bbl 2Tim 2:14 &gt;&gt;, &lt;&lt;Bbl 2Tim 2:15 &gt;&gt;-17 ; &lt;&lt;Bbl Titus 2:9 &gt;&gt;-11 .
Confrontation:
* &lt;&lt;Bbl Neh 13:8 &gt;&gt;; &lt;&lt;Bbl Ez 2:14 &gt;&gt;-15
* &lt;&lt;Bbl Lv 19:16 &gt;&gt;-18  -- 'Do not go about spreading slander among your people ... Do not hate your brother in your heart.  Rebuke your neighbor frankly so you will not share in his guilt.  Do not seek revenge or bear a grudge against one of your people, but love your neighbor as yourself.  I am the Lord.
* Greed and [[Coveting]] as source -- &lt;&lt;Bbl Lk 12:14 &gt;&gt;-15 , James
* [[Trial]]</pre>
</div>
<div title="Confusion" modifier="SDM" created="201004120330" modified="201211161404" book_key="">
<pre>* {{anti{[[Order]]}}}
* For the Christian, ignorance may be inevitable; confusion however must give way to peace.
* &lt;&lt;Bbl 1Cor 14:33 &gt;&gt;  //not a God of disorder//
*  ... //nor of [[Subversion]]//
* From God, to the Philistines: &lt;&lt;Bbl 1Sam 5:9 &gt;&gt;, &lt;&lt;Bbl 1Sam 7:10 &gt;&gt;, &lt;&lt;Bbl 1Sam 14:20 &gt;&gt; (or possibly to Saul ??)
* Babel
* The unclear trumpet</pre>
</div>
<div title="Connectedness" modifier="SDM" created="201011080325">
<pre>* &lt;&lt;Bbl Gn 2:7 &gt;&gt;  //formed//, the potter's term
* &lt;&lt;Bbl Col 2:19 &gt;&gt; //   --  connection with the Head, from whom the whole body, supported and held together by its ligaments and sinews, grows as God causes it to grow.//
* &lt;&lt;Bbl Col 1:17 &gt;&gt; // He is before all things, and in Him all things hold together. //
* &lt;&lt;Bbl Eph 4:15 &gt;&gt;-16  // From Him the whole body, joined and held together by every supporting ligament, grows and builds itself up in love, as each part does its work.//
* &lt;&lt;Bbl Ps 139:15 &gt;&gt; // My frame was not hidden from You when I was made in the secret place. When I was woven together in the depths of the earth, Your eyes saw my unformed body.  //
* &lt;&lt;Bbl Job 10:10 &gt;&gt;-11  // Did You not pour me out like milk and curdle me like cheese, clothe me with skin and flesh and knit me together with bones and sinews?  You gave me life and showed me kindness, and in Your providence watched over my spirit.//
* &lt;&lt;Bbl Heb 1:3 &gt;&gt; //sustaining all things by His powerful word.//</pre>
</div>
<div title="Contentment" modifier="SDM" created="201011272322" modified="201211161317" book_key="">
<pre>* {{anti{[[Coveting]], //discontent//}}}
* [[Attitude]]
* &lt;&lt;Bbl Pr 14:30 &gt;&gt;  The life of the body is a heart at peace, but envy rots the bones.
* &lt;&lt;Bbl Mt 6:25 &gt;&gt; applies to discontent as well as worry.
* [[Acceptance]]
19:23   The fear of the Lord leads to life: Then one rests content, untouched by trouble.

30:7-9  Two things I ask of you, O Lord; do not refuse me before I die:  Keep falsehood and lies far from me; give me neither poverty nor riches, but give me only my daily bread.  Otherwise, I may have too much and disown you and say, 'Who is the Lord?'  Or I may become poor and steal, and so dishonor the name of my God.

14:30   A heart at peace gives life to the body, but envy rots the bones.

23:17   Do not let your heart envy sinners, but always be zealous for the fear of the Lord.

25:16   If you find honey, eat just enough-- too much of it, and you will vomit.

23:20-21      Do not join those who drink too much wine or gorge themselves on meat, for drunkards and gluttons become poor, and drowsiness clothes them in rags.

23:4-5  Do not wear yourself out to get rich; have the wisdom to show restraint.  Cast but a glance at riches, and they are gone, for they will surely sprout wings and fly off to the sky like an eagle.

25:27   It is not good to eat too much honey, nor is it honorable to seek one's own honor.</pre>
</div>
<div title="ContentsSlider" creator="psd" modifier="blaine" created="201102111106" modified="201102111310">
<pre>@@margin-left:.5em;&lt;&lt;slider chkContents SideBarTabs &quot;contents »&quot; &quot;show
lists of tiddlers contained in this document&quot;&gt;&gt;@@</pre>
</div>
<div title="Contribute" creator="psd" modifier="blaine" created="201102111106" modified="201102111310">
<pre>~TiddlyWiki has an enthusiastic and friendly [[Community|Help and Support]] of people around the world helping to grow and improve it. But there's always more to do and we welcome any offers of assistance. There are many ways that you can help:
* Testing and [[reporting bugs|http://trac.tiddlywiki.org/wiki/ReportingBugs]] against the core code. Clear, easily reproducible bug reports are incredibly useful and really help the team improve the quality of ~TiddlyWiki
* [[Contributing code|http://trac.tiddlywiki.org/wiki/ContributingCode]]
* [[Making translations|http://trac.tiddlywiki.org/wiki/Translations]]
* Documentation needs planning, writing and editing, particularly user guide information at http://www.tiddlywiki.org
If you would like to make a financial contribution, ~TiddlyWiki is owned by the not-for-profit [[UnaMesa Foundation|http://www.unamesa.org/]] which welcomes donations.</pre>
</div>
<div title="CopyTiddlerPlugin" modifier="ELSDesignStudios" created="200601061656" tags="systemConfig excludeLists">
<pre>/***
|Name|CopyTiddlerPlugin|
|Source|http://www.TiddlyTools.com/#CopyTiddlerPlugin|
|Version|3.2.5|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.3|
|Type|plugin|
|Requires||
|Overrides||
|Description|Quickly create a copy of any existing tiddler|
!!!Usage
&lt;&lt;&lt;
The plugin automatically updates the default (shadow) ToolbarCommands definitions to insert the ''copyTiddler'' command, which will appear as ''copy'' when a tiddler is rendered.  If you are already using customized toolbar definitions, you will need to manually add the ''copyTiddler'' toolbar command to your existing ToolbarCommands tiddler, e.g.:
{{{
|EditToolbar|... copyTiddler ... |
}}}
When the ''copy'' command is selected, a new tiddler is created containing an exact copy of the current text/tags/fields, using a title of &quot;{{{TiddlerName (n)}}}&quot;, where ''(n)'' is the next available number (starting with 1, of course).  If you copy while //editing// a tiddler, the current values displayed in the editor are used (including any changes you may have already made to those values), and the new tiddler is immediately opened for editing.

The plugin also provides a macro that allows you to embed a ''copy'' command directly in specific tiddler content:
{{{
&lt;&lt;copyTiddler TidderName label:&quot;...&quot; prompt:&quot;...&quot;&gt;&gt;
}}}
where
* ''TiddlerName'' (optional)&lt;br&gt;specifies the //source// tiddler to be copied.  If omitted, the current containing tiddler (if any) will be copied.
* ''label:&quot;...&quot;'' (optional)&lt;br&gt;specifies text to use for the embedded link (default=&quot;copy TiddlerName&quot;)
* ''prompt:&quot;...&quot;'' (optional)&lt;br&gt;specifies mouseover 'tooltip' help text for link
//Note: to use non-default label/prompt values with the current containing tiddler, use &quot;&quot; for the TiddlerName//
&lt;&lt;&lt;
!!!Configuration
&lt;&lt;&lt;
&lt;&lt;option chkCopyTiddlerDate&gt;&gt; use date/time from existing tiddler (otherwise, use current date/time)
{{{&lt;&lt;option chkCopyTiddlerDate&gt;&gt;}}}
&lt;&lt;&lt;
!!!Revisions
&lt;&lt;&lt;
2009.06.08 [3.2.5] added option to use timestamp from source tiddler
2009.03.09 [3.2.4] fixed IE-specific syntax error
2009.03.02 [3.2.3] refactored code (again) to restore use of config.commands.copyTiddler.* custom settings
2009.02.13 [3.2.2] in click(), fix calls to displayTiddler() to use current tiddlerElem and use getTiddlerText() to permit copying of shadow tiddler content
2009.01.30 [3.2.1] fixed handling for copying field values when in edit mode
2009.01.23 [3.2.0] refactored code and added {{{&lt;&lt;copyTiddler TiddlerName&gt;&gt;}}} macro
2008.12.18 [3.1.4] corrected code for finding next (n) value when 'sparse' handling is in effect (thanks to RussThomas for identifying and diagnosing the problem)
2008.11.14 [3.1.3] added optional 'sparse' setting (avoids 'filling in' missing numbers that may have been previously deleted)
2008.11.14 [3.1.2] added optional 'zeroPad' setting
2008.11.14 [3.1.1] moved hard-coded '(n)' regex into 'suffixPattern' object property so it can be customized
2008.09.26 [3.1.0] changed new title generation to use '(n)' suffix instead of 'Copy of' prefix
2008.05.20 [3.0.3] in handler, when copying from VIEW mode, create duplicate array from existing tags array before saving new tiddler.
2007.12.19 [3.0.2] in handler, when copying from VIEW mode, duplicate custom fields before saving new tiddler. Thanks to bug report from Ken Girard.
2007.09.26 [3.0.1] in handler, use findContainingTiddler(src) to get tiddlerElem (and title).  Allows 'copy' command to find correct tiddler when transcluded using {{{&lt;&lt;tiddler&gt;&gt;}}} macro or enhanced toolbar inclusion (see [[CoreTweaks]])
2007.06.28 [3.0.0] complete re-write to handle custom fields and alternative view/edit templates
2007.05.17 [2.1.2] use store.getTiddlerText() to retrieve tiddler content, so that SHADOW tiddlers can be copied correctly when in VIEW mode
2007.04.01 [2.1.1] in copyTiddler.handler(), fix check for editor fields by ensuring that found field actually has edit=='text' attribute
2007.02.05 [2.1.0] in copyTiddler.handler(), if editor fields (textfield and/or tagsfield) can't be found (i.e., tiddler is in VIEW mode, not EDIT mode), then get text/tags values from stored tiddler instead of active editor fields.  Allows use of COPY toolbar directly from VIEW mode (based on a request from LaurentCharles)
2006.12.12 [2.0.0] completely rewritten so plugin just creates a new tiddler EDITOR with a copy of the current tiddler EDITOR contents, instead of creating the new tiddler in the STORE by copying the current tiddler values from the STORE.
2005.xx.xx [1.0.0] original version by Tim Morgan
&lt;&lt;&lt;
!!!Code
***/
//{{{
version.extensions.CopyTiddlerPlugin= {major: 3, minor: 2, revision: 5, date: new Date(2009,6,8)};

// automatically tweak shadow EditTemplate to add 'copyTiddler' toolbar command (following 'cancelTiddler')
config.shadowTiddlers.ToolbarCommands=config.shadowTiddlers.ToolbarCommands.replace(/cancelTiddler/,'cancelTiddler copyTiddler');

if (config.options.chkCopyTiddlerDate===undefined) config.options.chkCopyTiddlerDate=false;

config.commands.copyTiddler = {
    text: 'copy',
    hideReadOnly: true,
    tooltip: 'Make a copy of this tiddler',
    notitle: 'this tiddler',
    prefix: '',
    suffixText: ' (%0)',
    suffixPattern: / \(([0-9]+)\)$/,
    zeroPad: 0,
    sparse: false,
    handler: function(event,src,title)
        { return config.commands.copyTiddler.click(src,event); },
    click: function(here,ev) {
        var tiddlerElem=story.findContainingTiddler(here);
        var template=tiddlerElem?tiddlerElem.getAttribute('template'):null;
        var title=here.getAttribute('from');
        if (!title || !title.length) {
            if (!tiddlerElem) return false;
            else title=tiddlerElem.getAttribute('tiddler');
        }
        var root=title.replace(this.suffixPattern,''); // title without suffix
        // find last matching title
        var last=title;
        if (this.sparse) { // don't fill-in holes... really find LAST matching title
            var tids=store.getTiddlers('title','excludeLists');
            for (var t=0; t&lt;tids.length; t++) if (tids[t].title.startsWith(root)) last=tids[t].title;
        }
        // get next number (increment from last matching title)
        var n=1; var match=this.suffixPattern.exec(last); if (match) n=parseInt(match[1])+1;
        var newTitle=this.prefix+root+this.suffixText.format([String.zeroPad(n,this.zeroPad)]);
        // if not sparse mode, find the next hole to fill in...
        while (store.tiddlerExists(newTitle)||document.getElementById(story.idPrefix+newTitle))
            { n++; newTitle=this.prefix+root+this.suffixText.format([String.zeroPad(n,this.zeroPad)]); }
        if (!story.isDirty(title)) { // if tiddler is not being EDITED
            // duplicate stored tiddler (if any)
            var text=store.getTiddlerText(title,'');
            var who=config.options.txtUserName;
            var when=new Date();
            var newtags=[]; var newfields={};
            var tid=store.getTiddler(title); if (tid) {
                if (config.options.chkCopyTiddlerDate) var when=tid.modified;
                for (var t=0; t&lt;tid.tags.length; t++) newtags.push(tid.tags[t]);
                store.forEachField(tid,function(t,f,v){newfields[f]=v;},true);
            }
                    store.saveTiddler(newTitle,newTitle,text,who,when,newtags,newfields,true);
            story.displayTiddler(tiddlerElem,newTitle,template);
        } else {
            story.displayTiddler(tiddlerElem,newTitle,template);
            var fields=config.commands.copyTiddler.gatherFields(tiddlerElem); // get current editor fields
            var newTiddlerElem=document.getElementById(story.idPrefix+newTitle);
            for (var f=0; f&lt;fields.length; f++) {  // set fields in new editor
                if (fields[f].name=='title') fields[f].value=newTitle; // rename title in new tiddler
                var fieldElem=config.commands.copyTiddler.findField(newTiddlerElem,fields[f].name);
                if (fieldElem) {
                    if (fieldElem.getAttribute('type')=='checkbox')
                        fieldElem.checked=fields[f].value;
                    else
                        fieldElem.value=fields[f].value;
                }
            }
        }
        story.focusTiddler(newTitle,'title');
        return false;
    },
    findField: function(tiddlerElem,field) {
        var inputs=tiddlerElem.getElementsByTagName('input');
        for (var i=0; i&lt;inputs.length; i++) {
            if (inputs[i].getAttribute('type')=='checkbox' &amp;&amp; inputs[i].field == field) return inputs[i];
            if (inputs[i].getAttribute('type')=='text' &amp;&amp; inputs[i].getAttribute('edit') == field) return inputs[i];
        }
        var tas=tiddlerElem.getElementsByTagName('textarea');
        for (var i=0; i&lt;tas.length; i++) if (tas[i].getAttribute('edit') == field) return tas[i];
        var sels=tiddlerElem.getElementsByTagName('select');
        for (var i=0; i&lt;sels.length; i++) if (sels[i].getAttribute('edit') == field) return sels[i];
        return null;
    },
    gatherFields: function(tiddlerElem) { // get field names and values from current tiddler editor
        var fields=[];
        // get checkboxes and edit fields
        var inputs=tiddlerElem.getElementsByTagName('input');
        for (var i=0; i&lt;inputs.length; i++) {
            if (inputs[i].getAttribute('type')=='checkbox')
                if (inputs[i].field) fields.push({name:inputs[i].field,value:inputs[i].checked});
            if (inputs[i].getAttribute('type')=='text')
                if (inputs[i].getAttribute('edit')) fields.push({name:inputs[i].getAttribute('edit'),value:inputs[i].value});
        }
        // get textareas (multi-line edit fields)
        var tas=tiddlerElem.getElementsByTagName('textarea');
        for (var i=0; i&lt;tas.length; i++)
            if (tas[i].getAttribute('edit')) fields.push({name:tas[i].getAttribute('edit'),value:tas[i].value});
        // get selection lists (droplist or listbox)
        var sels=tiddlerElem.getElementsByTagName('select');
        for (var i=0; i&lt;sels.length; i++)
            if (sels[i].getAttribute('edit')) fields.push({name:sels[i].getAttribute('edit'),value:sels[i].value});
        return fields;
    }
};
//}}}
// // MACRO DEFINITION
//{{{
config.macros.copyTiddler = {
    label: 'copy',
    prompt: 'Make a copy of %0',
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var title=params.shift();
        params=paramString.parseParams('anon',null,true,false,false);
        var label   =getParam(params,'label',this.label+(title?' '+title:''));
        var prompt  =getParam(params,'prompt',this.prompt).format([title||this.notitle]);
        var b=createTiddlyButton(place,label,prompt,
            function(ev){return config.commands.copyTiddler.click(this,ev)});
        b.setAttribute('from',title||'');
    }
};
//}}}</pre>
</div>
<div title="CoreTweaks" modifier="SDM" created="200608201502" modified="201304032019" tags="systemConfig excludeLists" book_key="" changecount="4">
<pre>/***
|Name|CoreTweaks|
|Source|http://www.TiddlyTools.com/#CoreTweaks|
|Version||
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.2.0|
|Type|plugin|
|Description|a small collection of overrides to TW core functions|
This tiddler contains small changes to TW core functions that correct or enhance standard features or behaviors.
***/
//{{{
// calculate TW version number - used to determine which tweaks should be applied
var ver=version.major+version.minor/10+version.revision/100;
//}}}
/***
----

***/
// // closed: won't fix //(leave as core tweaks)//
// // {{block{
/***
!!!637 TiddlyLink tooltip - custom formatting
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/637 - CLOSED: WON'T FIX
This tweak modifies the tooltip format that appears when you mouseover a link to a tiddler.  It adds an option to control the date format, as well as displaying the size of the tiddler (in bytes)

Tiddler link tooltip format:
{{stretch{&lt;&lt;option txtTiddlerLinkTootip&gt;&gt;}}}
^^where: %0=title, %1=username, %2=modification date, %3=size in bytes, %4=description slice, %5=first N characters of tiddler content^^
Tiddler link tooltip date format:
{{stretch{&lt;&lt;option txtTiddlerLinkTooltipDate&gt;&gt;}}}
Tiddler excerpt limit (chars):
{{stretch{&lt;&lt;option txtTiddlerLinkTooltipLimit&gt;&gt;}}}
***/
//{{{
config.messages.tiddlerLinkTooltip='%0 - %1, %2 (%3 bytes) - %4';
config.messages.tiddlerLinkTooltipDate='DDD, MMM DDth YYYY 0hh12:0mm AM';
config.messages.tiddlerLinkTooltipLimit=50;

config.options.txtTiddlerLinkTootip=
	config.options.txtTiddlerLinkTootip||config.messages.tiddlerLinkTooltip;
config.options.txtTiddlerLinkTooltipDate=
	config.options.txtTiddlerLinkTooltipDate||config.messages.tiddlerLinkTooltipDate;
config.options.txtTiddlerLinkTooltipLimit=
	config.options.txtTiddlerLinkTooltipLimit||config.messages.tiddlerLinkTooltipLimit;

Tiddler.prototype.getSubtitle = function() {
	var modifier = this.modifier;
	if(!modifier) modifier = config.messages.subtitleUnknown;
	var modified = this.modified;
	if(modified) modified = modified.formatString(config.options.txtTiddlerLinkTooltipDate);
	else modified = config.messages.subtitleUnknown;
	var descr=store.getTiddlerSlice(this.title,'Description')||'';
	var txt=this.text.substr(0,config.options.txtTiddlerLinkTooltipLimit);
	if (this.text.length&gt;config.options.txtTiddlerLinkTooltipLimit) txt+=&quot;...&quot;;
	return config.options.txtTiddlerLinkTootip.format([this.title,modifier,modified,this.text.length,descr,txt]);
};
//}}}
// // }}}}}}// // {{block{
/***
!!!607 add HREF link on permaview command
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/607 - CLOSED: WON'T FIX
This tweak automatically sets the HREF for the 'permaview' sidebar command link so you can use the 'right click' context menu for faster, easier bookmarking.  Note that this does ''not'' automatically set the permaview in the browser's current location URL... it just sets the HREF on the command link.  You still have to click the link to apply the permaview.
***/
//{{{
config.macros.permaview.handler = function(place)
{
	var btn=createTiddlyButton(place,this.label,this.prompt,this.onClick);
	addEvent(btn,'mouseover',this.setHREF);
	addEvent(btn,'focus',this.setHREF);
};
config.macros.permaview.setHREF = function(event){
	var links = [];
	story.forEachTiddler(function(title,element) {
		links.push(String.encodeTiddlyLink(title));
	});
	var newURL=document.location.href;
	var hashPos=newURL.indexOf('#');
	if (hashPos!=-1) newURL=newURL.substr(0,hashPos);
	this.href=newURL+'#'+encodeURIComponent(links.join(' '));
}
//}}}
// // }}}}}}// // {{block{
/***
!!!458 add permalink-like HREFs on internal TiddlyLinks
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/458 - CLOSED: WON'T FIX
This tweak assigns a permalink-like HREF to internal Tiddler links (which normally do not have any HREF defined).  This permits the link's context menu (right-click) to include 'open link in another window/tab' command.  Based on a request from Dustin Spicuzza.
***/
//{{{
window.coreTweaks_createTiddlyLink=window.createTiddlyLink;
window.createTiddlyLink=function(place,title,includeText,theClass,isStatic,linkedFromTiddler,noToggle)
{
	// create the core button, then add the HREF (to internal links only)
	var link=window.coreTweaks_createTiddlyLink.apply(this,arguments);
	if (!isStatic)
		link.href=document.location.href.split('#')[0]+'#'+encodeURIComponent(String.encodeTiddlyLink(title));
	return link;
}
//}}}
// // }}}}}}
// // to be fixed in 2.6.0:
// // {{block{
/***
!!!1151 adjust popup placement when root element is in scrolled DIV
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/1151
When a popup link is placed inside a DIV with style &quot;overflow:scroll&quot; or &quot;overflow:auto&quot; and that DIV is then scrolled, the position of the resulting popup appears further down the page that intended, because it is not adjusting for the relative scroll offset of the containing DIV.  This tweak patches the Popup.place() function to calculate and subtract the current scroll offset from the computed popup position, so that it appears in the correct location on the page.

Test case: //(scroll to the bottom of this DIV and click on &quot;test popup&quot;)//
{{groupbox{
 &lt;&lt;tiddler ScrollBox with: CoreTweaks##1151test 12em&gt;&gt;}}}/%
!1151test
&lt;&lt;tiddler About&gt;&gt;
&lt;&lt;showPopup tiddler:About label:&quot;test popup&quot; tip:About popupClass:sticky&gt;&gt;
!end
%/
***/
//{{{
window.findScrollOffsetX=function(obj) {
	var x=0;
	while(obj) {
		if (obj.scrollLeft &amp;&amp; obj.nodeName!='HTML')
			x+=obj.scrollLeft;
		obj=obj.parentNode;
	}
	return -x;
}

window.findScrollOffsetY=function(obj) {
	var y=0;
	while(obj) {
		if (obj.scrollTop &amp;&amp; obj.nodeName!='HTML')
			y+=obj.scrollTop;
		obj=obj.parentNode;
	}
	return -y;
}

var fn=Popup.place.toString();
if (fn.indexOf('findScrollOffsetX')==-1) { // only once
	fn=fn.replace(/var\s*rootLeft\s*=/,'var rootLeft = window.findScrollOffsetX(root) +');
	fn=fn.replace(/var\s*rootTop\s*=/,'var rootTop = window.findScrollOffsetY(root) +');
	eval('Popup.place='+fn);
}
//}}}
// // }}}}}}// // {{block{
/***
!!!1147 tiddler macro with params does not refresh
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/1147
when the {{{&lt;&lt;tiddler SomeTiddler&gt;&gt;}}} macro is handled, the resulting span has extra attributes: {{{refresh='content'}}} and {{{tiddler='SomeTiddler'}}}.  If SomeTiddler is changed, {{{store.notify('SomeTiddler')}}} triggers {{{refreshDisplay()}}}, which automatically re-renders transcluded content in any span that has these extra attributes.  However, when additional arguments are passed by using {{{&lt;&lt;tiddler SomeTiddler with: arg arg arg ...&gt;&gt;}}} then the resulting span does NOT get the extra attributes noted above and, as a consequence, the transcluded content is not being refreshed, even though the underlying tiddler has changed

To correct this, in {{{config.macros.tiddler.handler}}}:
*set the 'refresh' and 'tiddler' attributes even when arguments are present in the macro
*store the arguments themselves in an attribute (e.g, 'args'), using as a space-separated, bracketed list
Then, in {{{config.refreshers.content}}}:
*retrieve the stored arguments (if any) and the tiddler source
*substitute arguments into source and re-render the span with the updated content

***/
//{{{
config.refreshers.content=function(e,changeList) {
		var title = e.getAttribute(&quot;tiddler&quot;);
		var force = e.getAttribute(&quot;force&quot;);
		var args = e.getAttribute(&quot;args&quot;); // ADDED
		if(force != null || changeList == null || changeList.indexOf(title) != -1) {
			removeChildren(e);
//			wikify(store.getTiddlerText(title,&quot;&quot;),e,null,store.fetchTiddler(title)); // REMOVED
			config.macros.tiddler.transclude(e,title,args); // ADDED
			return true;
		} else
			return false;
};

config.macros.tiddler.handler=function(place,macroName,params,wikifier,paramString,tiddler) {
	params = paramString.parseParams(&quot;name&quot;,null,true,false,true);
	var names = params[0][&quot;name&quot;];
	var tiddlerName = names[0];
	var className = names[1] || null;
	var args = params[0][&quot;with&quot;];
	var wrapper = createTiddlyElement(place,&quot;span&quot;,null,className);
//	if(!args) { // REMOVED
		wrapper.setAttribute(&quot;refresh&quot;,&quot;content&quot;);
		wrapper.setAttribute(&quot;tiddler&quot;,tiddlerName);
// 	} // REMOVED
	if(args!==undefined) wrapper.setAttribute(&quot;args&quot;,'[['+args.join(']] [[')+']]'); // ADDED
	this.transclude(wrapper,tiddlerName,args); // REFACTORED TO ...tiddler.transclude
}

// REFACTORED FROM ...tiddler.handler
config.macros.tiddler.transclude=function(wrapper,tiddlerName,args) {
	var text = store.getTiddlerText(tiddlerName); if (!text) return;
	var stack = config.macros.tiddler.tiddlerStack;
	if(stack.indexOf(tiddlerName) !== -1) return;
	stack.push(tiddlerName);
	try {
		if (typeof args == &quot;string&quot;) args=args.readBracketedList(); // ADDED
		var n = args ? Math.min(args.length,9) : 0;
		for(var i=0; i&lt;n; i++) {
			var placeholderRE = new RegExp(&quot;\\$&quot; + (i + 1),&quot;mg&quot;);
			text = text.replace(placeholderRE,args[i]);
		}
		config.macros.tiddler.renderText(wrapper,text,tiddlerName,null); // REMOVED UNUSED 'params'
	} finally {
		stack.pop();
	}
};
//}}}
// // }}}}}}// // {{block{
/***
!!!1134 allow leading whitespace in section headings / TBD handle shadow tiddler sections
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/1134
This tweak REPLACES and extends {{{store.getTiddlerText()}}} so it can return sections defined in shadow tiddlers as well as permitting use of leading whitespace in section headings.
***/
//{{{
TiddlyWiki.prototype.getTiddlerText = function(title,defaultText)
{
	if(!title) return defaultText;
	var parts = title.split(config.textPrimitives.sectionSeparator);
	var title = parts[0];
	var section = parts[1];
	var parts = title.split(config.textPrimitives.sliceSeparator);
	var title = parts[0];
	var slice = parts[1]?this.getTiddlerSlice(title,parts[1]):null;
	if(slice) return slice;
	var tiddler = this.fetchTiddler(title);
	var text = defaultText;
	if(this.isShadowTiddler(title))
		text = this.getShadowTiddlerText(title);
	if(tiddler)
		text = tiddler.text;
	if(!section) return text;
	var re = new RegExp(&quot;(^!{1,6}[ \t]*&quot; + section.escapeRegExp() + &quot;[ \t]*\n)&quot;,&quot;mg&quot;);
	re.lastIndex = 0;
	var match = re.exec(text);
	if(match) {
		var t = text.substr(match.index+match[1].length);
		var re2 = /^!/mg;
		re2.lastIndex = 0;
		match = re2.exec(t); //# search for the next heading
		if(match)
			t = t.substr(0,match.index-1);//# don't include final \n
		return t;
	}
	return defaultText;
};
//}}}
// // }}}}}}// // {{block{
/***
!!!824 ~WindowTitle - alternative to combined ~SiteTitle/~SiteSubtitle in window titlebar
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/824 - OPEN
This tweak allows definition of an optional [[WindowTitle]] tiddler that, when present, provides alternative text for display in the browser window's titlebar, instead of using the combined text content from [[SiteTitle]] and [[SiteSubtitle]] (which will still be displayed as usual in the TiddlyWiki document header area).

Note: this ticket replaces http://trac.tiddlywiki.org/ticket/401 (closed), which proposed using a custom [[PageTitle]] tiddler for this purpose.  ''If you were using the previous '401 ~PageTitle' tweak, you will need to rename [[PageTitle]] to [[WindowTitle]] to continue to use your custom window title text''
***/
//{{{
config.shadowTiddlers.WindowTitle='&lt;&lt;tiddler SiteTitle&gt;&gt; - &lt;&lt;tiddler SiteSubtitle&gt;&gt;';
window.getPageTitle=function() { return wikifyPlain('WindowTitle'); }
store.addNotification('WindowTitle',refreshPageTitle); // so title stays in sync with tiddler changes
//}}}
// // }}}}}}// // {{block{
/***
!!!471 'creator' field for new tiddlers
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/471 - OPEN
This tweak HIJACKS the core's saveTiddler() function to automatically add a 'creator' field to a tiddler when it is FIRST created. You can use &quot;&quot;&quot;&lt;&lt;view creator&gt;&gt;&quot;&quot;&quot; (or &quot;&quot;&quot;&lt;&lt;view creator wikified&gt;&gt;&quot;&quot;&quot; if you prefer) to show this value embedded directly within the tiddler content, or {{{&lt;span macro=&quot;view creator&quot;&gt;&lt;/span&gt;}}} in the ViewTemplate and/or EditTemplate to display the creator value in each tiddler.  
***/
//{{{
// hijack saveTiddler()
TiddlyWiki.prototype.CoreTweaks_creatorSaveTiddler=TiddlyWiki.prototype.saveTiddler;
TiddlyWiki.prototype.saveTiddler=function(title,newTitle,newBody,modifier,modified,tags,fields)
{
	var existing=store.tiddlerExists(title);
	var tiddler=this.CoreTweaks_creatorSaveTiddler.apply(this,arguments);
	if (!existing) store.setValue(title,'creator',config.options.txtUserName);
	return tiddler;
}
//}}}
// // }}}}}}
// // fixed in ~TW2.4.3
// // {{block{
/***
!!!444 'tiddler' and 'place' - global variables for use in computed macro parameters
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/444 - CLOSED:FIXED - TW2.4.3 - http://trac.tiddlywiki.org/changeset/8367
When invoking a macro, this tweak makes the current containing tiddler object and DOM rendering location available as global variables (window.tiddler and window.place, respectively).  These globals can then be used within //computed macro parameters// to retrieve tiddler-relative and/or DOM-relative values or perform tiddler-specific side-effect functionality.
***/
//{{{
if (ver&lt;2.43) {
window.coreTweaks_invokeMacro = window.invokeMacro;
window.invokeMacro = function(place,macro,params,wikifier,tiddler) {
	var here=story.findContainingTiddler(place);
	window.tiddler=here?store.getTiddler(here.getAttribute('tiddler')):tiddler;
	window.place=place;
	window.coreTweaks_invokeMacro.apply(this,arguments);
}
}
//}}}
// // }}}}}}
// // fixed in ~TW2.4.2:
// // {{block{
/***
!!!823 apply option values via paramifiers (e.g. #chk...and #txt...)
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/823 - CLOSED:FIXED - TW2.4.2 http://trac.tiddlywiki.org/changeset/7988
This tweak extends and ''//replaces//'' the core {{{invokeParamifier()}}} function to support use of ''option paramifiers'' that set TiddlyWiki option values on-the-fly, directly from a document URL.

If a paramifier begins with 'chk' (checkbox) or 'txt' (text field), it's value will be automatically stored in {{{config.options.*}}}, adding to or overriding any existing 'chk' or 'txt' option values that may have already been loaded from browser cookies and/or assigned by the TW core or plugin initialization functions using hard-coded default values.  Note: option values that have been overriden by paramifiers are only applied during the current document session, and are not //automatically// retained.  However, if you edit an overridden option value during that session, then the modified value is, of course, saved in a browser cookie, as usual.
***/
//{{{
if (ver&lt;2.42) {
function invokeParamifier(params,handler)
{
	if(!params || params.length == undefined || params.length &lt;= 1)
		return;
	for(var t=1; t&lt;params.length; t++) {
		var p = config.paramifiers[params[t].name];
		if(p &amp;&amp; p[handler] instanceof Function)
			p[handler](params[t].value);
		else { // not a paramifier with handler()... check for an 'option' prefix
			var h=config.optionHandlers[params[t].name.substr(0,3)];
			if (h &amp;&amp; h.set instanceof Function)
				h.set(params[t].name,params[t].value);
		}
	}
}
}
//}}}
// // }}}}}}
// // open tickets:
// // {{block{
/***
!!!608/609/610 toolbars - toggles, separators and transclusion
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/608 - OPEN (more/less toggle)
http://trac.tiddlywiki.org/ticket/609 - OPEN (separators)
http://trac.tiddlywiki.org/ticket/610 - OPEN (wikify tiddler/slice/section content)

This combination tweak extends the &quot;&quot;&quot;&lt;&lt;toolbar&gt;&gt;&quot;&quot;&quot; macro to add use of '&lt;' to insert a 'less' menu command (the opposite of '&gt;' == 'more'), as well as use of '*' to insert linebreaks and &quot;!&quot; to insert a vertical line separator between toolbar items.  In addition, this tweak add the ability to use references to tiddlernames, slices, or sections and render their content inline within the toolbar, allowing easy creation of new toolbar commands using TW content (such as macros, links, inline scripts, etc.)

To produce a one-line style, with &quot;less&quot; at the end, use
| ViewToolbar| foo bar baz &gt; yabba dabba doo &lt; |
or to use a two-line style with more/less toggle:
| ViewToolbar| foo bar baz &gt; &lt; * yabba dabba doo |
***/
//{{{
merge(config.macros.toolbar,{
	moreLabel: 'more\u25BC',
	morePrompt: 'Show additional commands',
	lessLabel: '\u25C4less',
	lessPrompt: 'Hide additional commands',
	separator: '|'
});
config.macros.toolbar.onClickMore = function(ev) {
	var e = this.nextSibling;
	e.style.display = 'inline'; // show menu
	this.style.display = 'none'; // hide button
	return false;
};
config.macros.toolbar.onClickLess = function(ev) {
	var e = this.parentNode;
	var m = e.previousSibling;
	e.style.display = 'none'; // hide menu
	m.style.display = 'inline'; // show button
	return false;
};
config.macros.toolbar.handler = function(place,macroName,params,wikifier,paramString,tiddler) {
	for(var t=0; t&lt;params.length; t++) {
		var c = params[t];
		switch(c) {
			case '!':  // ELS - SEPARATOR (added)
				createTiddlyText(place,this.separator);
				break;
			case '*':  // ELS - LINEBREAK (added)
				createTiddlyElement(place,'BR');
				break;
			case '&lt;': // ELS - LESS COMMAND (added)
				var btn = createTiddlyButton(place,
					this.lessLabel,this.lessPrompt,config.macros.toolbar.onClickLess,'moreCommand');
				break;
			case '&gt;':
				var btn = createTiddlyButton(place,
					this.moreLabel,this.morePrompt,config.macros.toolbar.onClickMore,'moreCommand');
				var e = createTiddlyElement(place,'span',null,'moreCommand');
				e.style.display = 'none';
				place = e;
				break;
			default:
				var theClass = '';
				switch(c.substr(0,1)) {
					case '+':
						theClass = 'defaultCommand';
						c = c.substr(1);
						break;
					case '-':
						theClass = 'cancelCommand';
						c = c.substr(1);
						break;
				}
				if(c in config.commands)

					this.createCommand(place,c,tiddler,theClass);
				else { // ELS - WIKIFY TIDDLER/SLICE/SECTION (added)
					if (c.substr(0,1)=='~') c=c.substr(1); // ignore leading ~
					var txt=store.getTiddlerText(c);
					if (txt) {
						// trim any leading/trailing newlines
						txt=txt.replace(/^\n*/,'').replace(/\n*$/,'');
						// trim PRE format wrapper if any
						txt=txt.replace(/^\{\{\{\n/,'').replace(/\n\}\}\}$/,'');
						// render content into toolbar
						wikify(txt,createTiddlyElement(place,'span'),null,tiddler);
					}
				} // ELS - end WIKIFY CONTENT
				break;
		}
	}
};
//}}}
// // }}}}}}// // {{block{
/***
!!!529 IE fixup - case-sensitive element lookup of tiddler elements
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/529 - OPEN
This tweak hijacks the standard browser function, document.getElementById(), to work-around the case-INsensitivity error in Internet Explorer (all versions up to and including IE7) //''Note: This tweak is only applied when using IE, and only for lookups of rendered tiddler elements within the containing 'tiddlerDisplay' element.''//
***/
//{{{
if (config.browser.isIE) {
document.coreTweaks_coreGetElementById=document.getElementById;
document.getElementById=function(id) {
	var e=document.coreTweaks_coreGetElementById(id);
	if (!e || !e.parentNode || e.parentNode.id!='tiddlerDisplay') return e;
	for (var i=0; i&lt;e.parentNode.childNodes.length; i++)
		if (id==e.parentNode.childNodes[i].id) return e.parentNode.childNodes[i];
	return null;
};
}
//}}}
// // }}}}}}// // {{block{
/***
!!!890 add conditional test to &quot;&quot;&quot;&lt;&lt;tiddler&gt;&gt;&quot;&quot;&quot; macro
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/890 - OPEN
This tweak extends the {{{&lt;&lt;tiddler&gt;&gt;}}} macro syntax so you can include a javascript-based //test expression// to determine if the tiddler transclusion should be performed:
{{{
&lt;&lt;tiddler TiddlerName if:{{...}} with: param param etc.&gt;&gt;
}}}
If the test is ''true'', then the tiddler is transcluded as usual.  If the test is ''false'', then the transclusion is skipped and //no output is produced//.
***/
//{{{
config.macros.tiddler.if_handler = config.macros.tiddler.handler;
config.macros.tiddler.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams('name',null,true,false,true);
	if (!getParam(params,'if',true)) return;
	this.if_handler.apply(this,arguments);
};
//}}}
// // }}}}}}// // {{block{
/***
!!!831 backslash-quoting for embedding newlines in 'line-mode' formats
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/831 - OPEN
This tweak pre-processes source content to convert 'double-backslash-newline' into {{{&lt;br&gt;}}} before wikify(), so that literal newlines can be embedded in line-mode wiki syntax (e.g., tables, bullets, etc.)
***/
//{{{
window.coreWikify = wikify;
window.wikify = function(source,output,highlightRegExp,tiddler)
{
	if (source) arguments[0]=source.replace(/\\\\\n/mg,'&lt;br&gt;');
	coreWikify.apply(this,arguments);
}
//}}}
// // }}}}}}// // {{block{
/***
!!!683 FireFox3 Import bug: 'browse' button replacement
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/683 - OPEN
The web standard 'type=file' input control that has been used as a local path/file picker for TiddlyWiki no longer works as expected in FireFox3, which has, for security reasons, limited javascript access to this control so that *no* local filesystem path information can be revealed, even when it is intentional and necessary, as it is with TiddlyWiki.  This tweak provides alternative HTML source that patches the backstage import panel.  It replaces the 'type=file' input control with a text+button combination of controls that invokes a system-native secure 'file-chooser' dialog box to provide TiddlyWiki with access to a complete path+filename so that TW functions properly locate user-selected local files.
&gt;Note: ''This tweak also requires http://trac.tiddlywiki.org/ticket/604 - cross-platform askForFilename()''
***/
//{{{
//if (window.Components) {  SDM per Eric S.
if (false) {
	var fixhtml='&lt;input name=&quot;txtBrowse&quot; style=&quot;width:30em&quot;&gt;&lt;input type=&quot;button&quot; value=&quot;...&quot;'
		+' onClick=&quot;window.browseForFilename(this.previousSibling,true)&quot;&gt;';
	var cmi=config.macros.importTiddlers;
	cmi.step1Html=cmi.step1Html.replace(/&lt;input type='file' size=50 name='txtBrowse'&gt;/,fixhtml);
}

merge(config.messages,{selectFile:'Please enter or select a file'}); // ready for I18N translation

window.browseForFilename=function(target,mustExist) { // note: both params are optional
	var msg=config.messages.selectFile;
	if (target &amp;&amp; target.title) msg=target.title; // use target field tooltip (if any) as dialog prompt text
	// get local path for current document
	var path=getLocalPath(document.location.href);
	var p=path.lastIndexOf('/'); if (p==-1) p=path.lastIndexOf('\\'); // Unix or Windows
	if (p!=-1) path=path.substr(0,p+1); // remove filename, leave trailing slash
	var file=''
	var result=window.askForFilename(msg,path,file,mustExist); // requires #604
	if (target &amp;&amp; result.length) // set target field and trigger handling
		{ target.value=result; target.onchange(); }
	return result; 
}
//}}}
// // }}}}}}// // {{block{
/***
!!!604 cross-platform askForFilename()
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/604 - OPEN
invokes a system-native secure 'file-chooser' dialog box to provide TiddlyWiki with access to a complete path+filename so that TW functions properly locate user-selected local files.
***/
//{{{
window.askForFilename=function(msg,path,file,mustExist) {
	var r = window.mozAskForFilename(msg,path,file,mustExist);
	if(r===null || r===false)
		r = window.ieAskForFilename(msg,path,file,mustExist);
	if(r===null || r===false)
		r = window.javaAskForFilename(msg,path,file,mustExist);
	if(r===null || r===false)
		r = prompt(msg,path+file);
	return r||'';
}

window.mozAskForFilename=function(msg,path,file,mustExist) {
	if(!window.Components) return false;
	try {
		netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');
		var nsIFilePicker = window.Components.interfaces.nsIFilePicker;
		var picker = Components.classes['@mozilla.org/filepicker;1'].createInstance(nsIFilePicker);
		picker.init(window, msg, mustExist?nsIFilePicker.modeOpen:nsIFilePicker.modeSave);
		var thispath = Components.classes['@mozilla.org/file/local;1'].createInstance(Components.interfaces.nsILocalFile);
		thispath.initWithPath(path);
		picker.displayDirectory=thispath;
		picker.defaultExtension='html';
		picker.defaultString=file;
		picker.appendFilters(nsIFilePicker.filterAll|nsIFilePicker.filterText|nsIFilePicker.filterHTML);
		if (picker.show()!=nsIFilePicker.returnCancel)
			var result=picker.file.path;
	}
	catch(ex) { displayMessage(ex.toString()); }
	return result;
}

window.ieAskForFilename=function(msg,path,file,mustExist) {
	if(!config.browser.isIE) return false;
	try {
		var s = new ActiveXObject('UserAccounts.CommonDialog');
		s.Filter='All files|*.*|Text files|*.txt|HTML files|*.htm;*.html|';
		s.FilterIndex=3; // default to HTML files;
		s.InitialDir=path;
		s.FileName=file;
		return s.showOpen()?s.FileName:'';
	}
	catch(ex) { displayMessage(ex.toString()); }
	return result;
}

window.javaAskForFilename=function(msg,path,file,mustExist) {
	if(!document.applets['TiddlySaver']) return false;
	// TBD: implement java-based askFile(...) function
	try { return document.applets['TiddlySaver'].askFile(msg,path,file,mustExist); } 
	catch(ex) { displayMessage(ex.toString()); }
}
//}}}
// // }}}}}}// // {{block{
/***
!!!657 wrap tabs onto multiple lines
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/657 - OPEN
This tweak inserts an extra space element following each tab, allowing them to wrap onto multiple lines if needed.
***/
//{{{
config.macros.tabs.handler = function(place,macroName,params)
{
	var cookie = params[0];
	var numTabs = (params.length-1)/3;
	var wrapper = createTiddlyElement(null,'div',null,'tabsetWrapper ' + cookie);
	var tabset = createTiddlyElement(wrapper,'div',null,'tabset');
	tabset.setAttribute('cookie',cookie);
	var validTab = false;
	for(var t=0; t&lt;numTabs; t++) {
		var label = params[t*3+1];
		var prompt = params[t*3+2];
		var content = params[t*3+3];
		var tab = createTiddlyButton(tabset,label,prompt,this.onClickTab,'tab tabUnselected');
		createTiddlyElement(tab,'span',null,null,' ',{style:'font-size:0pt;line-height:0px'}); // ELS
		tab.setAttribute('tab',label);
		tab.setAttribute('content',content);
		tab.title = prompt;
		if(config.options[cookie] == label)
			validTab = true;
	}
	if(!validTab)
		config.options[cookie] = params[1];
	place.appendChild(wrapper);
	this.switchTab(tabset,config.options[cookie]);
};
//}}}
// // }}}}}}// // {{block{
/***
!!!628 hide 'no such macro' errors
***/
// // {{groupbox small{
/***
http://trac.tiddlywiki.org/ticket/628 - OPEN
When invoking a macro that is not defined, this tweak prevents the display of the 'error in macro... no such macro' message.  This is useful when rendering tiddler content or templates that reference macros that are defined by //optional// plugins that have not been installed in the current document.

&lt;&lt;option chkHideMissingMacros&gt;&gt; hide 'no such macro' error messages
***/
//{{{
if (config.options.chkHideMissingMacros===undefined)
	config.options.chkHideMissingMacros=false;

window.coreTweaks_missingMacro_invokeMacro = window.invokeMacro;
window.invokeMacro = function(place,macro,params,wikifier,tiddler) {
	if (!config.macros[macro] || !config.macros[macro].handler)
		if (config.options.chkHideMissingMacros) return;
	window.coreTweaks_missingMacro_invokeMacro.apply(this,arguments);
}
//}}}
// // }}}}}}
// // &lt;&lt;foldHeadings&gt;&gt;</pre>
</div>
<div title="Counsel" modifier="SDM" created="201302121404" book_key="">
<pre>* [[Wisdom]], advice
!!! Sources
# God
** James 1
** Solomon
** Proverbs intro
# Elders
** Proverbs intro
# Prophet
# Brethren
** Paul to the Corinthians -- better a newbie than a worldly court</pre>
</div>
<div title="Counterfeit" modifier="SDM" created="201010272128" modified="201301091613" book_key="">
<pre>!!! Religion or Ritual?
* &lt;&lt;Bbl Ps 40:16 abbr &gt;&gt;-23 , &lt;&lt;Bbl Ps 50:7 &gt;&gt;-15 , &lt;&lt;Bbl Ps 51:16 &gt;&gt;-19 , &lt;&lt;Bbl Ps 69:30 &gt;&gt;-31 , &lt;&lt;Bbl Pr 21:3 &gt;&gt;, &lt;&lt;Bbl Is 1:10 &gt;&gt;-17  (see &lt;&lt;Bbl Mt 21:28 &gt;&gt;-32 ), 29:1,13, &lt;&lt;Bbl Jer 7:21 &gt;&gt;-23 , &lt;&lt;Bbl Jer 22:15 &gt;&gt;-16 , &lt;&lt;Bbl Hos 6:6 &gt;&gt;, &lt;&lt;Bbl Amo 4:5 &gt;&gt;, &lt;&lt;Bbl Amo 5:21 &gt;&gt;-27 , &lt;&lt;Bbl Mic 6:6 &gt;&gt;-8 , &lt;&lt;Bbl Mt 15:1 &gt;&gt;-20 ; &lt;&lt;Bbl Mk 12:28 &gt;&gt;-34 , &lt;&lt;Bbl Jms 1:27 &gt;&gt;
!!! Religion, False
* pragmatic:  &lt;&lt;Bbl Jn 4:14 &gt;&gt;-15 , &lt;&lt;Bbl Jn 6:26 &gt;&gt;-27 , &lt;&lt;Bbl 1Tim 6:5 &gt;&gt;
* &lt;&lt;Bbl Mk 3:6 abbr &gt;&gt; -- Pharisees violating the Sabbath by plotting murder.
* {{anti{[[Reverence]]}}}
| Truth | Counterfeit |h
|[[Worship]] |[[Idolatry]] |
|[[Humility]] |[[Adornment]] |
|[[Truth]] |[[Hypocrisy]] |
|[[Clothing]] |pretend covering |
|[[Peace]] |activity, dead works |
|[[River]], spring |cistern |
|[[Eye]], Vision |blindness |
|[[Marriage]] |many lovers |
|[[Obedience]] |sacrifice (futile) |</pre>
</div>
<div title="Courage" modifier="SDM" created="201004120330" modified="201211270440" book_key="">
<pre>* {{anti{[[Fear]]}}}, confidence
* &quot;Be of good cheer&quot;  &lt;&lt;Bbl Mt 9:2 &gt;&gt;; &lt;&lt;Bbl Mk 5:36 &gt;&gt; ??, 6:50, 10:49; &lt;&lt;Bbl Lk 12:32 &gt;&gt;
* Note Latin, [con + fide].  &quot;When a man wants what God wants for the same reasons God wants them, he cannot be stopped (unknown).&quot;  &lt;&lt;Bbl Eph 3:12 &gt;&gt;; &lt;&lt;Bbl Heb 10:19 &gt;&gt;; &lt;&lt;Bbl 1Jn 2:28 &gt;&gt;, &lt;&lt;Bbl 1Jn 3:21 &gt;&gt;
* Tim C. exhorts his children to be not scaredy-cats but boldy-dogs.
* &lt;&lt;Bbl Pr 28:1 &gt;&gt;; &lt;&lt;Bbl Acts 4:13 &gt;&gt;, &lt;&lt;Bbl Acts 9:27 &gt;&gt;-29 ; &lt;&lt;Bbl Eph 3:12 &gt;&gt;, &lt;&lt;Bbl Eph 6:19 &gt;&gt;; &lt;&lt;Bbl Php 1:14 &gt;&gt;; &lt;&lt;Bbl Heb 4:16 &gt;&gt;; &lt;&lt;Bbl 1Jn 4:17 &gt;&gt;.
* From God:  &lt;&lt;Bbl 2Tim 1:7 &gt;&gt;; &lt;&lt;Bbl Pr 28:1 &gt;&gt;; &lt;&lt;Bbl 1Jn 4:18 &gt;&gt;; &lt;&lt;Bbl Rom 8:15 &gt;&gt;
* exhortations:   &lt;&lt;Bbl Dt 1:17 &gt;&gt;; &lt;&lt;Bbl Josh 1:7 &gt;&gt;, &lt;&lt;Bbl Josh 10:24 &gt;&gt;-25 ; &lt;&lt;Bbl 1Pt 3:14 &gt;&gt;</pre>
</div>
<div title="Covenant" modifier="SDM" created="201004120330" modified="201201301539" book_key="">
<pre>[[Salt]], [[Food]], [[LordsSupper]]
{{{diatheke}}}
&quot;...An agreement or compact between two parties, for the observance of which pledges are given&quot; (J. Hertz, Pentateuch and Haftorahs, p. 27).
!!!! The Covenant of [[Grace]]
| Promises | |
| Mediator| &lt;&lt;Bbl Heb 9:15 &gt;&gt;; &lt;&lt;Bbl Jn 3:16 &gt;&gt; |
| Faith | &quot;I will be your God and you My people&quot; |
Adam and Eve had a relationship with the Creator that was hindered.  But Eve acknowledges God and seems to declare a reliance on and gratitude toward Him.   It seems Adam and Eve are redeemed by [[Faith]], but faith based on the most scant knowledge imaginable -- pre-[[Abraham]], pre-[[Melchizedek]], pre-Noah.
| |  Mistaken view | Reality |h
|Man disobeyed, so ... | God initiated a covenant of works | God initiated a covenant of grace |
|The [[Law]] was given to ... | enhance the covenant of works | demonstrate God's holiness, our need for grace |
|[[Christ]] came to ... | supersede the covenant of works  | make grace fully realized with a New Covenant |
----
But note that //the covenant of the Law// is fully correct.  The problem would seem to be contrasting it with a covenant of Grace.
Note treatment by J. Edwards, p 37
* Three covenants (Davidic, Abrahamic, New) are cited by Zacharias in &lt;&lt;Bbl Lk 1:69 &gt;&gt;-77.
* [[Faithfulness]] of God's:    &lt;&lt;Bbl Jer 31:31 &gt;&gt;-34 =&lt;&lt;Bbl Heb 8:6 &gt;&gt;-13 ; chap. 9, &lt;&lt;Bbl Ps 74:20 &gt;&gt;, &lt;&lt;Bbl Ps 89:30 &gt;&gt;-37 , &lt;&lt;Bbl Is 42:6 &gt;&gt;, &lt;&lt;Bbl Is 49:8 &gt;&gt; (Jesus, and ourselves, as the covenant itself), 54:10, 58:13-14; 59:21, &lt;&lt;Bbl Jer 33:19 &gt;&gt;-26 , &lt;&lt;Bbl Jer 50:5 &gt;&gt;, &lt;&lt;Bbl Zec 9:11 &gt;&gt;, &lt;&lt;Bbl Gn 6:18 &gt;&gt;, &lt;&lt;Bbl Gn 8:1 &gt;&gt;, &lt;&lt;Bbl Gn 9:8 &gt;&gt;-17 , &lt;&lt;Bbl 1Ki 11:36 &gt;&gt;-38 , &lt;&lt;Bbl Is 49:14 &gt;&gt;ff, &lt;&lt;Bbl Ps 56:12 &gt;&gt;.
* in terms of [[Man]]:      &lt;&lt;Bbl 2Chr 15:12 &gt;&gt; (note def. article), &lt;&lt;Bbl Ps 50:5 &gt;&gt;, &lt;&lt;Bbl Pr 20:28 &gt;&gt;, &lt;&lt;Bbl Is 58:13 &gt;&gt;-14 , &lt;&lt;Bbl Ez 16:8 &gt;&gt;, &lt;&lt;Bbl Ez 44:7 &gt;&gt;, &lt;&lt;Bbl Hos 6:7 &gt;&gt;Kng 9:3-9, 11:36-39.
* with [[Death]]:       &lt;&lt;Bbl Is 28:15 &gt;&gt;.
* between eternal Father and Son:  &lt;&lt;Bbl Heb 3:1 &gt;&gt;-3 , &lt;&lt;Bbl Heb 10:5 &gt;&gt;-7
* [[Broken]]:           &lt;&lt;Bbl Ez 16:59 &gt;&gt;, &lt;&lt;Bbl Ez 44:7 &gt;&gt;
* new:          &lt;&lt;Bbl Jer 31:31 &gt;&gt;-34 ; &lt;&lt;Bbl Mk 14:24 &gt;&gt;
* of [[Peace]]
** with Phineas:    &lt;&lt;Bbl Num 25:11 &gt;&gt;-12
** After the flood:  //Never again ...//</pre>
</div>
<div title="Coveting" modifier="SDM" created="201004120330" modified="201211161328" book_key="">
<pre>* [[Envying]], [[Sin]]
* [[Lust]] -- &lt;&lt;Bbl Eph 5:3 &gt;&gt;
*
* To desire something that should not be possessed.  The opposite of {{anti{[[Contentment]]}}}.  &quot;If you want to make a man happy, do not add to his pleasures, but take away from his desires&quot;  --  Epicurus.  Only God can accomplish that!
* The KJV uses the term positively as well, e.g., &lt;&lt;Bbl 1Cor 12:31 &gt;&gt; concerning the gifts.
* [[Seeking]]
* The first of the ten commands can be correlated with the final command against coveting; Devotion leads to contentment.
* &lt;&lt;Bbl Gn 3:4 &gt;&gt;-6 , the serpent incites envy; &lt;&lt;Bbl Josh 7:21 &gt;&gt;, Achan's sin; &lt;&lt;Bbl 1Sam 15:9 &gt;&gt;, Saul repeats Achan's sin; &lt;&lt;Bbl Mic 2:1 &gt;&gt;-2 , first the thought, then the action; &lt;&lt;Bbl Mt 6:33 &gt;&gt;, &quot;all these things&quot;; &lt;&lt;Bbl 1Cor 6:12 &gt;&gt;, mastered by nothing; &lt;&lt;Bbl Php 4:11 &gt;&gt;-19 , Paul's secret.
* Source of [[Conflict]]</pre>
</div>
<div title="Cup" modifier="SDM" created="201004120330" modified="201207111637" book_key="">
<pre>[[LordsSupper]], [[Wine]]
!!!! Word Study
* {{{3563a/468a}}}       --  the main Hebrew word, but unused until the Psalms.  Positive sense: 16:5, 23:5, 116:13; for Judgment on the wicked: 11:6, 75:8.  Expresses intimacy in &lt;&lt;Bbl 2Sam 12:3 &gt;&gt;.  Its only other occurances are in the prophets.  &lt;&lt;Bbl Jer 16:7 &gt;&gt; refers to a cup of consolation (as well as bread).  With this exception, all refer to the cup in the same sense as the Psalms concerning Judgment on Israel, Jerusalem, and all the nations.   &lt;&lt;Bbl Is 51:17 &gt;&gt;; &lt;&lt;Bbl Jer 25:15 &gt;&gt;-29 , &lt;&lt;Bbl Jer 49:12 &gt;&gt;, &lt;&lt;Bbl Jer 51:7 &gt;&gt;; &lt;&lt;Bbl Lam 4:21 &gt;&gt;; &lt;&lt;Bbl Ez 23:32 &gt;&gt;-34 , &lt;&lt;Bbl Hab 2:15 &gt;&gt;-16 .
* {{{5592a/706b}}}       --  For blood of the Passover lamb, &lt;&lt;Bbl Ex 12:22 &gt;&gt; above), &lt;&lt;Bbl Zec 12:2 &gt;&gt;; &lt;&lt;Bbl Hab 2:15 &gt;&gt;; several other uses, notably the temple vessels.
* The grape gives everything to become wine
!!!! Pouring Out
* The cup doesn't hold anything back, but gives it all.
* Jesus' blood was poured out for [[Atonement]], as the grace of God was poured out in Him.
* In &lt;&lt;Bbl Col 1:19 &gt;&gt; the Father pours Himself into the Son; and in &lt;&lt;Bbl Jn 1:16 &gt;&gt; He pours Himself into us.
* &lt;&lt;Bbl Php 2:7 &gt;&gt; displays two pourings  --  first into humanity, second into human death.
* To say someone's blood was poured out meant that he had died by violence (&lt;&lt;Bbl Mt 23:35 &gt;&gt; presents a similar use of the verb).  &lt;&lt;Bbl Ps 22:14 &gt;&gt;-15  gives the poignant description of violence.
* Pouring also evokes ritual sacrifice of the OT, note &lt;&lt;Bbl 2Tim 3:6 &gt;&gt;.
!!!! Destiny
* &lt;&lt;Bbl Ps 16:6 &quot;&quot; note &gt;&gt;
!!!! [[Drunkenness]]
!!!! [[Judgment]]
* &lt;&lt;Bbl Jer 13:12 &gt;&gt;-14
* &lt;&lt;Bbl Mt 20:22 &gt;&gt;-23 , &lt;&lt;Bbl Mt 26:37 &gt;&gt;-42 , &lt;&lt;Bbl Mk 14:33 &gt;&gt;-36  (asking not if it were possible, but if it were willed), &lt;&lt;Bbl Jn 18:11 &gt;&gt;, &lt;&lt;Bbl Rev 14:9 &gt;&gt;-10 , &lt;&lt;Bbl Rev 16:19 &gt;&gt;, &lt;&lt;Bbl Rev 17:2 &gt;&gt;-4  (see &lt;&lt;Bbl Jer 51:7 &gt;&gt;), 18:6.
* I am also referred to the Martyrdom of Polycarp 14:2.</pre>
</div>
<div title="CustomMarkup" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="features">
<pre>Sometimes it's necessary to include custom HTML markup in the {{{&lt;head&gt;}}} of a TiddlyWiki file - typically for compatibility with ad serving software, external libraries, or for custom meta tags. The CustomMarkup operation defines four shadow tiddlers whose contents are spliced into the saved HTML file. (If you do a view/source you'll see the markers referred to below).
|!Title |!Location |!Marker |
|MarkupPreHead |Start of the {{{&lt;head&gt;}}} section |{{{&lt;!--PRE-HEAD-START--&gt;}}} |
|MarkupPostHead |End of the {{{&lt;head&gt;}}} section |{{{&lt;!--POST-HEAD-START--&gt;}}} |
|MarkupPreBody |Start of the {{{&lt;body&gt;}}} section |{{{&lt;!--PRE-BODY-START--&gt;}}} |
|MarkupPostBody |End of the {{{&lt;body&gt;}}} section |{{{&lt;!--POST-BODY-START--&gt;}}} |
MarkupPreHead is the only one with shadow content: a link to the default location of the RSS feed.</pre>
</div>
<div title="CustomStyleSheet" creator="psd" modifier="jermolene" created="201102111106" modified="201110201351" tags="features">
<pre>You can skin TiddlyWiki with a special StyleSheet tiddler containing your own CSS style sheet declarations. Unlike hacking the HTML directly, the StyleSheet tiddler withstands upgrading to a new version of the TiddlyWiki code (see HowToUpgrade). You can also use the NestedStyleSheets feature to structure your CSS declarations.

The ExampleStyleSheet shows some of the basic options you can control (see AnotherExampleStyleSheet for more complex examples). SaveChanges and then click refresh in your browser to see StyleSheet changes. Any errors in your CSS syntax will be caught and displayed, but they shouldn't stop TiddlyWiki from working.
</pre>
</div>
<div title="Customisation" creator="psd" modifier="jermolene" created="201102111106" modified="201111031733">
<pre>You can customise the appearance and behaviour of TiddlyWiki to almost any degree you want:
* Install [[Plugins]] to extend the core functionality
* Use the ColorPalette to change the basic colour scheme
* Use built in [[Formatting|Basic Formatting]] techniques
* Create a CustomStyleSheet for finer grained control over the appearance
* Customise the PageTemplate, ViewTemplate or EditTemplate to change the composition of the page and the layout of individual tiddlers
* Further SpecialTiddlers
* Use off-the-shelf themes from [[TiddlyThemes|http://tiddlythemes.com/]]
* Visit the [[Configuration]] summary to see all the special configuration tiddlers
* Use TiddlyBookmarklets for low level hacking of TiddlyWiki documents
</pre>
</div>
<div title="DOMTweaksPlugin" modifier="SDM" created="201012222050" tags="systemConfig excludeLists">
<pre>/***
|Name|DOMTweaksPlugin|
|Source|http://www.TiddlyTools.com/#DOMTweaksPlugin|
|Version|1.0.1|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Description|set DOM element IDs, add/remove classes and/or reposition rendered elements|
This plugin defines several useful macro-based functions for performing direct manipulation of DOM elements, including setting element ID's, moving elements, and adding/removing classnames from elements.
!!!!!Usage
&lt;&lt;&lt;
{{{&lt;&lt;DOM setID id force&gt;&gt;}}}
&gt;assign an ID to the DOM element in which this macro is being rendered.  If the current DOM element already has an ID, the new ID will //not// replace  the current ID, unless you include the additional &quot;''force''&quot; keyword parameter.  (note: requiring this extra parameter helps minimize any problems that may arise if an existing, system-assigned ID is unintentionally re-assigned due to mis-placement of the macro... e.g., renaming 'mainMenu' or 'header' is NOT a good idea, and is prevented unless &quot;force&quot; is used)
{{{&lt;&lt;DOM move id&gt;&gt;}}}
&gt;Move any uniquely identified DOM element to the current rendering location.  Allows dynamic relocation of standard TW elements such as 'sidebar', 'mainMenu', as well as any other DOM elements that have an ID assigned to them (via the {{{&lt;&lt;DOM setID id&gt;&gt;}}} macro).  You can also use this macro to move [[NestedSlidersPlugin]]-generated slider/floating panels that have had an ID assigned to them (using either the {{{&lt;&lt;DOM setID id&gt;&gt;}}} macro or the NestedSlidersPlugin {{{#panelID:}}} syntax).
{{{&lt;&lt;DOM addclass classname&gt;&gt;}}}
&gt;add a classname to the DOM element in which this macro is being rendered
{{{&lt;&lt;DOM removeClass classname&gt;&gt;}}}
&gt;remove a classname from the DOM element in which this macro is being rendered
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2007.07.20 [1.0.1] in setID handler, check for existing ID so multiple elements don't get the same ID.  Also added basic parameter checks.
2007.07.20 [1.0.0] initial release
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.DOMTweaksPlugin= {major: 1, minor: 0, revision: 1, date: new Date(2007,7,20)};
config.macros.DOM= {
    handler: function(place,macroName,params) {
        if (!params.length) return;
        switch (params[0].toUpperCase()) {
            case &quot;SETID&quot;:
                if (!params[1]) return;
                if (place.id==params[1]) break; // already has this ID... do nothing!
                if (document.getElementById(params[1])) // if ID is already used by something else
                    displayMessage(&quot;DOMTweaks: ID already in use: '&quot;+params[1]+&quot;'&quot;);
                else if (!place.id.length || params[2]&amp;&amp;params[2].toUpperCase==&quot;FORCE&quot;)
                    place.id=params[1]; // set (or clear) the ID
                else
                    displayMessage(&quot;DOMTweaks: to re-assign existing ID for '&quot;+place.id+&quot;', use the 'Force' option... Luke. :-)&quot; );
                break;
            case &quot;MOVE&quot;:
                if (!params[1]) return;
                var e=document.getElementById(params[1]); if (e) place.insertBefore(e,null);
                break;
            case &quot;ADDCLASS&quot;:
                if (!params[1]) return;
                if (addClass instanceof Function) addClass(place,params[1]);
                break;
            case &quot;REMOVECLASS&quot;:
                if (!params[1]) return;
                if (removeClass instanceof Function) removeClass(place,params[1]);
                break;
        }
    }
}
//}}}</pre>
</div>
<div title="DOMViewerPlugin" modifier="ELSDesignStudios" created="200709280054" modified="201011301909" tags="systemConfig excludeLists">
<pre>/***
|Name|DOMViewerPlugin|
|Source|http://www.TiddlyTools.com/#DOMViewerPlugin|
|Version|1.8.1|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Description|display internal Document Object Model for wiki-formatted content|
Whenever TiddlyWiki renders a given tiddler, it creates a 'tree' of DOM (Document Object Model) elements that represent the information that is displayed by the browser.  You can use the ''DOMViewer'' macro to examine the internal DOM elements that are produced by TiddlyWiki's formatter (the 'wikifier'), or elements directly produced by embedded macros that create custom formatted output.  This can be particularly helpful when trying to fine tune the layout and appearance of your tiddler content.
!!!!! Usage/Example:
&lt;&lt;&lt;
syntax: {{{&lt;&lt;DOMViewer rows:nn indent:xxxx inline path elementID|tiddlertitle&gt;&gt;}}}

DOMViewer creates a textarea control and reports the DOM tree for the current 'insertion point' where the DOMViewer macro is being placed.  ''inline'' flag uses TiddlyWiki rendering instead of textarea control. ''path'' shows the relative location of each child element in the DOM tree, using subscript notation, ''[elementID or tiddlertitle]'' displays DOM elements starting from the node with the specified ID.  If that ID is not found in the DOM tree, the macro attempts to open a tiddler with that title and then displays the DOM elements that were rendered for that tiddler.

&lt;&lt;DOMViewer tiddlerDOMViewerPlugin&gt;&gt;
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2010.11.30 1.8.1 use story.getTiddler()
2007.09.27 1.8.0 split DOMViewer macro into separate plugin (see [[TidIDEPlugin]])
|please see [[TidIDEPluginInfo]] for additional revision details|
2006.04.15 0.5.0 Initial ALPHA release. Converted from inline script.
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.DOMViewerPlugin= {major: 1, minor: 8, revision: 1, date: new Date(2010,11,30)};
config.macros.DOMViewer = {
    handler: function(place,macroName,params) {
        // set default params
        var inline=false;
        var theRows=15;
        var theIndent=&quot;|  &quot;;
        var showPath=false;
        var theTarget=place;
        // unpack options parameters
        if (params[0]=='inline') { inline=true; theIndent=&quot;&gt;&quot;; params.shift(); }
        if (params[0]&amp;&amp;(params[0].substr(0,7)==&quot;indent:&quot;)) { theIndent=params[0].substr(7); params.shift(); }
        if (params[0]&amp;&amp;(params[0].substr(0,5)==&quot;rows:&quot;)) { theRows=params[0].substr(5); params.shift(); }
        if (params[0]=='path') { showPath=true; params.shift(); }
        if (params[0]) { var title=params[0]
            theTarget=document.getElementById(title);
            if (!theTarget)
                if (store.getTiddler(title)!=undefined) {
                    theTarget=story.getTiddler(title);
                    if (!theTarget &amp;&amp; confirm(&quot;DOMViewer asks:\n\nIs it OK to open tiddler '&quot;+title+&quot;' now?&quot;)) {
                        story.displayTiddler(null,title,1,null,null,false);
                        theTarget=story.getTiddler(title);
                    }
                }
            params.shift();
        }
        // generate and display DOM tree
        if (inline) {
            var out=this.getNodeTree(theTarget,theIndent,showPath,inline);
            wikify(out,place);
        }
        else {
            var out=this.getNodeTree(theTarget,theIndent,showPath,inline);
            var css=&quot;.DOMViewer{width:100%;font-size:8pt;color:inherit;background:transparent;border:0px;}&quot;;
            setStylesheet(css,&quot;DOMViewerStylesheet&quot;);
            var theTextArea=createTiddlyElement(place,&quot;textarea&quot;,null,&quot;DOMViewer&quot;,out);
            theTextArea.rows=theRows;
            theTextArea.cols=60;
            theTextArea.wrap=&quot;off&quot;;
            theTextArea.theTarget=theTarget;
            theTextArea.theIndent=theIndent;
            theTextArea.showPath=showPath;
        }
    },
    getNodeTree: function(theNode,theIndent,showPath,inline,thePrefix,thePath) {
        if (!theNode) return &quot;&quot;;
        if (!thePrefix) thePrefix=&quot;&quot;;
        if (!thePath) thePath=&quot;&quot;;
        var mquote='&quot;'+(inline?&quot;{{{&quot;:&quot;&quot;);
        var endmquote=(inline?&quot;}}}&quot;:&quot;&quot;)+'&quot;';
        // generate output for this node
        var out = thePrefix;
        if (showPath &amp;&amp; thePath.length)
            out += (inline?&quot;//&quot;:&quot;&quot;)+thePath.substr(1)+&quot;:&quot;+(inline?&quot;//&quot;:&quot;&quot;)+&quot;\r\n&quot;+thePrefix;
        if (theNode.className==&quot;DOMViewer&quot;)
            return out+'[DOMViewer]\r\n'; // avoid self-referential recursion
        out += (inline?&quot;''&quot;:&quot;&quot;)+theNode.nodeName.toUpperCase()+(inline?&quot;''&quot;:&quot;&quot;);
        if (theNode.nodeName==&quot;#text&quot;)
            out += ' '+mquote+theNode.nodeValue.replace(/\n/g,'\\n')+endmquote;
        if (theNode.className)
            out += ' class='+mquote+theNode.className+endmquote;
        if (theNode.type)
            out += ' type='+mquote+theNode.type+endmquote;
        if (theNode.id)
            out += ' id='+mquote+theNode.id+endmquote;
        if (theNode.name)
            out += &quot; &quot;+theNode.name+(theNode.value?&quot;=&quot;+mquote+theNode.value+endmquote:&quot;&quot;);
        if (theNode.href)
            out += ' href='+mquote+theNode.href+endmquote;
        if (theNode.src)
            out += ' src='+mquote+theNode.src+endmquote;
        if (theNode.attributes &amp;&amp; theNode.getAttribute(&quot;tiddlyLink&quot;)!=undefined)
            out += ' tiddler='+mquote+theNode.getAttribute(&quot;tiddlyLink&quot;)+endmquote;
        out += &quot;\r\n&quot;;
        // recursively generate output for child nodes
        thePath=thePath+&quot;.&quot;+theNode.nodeName.toLowerCase();
        thePrefix=theIndent+thePrefix;
        for (var i=0;i&lt;theNode.childNodes.length;i++) {
            var thisChild=theNode.childNodes.item(i);
            var theNum=(inline?&quot;~~&quot;:&quot;(&quot;)+(i+1)+(inline?&quot;~~&quot;:&quot;)&quot;);
            out += this.getNodeTree(thisChild,theIndent,showPath,inline,thePrefix,thePath+theNum);
        }
        return out;
    }
}
//}}}</pre>
</div>
<div title="Daniel-01-01-note" modifier="SDM" created="201012110203" modified="201112120346" tags="Comment" book_key="701001a">
<pre>Words relating to wisdom are found nine times in this chapter.  The theme is primary throughout &lt;&lt;Bbl Daniel 1:2 abbr &gt;&gt;-4    Vessels for the temple, youths for the court.
1:5 The king is trying to &quot;improve his stock.&quot;
1:7 4:8 gives some insight into the Belteshazzar.
1:8 Daniel was the exception, as Hosea prophesied (9:3).
    Daniel may have had in mind the &lt;&lt;Bbl Proverbs 23:1 &gt;&gt;-8 .  &lt;&lt;Bbl Daniel 1:4 abbr &gt;&gt; and &lt;&lt;Bbl Pr 1:4 &gt;&gt; have a provocative correspondence.  Also, of course, he was anxious to keep the dietary law.

2

2:34    The Judgment strikes at the sin.
2:38    This seems like an ultimate statement of God delegating power to unregenerate man.
2:39    This is announced in 5:28.
2:47    Nabuchednezer acknowledges the supremacy of God, but later events (like 3:1) reveal this confession as incomplete.

&lt;&lt;Bbl Daniel 3:1 abbr &gt;&gt;   About ninety feet tall and nine feet wide, and seemingly inspired directly by his dream.
3:5-6   An attempt to simulate the power of the proclamation by trumpet and Judgment by fire that is God's alone.
3:8 These Chaldeans are ungrateful for Daniel's deliverance (2:24) and are possibly motivated by envy by the favor shown in 2:48.
3:12    Possibly they are afraid to bring an allegation against &lt;&lt;Bbl Daniel 3:28 &gt;&gt;    Compare &lt;&lt;Bbl Rom 12:1 &gt;&gt;!
3:19    As the king's countenance increased in wrath, so the furnace was increased in fury.

4   The &quot;King's Soliloquy.&quot;
4:27    An interesting &quot;How-to&quot; of repentance.

5:23    This is Belshazzar's sin; he wanted to hold God in his hand (vessels for the temple, youths for the court; 1:2-4), while really his life was in God's hand  --  the same hand now inscribing the Judgment.
5:29    Accustomed to idolatries, the king tries to make it a business deal according to his promise in vs. 17.  The next verse is a black irony.

6:5 Compare &lt;&lt;Bbl Neh 6:13 &gt;&gt;.  Perhaps they do not so much expect that Daniel will stand firm.
6:8 &lt;&lt;Bbl Esther 1:19 &gt;&gt; refers to this formula.
6:10    see Solomon's prayer, &lt;&lt;Bbl 1King 8:48 &gt;&gt;-53 .   This was not an attempt to provoke, but rather Daniel's routine which was unchanged by circumstance, as the next verse proves.
&lt;&lt;Bbl Daniel 6:14 abbr &gt;&gt; 18-20    These verses show the distress of the king, as vs. 23 shows his happiness at Daniel's deliverance.
6:15    This situation seems different from &lt;&lt;Bbl Mt 14:9 &gt;&gt;, &lt;&lt;Bbl Mk 6:26 &gt;&gt;, where Herod really desires the death of the righteous John; apparently these lawyers had found a tactic which outfoxed Darius.
6:16,19,19  These verses show the faith and intercession of the king, after his own attempts to free Daniel were exhausted.  His prayers had the outcome of faith; I think we could make him an example of prayer.
6:17    Here the stone and the seal remind us of the gospels.
6:22    Daniel does not regard his defiance of the edict as a sin against the king.  Perhaps he sees it as a contrivance of the king's enemies and thus not true law.  This interpretation would agree with 3:28.

7:9-14  These descriptions show the Father and the Son .
&lt;&lt;Bbl Daniel 7:17 abbr &gt;&gt;-1 8  The earth and the Highest One  are contrasted.

8:26-27 See 10:1,12:4.

9:2 Refers to &lt;&lt;Bbl Jer 29:10 &gt;&gt;.
&lt;&lt;Bbl Jer 9:19 abbr &gt;&gt; An earnest and discerning appeal for the glory of God.
9:20    Compare &lt;&lt;Bbl Neh 1:6 &gt;&gt;.
&lt;&lt;Bbl Daniel 9:26 abbr &gt;&gt;  Compare &lt;&lt;Bbl Mt 27:51 &gt;&gt;-53 .

&lt;&lt;Bbl Daniel 10:1 abbr &gt;&gt;  See 8:26-27.

11:32   exploits   (KJV)  Check out the English word's etymology.
11:36   This is the great chronological break for pre-millenialists.

12:3    See &lt;&lt;Bbl Pr 11:30 &gt;&gt;, &quot;He who is wise ...&quot;
12:4    See 8:26.  </pre>
</div>
<div title="Darkness" creator="SDM" modifier="SDM" created="201304262133" modified="201304262158" book_key="" changecount="5">
<pre>* Gollum's riddle is a wonderful description
* //Night//
* &lt;&lt;Bbl Ps 30:5 &gt;&gt; 
* &lt;&lt;Bbl Ps 139:12 &gt;&gt;
* &lt;&lt;Bbl Jn 1:5&gt;&gt;
* &lt;&lt;Bbl Jn 8:12&gt;&gt;
* &lt;&lt;Bbl Jn 3:19&gt;&gt;-21
* &lt;&lt;Bbl 1The 5:4 &gt;&gt;-8 
* Always active.  A one-way operation.  Creates [[Security]].
* [[Darkness]] can never penetrate light, because light is a presence, but darkness is only light's absence.  Darkness flees to precisely the degree that light is present.  Light &quot;more than overcomes&quot; (it would make a good pulpit demonstration).
* [[Darkness]] for verses that directly contrast the two.
* When you check a plank for straightness, it is light -- the absence of shadow -- that lets you make the assessment.  Light is as straight as straight can be.  </pre>
</div>
<div title="Date Formats" creator="colmbritton" modifier="matt" created="201102161139" modified="201102211415">
<pre>Several [[Macros|MacrosContent]] including the [[Today Macro|today macro]] take a [[Date Format String|Date Formats]] as an optional argument. This string can be a combination of ordinary text, with some special characters that get substituted by parts of the date:
* {{{DDD}}} - day of week in full (eg, &quot;Monday&quot;)
* {{{ddd}}} - short day of week (eg, &quot;Mon&quot;)
* {{{DD}}} - day of month
* {{{0DD}}} - adds a leading zero
* {{{DDth}}} - adds a suffix
* {{{WW}}} - ~ISO-8601 week number of year
* {{{0WW}}} - adds a leading zero
* {{{MMM}}} - month in full (eg, &quot;July&quot;)
* {{{mmm}}} - short month (eg, &quot;Jul&quot;)
* {{{MM}}} - month number
* {{{0MM}}} - adds leading zero
* {{{YYYY}}} - full year
* {{{YY}}} - two digit year
* {{{wYYYY}}} - full year with respect to week number
* {{{wYY}}} two digit year with respect to week number
* {{{hh}}} - hours
* {{{0hh}}} - adds a leading zero
* {{{hh12}}} - hours in 12 hour clock
* {{{0hh12}}} - hours in 12 hour clock with leading zero
* {{{mm}}} - minutes
* {{{0mm}}} - minutes with leading zero
* {{{ss}}} - seconds
* {{{0ss}}} - seconds with leading zero
* {{{am}}} or {{{pm}}} - lower case AM/PM indicator
* {{{AM}}} or {{{PM}}} - upper case AM/PM indicator

!!!!Examples
{{{DDth MMM YYYY}}} - 16th February 2011
{{{DDth mmm hh:mm:ss}}} - 16th Feb 2011 11:38:42</pre>
</div>
<div title="David" modifier="SDM" created="201205280159" modified="201212211845" book_key="">
<pre>!! Warrior Leader
* &lt;&lt;Bbl 2Sam 3:36 &gt;&gt; //the people took note of it...//
!! Worship Leader
* The tabernacle of David
* Moving in a confidence of consecration, &lt;&lt;Bbl 1Sam 21:1 &gt;&gt;-6
* What is said about the Spirit falling on David?
!! Suffering
* David vanquished Goliath.  How remarkable that he later spent so much time fleeing enemies.
!! Misc
* [[Servant]] of the Lord
* [[Favor]]
* Friend of the humble -- &lt;&lt;Bbl 1Sam 22:2 &gt;&gt;</pre>
</div>
<div title="Death" modifier="SDM" created="201004120330" modified="201211161337" book_key="">
<pre>* Sheol may be derived from the root, &quot;to ask.&quot;  Cf &lt;&lt;Bbl Job 14:10 &gt;&gt;.  Hades means &quot;the unseen.&quot;
* Paul uses a word meaning to unloose in &lt;&lt;Bbl Php 1:23 &gt;&gt;, &lt;&lt;Bbl 2Tim 4:6 &gt;&gt;; see Vine's, p.294-295.
* first death:      &lt;&lt;Bbl Heb 9:27 &gt;&gt;.
* second death:     &lt;&lt;Bbl Rev 20:6 &gt;&gt;, &lt;&lt;Bbl 2Cor 7:10 &gt;&gt;.
* desire for:   &lt;&lt;Bbl Num 11:15 &gt;&gt;,&lt;&lt;Bbl Num 14:2 &gt;&gt;,&lt;&lt;Bbl Num 20:3 &gt;&gt;; &lt;&lt;Bbl Ecc 4:2 &gt;&gt;-3 , &lt;&lt;Bbl Ecc 6:3 &gt;&gt;-5 Kng 19:4; &lt;&lt;Bbl Job.3 &gt;&gt;, &lt;&lt;Bbl Job 10:18 &gt;&gt;-22 , &lt;&lt;Bbl Job 11:20 &gt;&gt;, &lt;&lt;Bbl Job 14:13 &gt;&gt;-14 ; &lt;&lt;Bbl Jon 4:3 &gt;&gt;-4 ; &lt;&lt;Bbl Lk 23:30 &gt;&gt; (OT ref.?); &lt;&lt;Bbl Rev 6:16 &gt;&gt;, &lt;&lt;Bbl Rev 9:6 &gt;&gt;
* fear of:          &lt;&lt;Bbl Heb 2:15 &gt;&gt;
* wish for death (suicide):
** Jesus was thus tempted
** Jonah on the boat
** Jonah in his complaint to God
** Isaiah
** Hagar
** Saul
* hell:         &lt;&lt;Bbl Ez 26:20 &gt;&gt;, &lt;&lt;Bbl Ez 32:24 &gt;&gt;
* keys of death and [[Hell]]:  &lt;&lt;Bbl Rev 1:18 &gt;&gt;
* and [[Sin]]:      &lt;&lt;Bbl Pr 8:36 &gt;&gt;
* &quot;fallen asleep&quot; &lt;&lt;Bbl Act 13:36 &gt;&gt; and &lt;&lt;Bbl 2Pt 3:4 &gt;&gt; indicate that the phrase was not innovated by our Lord.  &lt;&lt;Bbl Mt 9:24 &gt;&gt;, &lt;&lt;Bbl Mt 27:52 &gt;&gt;; &lt;&lt;Bbl Mk 5:39 &gt;&gt;; &lt;&lt;Bbl Jn 11:11 &gt;&gt;-14 ; &lt;&lt;Bbl Act 7:60 &gt;&gt;; &lt;&lt;Bbl 1Cor 15:6 &gt;&gt;; &lt;&lt;Bbl 1Thes 4:13 &gt;&gt;-15 , &lt;&lt;Bbl 1Thes 5:10 &gt;&gt;.
* misc.:        &lt;&lt;Bbl 2Sam 12:23 &gt;&gt;,&lt;&lt;Bbl 2Sam 14:14 &gt;&gt;; &lt;&lt;Bbl Job 3:13 &gt;&gt;-19 ; &lt;&lt;Bbl Ps 6:5 &gt;&gt;,&lt;&lt;Bbl Ps 116:15 &gt;&gt;; &lt;&lt;Bbl Ecc 7:2 &gt;&gt;; &lt;&lt;Bbl Is 57:1 &gt;&gt;; &lt;&lt;Bbl Ez 19:23 &gt;&gt;2
* the great question:  &lt;&lt;Bbl Job 14:14 &gt;&gt;
* {{anti{[[Life]]}}}
* [[Murder]]</pre>
</div>
<div title="Debt" modifier="SDM" created="201010291417">
<pre>spiritual -- &lt;&lt;Bbl Rom 1:14 &gt;&gt;, &lt;&lt;Bbl Rom 13:8 &gt;&gt;
financial -- &lt;&lt;Bbl Pr 22:7 &gt;&gt;; &lt;&lt;Bbl Rom 13:8 &gt;&gt;
* [[Wealth]]
* [[Poverty]]
* [[Resources-Personal]]</pre>
</div>
<div title="Deceit" modifier="SDM" created="201004120330" modified="201211161327" book_key="">
<pre>* [[Subversion]], [[Counterfeit]], [[Secrecy]]
* //deception, lying, lie, guile//
* [[Hypocrisy]]
* {{anti{[[Truth]]}}}
* &lt;&lt;Bbl Jer 24:27 &gt;&gt;, &lt;&lt;Bbl Act 5:4 &gt;&gt;
* &lt;&lt;Bbl Is 28:15 &gt;&gt; -- //we have made lies our refuge//
* E.T. Welch, __Addictions__, chapter 9 //Turning from Lies//.
* </pre>
</div>
<div title="DefaultTiddlers" creator="psd" modifier="SDM" created="201004142148" modified="201303010158" tags="menu excludeLists" book_key="">
<pre>[[About These Notes]]
[[Random Tiddler]]</pre>
</div>
<div title="DefaultTiddlers shadows" creator="matt" modifier="jon" created="201102111436" modified="201201271331" tags="shadow">
<pre>This tiddler contains a list of tiddlers that are opened automatically when you load the tiddlywiki.
The default is:
{{{
[[GettingStarted]]
}}}

An example could be:
{{{
[[HelloThere]]
[[Reference]]
[[Features]]
}}}
Note you can also put filters into your DefaultTiddlers tiddler. For instance to open all tiddlers tagged with blog on startup:
{{{
[tag[blog]]
}}}
</pre>
</div>
<div title="DeleteTiddlerCommand" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="commands">
<pre>Deletes the current tiddler. A confirmation dialogue is displayed unless disabled with the ConfirmBeforeDeleting checkbox in AdvancedOptions. It is used with the ToolbarMacro like this:
{{{
&lt;&lt;toolbar deleteTiddler&gt;&gt;
}}}</pre>
</div>
<div title="Deliverance" modifier="SDM" created="201004120330">
<pre>* &lt;&lt;Bbl Acts 12:5 &gt;&gt;-19  -- Six stages of deliverance
* &lt;&lt;Bbl Ps 15:15 &gt;&gt;</pre>
</div>
<div title="Demon" modifier="SDM" created="201004120330" modified="201012061525">
<pre>&lt;&lt;Bbl Hos 4:12 &gt;&gt;; &lt;&lt;Bbl Dt 32:17 &gt;&gt;; &lt;&lt;Bbl Lv 17:7 &gt;&gt;; &lt;&lt;Bbl 2Chr 11:15 &gt;&gt;
[[Satan]]</pre>
</div>
<div title="Denial" modifier="SDM" created="201012280057" modified="201208061448" book_key="">
<pre>* //'Peace, peace' when there is no peace//
* [[Error]]</pre>
</div>
<div title="Depravity" modifier="SDM" created="201010221523" modified="201211181646" book_key="">
<pre>* [[Broken]], [[Sin]], [[Wickedness]]
* @@color:indigo;Man makes evil like a bee makes honey@@ // -- William Golding//
* @@color:brown;There are no just people  --  merely hearts more or less lacking in justice.@@ // -- A. Camus//
* @@color:indigo; I am afraid that my people will believe that Christ died for their righteousness and not for their sins.@@  // --  M. Luther//
* AA //once an addict, always an addict//</pre>
</div>
<div title="Desecration" modifier="SDM" created="201202151931" modified="201211161338" book_key="">
<pre>* &lt;&lt;Bbl Jer 51:51 &gt;&gt;
* &lt;&lt;Bbl Ps 74:5 &gt;&gt; or thereabouts
* Man of lawlessness
* [[Blasphemy]], [[Sacrilege]]
* {{anti{[[Holiness]]}}}</pre>
</div>
<div title="Despair" modifier="SDM" created="201004120330" modified="201206182103" book_key="">
<pre>* &lt;&lt;Bbl Job 2:9 &quot;&quot; note &gt;&gt;.
* The doctor suggested that the purse of any fourteen-year-old girl ought to have a condom ... reminiscent perhaps of the cyanide pill in a pilot's crash kit.
* [[Death]], //suicide.//</pre>
</div>
<div title="Deut-01-01-note" modifier="SDM" created="201010310343" modified="201211230240" tags="Comment" book_key="480001a">
<pre>5:15   Slavery, in which there was no day of rest.  See &lt;&lt;Bbl Ex 16:23 &quot;&quot; note &gt;&gt;.  Also, slaves were freed every sabbatical year, &lt;&lt;Bbl Ex 21:2 &gt;&gt;.

&lt;&lt;Bbl Dt 6:4 abbr &gt;&gt; ''Hear, O Israel!''  Christ gave this full credence, which could help a Muslim accept that His followers are not polytheists.
6:9 See 11:20.
6:11    see &lt;&lt;Bbl Neh 9:25 &gt;&gt;

&lt;&lt;Bbl Dt 9:9 abbr &gt;&gt; Moses fasted, then, eighty days.  With water this is humanly possible, but as he states that he neither ate nor drank, God must have sustained him supernaturally.

11:20   See 6:9.

17:14-16    Solomon violated ALL of these prohibitions.

23:3-6  In //''??? 18:1-3''//  this law is broadened to mean that intermarriage with the two peoples is forbidden.  But the book of Ruth finds no such meaning.
23:13   The world deals with wrong by ignoring it.  Stench and disease are the results.  We, however, deal with wrong by burying it.  Holiness does not mean pretending sin does not exist.  It means being personally equipped to put it away.  As Christians we actually deal with the crap of the world which the world refuses to acknowledge.  We handle it safely and cleanly.
    Compare &lt;&lt;Bbl Lk 10:31 &gt;&gt;.

24:1-3  See exegesis at [[Divorce]].
24:5    The verse for newlyweds  --  and the origin of that very concept in our culture.
&lt;&lt;Bbl Dt 24:10 abbr &gt;&gt;-11    This respect for physical or domestic privacy is summed up for the British in the words, &quot;A man's home is his castle.&quot;


28:11-14    &lt;&lt;Bbl 1Jn 5:3 &gt;&gt;

&lt;&lt;Bbl Dt 29:14 abbr &gt;&gt;-21 :  see &lt;&lt;Bbl Mt 12:21 &gt;&gt;, &lt;&lt;Bbl Jn 8:24 &gt;&gt;  --  the &quot;unforgivable sin&quot;.
29:29       God's place, our place.
{{hilite_2{
The secret things belong to Yahweh our God; but the things that are revealed belong to us and to our children forever, that we may do all the words of this law.
}}}
31:24-26    Joshua is commanded to read the Book carefully, &lt;&lt;Bbl Josh 1:8 &gt;&gt;-9 .  </pre>
</div>
<div title="Dev-Overview" modifier="SDM" created="201209021920" modified="201303050416" tags="wiki" book_key="">
<pre>!!! Testing
* &lt;&lt;showPopup tiddler:[[John-01-01]] tip:&quot;Do your best&quot; &gt;&gt; -- no local CSS applied
* &lt;&lt;showPopup tiddler:[[Num-13-03]] tip:[[Num-13-03]] popupClass:&quot;holyquote&quot; &gt;&gt; -- CSS.  Also source tiddler has two links at bottom-right; this can serve as a model for all others. 
* __&lt;&lt;showPopup tiddler:[[Num-13-03]] tip:[[Num-13-03]] popupClass:&quot;holyquote&quot; &gt;&gt;__ --  Some kind of link formatting is needed, like this.
* &lt;&lt;showPopup tiddler:[[Num-13-03]] tip:&quot;Use open button to make the passage stick open&quot; buttonClass:&quot;bibleLink&quot; popupClass:&quot;holyquote&quot; &gt;&gt; --  like this?
{{annotation{
Late Feb 2013 -- added new transclusion macro from Yakov and it appears to work well.  Next would be great to re-enable the Prev/Next buttons.
}}}
----
* [[Wiki-FunctionalGoals]]
* [[BibleHyperlink]] ... [[BibleHyperlinkInfo]]
* [[Bible-Index]] {{{ for Bible Text Text-commnentary}}} [[Topic-Index]] {{{ for Topics }}}
* [[Wiki-ToDo]]
* [[Wiki-WEB-Import]]
!! Approaches and Methods
* [[Wiki-Link-Scripture--Methods]]
* [[Wiki-Tagged]]
* [[HowTo]]
* [[Wiki-Usage-Tags]]
* [[Wiki-UserTasks]]
* [[Wiki_Resources]]

&lt;&lt;tiddler HideTiddlerTags&gt;&gt;</pre>
</div>
<div title="DeveloperDocumentation" creator="blaine" modifier="jermolene" created="201102111259" modified="201111031824" tags="community help">
<pre>TiddlyWiki developer documentation is being built up at http://tiddlywikidev.tiddlyspace.com/.

Michael Mahemoff has written a very helpful outline of the architecture of ~TiddlyWiki: [[Part 1|http://softwareas.com/tiddlywiki-internals-1-of-3-architectural-concepts]], [[Part 2|http://softwareas.com/tiddlywiki-internals-2-of-3-list-of-javascript-files]] and [[Part 3|http://softwareas.com/tiddlywiki-internals-3-of-3-key-javascript-classes-and-files]].
</pre>
</div>
<div title="Diligence" modifier="SDM" created="201301070049" modified="201301070100" book_key="">
<pre>* {{anti{[[Procrastination]]}}}
* //Know well the condition of your flocks//</pre>
</div>
<div title="DisableWikiLinksList" modifier="SDM" created="200612201922" modified="201301072152" tags="stylesheet excludeLists" book_key="">
<pre>Adoni-Zedek
Adoni-Bezek

URLs
FoO (family of origin)
BeBroken

HowTo To-Do ToDo
FireFox
PalmOne
SafeEyes
DansGuardian
DreamHost
PortableApps
CherishTheCross
SharePoint
OutReach
TEK-Systems KForce
NetID
NiceForms
O-Desk ODesk
OpenID
PDFs DVDs CDs
SX100
NiMH
DejaVu San-Serif
AutoSave
HTML5 CSS3 PHP5
PayPal
PostgreSQL
SnappyWords
PottyBot
SoF
RPGs
Saint-ExupÃÂ¯ÃÂ¿ÃÂ½ry
AmEx
Aubrey-Maturin
BoD BoM
Full-Time Part-Time

A-Z

TiddlyWiki TiddlyTools TiddlyTech TiddlySpace
WikiWord
$1 $2 $3 $4 $5 $6 A-Z
PrimaryDark PrimaryLight PrimaryMid PrimaryPale
SecondaryDark SecondaryLight SecondaryMid SecondaryPale
TertiaryDark TertiaryLight TertiaryMid TertiaryPale
QuaternaryPale QuaternaryLight QuaternaryMid QuaternaryDark</pre>
</div>
<div title="DisableWikiLinksPlugin" modifier="SDM" created="200512092239" modified="201211121600" tags="systemConfig excludeLists" book_key="">
<pre>/***
|Name|DisableWikiLinksPlugin|
|Source|http://www.TiddlyTools.com/#DisableWikiLinksPlugin|
|Version|1.6.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Description|selectively disable TiddlyWiki's automatic ~WikiWord linking behavior|
This plugin allows you to disable TiddlyWiki's automatic ~WikiWord linking behavior, so that WikiWords embedded in tiddler content will be rendered as regular text, instead of being automatically converted to tiddler links.  To create a tiddler link when automatic linking is disabled, you must enclose the link text within {{{[[...]]}}}.
!!!!!Usage
&lt;&lt;&lt;
You can block automatic WikiWord linking behavior for any specific tiddler by ''tagging it with&lt;&lt;tag excludeWikiWords&gt;&gt;'' (see configuration below) or, check a plugin option to disable automatic WikiWord links to non-existing tiddler titles, while still linking WikiWords that correspond to existing tiddlers titles or shadow tiddler titles.  You can also block specific selected WikiWords from being automatically linked by listing them in [[DisableWikiLinksList]] (see configuration below), separated by whitespace.  This tiddler is optional and, when present, causes the listed words to always be excluded, even if automatic linking of other WikiWords is being permitted.

Note: WikiWords contained in default ''shadow'' tiddlers will be automatically linked unless you select an additional checkbox option lets you disable these automatic links as well, though this is not recommended, since it can make it more difficult to access some TiddlyWiki standard default content (such as AdvancedOptions or SideBarTabs)
&lt;&lt;&lt;
!!!!!Configuration
&lt;&lt;&lt;
&lt;&lt;option chkDisableWikiLinks&gt;&gt; Disable ALL automatic WikiWord tiddler links
&lt;&lt;option chkAllowLinksFromShadowTiddlers&gt;&gt; ... except for WikiWords //contained in// shadow tiddlers
&lt;&lt;option chkDisableNonExistingWikiLinks&gt;&gt; Disable automatic WikiWord links for non-existing tiddlers
Disable automatic WikiWord links for words listed in: &lt;&lt;option txtDisableWikiLinksList&gt;&gt;
Disable automatic WikiWord links for tiddlers tagged with: &lt;&lt;option txtDisableWikiLinksTag&gt;&gt;
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.DisableWikiLinksPlugin= {major: 1, minor: 6, revision: 0, date: new Date(2008,7,22)};

if (config.options.chkDisableNonExistingWikiLinks==undefined) config.options.chkDisableNonExistingWikiLinks= false;
if (config.options.chkDisableWikiLinks==undefined) config.options.chkDisableWikiLinks=false;
if (config.options.txtDisableWikiLinksList==undefined) config.options.txtDisableWikiLinksList=&quot;DisableWikiLinksList&quot;;
if (config.options.chkAllowLinksFromShadowTiddlers==undefined) config.options.chkAllowLinksFromShadowTiddlers=true;
if (config.options.txtDisableWikiLinksTag==undefined) config.options.txtDisableWikiLinksTag=&quot;excludeWikiWords&quot;;

// find the formatter for wikiLink and replace handler with 'pass-thru' rendering
initDisableWikiLinksFormatter();
function initDisableWikiLinksFormatter() {
    for (var i=0; i&lt;config.formatters.length &amp;&amp; config.formatters[i].name!=&quot;wikiLink&quot;; i++);
    config.formatters[i].coreHandler=config.formatters[i].handler;
    config.formatters[i].handler=function(w) {
        // supress any leading &quot;~&quot; (if present)
        var skip=(w.matchText.substr(0,1)==config.textPrimitives.unWikiLink)?1:0;
        var title=w.matchText.substr(skip);
        var exists=store.tiddlerExists(title);
        var inShadow=w.tiddler &amp;&amp; store.isShadowTiddler(w.tiddler.title);
        // check for excluded Tiddler
        if (w.tiddler &amp;&amp; w.tiddler.isTagged(config.options.txtDisableWikiLinksTag))
            { w.outputText(w.output,w.matchStart+skip,w.nextMatch); return; }
        // check for specific excluded wiki words
        var t=store.getTiddlerText(config.options.txtDisableWikiLinksList);
        if (t &amp;&amp; t.length &amp;&amp; t.indexOf(w.matchText)!=-1)
            { w.outputText(w.output,w.matchStart+skip,w.nextMatch); return; }
        // if not disabling links from shadows (default setting)
        if (config.options.chkAllowLinksFromShadowTiddlers &amp;&amp; inShadow)
            return this.coreHandler(w);
        // check for non-existing non-shadow tiddler
        if (config.options.chkDisableNonExistingWikiLinks &amp;&amp; !exists)
            { w.outputText(w.output,w.matchStart+skip,w.nextMatch); return; }
        // if not enabled, just do standard WikiWord link formatting
        if (!config.options.chkDisableWikiLinks)
            return this.coreHandler(w);
        // just return text without linking
        w.outputText(w.output,w.matchStart+skip,w.nextMatch)
    }
}

Tiddler.prototype.coreAutoLinkWikiWords = Tiddler.prototype.autoLinkWikiWords;
Tiddler.prototype.autoLinkWikiWords = function()
{
    // if all automatic links are not disabled, just return results from core function
    if (!config.options.chkDisableWikiLinks)
        return this.coreAutoLinkWikiWords.apply(this,arguments);
    return false;
}

Tiddler.prototype.disableWikiLinks_changed = Tiddler.prototype.changed;
Tiddler.prototype.changed = function()
{
    this.disableWikiLinks_changed.apply(this,arguments);
    // remove excluded wiki words from links array
    var t=store.getTiddlerText(config.options.txtDisableWikiLinksList,&quot;&quot;).readBracketedList();
    if (t.length) for (var i=0; i&lt;t.length; i++)
        if (this.links.contains(t[i]))
            this.links.splice(this.links.indexOf(t[i]),1);
};
//}}}</pre>
</div>
<div title="Disciple" modifier="SDM" created="201004120330" modified="201201130339" book_key="">
<pre>&lt;&lt;Bbl Is 30:20 &gt;&gt;-22; &lt;&lt;Bbl Jn 8:31 &gt;&gt;-32
* &lt;&lt;Bbl Is 50:4 &gt;&gt; //the Lord God has given me the tongue of a disciple ... encourage the weary one with a word.//
* [[Obedience]]</pre>
</div>
<div title="Discipline" modifier="SDM" created="201010252050" modified="201208141224" book_key="">
<pre>*  of God -- &lt;&lt;Bbl Dt 4:36 &gt;&gt;, &lt;&lt;Bbl Dt 8:5 &gt;&gt;; &lt;&lt;Bbl 2Sam 7:14 &gt;&gt;-15 Kng 17:25; &lt;&lt;Bbl 2Chr 33:10 &gt;&gt;-13 ; &lt;&lt;Bbl Job 5:17 &gt;&gt;-18 ; &lt;&lt;Bbl Ps 51:8 &gt;&gt;, &lt;&lt;Bbl Ps 78:34 &gt;&gt;, &lt;&lt;Bbl Ps 83:17 &gt;&gt;-18 , &lt;&lt;Bbl Ps 118:18 &gt;&gt;-19 ; &lt;&lt;Bbl Pr 1:23 &gt;&gt;, &lt;&lt;Bbl Pr 3:11 &gt;&gt;-12 , &lt;&lt;Bbl Pr 15:31 &gt;&gt;; &lt;&lt;Bbl Is 1:5 &gt;&gt;-9 , &lt;&lt;Bbl Is 19:22 &gt;&gt;, &lt;&lt;Bbl Is 28:23 &gt;&gt;-29 ; &lt;&lt;Bbl Jer 46:28 &gt;&gt;; &lt;&lt;Bbl Hos 6:1 &gt;&gt;, &lt;&lt;Bbl Hos 7:12 &gt;&gt;; &lt;&lt;Bbl 1Co 10:31 &gt;&gt;; &lt;&lt;Bbl Heb 12:4 &gt;&gt;-13 Tm 5:20
* refused:      &lt;&lt;Bbl Pr 29:1 &gt;&gt;, &lt;&lt;Bbl Jer 5:3 &gt;&gt;, &lt;&lt;Bbl Jer 6:29 &gt;&gt;; //a hundred blows into a fool//
* bridle, for the stubborn
** &lt;&lt;Bbl Num 21:8 &quot;&quot; note &gt;&gt;
** &lt;&lt;Bbl Pr 26:3 &gt;&gt;
** &lt;&lt;Bbl Ps 32:9 &gt;&gt;

* for Child -- &lt;&lt;Bbl Pr 19:18 &gt;&gt;; &lt;&lt;Bbl Ecc 8:11 &gt;&gt;; &lt;&lt;Bbl 1Tim 4:4 &gt;&gt;-5,
&lt;&lt;Bbl Eph 6:4 abbr &gt;&gt;
{{hilite{
Wise parents realize that not all non-conforming responses of the child deserve to be styled rebellion  //-- John Stott//
}}}
* [[Suffering]], [[Pruning]]
* Discipline-Church. </pre>
</div>
<div title="Discipline-Church" modifier="SDM" created="201112191709" modified="201209221812" book_key="">
<pre>* Book of common prayer. Restitution.
* &lt;&lt;Bbl 1Tim 5:20 &gt;&gt;
* &lt;&lt;Bbl 2Thes 3:14 &gt;&gt; //take special note of that man//
* 1 and 2 Corinthians
* Matthew
* [[Church-Local]]
* [[Reproof]]
* //Disfellowship, shun//
* Douglas Wilson says, //All churches have discipline, in one way or antoher.  If wicked people are not reproved, then it is the righteous who are being disciplined.  It isn't right for good, godly people to be vexed because of wickedness in the church that isn't dealt with.  This means avoiding the difficult issues is not the same as not making a decision -- you've already decided, in favor of the wicked.//
* Douglas Wilson points out that in &lt;&lt;Bbl 1Cor 5:9 &quot;&quot; note &gt;&gt; Paul tells the Corinthians to associate with the wicked of this world, but not with any so-called brother whose ways are evil.  Yet in many churches, we get this precisely reversed.</pre>
</div>
<div title="Discretion" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Pr 22:3 &gt;&gt;, &lt;&lt;Bbl Mt 7:6 &gt;&gt;
&lt;&lt;Bbl Pr 27:12 abbr &gt;&gt;, &lt;&lt;Bbl Amo 5:13 &gt;&gt;, &lt;&lt;Bbl Is 59:15 &gt;&gt;</pre>
</div>
<div title="DiscussionForums" creator="blaine" modifier="jermolene" created="201102111259" modified="201110201351" tags="community help">
<pre>There are two Google Group discussion forums for discussions about ~TiddlyWiki, whether basic entry level questions or more complex development challenges. They are the best places to ask questions about ~TiddlyWiki, and to connect with other enthusiasts:
* A ~TiddlyWiki group for general discussion, bug reports and announcements at http://groups.google.com/group/TiddlyWiki
* A ~TiddlyWikiDev group for discussion about ~TiddlyWiki development at http://groups.google.com/group/TiddlyWikiDev
!~Non-English resources
There are a number of resources for non-English language speakers:
* ~TiddlyWikiFR, in French, at http://groups.google.com/group/TiddlyWikiFR
* ~TiddlyWiki 華語支援論壇, in Chinese, at http://groups.google.com/group/TiddlyWiki-zh
* A guide to [[TiddlyWiki in Japanese|http://www.geocities.jp/potto372/tiddlywiki/tiddlywikinote.html]]
</pre>
</div>
<div title="Dissension" modifier="SDM" created="201209112038" book_key="">
<pre>* Interested in Paul's handling of dissension.
* 2 Thess, &quot;if any man does not listen&quot;
* Corinthians; Galatians</pre>
</div>
<div title="Division" modifier="SDM" created="201112081817" modified="201211161331" book_key="">
<pre>One thing takes on, according to its beholder, either of two absolutely different natures.  The response is the sole determinant.  The Proverbs talk about the law of God that way, and here are some other verses:
!! Polar Reactions
* the word of the cross &lt;&lt;Bbl 1Cor 1:18 abbr &gt;&gt;
* our courage     &lt;&lt;Bbl Php 1:28 &gt;&gt;
* &quot;the ways of the LORD&quot;    &lt;&lt;Bbl Hos 14:9 &gt;&gt;, &lt;&lt;Bbl Pr 10:29 &gt;&gt;
* righteous civil gov't   &lt;&lt;Bbl Rom 13:3 &gt;&gt;
* savor, aroma        &lt;&lt;Bbl 2Cor 2:15 &gt;&gt;-1 6
* the Christ      &lt;&lt;Bbl Lk 2:34 &gt;&gt;
* the Baptist     &lt;&lt;Bbl Lk 7:29 &gt;&gt;-30
* the glory cloud     &lt;&lt;Bbl Ex 14:20 &gt;&gt;
* Moses' testimony        &lt;&lt;Bbl Dt 30:19 &gt;&gt;
* God's coming (burning)  &lt;&lt;Bbl Mal 3:3 &gt;&gt;, &lt;&lt;Bbl Mal 4:1 &gt;&gt;
* faith in God's Son      &lt;&lt;Bbl Jn 3:36 &gt;&gt;
* Christ the Corner Stone &lt;&lt;Bbl 1Pt 2:7 &gt;&gt;-8
----
* {{anti{[[Integrity]]}}}</pre>
</div>
<div title="Divorce" modifier="SDM" created="201004120330">
<pre>* [[Marriage]]
* &lt;&lt;Bbl Lv 21:7 &gt;&gt;; &lt;&lt;Bbl Dt 22:19 &gt;&gt;, &lt;&lt;Bbl Dt 24:1 &gt;&gt;-3 , &lt;&lt;Bbl Jer 3:1 &gt;&gt;, &lt;&lt;Bbl Mal 2:16 &gt;&gt;, &lt;&lt;Bbl Mt 5:31 &gt;&gt;, &lt;&lt;Bbl Mt 19:3 &gt;&gt;-12 , &lt;&lt;Bbl Mk 10:2 &gt;&gt;-12 , &lt;&lt;Bbl Lk 16:17 &gt;&gt;.
* &lt;&lt;Bbl Mt 19:3&gt;&gt; -- [[Reformed article|http://www.reformed-theology.org/html/issue07/divorce.htm]]
&lt;&lt;&lt;
Referring to Mosaic law about divorce, Jesus answered the Pharisees that writing a certificate of divorce should not be taken as a legislative privilege, as some men at that time were taking it, simply because the wife no longer found favor in the husband's eyes ...
+++Jesus brought to their attention that the law states that a man writes a certificate of divorce after &quot;a woman becomes displeasing to him because he finds something indecent about her.&quot;  The Mosaic guidelines were clear. A certificate of divorce had to have just cause; something indecent had to be found about her.

Note that Jesus uses the word &quot;fornication&quot; (porneia), not &quot;adultery&quot; (moicheia), as we have often been told in error in our churches, when He answers them about the acceptable cause for divorce. Had Jesus meant to use the more limited word adultery, he would have.

Both the root words for indecent behavior (Deuteronomy 24:1) and fornication (Matthew 19:9) &quot;denote generic, ethically abhorrent misbehavior with the focus on sexual immorality.&quot; Jesus was taking a stand to uphold the law as it was originally intended, a law which was more protective of women than the current practices of His day.

The word fornication refers to a broader group of sins or uncleanness than does the word adultery. Fornication is frequently used metaphorically in the Bible referring to forsaking God or following after idols. Indeed, Sutton contends that fornication includes not only all manner of sexual sins but also all the capital offenses of the Bible and are parallel to the offenses listed in the Thou-shalt-nots of the Ten Commandments.

Furthermore, sins against a spouse are basically the same as sins against God &quot;...because of the relationship of the offenses between God and man, and husband and wife, the capital offenses of the Biblical covenant are the divorceable offenses of the marital covenant.&quot;

What are the divorceable offenses? Sutton lists two broad categories. The first group includes sins against God including idolatry, blasphemy, witchcraft, divination, and spiritism.

The second group consists of sins against the spouse. This group is then divided into two subgroups: the first subgroup includes all sexual sins, and second is a subgroup he calls &quot;murder.&quot; Murder includes physical abuse and desertion (physical and sexual), infant sacrifice, and failure to provide economically. As you can see, the list of divorceable offenses includes far more than adultery.
&lt;&lt;&lt;
The writer (a divorced woman) goes on to propose the grounds for divorce are potentially varied, and a divorce on such grounds can properly lead to another marriage.
===</pre>
</div>
<div title="DocumentSetup" modifier="SDM" created="200903291632" tags="menu excludeLists">
<pre>[[GettingStarted]]
[[AdvancedOptions]]
[[cookieJar]]
----
&lt;&lt;tiddler ShowPopup with:
    DocumentSetup##cookies ~CookieManager &quot;view/modify option cookie settings&quot; tiddlyLinkExisting auto sticky&gt;&gt;
&lt;&lt;tiddler ShowPopup with:
    DocumentSetup##tweaker ~TiddlerTweaker &quot;view/modify tiddler values&quot; tiddlyLinkExisting auto sticky&gt;&gt;
----
&lt;&lt;tiddler ShowPopup with:
    DocumentSetup##templates templates &quot;list templates&quot; tiddlyLinkExisting auto&gt;&gt;
&lt;&lt;tiddler ShowPopup with:
    DocumentSetup##stylesheets stylesheets &quot;list stylesheets&quot; tiddlyLinkExisting auto&gt;&gt;
&lt;&lt;tiddler ShowPopup with:
    DocumentSetup##menus menus &quot;list menus&quot; tiddlyLinkExisting auto&gt;&gt;/%
!cookies
{{center{
[[Browser cookies:|CookieManagerPlugin]] {{fine{&lt;&lt;option chkAllowBrowserCookies&gt;&gt;enable &lt;&lt;option chkMonitorBrowserCookies&gt;&gt;monitor}}}
{{fine{
----
{{smallform small{&lt;&lt;cookieManager&gt;&gt;}}}
}}}
!tweaker
{{smallform{
&lt;&lt;tiddlerTweaker&gt;&gt;}}}
!templates
&lt;&lt;matchTags &quot;%0&quot; &quot;&lt;br&gt;&quot; sort:title template&gt;&gt;
!stylesheets
&lt;&lt;matchTags &quot;%0&quot; &quot;&lt;br&gt;&quot; sort:title stylesheet&gt;&gt;
!menus
&lt;&lt;matchTags &quot;%0&quot; &quot;&lt;br&gt;&quot; sort:title menu&gt;&gt;
!end
%/</pre>
</div>
<div title="Door" modifier="SDM" created="201004120330" modified="201301081336" tags="House" book_key="">
<pre>* The inscription of the Law's demands
* the piercing of the slave's ear
* the covering of lamb's blood.
* Powerful recurring image of the door with Elisha and the Shunnamite woman.
* [[Gate]]
* I heard perhaps on the radio in 2010 that the most value-building improvement you can make on your home, dollar for dollar, is installing a front door made of metal.
!!! Opening and closing
* Rev //No man can shut//
* Paul //a big door has opened for me//
* &lt;&lt;Bbl Gn 7:16 &gt;&gt; -- the ark
* &lt;&lt;Bbl Act 12:10 &gt;&gt; -- release from prison</pre>
</div>
<div title="Download" creator="psd" modifier="jermolene" created="201102111106" modified="201111031824" tags="gettingstarted">
<pre>&lt;&lt;download&gt;&gt;</pre>
</div>
<div title="DownloadTiddlyWikiPlugin" creator="psd" modifier="jermolene" created="201102111121" modified="201207211547" tags="systemConfig">
<pre>/***
|''Name:''|DownloadTiddlyWikiPlugin|
|''Description:''|Download TiddlyWiki according to browser type|
|''Version:''|0.0.9|
|''Date:''|Jul 18, 2012|
|''Source:''|http://www.tiddlywiki.com/#DownloadTiddlyWikiPlugin|
|''License:''|[[BSD open source license]]|
|''~CoreVersion:''|2.4.1|
***/

//{{{
if(!version.extensions.DownloadTiddlyWikiPlugin) {
version.extensions.DownloadTiddlyWikiPlugin = {installed:true};

config.macros.download = {};

merge(config.macros.download,{
	label: &quot;download&quot;,
	prompt: &quot;Download TiddlyWiki&quot;,
	className: &quot;chunkyButton&quot;});

config.macros.download.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var span = createTiddlyElement(place,&quot;span&quot;,null,this.className);
	createTiddlyButton(span,params[0]||this.label,params[1]||this.prompt,this.onClick);
};

config.macros.download.onClick = function(ev)
{
	// display the tiddler containing the instructions
	var e = ev || window.event;
	var title = &quot;Downloading&quot;;
	var url = 'empty.zip';
	if(config.browser.isOpera || config.browser.isWindows) {
		story.displayTiddler(target,title);
		window.setTimeout(function() {document.location.href = url;},300);
	} else {
		// put an iframe in the target instructions tiddler to start the download
		var html = '&lt;html&gt;&lt;iframe src=&quot;' + url + '&quot; style=&quot;display:none&quot;&gt;&lt;/html&gt;';
		var tiddler = store.getTiddler(title);
		var oldText = tiddler.text;
		tiddler.text = html + tiddler.text;
		var target = resolveTarget(e);
		story.closeTiddler(title,true);
		story.displayTiddler(target,title);
		tiddler.text = oldText;
	}
	return false;
};

} //# end of 'install only once'
//}}}
</pre>
</div>
<div title="Downloading" creator="psd" modifier="jermolene" created="201102111106" modified="201111031807" tags="instructions">
<pre>The following downloading guidelines have been created to cover the vast majority of browsers and operating systems.

If you are still having trouble downloading ~TiddlyWiki after checking these guidelines, check the [[list of browsers|Browsers]] to make sure your browser and operating system are supported. And you can always [[turn to the community|Help and Support]] for help!
!Downloading guidelines
[[Firefox on Mac OS X|Downloading guidelines: Firefox on Mac OS X]]
[[Firefox on Windows Vista|Downloading guidelines: Firefox on Windows Vista]]
[[Firefox on Windows XP|Downloading guidelines: Firefox on Windows XP]]
[[Firefox on Ubuntu|Downloading guidelines: Firefox on Ubuntu]]
[[Internet Explorer on Windows Vista|Downloading guidelines: Internet Explorer on Windows Vista]]
[[Internet Explorer on Windows XP|Downloading guidelines: Internet Explorer on Windows XP]]
[[Safari on Mac OS X|Downloading guidelines: Safari on Mac OS X]]
[[Opera on Mac OS X|Downloading guidelines: Opera on Mac OS X]]

For unusual or custom deployments, have a look at [[advanced download options|Advanced download options]].
</pre>
</div>
<div title="Downloading guidelines: Firefox on Mac OS X" creator="psd" modifier="jermolene" created="201102111106" modified="201111031757">
<pre>Follow these easy steps to get started. Note that these guidelines are for Firefox v3.0.1 running on Mac OS X 10.5.4.

''If these guidelines aren't appropriate, check the [[other browser-specific guidelines|Downloading]] to find some that are right for you.''
!Step 1 - Download file
You'll need to choose a name and location for your empty ~TiddlyWiki file - we recommend either your Desktop or Documents folder. Make sure you keep the .html file extension and leave the &quot;Save As: Hypertext&quot; default option as it is.
[img[images/step1mac.jpg]]
!Step 2 - Download complete
Empty ~TiddlyWiki files are very small, and download should be completed quickly. You can now either launch the file from the download pane (shown below, double click on the file name to launch), or open your finder to open the file from there.
[img[images/step2mac.jpg]]
!Step 3 - Open file
You'll be asked if you're sure you want to open the file - click &quot;Open&quot;.
[img[images/step3mac.jpg]]
!Step 4 - Grant authority
When you try to save your changes for the first time, Firefox may ask you to grant access to the file system. You will need to 'Allow' this for ~TiddlyWiki changes to be saved, and we recommend you tick the 'Remember this decision' checkbox so this dialogue box doesn't appear each time.

[img[images/step4mac.jpg]]

!Step 5 - You're ready to start!
You're now ready to start playing with your ~TiddlyWiki file - be sure to check out the guidelines in [[Getting Started|GettingStarted]]!</pre>
</div>
<div title="Downloading guidelines: Firefox on Ubuntu" creator="psd" modifier="jermolene" created="201102111106" modified="201111031758">
<pre>Follow these easy steps to get started! Note that these guidelines are for Firefox v3.0.1 running on Ubuntu version 8.0.4 (Hardy Heron).

''If these guidelines aren't appropriate, check the [[other browser-specific guidelines|Downloading]] to find some that are right for you.''
!Step 1 - Download file
You'll need to choose a name and location for your empty ~TiddlyWiki file - we recommend either your Desktop or Documents folder. Make sure you keep the file type as HTML Document.

[img[images/step1ubuntu.png]]
!Step 2 - Download complete
Empty ~TiddlyWiki files are very small, and download should be completed quickly. You can now either launch the file from the download pane (shown below, double click on the file name to launch), or open your finder to open the file from there.

[img[images/step2ubuntu.png]]

!Step 3 - Grant authority
When you try to save your changes for the first time, Firefox may ask you to grant access to the file system. You will need to 'Allow' this for ~TiddlyWiki changes to be saved, and we recommend you tick the 'Remember this decision' checkbox so this dialogue box doesn't appear each time.

[img[images/step3ubuntu.png]]

!Step 4 - You're ready to start!
You're now ready to start playing with your ~TiddlyWiki file - be sure to check out the guidelines in [[Getting Started|GettingStarted]]!</pre>
</div>
<div title="Downloading guidelines: Firefox on Windows" creator="psd" modifier="jermolene" created="201102111106" modified="201111031758">
<pre>&lt;&lt;tiddler [[Downloading guidelines: Firefox on Windows Vista]]&gt;&gt;</pre>
</div>
<div title="Downloading guidelines: Firefox on Windows Vista" creator="psd" modifier="jermolene" created="201102111106" modified="201111031809">
<pre>Follow these steps to get started! These guidelines are for Firefox 3.0.1 running on Microsoft Windows Vista 6.0.0. Hopefully they will be helpful for your setup too.

''If these guidelines aren't appropriate, check the [[other browser-specific guidelines|Downloading]] to find some that are right for you.''
!Step 1 - Download file
You'll need to choose a name and location for your empty ~TiddlyWiki file - we recommend either your Desktop or Documents folder. Make sure you leave the &quot;Save as type: HTML Document&quot; default option as it is. Then click 'Save'.

[img[images/step1vistaff.jpg]]
!Step 2 - Open file
Click on the file name in the Download dialogue box. This will open your ~TiddlyWiki file, and you'll be able to start editing immediately - but you'll need to complete Step 3 below to save your changes.

[img[images/step2vistaff.jpg]]
!Step 3 - Enable advanced features
When you try to save changes for the first time in a browser session, this dialogue box will appear. These features will enable the saving mechanism. Tick the 'Remember this decision' checkbox and then click on 'Allow'.

[img[images/step3vistaff.jpg]]
!Step 4 - You're ready to start!
You're now ready to start playing with your ~TiddlyWiki file - be sure to check out the guidelines in [[Getting Started|GettingStarted]]!</pre>
</div>
<div title="Downloading guidelines: Firefox on Windows XP" creator="psd" modifier="jermolene" created="201102111106" modified="201111031810">
<pre>Follow these steps to get started! These guidelines are for Firefox 3.0.1 running on Microsoft Windows XP, Service Pack 3. Hopefully they will be helpful for your setup too.

''If these guidelines aren't appropriate, check the [[other browser-specific guidelines|Downloading]] to find some that are right for you.''
!Step 1 - Download file
You'll need to choose a name and location for your empty ~TiddlyWiki file - we recommend either your Desktop or My Documents folder. Make sure you leave the &quot;Save as type: Firefox Document&quot; default option as it is. Then click 'Save'.

[img[images/step1xpff.jpg]]
!Step 2 - Open file
Double click on the file name in the Download dialogue box, shown below. This will open your ~TiddlyWiki file, and you'll be able to start editing immediately - but you'll need to complete Step 3 below to save your changes.

[img[images/step2xpff.jpg]]
!Step 3 - Enable advanced features
When you try to save changes for the first time in a browser session, this dialogue box will appear. These features will enable the saving mechanism. Tick the 'Remember this decision' checkbox and then click on 'Allow'.
[img[images/step3xpff.jpg]]
!Step 4 - You're ready to start!
You're now ready to start playing with your ~TiddlyWiki file - be sure to check out the guidelines in [[Getting Started|GettingStarted]]!</pre>
</div>
<div title="Downloading guidelines: Internet Explorer on Windows" creator="psd" modifier="jermolene" created="201102111106" modified="201111031759">
<pre>&lt;&lt;tiddler [[Downloading guidelines: Internet Explorer on Windows Vista]]&gt;&gt;</pre>
</div>
<div title="Downloading guidelines: Internet Explorer on Windows Vista" creator="psd" modifier="jermolene" created="201102111106" modified="201111031759">
<pre>Follow these steps to get started! These guidelines are for Internet Explorer 7.0 running on Microsoft Windows Vista 6.0.0. Hopefully they will be helpful for your setup too.

''If these guidelines aren't appropriate, check the [[other browser-specific guidelines|Downloading]] to find some that are right for you.''
!Step 1 - Download file
You'll need to choose a name and location for your empty ~TiddlyWiki file - we recommend either your Desktop or Documents folder. Make sure you leave the &quot;Save as type: HTML Document&quot; default option as it is. Then click 'Save'.

[img[images/step1vista.jpg]]
!Step 2 - Open folder
Once the download has been completed, ''don't open the file yet'' - a minor modification is required before ~TiddlyWiki will work! Click on 'Open Folder'.

[img[images/step2vista.jpg]]
!Step 3 - Modify properties
In the folder, right click on the file name and select 'Properties' from the bottom of the contextual menu.

[img[images/step3vista.jpg]]
!Step 4 - Unblock file
In order to allow saving, you need to Unblock the file. Select 'Unblock' near the bottom of the dialogue box, then click on 'OK'. If the Unblock button doesn't appear, then you don't need to worry about it - click on OK and proceed to step 5.

[img[images/step4vista.jpg]]

!Step 5 - Open file
Double click on the file name to open the file. Internet Explorer takes special care to block javascript from untrusted sources, so a screen will appear with a yellow bar at the top and a warning in red. Click on the yellow bar (this will make it turn blue, as shown below), and select 'Allow Blocked Content...'.

[img[images/step5vista.jpg]]

!Step 6 - Allow active content
~TiddlyWiki contains 'active content' that, for example, allows search and tagging to function. Approve this active content by clicking on 'Yes'.
[img[images/step6vista.jpg]]
!Step 7 - Enable saving mechanism
One final hurdle! When you save for the first time, you'll be prompted to allow the activity. Click on 'Yes'.
[img[images/step7vista.jpg]]
!Step 8 - You're ready to start!
You're now ready to start playing with your ~TiddlyWiki file - be sure to check out the guidelines in [[Getting Started|GettingStarted]]!</pre>
</div>
<div title="Downloading guidelines: Internet Explorer on Windows XP" creator="psd" modifier="jermolene" created="201102111106" modified="201111031800">
<pre>Follow these steps to get started! These guidelines are for Internet Explorer 7.0 running on Microsoft Windows XP, Service Pack 3. Hopefully they will be helpful for your setup too.

''If these guidelines aren't appropriate, check the [[other browser-specific guidelines|Downloading]] to find some that are right for you.''
!Step 1 - Download file
You'll need to choose a name and location for your empty ~TiddlyWiki file - we recommend either your Desktop or My Documents folder. Make sure you leave the &quot;Save as type: HTML Document&quot; default option as it is. Then click 'Save'.

[img[images/step1xpie.jpg]]
!Step 2 - Open folder
Once the download has been completed, ''don't open the file yet'' - a minor modification is required before ~TiddlyWiki will work! ''Click on 'Open Folder'''.

[img[images/step2xpie.jpg]]
!Step 3 - Modify properties
In the folder, right click on the file name and select 'Properties' from the bottom of the contextual menu.

[img[images/step3xpie.jpg]]
!Step 4 - Unblock file
In order to allow saving, you need to Unblock the file. Select 'Unblock' near the bottom of the dialogue box, then click on 'OK'. If the Unblock button doesn't appear, then you don't need to worry about it - click on OK and proceed to step 5.

[img[images/step4xpie.jpg]]

!Step 5 - Open file
Now you've unblocked the file, you can double click on the file name to open the file. Internet Explorer takes special care to block javascript from untrusted sources, so a screen will appear with a yellow bar at the top and a warning in red. Click on the yellow bar (this will make it turn blue, as shown below), and select 'Allow Blocked Content...'.

[img[images/step5xpie.jpg]]
!Step 6 - Allow active content
~TiddlyWiki contains 'active content' that, for example, allows animations to function. Approve this active content by clicking on 'Yes'.
[img[images/step6xpie.jpg]]
!Step 7 - Enable saving mechanism
One final hurdle! When you save for the first time, you'll be prompted to allow the activity. Click on 'Yes'.
[img[images/step7xpie.jpg]]
!Step 8 - You're ready to start!
You're now ready to start playing with your ~TiddlyWiki file - be sure to check out the guidelines in [[Getting Started|GettingStarted]]!</pre>
</div>
<div title="Downloading guidelines: Opera on Mac OS X" creator="psd" modifier="jermolene" created="201102111106" modified="201111031800">
<pre>Follow these easy steps to get started! Note that these guidelines are for Opera 9.5.1 running on Mac OS X 10.5.4, but will apply to several other configurations (including most other versions of [[Opera]])

''If these guidelines aren't appropriate, check the [[other browser-specific guidelines|Downloading]] to find some that are right for you.''
!Step 1 - Download files
Download the zip file to a location of your choice.

[img[images/step1macopera.jpg]]
!Step 2 - Check files
Open the zip file, and then check in the resulting folder that you have automatically received two files:
*empty.html (this is your ~TiddlyWiki file)
*~TiddlySaver.jar (this is a java applet, which will make sure everything works in your chosen browser. Note a copy of this file ''must'' be kept in the same folder as any ~TiddlyWiki file you are using)
[img[images/step2macopera.jpg]]
You can download the TiddlySaver file on it's own from [[here|http://www.tiddlywiki.com/TiddlySaver.jar]] if you need it.

Open the empty.html file to get started.
!Step 3 - Trust applet
The ~TiddlySaver.jar applet has been signed by [[UnaMesa|http://www.unamesa.org]], who hold the rights to ~TiddlyWiki on behalf of the community. You can find out more about the applet itself [[here|TiddlySaver]], and you'll need to click on 'Trust' in order for the ~TiddlyWiki to work. If you've accidentally clicked on 'Don't Trust' previously, don't worry - just restart the browser and you should get asked again.

[img[images/step3macopera.jpg]]
!Step 4 - You're done!
Thanks to the applet, you now have the full functionality of ~TiddlyWiki at your disposal. Be sure to check out the guidelines in [[Getting Started|GettingStarted]]!</pre>
</div>
<div title="Downloading guidelines: Safari on Mac OS X" creator="psd" modifier="jermolene" created="201102111106" modified="201111031800">
<pre>Follow these easy steps to get started! Note that these guidelines are for Safari 3.1.2 running on Mac OS X 10.5.4, but will apply to several other configurations (other versions of [[Safari]] and [[Opera]] too)

''If these guidelines aren't appropriate, check the [[other browser-specific guidelines|Downloading]] to find some that are right for you.''
!Step 1 - Check downloaded files
After [[Download]], check first that you have automatically received a zip file containing two files (the contents of the zip file may have been extracted automatically - if not, open the zip file):
*empty.html (this is your ~TiddlyWiki file)
*~TiddlySaver.jar (this is a java applet, which will make sure everything works in your chosen browser. Note a copy of this file ''must'' be kept in the same folder as any ~TiddlyWiki file you are using)
[img[images/step1macsafari.jpg]]
You can download the ~TiddlySaver.jar file on it's own from [[here|http://www.tiddlywiki.com/TiddlySaver.jar]] if you need it.

Double click the empty.html file to get started.
!Step 2 - Open file
The system will check you're happy to open the ~TiddlyWiki file. Click on 'Open'.

[img[images/step2macsafari.jpg]]
!Step 3 - Trust applet
The ~TiddlySaver.jar applet has been signed by [[UnaMesa|http://www.unamesa.org]], who hold the rights to ~TiddlyWiki on behalf of the community. You can find out more about the applet itself [[here|TiddlySaver]], and you'll need to click on 'Trust' in order for the ~TiddlyWiki to work. If you've accidentally clicked on 'Don't Trust' previously, don't worry - just restart the browser and you should get asked again.

[img[images/step3macsafari.jpg]]
!Step 4 - You're done!
Thanks to the applet, you now have the full functionality of ~TiddlyWiki at your disposal. Be sure to check out the guidelines in [[Getting Started|GettingStarted]]!</pre>
</div>
<div title="Drunkenness" modifier="SDM" created="201004120330" modified="201011032354">
<pre>* [[Wine]], [[Cup]]
* Jesus calls it wickedness to //eat and drink with drunkards// (&lt;&lt;Bbl Mt 24:49 &gt;&gt;)
* &lt;&lt;Bbl Dt 21:20 &gt;&gt;; &lt;&lt;Bbl Pr 20:1 &gt;&gt;, &lt;&lt;Bbl Pr 23:29 &gt;&gt;-35 ; &lt;&lt;Bbl Is 5:11 &gt;&gt;, &lt;&lt;Bbl Is 28:7 &gt;&gt;; &lt;&lt;Bbl Hos 4:11 &gt;&gt;; &lt;&lt;Bbl Mt 24:48 &gt;&gt;-51 ; &lt;&lt;Bbl Rom 13:13 &gt;&gt;; &lt;&lt;Bbl 1Cor 5:11 &gt;&gt;, &lt;&lt;Bbl 1Cor 6:9 &gt;&gt;-10 .  Noah, Lot, Ben-hadad (&lt;&lt;Bbl 1Ki 20:16 &gt;&gt;).
!!!! Compared or Confused with Spirit's filling
* Eli and Hannah
* &lt;&lt;Bbl Acts 2:4 &gt;&gt;
!!!! Contrasted with
* &lt;&lt;Bbl Eph 5:18 &gt;&gt;
* &lt;&lt;Bbl Lk 1:15 &gt;&gt; (rel. Nazarite vow)</pre>
</div>
<div title="EFCA-Statement" modifier="SDM" created="201211181649" modified="201212162103" book_key="">
<pre>&lt;&lt;tabs &quot;God&quot;
&quot;God&quot; &quot;God&quot; [[EFCA-Statement##1]]
&quot;Bible&quot; &quot;the Bible&quot; [[EFCA-Statement##2]]
&quot;Man&quot; &quot;the Human Condition&quot; [[EFCA-Statement##3]]
&quot;Christ&quot; &quot;Jesus Christ&quot; [[EFCA-Statement##4]]
&quot;His Work&quot; &quot;the Work of Christ&quot; [[EFCA-Statement##5]]
&quot;His Spirit&quot; &quot;the Holy Spirit&quot; [[EFCA-Statement##6]]
&quot;Church&quot; &quot;the Church&quot; [[EFCA-Statement##7]]
&quot;Living&quot; &quot;Christian Living&quot; [[EFCA-Statement##8]]
&quot;His Return&quot; &quot;Christ's Return&quot; [[EFCA-Statement##9]]
&quot;Response&quot; &quot;Response and Eternal Destiny&quot; [[EFCA-Statement##10]]
&gt;&gt;
''Statement in [[PDF format|./scott_wiki_docs/EFCA-statement-of-faith.pdf]]''
Expand for text: +++
!!! EFCA SOF with Scripture References
EFCA Statement of Faith Adopted by the Conference on June 26, 2008 (with Scripture References a SHC working document The Evangelical Free Church of America is an association of autonomous churches united around these theological convictions

!!! 1
{{fyi{
We believe in one God,
Creator of all things,
holy,
infinitely perfect,
and eternally existing
in a loving unity
of three equally divine Persons:
the Father,
the Son,
and the Holy Spirit.
Having limitless knowledge
and sovereign power,
God has graciously purposed from eternity to redeem a people for Himself
and to make all things new
for His own Glory.
}}}
* [[God]], &lt;&lt;Bbl Dt 6:4 &gt;&gt;; &lt;&lt;Bbl Mk 12:29 &gt;&gt;
* &lt;&lt;Bbl Gn 1:1 &gt;&gt;; &lt;&lt;Bbl Ps 33:6 &gt;&gt;; &lt;&lt;Bbl Jn 1:3 &gt;&gt;; &lt;&lt;Bbl Col 1:15 &gt;&gt;-17; &lt;&lt;Bbl Heb 11:3 &gt;&gt;
* [[Holiness]], &lt;&lt;Bbl Ex 15:11 &gt;&gt;; &lt;&lt;Bbl Is 6:3 &gt;&gt;; 57:15
* &lt;&lt;Bbl Dt 32:4 &gt;&gt;; Job 1:7-10; &lt;&lt;Bbl Ps 18:30 &gt;&gt;; 50:2; 90:2; 145:3; &lt;&lt;Bbl Mt 5:48 &gt;&gt;
* &lt;&lt;Bbl Ps 33:11 &gt;&gt;; 102:25-27; 115:3; &lt;&lt;Bbl Dan 4:34 &gt;&gt;-35; &lt;&lt;Bbl Jn 5:26 &gt;&gt;; &lt;&lt;Bbl Acts 17:24 &gt;&gt;-25
* [[One-In-Three]]&lt;&lt;Bbl Jn 3:35 &gt;&gt;; 17:24; &lt;&lt;Bbl 1Jn 4:8 &gt;&gt;,16
* &lt;&lt;Bbl Jn 17:11 &gt;&gt;; &lt;&lt;Bbl Mt 3:16 &gt;&gt;-17; 28:19; &lt;&lt;Bbl 2Cor 13:14 &gt;&gt;; &lt;&lt;Bbl 1Pt 1:2 &gt;&gt;
* ''Father:'' &lt;&lt;Bbl Dt 32:6 &gt;&gt;; &lt;&lt;Bbl Mt 6:6 &gt;&gt;; &lt;&lt;Bbl Rom 8:15 &gt;&gt;; &lt;&lt;Bbl 1Cor 8:6 &gt;&gt;
* ''Son:'' &lt;&lt;Bbl Mt 3:17 &gt;&gt;; &lt;&lt;Bbl Jn 1:14 &gt;&gt;; 3:16; &lt;&lt;Bbl Gal 4:4 &gt;&gt;; &lt;&lt;Bbl Heb 1:5 &gt;&gt;
* ''Spirit:'' &lt;&lt;Bbl Jn 14:16 &gt;&gt;, 17, 26; 15:26; 16:7-15; &lt;&lt;Bbl Rom 8:9 &gt;&gt;, 26; &lt;&lt;Bbl Gal 4:6 &gt;&gt;
* &lt;&lt;Bbl Ps 139:1 &gt;&gt;-16; 147:5; &lt;&lt;Bbl Is 46:10 &gt;&gt;; &lt;&lt;Bbl Jn 21:17 &gt;&gt;
* [[Sovereignty]], &lt;&lt;Bbl Jer 32:17 &gt;&gt;; &lt;&lt;Bbl Eph 1:11 &gt;&gt;; &lt;&lt;Bbl Rom 8:28 &gt;&gt;; &lt;&lt;Bbl 2Cor 6:18 &gt;&gt;; &lt;&lt;Bbl Eph 3:20 &gt;&gt;; &lt;&lt;Bbl Rev 1:8 &gt;&gt;
* [[Redemption]], &lt;&lt;Bbl 1Cor 2:7 &gt;&gt;; &lt;&lt;Bbl Eph 1:11 &gt;&gt;; 3:10,11; &lt;&lt;Bbl 2Tim 1:9 &gt;&gt;; &lt;&lt;Bbl Tit 1:2 &gt;&gt;; &lt;&lt;Bbl 1Pt 1:20 &gt;&gt;; &lt;&lt;Bbl Rev 13:8 &gt;&gt;
* &lt;&lt;Bbl Mt 19:28 &gt;&gt;; &lt;&lt;Bbl Acts 3:21 &gt;&gt;; &lt;&lt;Bbl Rom 8:19 &gt;&gt;-21; Rev. 21,22
* &lt;&lt;Bbl Ps 19:1 &gt;&gt;-2; &lt;&lt;Bbl Is 43:7 &gt;&gt;; &lt;&lt;Bbl Jer 13:11 &gt;&gt;; &lt;&lt;Bbl Col 1:15 &gt;&gt;-23; &lt;&lt;Bbl Rev 4:11 &gt;&gt;; 5:9- 14

!!! 2
{{fyi{
We believe that God has spoken in the [[Scriptures|Scripture]],
* &lt;&lt;Bbl Mt 1:22 &gt;&gt;; 4:4; 19:4,5; &lt;&lt;Bbl Heb 1:1 &gt;&gt;- 2

both Old and New Testaments,
* &lt;&lt;Bbl 2Pt 3:15 &gt;&gt;,16

through the words of human authors.
* &lt;&lt;Bbl Lk 1:1 &gt;&gt;-4

As the verbally inspired Word of God,
* &lt;&lt;Bbl 2Tim 3:16 &gt;&gt;; &lt;&lt;Bbl 2Pt 1:20 &gt;&gt;,21

the Bible is without error in the original writings,
* &lt;&lt;Bbl Num 23:19 &gt;&gt;; &lt;&lt;Bbl 2Sam 7:28 &gt;&gt;; Pr. 30:5; &lt;&lt;Bbl Ps 119:96 &gt;&gt;, 160; &lt;&lt;Bbl Mt 5:18 &gt;&gt;; Jn. 10:35; 17:17; &lt;&lt;Bbl Tit 1:1 &gt;&gt;,2

the complete [[Revelation]] of His will for salvation,
* &lt;&lt;Bbl Lk 16:29 &gt;&gt;-31; &lt;&lt;Bbl Gal 1:8 &gt;&gt;,9; &lt;&lt;Bbl 2Tim 3:15 &gt;&gt;

and the ultimate [[Authority]] by which every realm of human knowledge and endeavor should be judged.
* &lt;&lt;Bbl Jn 17:17 &gt;&gt;; &lt;&lt;Bbl 1Tim 3:15 &gt;&gt;-17; &lt;&lt;Bbl 1Pt 1:23 &gt;&gt;; &lt;&lt;Bbl Ps 119:44 &gt;&gt;,45,165

Therefore, it is to be believed in all that it teaches,
* &lt;&lt;Bbl Mt 22:29 &gt;&gt;; &lt;&lt;Bbl Rom 15:4 &gt;&gt;; &lt;&lt;Bbl 2Tim 3:16 &gt;&gt;

obeyed in all that it requires,
* &lt;&lt;Bbl Mt 28:20 &gt;&gt;; &lt;&lt;Bbl 2Thes 3:14 &gt;&gt;; &lt;&lt;Bbl 1Jn 2:5 &gt;&gt;

and trusted in all that it promises.
* &lt;&lt;Bbl Rom 1:2 &gt;&gt;; 4:21; &lt;&lt;Bbl Heb 10:23 &gt;&gt;; &lt;&lt;Bbl 2Pt 1:4 &gt;&gt;; 3:13
}}}
!!! 3
{{fyi{
We believe that God created Adam and Eve in His image,
* &lt;&lt;Bbl Gn 1:26 &gt;&gt;-27; 5:1; 9:6; &lt;&lt;Bbl 1Cor 11:7 &gt;&gt;; &lt;&lt;Bbl Col 3:10 &gt;&gt;; &lt;&lt;Bbl Jms 3:9 &gt;&gt;

but they sinned when [[tempted|Temptation]] by [[Satan]].
* &lt;&lt;Bbl Gn 3:1 &gt;&gt;-6; &lt;&lt;Bbl Jn 8:44 &gt;&gt;; &lt;&lt;Bbl Rom 5:12 &gt;&gt;-14; 16:20; &lt;&lt;Bbl 2Cor 11:3 &gt;&gt;; &lt;&lt;Bbl 1Tim 2:13 &gt;&gt;-14

In union with Adam,
Job 14:4; &lt;&lt;Bbl Ps 51:5 &gt;&gt;; &lt;&lt;Bbl Jn 3:6 &gt;&gt;; &lt;&lt;Bbl Rom 3:12 &gt;&gt;; 5:12-14; &lt;&lt;Bbl 1Cor 15:22 &gt;&gt;a; &lt;&lt;Bbl 1Jn 1:8 &gt;&gt;

human beings are [[Sin]]ners by nature and by choice,
* &lt;&lt;Bbl Gn 6:5 &gt;&gt;; &lt;&lt;Bbl Jer 17:9 &gt;&gt;; &lt;&lt;Bbl Is 6:5 &gt;&gt;; &lt;&lt;Bbl Rom 5:15 &gt;&gt;; 8:5-8; &lt;&lt;Bbl Eph 2:1 &gt;&gt;-2; 4:17-19

alienated from God,
* &lt;&lt;Bbl Rom 5:10 &gt;&gt;

and under His [[Wrath]].
* &lt;&lt;Bbl Rom 1:18 &gt;&gt;; 2:5; 3:9-19; 3:23; &lt;&lt;Bbl Eph 2:3 &gt;&gt;

Only through God's saving work in Jesus Christ
* &lt;&lt;Bbl Acts 4:12 &gt;&gt;; &lt;&lt;Bbl 1Tim 2:5 &gt;&gt;

can we be [[Rescue]]d,
* &lt;&lt;Bbl 1Thes 1:10 &gt;&gt;

[[reconciled|Reconciliation]],
* &lt;&lt;Bbl Rom 5:1 &gt;&gt;,2,10; &lt;&lt;Bbl Col 1:20 &gt;&gt;

and renewed.
* &lt;&lt;Bbl Rom 8:29 &gt;&gt;; &lt;&lt;Bbl 2Cor 3:18 &gt;&gt;; &lt;&lt;Bbl Eph 4:24 &gt;&gt;; &lt;&lt;Bbl Php 3:21 &gt;&gt;; &lt;&lt;Bbl 1Jn 3:2 &gt;&gt;
}}}
!!! 4
{{fyi{
We believe that Jesus [[Christ]]
* &lt;&lt;Bbl Mt 1:21 &gt;&gt;; 16:18

is God incarnate,
* &lt;&lt;Bbl Jn 1:14 &gt;&gt;, 18; &lt;&lt;Bbl 1Jn 4:2 &gt;&gt;

fully [[God]]
* &lt;&lt;Bbl Is 9:6 &gt;&gt;; &lt;&lt;Bbl Jer 23:6 &gt;&gt;; &lt;&lt;Bbl Jn 1:1 &gt;&gt;; 20:28; &lt;&lt;Bbl Rom 9:5 &gt;&gt;; &lt;&lt;Bbl Col 2:9 &gt;&gt;

and fully [[Man]],
* &lt;&lt;Bbl Mt 4:2 &gt;&gt;; &lt;&lt;Bbl Lk 2:40 &gt;&gt;, 52; &lt;&lt;Bbl Jn 11:35 &gt;&gt;; &lt;&lt;Bbl Heb 5:7 &gt;&gt;-8; &lt;&lt;Bbl 1Jn 1:1 &gt;&gt;-3

one Person in two natures.
* &lt;&lt;Bbl Jn 3:13 &gt;&gt;; 10:30; 17:5

Jesus {{{--}}} Israel's promised Messiah {{{--}}}
* &lt;&lt;Bbl Gn 3:14 &gt;&gt;-20; 12:1-3; 49:8-12; &lt;&lt;Bbl 2Sam 7:11 &gt;&gt;b-16; &lt;&lt;Bbl Mt 1:1 &gt;&gt;, 17; &lt;&lt;Bbl Lk 4:16 &gt;&gt;-22; 24:25-27; &lt;&lt;Bbl Jn 1:41 &gt;&gt;; 4:25-26; &lt;&lt;Bbl Acts 2:36 &gt;&gt;; 13:23,32; &lt;&lt;Bbl Rom 1:2 &gt;&gt;-3; &lt;&lt;Bbl 2Tim 2:8 &gt;&gt;,9

was conceived through the Holy Spirit
* &lt;&lt;Bbl Mt 1:18 &gt;&gt;; &lt;&lt;Bbl Lk 1:34 &gt;&gt;,35

and born of the virgin Mary.
* &lt;&lt;Bbl Is 7:14 &gt;&gt;; &lt;&lt;Bbl Mt 1:20 &gt;&gt;; &lt;&lt;Bbl Lk 1:34 &gt;&gt;,35

He lived a sinless life,
* &lt;&lt;Bbl Rom 5:19 &gt;&gt;; &lt;&lt;Bbl Gal 4:4 &gt;&gt;,5; &lt;&lt;Bbl Mt 3:15 &gt;&gt;; &lt;&lt;Bbl Php 2:7 &gt;&gt;,8; &lt;&lt;Bbl Heb 4:15 &gt;&gt;

was crucified under Pontius Pilate,
* &lt;&lt;Bbl Dt 21:23 &gt;&gt;; &lt;&lt;Bbl Ps 16:10 &gt;&gt;; &lt;&lt;Bbl Mt 27:26 &gt;&gt;; &lt;&lt;Bbl Mk 15:15 &gt;&gt;; &lt;&lt;Bbl Lk 23:16 &gt;&gt;; &lt;&lt;Bbl Jn 19:16 &gt;&gt;; &lt;&lt;Bbl Acts 2:27 &gt;&gt;, 37

[[aroseResurrection]] bodily from the dead,
* &lt;&lt;Bbl Mt 28:1 &gt;&gt;-10; &lt;&lt;Bbl Mk 16:1 &gt;&gt;-8; &lt;&lt;Bbl Lk 24:39 &gt;&gt;; &lt;&lt;Bbl Rom 4:25 &gt;&gt;; &lt;&lt;Bbl 1Cor 15:20 &gt;&gt;, 44-45; &lt;&lt;Bbl Col 1:18 &gt;&gt;; &lt;&lt;Bbl Rev 1:5 &gt;&gt;

ascended into heaven
* &lt;&lt;Bbl Lk 24:51 &gt;&gt;; &lt;&lt;Bbl Acts 1:6 &gt;&gt;-11; &lt;&lt;Bbl Eph 1:20 &gt;&gt;; 4:8-10; &lt;&lt;Bbl 1Tim 3:16 &gt;&gt;

and sits at the right hand of God the Father
* &lt;&lt;Bbl Eph 1:20 &gt;&gt;; &lt;&lt;Bbl Col 3:1 &gt;&gt;; &lt;&lt;Bbl Heb 1:3 &gt;&gt;; 8:1; 10:12; &lt;&lt;Bbl 1Pt 3:22 &gt;&gt;

as our High [[Priest]]
* &lt;&lt;Bbl Heb 2:17 &gt;&gt;; 3:1; 4:14; 6:20; 8:1

and Advocate
* &lt;&lt;Bbl Rom 8:34 &gt;&gt;; &lt;&lt;Bbl Heb 7:25 &gt;&gt;; 9:24; &lt;&lt;Bbl 1Jn 2:1 &gt;&gt;
}}}
!!! 5
{{fyi{
We believe that Jesus Christ, as our representative
    and [[Substitute|Substitution]],
shed His [[Blood]] on the cross
as the perfect, all-sufficient [[Sacrifice]]
    for our sins.
}}}

* &lt;&lt;Bbl Gn 2:15 &gt;&gt;-17; &lt;&lt;Bbl Mt 4:1 &gt;&gt;-11; &lt;&lt;Bbl Mk 1:12 &gt;&gt;-13; &lt;&lt;Bbl Lk 4:1 &gt;&gt;-13; &lt;&lt;Bbl Rom 5:18 &gt;&gt;-19; &lt;&lt;Bbl 1Cor 1:30 &gt;&gt;; 15:45, 47; &lt;&lt;Bbl Php 3:9 &gt;&gt;
* &lt;&lt;Bbl Mk 10:45 &gt;&gt;; &lt;&lt;Bbl Heb 2:16 &gt;&gt;-17; &lt;&lt;Bbl 1Pt 2:24 &gt;&gt;; &lt;&lt;Bbl 1Pt 3:18 &gt;&gt;
* &lt;&lt;Bbl Lev 17:11 &gt;&gt;; &lt;&lt;Bbl Mt 26:28 &gt;&gt;; &lt;&lt;Bbl Heb 9:14 &gt;&gt;, 22; 10:19; &lt;&lt;Bbl 1Pt 1:18 &gt;&gt;-19; &lt;&lt;Bbl Rev 12:10 &gt;&gt;-11
* &lt;&lt;Bbl 1Cor 5:7 &gt;&gt;; &lt;&lt;Bbl Heb 9:23 &gt;&gt;-24, 26, 28; 10:1; 13:11, 12
* &lt;&lt;Bbl Is 53:5 &gt;&gt;-7, 12; &lt;&lt;Bbl Jn 1:29 &gt;&gt;; &lt;&lt;Bbl Rom 3:21 &gt;&gt;-26; &lt;&lt;Bbl 2Cor 5:21 &gt;&gt;; &lt;&lt;Bbl Gal 3:13 &gt;&gt;; &lt;&lt;Bbl 1Jn 3:5 &gt;&gt;


His [[atoning|Atonement]] death
* &lt;&lt;Bbl Rom 3:25 &gt;&gt;; &lt;&lt;Bbl Heb 2:17 &gt;&gt;; &lt;&lt;Bbl 1Jn 2:2 &gt;&gt;; &lt;&lt;Bbl 1Jn 4:10 &gt;&gt;

and victorious [[Resurrection]]
* &lt;&lt;Bbl Col 1:13 &gt;&gt;; 2:13-15; &lt;&lt;Bbl Heb 2:14 &gt;&gt;-15

constitute the only ground for [[Salvation|Salvation-Savior]].
* &lt;&lt;Bbl Rom 4:25 &gt;&gt;; 6:4, 11, 14; &lt;&lt;Bbl 1Cor 6:14 &gt;&gt;; 15:20; &lt;&lt;Bbl 2Cor 4:14 &gt;&gt;; &lt;&lt;Bbl Eph 1:19 &gt;&gt;-20; 2:5-6; &lt;&lt;Bbl 1Pt 1:3 &gt;&gt;


}}}
!!! 6
{{fyi{
We believe that the [[Holy Spirit|SpiritOfChrist]], in all that He does, glorifies the Lord Jesus Christ.
* &lt;&lt;Bbl Jn 16:14 &gt;&gt;

He convicts the [[World]] of its [[Guilt]].
* &lt;&lt;Bbl Jn 16:8 &gt;&gt;; &lt;&lt;Bbl 1Cor 2:14 &gt;&gt;

He regenerates sinners,
* &lt;&lt;Bbl Ezek 36:25 &gt;&gt;-27; &lt;&lt;Bbl Jn 3:3 &gt;&gt;, 5; &lt;&lt;Bbl 1Cor 12:3 &gt;&gt;; &lt;&lt;Bbl 2Cor 5:17 &gt;&gt;; &lt;&lt;Bbl Eph 2:5 &gt;&gt;; &lt;&lt;Bbl Col 2:13 &gt;&gt;; &lt;&lt;Bbl 1Thes 1:4 &gt;&gt;-5; &lt;&lt;Bbl 2Thes 2:13 &gt;&gt;; &lt;&lt;Bbl Tit 3:5 &gt;&gt;; &lt;&lt;Bbl Jms 1:18 &gt;&gt;; &lt;&lt;Bbl 1Pt 1:3 &gt;&gt;

and in Him they are [[Baptize]]d
* &lt;&lt;Bbl Mk 1:8 &gt;&gt;; &lt;&lt;Bbl Acts 1:5 &gt;&gt;; &lt;&lt;Bbl 1Cor 12:13 &gt;&gt;

into union with Christ
* &lt;&lt;Bbl Rom 3:24 &gt;&gt;; 5:15-21; 12:5; &lt;&lt;Bbl 1Cor 1:2 &gt;&gt;; 5:19; 15:22b; &lt;&lt;Bbl 2Cor 5:17 &gt;&gt;; &lt;&lt;Bbl Gal 1:22 &gt;&gt;; 2:17; 3:28; &lt;&lt;Bbl Eph 1:4 &gt;&gt;; 2:12; 3:6; 4:32; &lt;&lt;Bbl 2Tim 2:10 &gt;&gt;; &lt;&lt;Bbl 1Thes 4:16 &gt;&gt;

and adopted as [[heirs|Inheritance]]
* &lt;&lt;Bbl Rom 8:15 &gt;&gt;, 23; 9:4; &lt;&lt;Bbl Gal 4:5 &gt;&gt;; &lt;&lt;Bbl Eph 1:5 &gt;&gt;; &lt;&lt;Bbl Tit 3:7 &gt;&gt;

in the [[Family]] of God.
* &lt;&lt;Bbl Mt 12:49 &gt;&gt;-50; &lt;&lt;Bbl 2Cor 6:18 &gt;&gt;; &lt;&lt;Bbl Eph 3:14 &gt;&gt;; &lt;&lt;Bbl 1Jn 3:14 &gt;&gt;-18

He also indwells,
* &lt;&lt;Bbl Jn 14:17 &gt;&gt;; &lt;&lt;Bbl Rom 8:11 &gt;&gt;; &lt;&lt;Bbl 1Cor 3:16 &gt;&gt;

illuminates,
* &lt;&lt;Bbl 1Cor 2:2 &gt;&gt;; &lt;&lt;Bbl 2Cor 4:4 &gt;&gt;-15; &lt;&lt;Bbl Eph 1:17 &gt;&gt;-19; &lt;&lt;Bbl Php 1:9 &gt;&gt;-11

[[guidesGuidance]],
* &lt;&lt;Bbl Jn 16:13 &gt;&gt;; &lt;&lt;Bbl Acts 15:28 &gt;&gt;; &lt;&lt;Bbl Rom 8:4 &gt;&gt;, 14; &lt;&lt;Bbl Gal 5:16 &gt;&gt;, 18

equips
* &lt;&lt;Bbl Rom 12:4 &gt;&gt;-8; 1Cor. 12: 4-10; Eph. 4: 7-11; &lt;&lt;Bbl 1Pt 4:10 &gt;&gt;-11

and empowers
* &lt;&lt;Bbl Acts 1:8 &gt;&gt;; 10:38; &lt;&lt;Bbl Rom 15:13 &gt;&gt;; &lt;&lt;Bbl 1Cor 12:11 &gt;&gt;; &lt;&lt;Bbl Eph 3:16 &gt;&gt;; &lt;&lt;Bbl 2Tim 1:7 &gt;&gt;

believers for Christ-like living and service.
* &lt;&lt;Bbl Acts 6:8 &gt;&gt;; &lt;&lt;Bbl Rom 8:4 &gt;&gt;-6, 12-16; &lt;&lt;Bbl 2Cor 13:14 &gt;&gt;; &lt;&lt;Bbl Gal 3:3 &gt;&gt;, 5; 5:22-23, 25; &lt;&lt;Bbl Eph 2:22 &gt;&gt;; 4:3; &lt;&lt;Bbl Php 2:1 &gt;&gt;-2
}}}
!!! 7
{{fyi{
We believe that the true church
* &lt;&lt;Bbl Mt 16:18 &gt;&gt;; &lt;&lt;Bbl 1Cor 12:28 &gt;&gt;; &lt;&lt;Bbl Eph 4:4 &gt;&gt;-6; 5:25; &lt;&lt;Bbl Heb 12:28 &gt;&gt;

comprises all who have been justified by God's grace through faith alone in Christ alone.
* &lt;&lt;Bbl Ps 103:12&gt;&gt;; &lt;&lt;Bbl Is 44:22 &gt;&gt;; &lt;&lt;Bbl Jn 3:16 &gt;&gt;; &lt;&lt;Bbl Acts 16:31 &gt;&gt;; &lt;&lt;Bbl Rom 3:20 &gt;&gt;-28; 4:3; 5:1, 21; 8:1, 30, 33-34; 10:4, 9; &lt;&lt;Bbl 2Cor 5:21 &gt;&gt;; &lt;&lt;Bbl Gal 2:16 &gt;&gt;; &lt;&lt;Bbl Eph 2:8 &gt;&gt;-9; &lt;&lt;Bbl Php 3:9 &gt;&gt;; &lt;&lt;Bbl Tit 3:7 &gt;&gt;; &lt;&lt;Bbl Heb 10:14 &gt;&gt;

They are united by the Holy Spirit in the body of Christ,
* &lt;&lt;Bbl 1Cor 12:12 &gt;&gt;-27

of which He is the Head.
* &lt;&lt;Bbl Eph 1:22 &gt;&gt;-23; 4:15-16; &lt;&lt;Bbl Col 1:18 &gt;&gt;; 2:19

The true [[Church]] is manifest in local [[churches|Church-Local]],
* &lt;&lt;Bbl Acts 9:31 &gt;&gt;; 20:28-30; &lt;&lt;Bbl Rom 16:5 &gt;&gt;; &lt;&lt;Bbl 1Cor 1:2 &gt;&gt;; 16:19; &lt;&lt;Bbl 2Cor 1:1 &gt;&gt;; &lt;&lt;Bbl 1Thes 1:1 &gt;&gt;; Philem. 1-2

whose membership should be composed only of believers.
* &lt;&lt;Bbl Mt 18:15 &gt;&gt;-20; &lt;&lt;Bbl Acts 2:41 &gt;&gt;, 47; 14:23; 20:7; &lt;&lt;Bbl 1Cor 1:2 &gt;&gt;, 9; 11:20; 12:13; 14:40; 16:1-2; &lt;&lt;Bbl 1Tim 3:1 &gt;&gt;- 13; 5:9; &lt;&lt;Bbl Tit 1:5 &gt;&gt;-9; &lt;&lt;Bbl Heb 10:25 &gt;&gt;

. The Lord Jesus mandated two ordinances, [[Baptism]]
* &lt;&lt;Bbl Mt 28:18 &gt;&gt;-20; &lt;&lt;Bbl Rom 6:3 &gt;&gt;-4; &lt;&lt;Bbl Col 2:12 &gt;&gt;

and the [[Lord's Supper|LordsSupper]]
* &lt;&lt;Bbl Mt 26:26 &gt;&gt;-29; &lt;&lt;Bbl Mk 14:22 &gt;&gt;-25; &lt;&lt;Bbl Lk 22:15 &gt;&gt;-20; &lt;&lt;Bbl 1Cor 11:23 &gt;&gt;-26

, which visibly and tangibly express the gospel. Though they are not the means of salvation, when celebrated by the church in genuine faith, these ordinances confirm and nourish the believer.
* &lt;&lt;Bbl Jn 6:55 &gt;&gt;-56; &lt;&lt;Bbl Acts 2:38 &gt;&gt;; 8:39; 16:34; &lt;&lt;Bbl 1Cor 10:16 &gt;&gt;; 11:29-30; &lt;&lt;Bbl Col 2:12 &gt;&gt;
}}}
!!! 8
{{fyi{
We believe that God's justifying [[Grace]] must not be separated from His sanctifying power and purpose.
God commands us to love Him supremely and others sacrificially
and to live out our faith with care for one another,
[[Compassion]] toward the [[Poor]]
and [[Justice]] for the oppressed.
With God's Word, the Spirit's power, and fervent [[Prayer]] in Christ's name,
we are to combat the spiritual forces of [[evil|Wickedness]].
In obedience to Christ's commission, we are to make [[Disciple]]s among all people,
always bearing [[Witness]] to the gospel
in word and deed.
}}}
* &lt;&lt;Bbl Mt 7:17 &gt;&gt;-18; 12:33, 35; &lt;&lt;Bbl Heb 11:6 &gt;&gt;; &lt;&lt;Bbl Eph 2:10 &gt;&gt;; 1Cor. 10:31; &lt;&lt;Bbl Col 3:17 &gt;&gt;, 23; &lt;&lt;Bbl 2Thes 2:13 &gt;&gt;; 5:23; &lt;&lt;Bbl 2Cor 5:17 &gt;&gt;; &lt;&lt;Bbl 1Jn 2:29 &gt;&gt;; 3:9; 5:18; &lt;&lt;Bbl 2Cor 3:18 &gt;&gt;; &lt;&lt;Bbl Tit 3:5 &gt;&gt;; &lt;&lt;Bbl 1Cor 6:11 &gt;&gt;; &lt;&lt;Bbl Rom 6:11 &gt;&gt;, 14; &lt;&lt;Bbl 1Pt 1:15 &gt;&gt;; &lt;&lt;Bbl Php 2:12 &gt;&gt;-13; &lt;&lt;Bbl Heb 12:1 &gt;&gt;, 14; Rom. 6; &lt;&lt;Bbl 2Tim 1:9 &gt;&gt;; &lt;&lt;Bbl Jms 2:17 &gt;&gt;; &lt;&lt;Bbl 1Pt 2:24 &gt;&gt;; &lt;&lt;Bbl 2Pt 1:3 &gt;&gt;-11
* &lt;&lt;Bbl Dt 6:5 &gt;&gt;; &lt;&lt;Bbl Lev 19:18 &gt;&gt;; &lt;&lt;Bbl Mt 22:37 &gt;&gt;-39; &lt;&lt;Bbl Mk 12:30 &gt;&gt;; &lt;&lt;Bbl Lk 10:27 &gt;&gt;
* &lt;&lt;Bbl Rom 12:10 &gt;&gt;; 14:13; 15:7, 14; &lt;&lt;Bbl Gal 5:26 &gt;&gt;; &lt;&lt;Bbl Eph 4:32 &gt;&gt;; &lt;&lt;Bbl 1Thes 3:12 &gt;&gt;; 5:11, 15; &lt;&lt;Bbl Heb 10:24 &gt;&gt;-25; &lt;&lt;Bbl 1Pt 4:9 &gt;&gt;
* &lt;&lt;Bbl Dt 15:11 &gt;&gt;; &lt;&lt;Bbl Ps 82:3 &gt;&gt;,4; &lt;&lt;Bbl Ps 140:12; &lt;&lt;Bbl Pr 14:21 &gt;&gt;,31; 19:17; 22:9,16,22,23; 28:8; 29:7; 31:8,9; &lt;&lt;Bbl Jer 22:16 &gt;&gt;; &lt;&lt;Bbl Gal 2:10 &gt;&gt;; &lt;&lt;Bbl Jms 1:27 &gt;&gt;
* &lt;&lt;Bbl Ex 23:6 &gt;&gt;; &lt;&lt;Bbl Lev 19:15 &gt;&gt;; &lt;&lt;Bbl Ps 82:3 &gt;&gt;,4; 140:12; &lt;&lt;Bbl Pr 29:7 &gt;&gt;; 31:9; &lt;&lt;Bbl Is 1:17 &gt;&gt;; &lt;&lt;Bbl Jer 9:24 &gt;&gt;; &lt;&lt;Bbl Mic 6:8 &gt;&gt;; &lt;&lt;Bbl Zech 7:9 &gt;&gt;,10; &lt;&lt;Bbl Mt 23:23 &gt;&gt;; &lt;&lt;Bbl Lk 4:18 &gt;&gt;
* &lt;&lt;Bbl Eph 6:10 &gt;&gt;-18
* &lt;&lt;Bbl Heb 3:13 &gt;&gt;; 10:25; &lt;&lt;Bbl 2Cor 10:3 &gt;&gt;-5; &lt;&lt;Bbl Eph 6:11 &gt;&gt;, 12; &lt;&lt;Bbl 2Tim 4:7 &gt;&gt;; &lt;&lt;Bbl 1Jn 5:3 &gt;&gt;-4
* &lt;&lt;Bbl Mt 28:19 &gt;&gt;; &lt;&lt;Bbl Jn 20:21 &gt;&gt;; &lt;&lt;Bbl Rev 7:9 &gt;&gt;
* &lt;&lt;Bbl Acts 1:8 &gt;&gt;
* &lt;&lt;Bbl Mt 5:13 &gt;&gt;- 16

!!! 9
{{fyi{
We believe in the personal, bodily
//and premillennial*//
[[return|Eschatology]] of our Lord Jesus Christ.
The coming of Christ, at a time known only to God,
requires constant expectancy
and, as our blessed [[Hope]],
motivates the believer to godly living, sacrificial service and energetic mission.
}}}
* &lt;&lt;Bbl Mt 24:30 &gt;&gt;; 26:64; &lt;&lt;Bbl Acts 1:11 &gt;&gt;; &lt;&lt;Bbl Rev 1:7 &gt;&gt;
* &lt;&lt;Bbl Rev 20:1 &gt;&gt;-10
* &lt;&lt;Bbl Mt 25:31 &gt;&gt;; &lt;&lt;Bbl Tit 2:13 &gt;&gt;; &lt;&lt;Bbl 2Thes 1:6 &gt;&gt;-8; &lt;&lt;Bbl Rev 19:11 &gt;&gt;-21
* &lt;&lt;Bbl Mt 24:36 &gt;&gt;; &lt;&lt;Bbl Mk 13:32 &gt;&gt;
* &lt;&lt;Bbl Mt 24:42 &gt;&gt;-51; &lt;&lt;Bbl Rom 13:11 &gt;&gt;- 14; &lt;&lt;Bbl 1Thes 5:1 &gt;&gt;-11; &lt;&lt;Bbl Jms 5:8 &gt;&gt;,9; &lt;&lt;Bbl 2Pt 3:10 &gt;&gt;-14; &lt;&lt;Bbl Rev 3:3 &gt;&gt;
* &lt;&lt;Bbl Tit 2:13 &gt;&gt;
* &lt;&lt;Bbl 2Thes 1:6 &gt;&gt;-8; &lt;&lt;Bbl 2Tim 4:8 &gt;&gt;; &lt;&lt;Bbl Tit 2:14 &gt;&gt;; &lt;&lt;Bbl Heb 9:28 &gt;&gt;; &lt;&lt;Bbl 1Jn 3:2 &gt;&gt;-3; &lt;&lt;Bbl 2Pt 3:10 &gt;&gt;-14

{{floatright{ {{tiny{ This is the only part of the EFCA Statement to which I do not subscribe.}}} }}}
!!! 10
{{fyi{
We believe that God commands everyone everywhere
to believe the [[Gospel]]
by turning to Him in [[Repentance]]
and receiving the Lord Jesus Christ.
We believe that God will raise the dead bodily
and [[judge|Judgment]] the world,
assigning the unbeliever to condemnation and [[eternal conscious punishment|Hell]],
and the believer to eternal blessedness and joy with the Lord,
in the new [[Heaven]] and the new earth,
to the praise of His glorious grace. Amen.
}}}
* &lt;&lt;Bbl Acts 17:30 &gt;&gt;; &lt;&lt;Bbl Acts 20:20 &gt;&gt;
* &lt;&lt;Bbl Mk 1:15 &gt;&gt;; &lt;&lt;Bbl Jn 6:29 &gt;&gt;; 8:24; 11:26; 14:1; 20:31; &lt;&lt;Bbl Acts 16:31 &gt;&gt;; &lt;&lt;Bbl Rom 3:22 &gt;&gt;; 10:14; &lt;&lt;Bbl Gal 3:22 &gt;&gt;; &lt;&lt;Bbl 1Tim 1:16 &gt;&gt;; &lt;&lt;Bbl 1Pt 1:8 &gt;&gt;; &lt;&lt;Bbl 1Jn 3:23 &gt;&gt;
* &lt;&lt;Bbl Is 55:6 &gt;&gt;-7; &lt;&lt;Bbl Lk 24:47 &gt;&gt;; &lt;&lt;Bbl Acts 2:37 &gt;&gt;-38; 3:19; 14:15; 17:30; 20:21; 26:17,18; &lt;&lt;Bbl Rom 2:4 &gt;&gt;; &lt;&lt;Bbl 2Cor 7:9 &gt;&gt;-10
* &lt;&lt;Bbl Jn 1:12 &gt;&gt;
* &lt;&lt;Bbl Is 26:19 &gt;&gt;; &lt;&lt;Bbl Dan 12:2 &gt;&gt;; 1Cor. 15; &lt;&lt;Bbl 1Thes 4:13 &gt;&gt;-18; &lt;&lt;Bbl Rev 20:13&gt;&gt;
* &lt;&lt;Bbl Ecc 12:14 &gt;&gt;; &lt;&lt;Bbl Mt 12:36 &gt;&gt;; 26:31-32; &lt;&lt;Bbl Acts 17:31 &gt;&gt;; &lt;&lt;Bbl Rom 14:10 &gt;&gt;; &lt;&lt;Bbl 2Cor 5:10 &gt;&gt;; &lt;&lt;Bbl 2Tim 4:1 &gt;&gt;; &lt;&lt;Bbl Rev 20:12&gt;&gt;
* &lt;&lt;Bbl Mt 25:46 &gt;&gt;; &lt;&lt;Bbl Lk 16:26 &gt;&gt;; &lt;&lt;Bbl 2Thes 1:9 &gt;&gt;; &lt;&lt;Bbl Rev 14:11 &gt;&gt;; 21:6,8; 22:14,15
* &lt;&lt;Bbl Mt 25:34 &gt;&gt;, 46; &lt;&lt;Bbl Jn 14:2 &gt;&gt;; &lt;&lt;Bbl Rev 21:1 &gt;&gt;-3
* &lt;&lt;Bbl Is 65:17 &gt;&gt;; 66:22; &lt;&lt;Bbl Rom 8:19 &gt;&gt;-21; &lt;&lt;Bbl Heb 12:26 &gt;&gt;;27; &lt;&lt;Bbl 2Pt 3:13 &gt;&gt;; &lt;&lt;Bbl Rev 21:1 &gt;&gt;; 22:3
* &lt;&lt;Bbl Eph 1:6 &gt;&gt;, 12
!!! end
===</pre>
</div>
<div title="Eccl-01-01-note" modifier="SDM" created="201012111824" modified="201112061503" tags="Comment" book_key="601001a">
<pre>! Ecclesiastes

General Notes

In which the author takes up a materialistic argument and then struggles mightily with it.

1:13    Compare &lt;&lt;Bbl Pr 25:2 &gt;&gt;, &quot;the glory of kings.&quot;

3:4b    Compare &lt;&lt;Bbl Mt 11:17 &gt;&gt;

&lt;&lt;Bbl Eccl 4:6 abbr &gt;&gt; Compare &lt;&lt;Bbl Mt 5:30 &gt;&gt;.
&lt;&lt;Bbl Eccl 4:11 abbr &gt;&gt;    Possibly Solomon is recalling the episodes of 1Kng 1:1-9.

5:1 &quot;...forgive them, for they know not what they do.&quot;  A sacrifice of fools?
5:11    see &lt;&lt;Bbl Job 10:10 &gt;&gt;-11 ; &lt;&lt;Bbl Ps 139:13 &gt;&gt;-15
&lt;&lt;Bbl Eccl 5:19 abbr &gt;&gt;,&lt;&lt;Bbl Ps 6:2 &gt;&gt;   Compare 2:25.

7:12    This goes with 1:18 in a funny way.
7:26    see &lt;&lt;Bbl Pr 22:14 &gt;&gt;

&lt;&lt;Bbl Eccl 8:2 abbr &gt;&gt;-3   &lt;&lt;Bbl Pr 24:21 &gt;&gt; has the same wisdom.

10:15   Compare &lt;&lt;Bbl Ps 107:4 &gt;&gt;-7 .  Who can say these do not have the same root or origin?

11:2    Diversification of investments.
&lt;&lt;Bbl Eccl 11:3 abbr &gt;&gt;-12:2b -- Daniel C. Fredericks (1991) &quot;identifies the focus verse (that is, the main message) in Eccl. 11:9 -- //But know that for all these things God will bring you to judgement.// This is a verse that many biblical scholars had scoffed at, saying that it appeared contrary to Qohelet's whole //carpe diem// philosophy and had probably been added by a pious scribe in order to get the book into the Old Testament canon.  But Fredericks, in showing that the structure of the passage absolutely depended on its focus verse, demolished such arguments.&quot;  //[[source|http://www.hccentral.com/gkeys/chiasm.html]]//
&lt;html&gt;&lt;pre&gt;
Eccl. 11:3  Clouds and Rain
Eccl. 11:7   Light and Sun
Eccl. 11:8a   Consider the days of darkness
Eccl. 11:8b     All that comes is breath
Eccl. 11:9a       Enjoy your Youth
Eccl. 11:9b         But know ... God will bring you to judgment
Eccl. 11:10a          Enjoy your Youth
Eccl. 11:10b        All of youth is breath
Eccl. 12:1    Consider God before the days of darkness
Eccl. 12:2a  Sun and Light
Eccl. 12:2b Clouds and Rain&lt;/pre&gt;&lt;/html&gt;
12:11   The sayings of the wise.  Contrast &lt;&lt;Bbl Pr 26:7&gt;&gt; </pre>
</div>
<div title="EditFieldPlugin" modifier="ELSDesignStudios" created="200708220842" modified="201104101025" tags="systemConfig excludeLists" foobar="test">
<pre>/***
|Name|[[EditFieldPlugin]]|
|Source|http://www.TiddlyTools.com/#EditFieldPlugin|
|Version|1.6.2|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Description|extend core edit macro for use in ViewTemplates or direct embedding in tiddler content|
!!!!!Documentation
&gt;see [[EditFieldPluginInfo]]
!!!!!Revisions
&lt;&lt;&lt;
2011.04.10 1.6.2 fixed 'null' fieldname handling in Chrome
| Please see [[EditFieldPluginInfo]] for previous revision details |
2007.08.22 1.0.0 initial release
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.EditFieldPlugin= {major: 1, minor: 6, revision: 2, date: new Date(2011,4,10)};

config.macros.edit.editFieldPlugin_savedHandler=config.macros.edit.handler;
config.macros.edit.cancelMsg = &quot;Abandon changes to %0@%1?&quot;;
config.macros.edit.saveMsg = &quot;Save changes to %0@%1?&quot;;
config.macros.edit.handler = function(place,macroName,params,wikifier,paramString,tiddler) {

    // let core render input/textarea, then get resulting element
    config.macros.edit.editFieldPlugin_savedHandler.apply(this,arguments);
    var fieldType=params[0]==&quot;text&quot;||params[1]?'textarea':'input';
    var elems=place.getElementsByTagName(fieldType); var e=elems[elems.length-1];

    // extended fieldname@tiddlername handling
    var parts=e.getAttribute(&quot;edit&quot;).split('@');
    var field=parts[0];
    var title=parts[1]||tiddler.title;
    if (title=='here') title=tiddler.title;
    // stop field from being saved with 'done' button
    if (parts[1]) { e.removeAttribute(&quot;edit&quot;); e.setAttribute(&quot;field&quot;,field); }

    // save starting value and target tiddler
    e.value=store.getValue(title,field)||e.value; // get field value
    e.setAttribute(&quot;currval&quot;,e.value); // save starting value
    e.setAttribute(&quot;tiddler&quot;,title);

    // force height for textarea field
    if (fieldType==&quot;textarea&quot; &amp;&amp; params[1]) e.style.height=params[1]+&quot;em&quot;;

    // if viewing tiddler, add autosave handlers
    var here=story.findContainingTiddler(place);
    var isViewed=here&amp;&amp;here.getAttribute(&quot;template&quot;).indexOf(&quot;ViewTemplate&quot;)!=-1;
    if (parts[1]||isViewed) { // remote reference or view mode editing...
        story.setDirty(tiddler.title,false); // clear tiddler (&quot;dirty&quot;) flag (set by core)
        e.onkeydown=function(ev) { // ENTER key=save (for single-line input)
            var event=ev?ev:window.event;
            this.setAttribute(&quot;keyCode&quot;,event.keyCode); // save last keyCode (for blur)
            if (event.keyCode==13 &amp;&amp; this.nodeName.toUpperCase()!=&quot;TEXTAREA&quot;)
                this.saveField(); // save input to tiddler field
        }
        e.onblur=function(ev) { // confirm input when focus moves away
            var event=ev?ev:window.event;
            var tid=this.getAttribute(&quot;tiddler&quot;); if (!tid || !tid.length) return;
            var field=this.getAttribute(&quot;edit&quot;)||this.getAttribute(&quot;field&quot;);
            if (this.value==this.getAttribute(&quot;currval&quot;)) return; // no change
            if (this.getAttribute(&quot;keyCode&quot;)==&quot;27&quot;) { // if user pressed ESC
                var msg=config.macros.edit.cancelMsg.format([field,tid]);
                if (!msg.length || confirm(msg))
                    this.value=this.getAttribute(&quot;currval&quot;); // reset value
                this.id=new Date().getTime(); // unique ID for re-focus after blur
                setTimeout(&quot;document.getElementById('&quot;+this.id+&quot;').focus()&quot;,1);
            } else { // other focus change events
                var msg=config.macros.edit.saveMsg.format([field,tid]);
                if (!msg.length || confirm(msg)) this.saveField(); // save value
                else this.value=this.getAttribute(&quot;currval&quot;);
            }
        };
        e.saveField=function() { // unpack/validate attribs and then save the field
            var tid=this.getAttribute(&quot;tiddler&quot;); if (!tid || !tid.length) return;
            var field=this.getAttribute(&quot;edit&quot;)||this.getAttribute(&quot;field&quot;);
            var title=(field==&quot;title&quot;)?this.value:tid;
            if (!title.length) { // error: blank tiddler title
                this.value=this.getAttribute(&quot;currval&quot;); // reset value
                this.id=new Date().getTime(); // unique ID for delayed messages/refocus
                setTimeout(&quot;displayMessage('Please enter a non-blank value')&quot;,1);
                setTimeout(&quot;document.getElementById('&quot;+this.id+&quot;').focus()&quot;,2);
                return;
            }
            config.macros.edit.saveField(tid,title,field,this.value);
            this.setAttribute(&quot;currval&quot;,this.value); // remember new starting value
        };
    }
}
//}}}
//{{{
// save input value to tiddler field (create/touch/rename tiddler as needed)
config.macros.edit.saveField = function(tid,title,field,val) {
    var t=store.getTiddler(tid);
    store.suspendNotifications();
    var anim=config.options.chkAnimate; config.options.chkAnimate=false; // suspend animation
    var who=t&amp;&amp;config.options.chkForceMinorUpdate?t.modifier:config.options.txtUserName;
    var when=t&amp;&amp;config.options.chkForceMinorUpdate?t.modified:new Date();
    store.saveTiddler(t?tid:title,title,t?t.text:&quot;&quot;,who,when,t?t.tags:[],t?t.fields:null);
    store.setValue(title,field,val); // save field
    if (tid!=title) // new title... show renamed tiddler in place of current one
        { story.displayTiddler(story.getTiddler(tid),title); story.closeTiddler(tid); }
    if (field==&quot;text&quot;) // content changed, refresh tiddler display
        { story.refreshTiddler(title,null,true); }
    config.options.chkAnimate=anim; // resume animation
    store.resumeNotifications();
    store.notify(title,true);
}
//}}}</pre>
</div>
<div title="EditTemplate" modifier="SDM" created="201211261353" tags="template excludeLists">
<pre>&lt;!--{{{--&gt;
&lt;div class='toolbar' macro='toolbar [[ToolbarCommands::EditToolbar]]'&gt;&lt;/div&gt;
&lt;div class='title' macro='view title'&gt;&lt;/div&gt;
&lt;div class='editor' macro='edit title'&gt;&lt;/div&gt;
&lt;div macro='annotations'&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;Order: &lt;span macro=&quot;edit book_key&quot;&gt;&lt;/span&gt;&lt;span macro='tiddler QuickEditToolbar with: show'&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class='editor' macro='edit text'&gt;&lt;/div&gt;
&lt;div class='editor' macro='edit tags'&gt;&lt;/div&gt;&lt;div class='editorFooter'&gt;&lt;span macro='message views.editor.tagPrompt'&gt;&lt;/span&gt;&lt;span macro='tagChooser excludeLists'&gt;&lt;/span&gt;&lt;/div&gt;
&lt;!--}}}--&gt;&lt;span macro='resizeEditor'&gt;&lt;/span&gt;</pre>
</div>
<div title="EditTemplate shadows" creator="matt" modifier="matt" created="201102111437" modified="201102151511" tags="shadow">
<pre>This tiddler contains the markup used to display tiddlers in edit mode. It is designed to make it easy to change the layout/structure of the tiddler in edit mode.
By default it contains the following markup:
{{{
&lt;div class='toolbar'
	macro='toolbar [[ToolbarCommands::EditToolbar]] icons:yes'&gt;
&lt;/div&gt;
&lt;div class='heading editorHeading'&gt;
	&lt;div class='editor title' macro='edit title'&gt;&lt;/div&gt;
	&lt;div class='tagClear'&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class='annotationsBox' macro='annotations'&gt;
	&lt;div class='editSpaceSiteIcon'
		macro='tiddlerOrigin height:16 width:16 label:no interactive:no'&gt;
	&lt;/div&gt;
	&lt;div class=&quot;privacyEdit&quot; macro='setPrivacy label:no interactive:no'&gt;&lt;/div&gt;
	&lt;div class='tagClear'&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class='editor' macro='edit text'&gt;&lt;/div&gt;
&lt;div class='editorFooter'&gt;
	&lt;div class='tagTitle'&gt;tags&lt;/div&gt;
	&lt;div class='editor' macro='edit tags'&gt;&lt;/div&gt;
	&lt;div class='tagAnnotation'&gt;
		&lt;span macro='message views.editor.tagPrompt'&gt;&lt;/span&gt;
		&lt;span macro='tagChooser excludeLists'&gt;&lt;/span&gt;
	&lt;/div&gt;
&lt;/div&gt;
}}}</pre>
</div>
<div title="EditTiddlerCommand" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="commands">
<pre>Switches the current tiddler to the current edit view. It is used with the ToolbarMacro like this:
{{{
&lt;&lt;toolbar editTiddler&gt;&gt;
}}}</pre>
</div>
<div title="EditTiddlerPlugin" modifier="ELSDesignStudios" created="200604281832" modified="200908151241" tags="systemConfig excludeLists">
<pre>/***
|Name|EditTiddlerPlugin|
|Source|http://www.TiddlyTools.com/#EditTiddlerPlugin|
|Version|1.3.1|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Description|embed an 'edit' link in tiddler content to invoke edit on any specified tiddler title|
!!!!!Usage
&lt;&lt;&lt;
{{{
&lt;&lt;editTiddler TiddlerName label&gt;&gt;
}}}
*''~TiddlerName''&lt;br&gt;the title of the tiddler to edit (omit or use the keyword 'here' for current //containing// tiddler)
*''label''&lt;br&gt;command link text (default=&quot;edit&quot;)
The plugin also adds ''ctrl-enter'' as a ''keyboard shortcut to start editing'' the current //selected// tiddler (the one with an active toolbar menu)
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2009.08.15 1.3.1 in shortcut, invoke editTiddler command handler (sets focus and custom fields)
2009.08.14 1.3.0 added CTRL-ENTER keyboard shortcut to invoke edit for 'selected' tiddlers
2007.03.22 1.2.0 added 'here' keyword and optional 2nd param to specify label text
2007.03.15 1.1.1 fixed 'get tiddler ID' logic so it actually works! D'oh!
2007.03.11 1.1.0 changed 'get tiddler ID' logic so that macro can be used outside a tiddler (i.e., in mainMenu) by specifying the ID
2006.10.04 1.0.1 invoke findContainingTiddler() as fallback when 'tiddler' param is null
2006.04.28 1.0.0 Initial release
&lt;&lt;&lt;
!!!Code
***/
//{{{
version.extensions.EditTiddlerPlugin={major:1, minor:3, revision:1, date: new Date(2009,8,15)};

config.macros.editTiddler={
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var tid=params.shift(); // use specified tiddler ID (or &quot;here&quot;)
        if (!tid || tid==&quot;here&quot;) {
            var here=story.findContainingTiddler(place);
            if (!here) return; // not in a tiddler, do nothing
            tid=here.getAttribute('tiddler'); // get ID from tiddler element
        }
        var label=&quot;edit&quot;; if (params[0]) label=params.shift();
        createTiddlyButton(place,label,'edit tiddler: '+tid,this.onclick).setAttribute('which',tid);
    },
    onclick: function(e) {
        story.displayTiddler(null,this.getAttribute('which'),DEFAULT_EDIT_TEMPLATE);
    }
}
//}}}
//{{{
    addEvent(document,'keypress', function(ev) { var ev=ev||window.event;
        if (!ev.ctrlKey || ev.keyCode!=13) return; // CTRL-ENTER = edit tiddler
        story.forEachTiddler(function(title,tiddler){
            if (hasClass(tiddler,'selected') &amp;&amp; !story.isDirty(title))
                config.commands.editTiddler.handler(ev,null,title);
        });
        return false;
    });
//}}}</pre>
</div>
<div title="Editing" creator="psd" modifier="jermolene" created="201102111106" modified="201111031824" tags="gettingstarted">
<pre>~TiddlyWiki is made up of chunks of information called tiddlers. You're reading a tiddler called 'Editing' right now.

When you open an empty ~TiddlyWiki file for the first time, you'll be presented with a tiddler called &quot;~GettingStarted&quot;. This contains links to tiddlers to help you define the main attributes of your ~TiddlyWiki; the Title, SubTitle and MainMenu navigation (see [[Configuration]]).

You will notice that each tiddler has a command menu in it's top right corner (''close'', ''edit'', and so on). You can use this to switch the tiddler into edit mode, or if you prefer you can simply double click the tiddler when it is in view mode. When you are finished, click on ''done'', or ''cancel'' to discard your changes.

You can sign your edits with your username, which is currently set to &lt;&lt;option txtUserName&gt;&gt;. You can change it here, or in the right hand sidebar, where it can be found under [[options »|InterfaceOptions]].

There are two ways to make links between tiddlers. If you are linking to a tiddler which already exists, put the tiddler name in double square brackets (Double click here, and you'll see double square brackets around the word [[example]]). You can use this technique to point to (and create) a new tiddler, or alternatively just write the tiddler name by joining words starting with capital letters, LikeThis. When you save the tiddler and click on the link, you can then add content to your new tiddler.
</pre>
</div>
<div title="Elder" modifier="SDM" created="201004120330" modified="201010270146">
<pre>&lt;&lt;Bbl Act 6:2 &gt;&gt;; &lt;&lt;Bbl Act 20:28 &gt;&gt;; &lt;&lt;Bbl 1Tim 3:1 &gt;&gt;-7 , &lt;&lt;Bbl 1Tim 5:17 &gt;&gt;-19 ; &lt;&lt;Bbl Tit 2:7 &gt;&gt;; &lt;&lt;Bbl 1Pt 5:1 &gt;&gt;-4 ; &lt;&lt;Bbl Heb 13:17 &gt;&gt;
deacons:    &lt;&lt;Bbl Act 6:1 &gt;&gt;-6 ; &lt;&lt;Bbl 1Tim 3:10 &gt;&gt;-13
[[Authority]]</pre>
</div>
<div title="Eloquence" modifier="SDM" created="201004120330" modified="201211160318" book_key="">
<pre>* &lt;&lt;Bbl Gal 2:1 &gt;&gt;-7
* &lt;&lt;Bbl 1Cor 2:1 &gt;&gt;
* &lt;&lt;Bbl Pr 16:21&gt;&gt;, 23-24</pre>
</div>
<div title="EmasticAbsolut" modifier="SDM" created="201012210657" modified="201301091605" tags="stylesheet excludeLists" book_key="">
<pre>/***
!Description

!CSS
***/
/*{{{*/
.main{position:relative;}
.lf0,.lf5,.lf10,.lf15,.lf20,.lf25,.lf30,.lf35,.lf40,.lf45,.lf50,.lf55,.lf60,.lf65,.lf70,.lf75,.lf80,.lf85,.lfn5,.lfn10,.lfn15,.lfn20,.lfn25,.lfn30,
.tp0,.tp5,.tp10,.tp15,.tp20,.tp25,.tp30,.tp35,.tp40,.tp45,.tp50,
.bt0,.bt5,.bt10,.bt15,.bt20,.bt25,.bt30,.bt35,.bt40,.bt45,.bt50,
.rtn5,.rtn10,.rtn20,.rtn30{position:absolute;}
.lf0{left:0em;}
.lf5{left:5em;}
.lf10{left:10em;}
.lf15{left:15em;}
.lf20{left:20em;}
.lf25{left:25em;}
.lf30{left:30em;}
.lf35{left:35em;}
.lf40{left:40em;}
.lf45{left:45em;}
.lf50{left:50em;}
.lf55{left:55em;}
.lf60{left:60em;}
.lf65{left:65em;}
.lf70{left:70em;}
.lf75{left:75em;}
.lf80{left:80em;}
.lf85{left:85em;}
.lfn5{left:-5em;}
.lfn10{left:-10em;}
.lfn15{left:-15em;}
.lfn20{left:-20em;}
.lfn25{left:-25em;}
.lfn30{left:-30em;}

.rtn5{right:-5em;}
.rtn10{right:-10em;}
.rtn15{right:-15em;}
.rtn20{right:-20em;}
.rtn25{right:-25em;}
.rtn30{right:-30em;}

.tp0{top:0em;}
.tp5{top:5em;}
.tp10{top:10em;}
.tp15{top:15em;}
.tp20{top:20em;}
.tp25{top:25em;}
.tp30{top:30em;}
.tp35{top:35em;}
.tp40{top:40em;}
.tp45{top:45em;}
.tp50{top:50em;}
.bt0{bottom:0em;}
.bt5{bottom:0em;}
.bt10{bottom:10em;}
.bt15{bottom:15em;}
.bt20{bottom:20em;}
.bt25{bottom:25em;}
.bt30{bottom:30em;}
.bt35{bottom:35em;}
.bt40{bottom:40em;}
.bt45{bottom:45em;}
.bt50{bottom:50em;}
.zi1{ z-index:1;}
.zi2{ z-index:2;}
.zi3{ z-index:3;}
.zi4{ z-index:4;}
.zi5{ z-index:5;}
/*}}}*/</pre>
</div>
<div title="EmasticGadgets" modifier="SDM" created="201012210703" modified="201301091605" tags="stylesheet excludeLists" book_key="">
<pre>/***
!Description
2010.01.21
&lt;&lt;&lt;
*pplx added
&lt;&lt;&lt;
!CSS
***/
/*{{{*/
/* CSS Document */
.rc {border-radius:3px; border:1px solid #fff; }
.fr {border:1px solid #ccc; padding:0.25em;}

.byline {
font-family: &quot;Lucida Grande&quot;, Tahoma;
    font-size: 0.865em;
    font-weight: lighter;
    font-variant: normal;
    text-transform: uppercase;
    color: #666666;
    letter-spacing: 0.4em;
    display: block;
    margin-bottom: 1.734em;
    padding:0em 0em 0em 1em;
    }

.and {font-family: Baskerville, &quot;Goudy Old Style&quot;, &quot;Palatino&quot;, &quot;Book Antiqua&quot;, serif;
    font-style: italic;
    color: #777;
    }



.tc {text-align:center;}
.tr {text-align:right;}
.tl {text-align:left;}
.b{ font-weight:bold;}
.pl1{padding-left:1em;}
.pl2{padding-left:2em;}
.pl3{padding-left:3em;}

.ppl2{padding-left:1.8%;}
.ppl3{padding-left:3.13%;}
.ppl5{padding-left:4.8%;}


.water{color:#5582d1;}
.earth{color:#4e3e2c;}
.air{color:#f1fff7;}
.fire{ color:#ff8a19;}
 /* drinks food */
 .wine{color:#4a040a;}
 .beer{color:#F0C030;}
 .caffe{color:#473523;}
 .caffe-cream{color:#b68d3d;}
 .espresso{color:#2c1901;}
 .caramel{color:#ab671f;}
 .chocolate{color:#290200;}
 .black-pepper{color:#444334;}
 .pepper-lite{color:#8d8a72;}

 .lipstick{color:#c20c0c;}
 .oldbook{font-family:&quot;Book Antiqua&quot;,&quot;Warnock Pr&quot;,&quot;Goudy Old Style&quot;,&quot;Palatino&quot;,Georgia,serif;}
.note{font-family:Georgia, &quot;Times New Roman&quot;, Times, serif; font-style:italic; font-size:0.9em; margin:0.1em; color:#333;}
.mono{font-family:&quot;Courier New&quot;, Courier, monospace;}
/*}}}*/</pre>
</div>
<div title="EmasticGrid" modifier="SDM" created="201012210700" modified="201301091605" tags="stylesheet excludeLists" book_key="">
<pre>/***
!Description

!CSS
***/
/*{{{*/
.main {
width:70em;margin:0 auto;text-align:left;  }

.clear {clear:both;}

.dl1,
.dl2,
.dl5,
.dl10,
.dl15,
.dl20,
.dl25,
.dl30,
.dl35,
.dl40,
.dl45,
.dl50,
.dl55,
.dl60,
.dl65,
.dl70,
.dl75{float:left; display: inline; }

.dr1,
.dr2,
.dr5,
.dr10,
.dr15,
.dr20,
.dr25,
.dr30,
.dr35,
.dr40,
.dr45,
.dr50,
.dr55,
.dr60,
.dr65,
.dr70,
.dr75
{float:right; display: inline; }

.dl1, .dr1 {width:1em;}
.dl2, .dr2 {width:2em;}
.dl5, .dr5{width:5em;}
.dl10, .dr10{width:10em;}
.dl15, .dr15{width:15em;}
.dl20, .dr20{width:20em;}
.dl25, .dr25{width:25em;}
.dl30, .dr30{width:30em;}
.dl35, .dr35{width:35em;}
.dl40, .dr40{width:40em;}
.dl45, .dr45{width:45em;}
.dl50, .dr50{width:50em;}
.dl55, .dr55{width:55em;}
.dl60, .dr60{width:60em;}
.dl65, .dr65{width:65em;}
.dl70, .dr70{width:70em;}
.dl75, .dr75{width:75em;}


.ml5{margin-left:5em;}
.ml10{margin-left:10em;}
.ml15{margin-left:15em;}
.ml20{margin-left:20em;}
.ml25{margin-left:25em;}
.ml30{margin-left:30em;}
.ml35{margin-left:35em;}
.ml40{margin-left:40em;}
.ml45{margin-left:45em;}
.ml50{margin-left:50em;}
.ml55{margin-left:55em;}
.ml60{margin-left:60em;}
.ml65{margin-left:65em;}
.ml70{margin-left:70em;}
.ml75{margin-left:75em;}

.mr5{margin-right:5em;}
.mr10{margin-right:10em;}
.mr15{margin-right:15em;}
.mr20{margin-right:20em;}
.mr25{margin-right:25em;}
.mr30{margin-right:30em;}
.mr35{margin-right:35em;}
.mr40{margin-right:40em;}
.mr45{margin-right:45em;}
.mr50{margin-right:50em;}
.mr55{margin-right:55em;}
.mr60{margin-right:60em;}
.mr65{margin-right:65em;}
.mr70{margin-right:70em;}
.mr75{margin-right:75em;}

.mt1{margin-top:1em;}
.mt5{margin-top:5em;}
.mt10{margin-top:10em;}
.mt20{margin-top:20em;}
.mt30{margin-top:30em;}
.mt40{margin-top:40em;}
.mt50{margin-top:50em;}

.fluid {width:auto;    float:none;}

.hp{width:100%;  float:left; }

.clearfix, .main{ display:block;}

.clearfix:after, .main:after {
     visibility: hidden;
     display: block;
     font-size: 0;
     content: &quot; &quot;;
     clear: both;
     height: 0;

     }

/* IE5/MAC hack \*/
* html .clearfix{ display: inline;  height: 1px;}
/* close */
/*}}}*/</pre>
</div>
<div title="EmasticPercent" modifier="SDM" created="201012210654" tags="stylesheet excludeLists">
<pre>/*{{{*/
.dp5,
.dp10,
.dp15,
.dp20,
.dp25,
.dp30,
.dp33,
.dp35,
.dp40,
.dp45,
.dp50,
.dp55,
.dp60,
.dp65,
.dp67,
.dp70,
.dp75,
.dp80,
.dp85,
.dp90,
.dp95,
.dp100
{float:left; display: inline; }

.dp5{width:5%;}
.dp10{width:10%;*width:9.9%;}
.dp15{width:15%;*width:14.9%;}
.dp20{width:20%;*width:19.9%;}
.dp25{width:25%;*width:24.9%; }
.dp30{width:30%;*width:29.9%;}
.dp33{width:33.33%;*width:33.3%;}
.dp35{width:35%;*width:34.9%;}
.dp40{width:40%;*width:39.9%;}
.dp45{width:45%;*width:44.9%;}
.dp50{width:50%;*width:49.9%;}
.dp55{width:55%;*width:54.9%;}
.dp60{width:60%;*width:59.9%;}
.dp65{width:65%;*width:64.9%;}
.dp67{width:66.67%;*width:66.6%;}
.dp70{width:70%;*width:69.9%;}
.dp75{width:75%;*width:74.9%;}
.dp80{width:80%;*width:79.9%;}
.dp85{width:85%;*width:84.9%;}
.dp90{width:90%;*width:89.9%;}
.dp95{width:95%;*width:94.9%;}
.dp100{width:100%;*width:99.9%;}
/*}}}*/</pre>
</div>
<div title="EmasticStyleSheet" modifier="SDM" created="201012202103" tags="stylesheet excludeLists">
<pre>/***
Here are the changes, that have to be made, to overwrite the core predefinitions.
***/
/*{{{*/
/*-- new for clearing floats --*/
.outer{
    overflow: auto;
}

.tabContents {
    overflow: auto;
}

/* new for emastic */
.box {
    background: [[ColorPalette::Background]];
    border-right: 1px [[ColorPalette::TertiaryMid]] solid;
    border-bottom: 1px [[ColorPalette::TertiaryMid]] solid;
    padding: 1px 1em 0.75em;
    margin:  1em .5em 0.25em;
}

#sidebarOptions .input {
    margin: 0.4em 5%;
}

.txtOptionInput, .pasOptionInput {
    width: 90%;
}
/*}}}*/</pre>
</div>
<div title="Encouragement" modifier="SDM" created="201211241947" modified="201211250018" book_key="">
<pre>stub</pre>
</div>
<div title="Envying" modifier="SDM" created="201112042340" book_key="">
<pre>* E.T. Welch speaks of weak (because deceived) Christians longing for God's help as &quot;Feeling a bit like prisoners in Alcatraz who heard the parties across the San Francisco Bay.&quot;
* [[Coveting]]</pre>
</div>
<div title="Eph-01-01-note" modifier="SDM" created="201010310313" modified="201201032117" tags="Comment" book_key="260001a">
<pre>1:3-14 This is an exposition of the One-In-Three:  3-6 deals with the Father, 6b-13a with the Son, and 13b-14 with the Spirit.
1:11-14 The inheritance from the adoption, vs. 5.
1:13    see &lt;&lt;Bbl 2Cor 5:5 &gt;&gt;  </pre>
</div>
<div title="Eph-02-01-note" modifier="SDM" created="201009302033" modified="201205280224" tags="Comment" book_key="260001a">
<pre>&lt;&lt;Bbl Eph 2:3&gt;&gt;    children of wrath   --  hebraism.  sin nature inherited from Adam
2:10    We are His poetry, to extrapolate from the Greek.
    Note how we, created in Christ Jesus,  are thus perfectly suited to the good works prepared in advance.    There is no mismatch. </pre>
</div>
<div title="Eph-03-01-note" modifier="SDM" created="201010310312" modified="201212020611" tags="Comment" book_key="260003a">
<pre>3:3    As I wrote before in brief   --  since he has been covering this topic of the inclusion of the gentiles in the previous chapter, could that mean &quot;as mentioned above&quot;?
3:6 This pivotal verse explains Paul's &quot;mystery&quot;.  The term is apokalypsis; see my note on &lt;&lt;Bbl Is 25:7 &gt;&gt;.
&lt;&lt;Bbl Eph 3:12 abbr &gt;&gt; Bold access is also encouraged in &lt;&lt;Bbl Heb 4:16 &gt;&gt;.  </pre>
</div>
<div title="Eph-04-01-note" modifier="SDM" created="201010251453" modified="201211222255" tags="Comment" book_key="260001a">
<pre>* &lt;&lt;Bbl Eph 4:1 &gt;&gt; see [[Walk]]
* 4:11  If it's taken as a five-fold ministry, the left hand can sketch out the offices.
## thumb  --  apostle (alone able to address all the other digits)
## index finger  --  prophet (pointing)
## middle finger  --  evangelist (it's the longest)
## ring finger  --  pastor (married to the fellowship)
## pinky -- teachers should be humble.</pre>
</div>
<div title="Eph-05-15-note" modifier="SDM" created="201010241527" modified="201211151319" tags="Comment" book_key="260001e">
<pre>5:19   see &lt;&lt;Bbl Col 3:16 &gt;&gt;
&lt;&lt;Bbl Eph 5:28 abbr &gt;&gt;-29
* the [[GoldenRule]].  I am always responsive to my body's needs: I'm hungry, so I eat.
* see &lt;&lt;Bbl 1Sam 18:3 &gt;&gt;  </pre>
</div>
<div title="Eph-06-01-note" modifier="SDM" created="201101122133" modified="201209221845" tags="Comment" book_key="260001b">
<pre>&lt;&lt;Bbl Eph 6:1 abbr &gt;&gt;-4 -- see [[Discipline]], also compare &lt;&lt;Bbl Col 3:20 &gt;&gt;-21.

&lt;&lt;Bbl Eph 6:15 abbr &gt;&gt; --  //utility belt of truth// (WEB)</pre>
</div>
<div title="Error" modifier="SDM" created="201208061448" book_key="">
<pre>* [[Denial]]
* [[Heresy]]</pre>
</div>
<div title="Eschatology" modifier="SDM" created="201004120330" modified="201211250022" book_key="">
<pre>{{fyi{
I heartily subscribe to the EFCA statement of faith with the exception of one point, one word:  //premillennial//.
}}}
* &lt;&lt;Bbl Ps 96:10 &gt;&gt;-13 ; &lt;&lt;Bbl Mt 24:45 &gt;&gt;-51 ; &lt;&lt;Bbl Jn 14:1 &gt;&gt;-3 ; &lt;&lt;Bbl Lk 21:34 &gt;&gt;; &lt;&lt;Bbl Act 1:10 &gt;&gt;-11 ; &lt;&lt;Bbl Rom 12:17 &gt;&gt;-19 ; &lt;&lt;Bbl 1Cor 15:23 &gt;&gt;; &lt;&lt;Bbl 1Thes 4:15 &gt;&gt;-17 ; &lt;&lt;Bbl 2Tim 4:8 &gt;&gt;; &lt;&lt;Bbl Tit 2:13 &gt;&gt;, &lt;&lt;Bbl Php 3:20 &gt;&gt;; &lt;&lt;Bbl 1Pt 5:4 &gt;&gt;; &lt;&lt;Bbl 1Jn 2:28 &gt;&gt;; &lt;&lt;Bbl 1Jn 3:2 &gt;&gt; (&quot;...he who has this hope purifies himself...&quot;)
* The coming of the Lord as a thief:  &lt;&lt;Bbl Joe 2:1 &gt;&gt;; &lt;&lt;Bbl 1Thes 5:2 &gt;&gt;-3 , &lt;&lt;Bbl Mt 24:42 &gt;&gt;-43
----
* [[Eschatology-Theories]]</pre>
</div>
<div title="Eschatology-Theories" modifier="SDM" created="201111281537" modified="201202122112" book_key="">
<pre>(below not checked much)
# Futurist or Premillennialist -- See [[Eschatology]]
# Historist or Postmillennialist
# Preterist or Amillennialist
----
* [[Eschatology]]</pre>
</div>
<div title="Esther-01-01-note" modifier="SDM" created="201010310425" modified="201112012226" tags="Comment" book_key="590001a">
<pre>Esther

General Notes

Mordecai's situation at one point is like &lt;&lt;Bbl Ecc 9:14 &gt;&gt;-15, the poor man who delivered a city and was forgotten  --  except that Mordecai does get remembered.
The opening through 2:4  is more or less the dramatic hook; the story commences as we would expect at 2:5.

&lt;&lt;Bbl Esther 1:19 abbr &gt;&gt;  This formula found also in &lt;&lt;Bbl Dan 6:8 &gt;&gt;.

&lt;&lt;Bbl Esther 2:10 abbr &gt;&gt;  Examples of Esther's discretion and obedience.

3:2 This is the offense that marked out Daniel.  Mordecai is not one of the king's servants.
3:8 This reasoning found also in &lt;&lt;Bbl Jn 19:12 &gt;&gt;; see also &lt;&lt;Bbl Jn 7:7 &gt;&gt;.
&lt;&lt;Bbl Esther 3:15 abbr &gt;&gt;  The city of Susa is seen in 8:15.

4:10-17 The high point of suspense of the story.

5:14    This word of advice could not be more forcefully repudiated in 6:13.

7:8 The king realizes Haman's villainy  --  in a microcosm of the true assault.  The cry he gives is God's own.  </pre>
</div>
<div title="Evil-Failure-to-Restrain" modifier="SDM" created="201012041916" modified="201211121322" book_key="">
<pre>* &lt;&lt;Bbl Jer 44:19 &gt;&gt;  Husbands, responsibility of
* Pr.  //a good man who gives way before the wicked//
* [[Resisting]]</pre>
</div>
<div title="Example" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Mt 23:2 &gt;&gt;-4  (negative); &lt;&lt;Bbl Tit 2:7 &gt;&gt;; &lt;&lt;Bbl Heb 13:7 &gt;&gt;
Paul sets himself as an example:  &lt;&lt;Bbl 1Cor 4:16 &gt;&gt;,&lt;&lt;Bbl 1Cor 10:31 &gt;&gt; - 11.1; &lt;&lt;Bbl Php 3:17 &gt;&gt;-19 ,&lt;&lt;Bbl Php 4:9 &gt;&gt;; &lt;&lt;Bbl 1Thes 1:6 &gt;&gt;-7
Timothy to be one:      &lt;&lt;Bbl 1Tim 4:12 &gt;&gt;
Elders:         &lt;&lt;Bbl 1Pt 5:3 &gt;&gt;
Example of God, Christ
&lt;&lt;Bbl Lv 20:7 abbr &gt;&gt;; &lt;&lt;Bbl Lk 6:36 &gt;&gt;; &lt;&lt;Bbl Php 5:5 &gt;&gt;-13 ; &lt;&lt;Bbl Heb 10:7 &gt;&gt;; &lt;&lt;Bbl 1Pt 1:15 &gt;&gt;, &lt;&lt;Bbl 1Pt 2:21 &gt;&gt;; &lt;&lt;Bbl 1Jn 3:16 &gt;&gt;.</pre>
</div>
<div title="ExamplePlugin" creator="psd" modifier="blaine" created="201102111121" modified="201102111310" tags="systemConfig">
<pre>/***
|''Name:''|ExamplePlugin|
|''Description:''|To demonstrate how to write TiddlyWiki plugins|
|''Version:''|2.0.3|
|''Date:''|Sep 22, 2006|
|''Source:''|http://www.tiddlywiki.com/#ExamplePlugin|
|''Author:''|JeremyRuston (jeremy (at) osmosoft (dot) com)|
|''License:''|[[BSD open source license]]|
|''~CoreVersion:''|2.1.0|
|''Browser:''|Firefox 1.0.4+; Firefox 1.5; InternetExplorer 6.0|
***/

//{{{

// Uncomment the following line to see how the PluginManager deals with errors in plugins
// deliberateError();

// Log a message
pluginInfo.log.push(&quot;This is a test message from &quot; + tiddler.title);

//}}}</pre>
</div>
<div title="ExampleStyleSheet" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="examples">
<pre>#displayArea {background-color: #ffccff; }
#mainMenu {border: 1px solid #ffff88; }
#commandPanel {background-color: #008800; }</pre>
</div>
<div title="ExampleSystemConfig" creator="psd" modifier="colmbritton" created="201102111106" modified="201102211428" tags="examples">
<pre>config.animFast = 0.12; // Speed for animations (lower == slower)
config.animSlow = 0.01; // Speed for Easter Egg animations
config.views.wikified.toolbarEdit.text = &quot;Edit away, it won't get saved&quot;;</pre>
</div>
<div title="Examples" creator="psd" modifier="jermolene" created="201102111106" modified="201211280921" tags="community">
<pre>See Dave Gifford's incredibly detailed catalogue of TiddlyWiki being used in the wild in his [[TiddlyWikiShowcase|http://giffmex.tiddlyspot.com/]].

Other notable or interesting examples:
* Getting Things Done - [[MonkeyPirateTiddlyWiki|http://mptw.tiddlyspot.com/]],  [[mGSD|http://mgsd.tiddlyspot.com/#mGSD]],[[D-Cubed|http://www.dcubed.ca/]], [[TeamTasks|http://www.hawksworx.com/playground/TeamTasks/]], [[TiddlyPackingList|http://tiddlypacking.tiddlyspace.com/]], [[tbGTD|http://tbgtd.tiddlyspot.com/]]
* [[Open Notebook Science|http://pineda-krch.com/2008/10/31/starting-an-open-notebook-science-project/]] - [[Garrett Lisi's|http://www.telegraph.co.uk/earth/main.jhtml?CMP=ILC-mostviewedbox&amp;xml=/earth/2007/11/14/scisurf114.xml]] [[Deferential Geometry|http://deferentialgeometry.org/]], ([[video|http://broadcast.oreilly.com/2008/09/lisi-on-a-wiki.html]])
* Novels and creative writing - [[TiddlyWikiWrite|http://www.ljcohen.net/resources-wiki.html]], [[Gimcrack'd|http://gimcrackd.com/]], [[Singularity!|http://www.antipope.org/charlie/blog-static/fiction/accelerando/toughguide.html]], [[Liberty Hall Writers Wiki|http://wiki.libertyhallwriters.org/doku.php?id=tiddlywiki]], [[Bibliotheca Caelestis. Tiddlywikiroman|http://bc.etkbooks.com/opac/]] from Hartmut Abendschein, [[Die, Vampire! Die!|http://www.davidvanwert.com/wiki/dievampiredie.html]] from David Van Wert, [[Rose|http://www.emacswiki.org/alex/rose.html]] from Alex Schroeder
* Education - [[South Australia|https://secure.ait.org/wiki/background.htm]], [[maths in Massachusetts|http://luceatlux.net/mcasmath10/]], [[The NoteStorm Christian database|http://giffmex.org/nsdb.html]]
* Factbooks - [[Web campaigning in the US|http://mitpress.mit.edu/books/0262062585/WebCampaigningDigitalSupplement.html]], [[Bolivian politics|http://www.centellas.org/politics/politiddly.html]], [[Prince2 project management|http://www.microupdate.co.uk/tiddlywikis/princeII.htm]], [[Python Grimoire|http://the.taoofmac.com/space/Python/Grimoire]], [[Marc Bolan and T-Rex|http://videodrama.tiddlyspot.com/]]
* Teaching - [[An Introduction to Chain Indexing|http://informationr.net/tdw/publ/chain_indexing/chain_indexing.html]], [[Reasoning Well|http://reasoningwell.tiddlyspot.com/]]
* Role Playing Games - [[Making kickass campaign sites with TiddlyWiki|http://www.encounteraday.com/2009/05/20/making-kickass-campaign-sites-with-mptw/]]
* Medicine - [[TiddlyManuals|http://tiddlymanuals.tiddlyspace.com/]], [[AMBIT|http://ambit.tiddlyspace.com/]]
* Law - [[TiddLegal|http://tiddlegal.tiddlyspot.com/]], [[Courtrules|http://www.michlaw.net/courtrules.html]]
* Activism - [[Climate Change 2.0|http://www.climate-change-two.net/]], [[TiddlyWiki for Left Wing Journalists and Researchers|http://leftclickblog.blogspot.com/2008/02/tiddlywiki-for-left-journoes-and.html]]
* Homepage/Portfolio - [[Digimask|http://digimask.com/]], [[American Cryptogram Association|http://msig.med.utah.edu/RunningUtes/cryptogram/aca.html]], [[Nykyri.net|http://www.nykyri.net/]]
* Blog - [[UdiGrudi|http://udigrudi.net/]], [[LumpyMilk|http://lumpymilk.tiddlyspot.com/]], [[Veminra|http://veminra.tiddlyspace.com/]]
* Mobile - [[iTW optimised for the iPhone|http://itw.bidix.info/]], [[iPhone|http://iphone.tiddlyspace.com/]], [[Android|http://android.tiddlyspace.com]]
* Tools - [[TiddlyFolio|http://tiddlyfolio.tiddlyspot.com/]] (an electronic wallet), [[TiddlySlidy|http://tiddlyslidy.com/#TiddlySlidy]] (presentations using TiddlyWiki), [[TiddlyPocketBooks|http://tiddlypocketbook.com/]] (printable pocket books), [[TiddlyTweets|http://osmosoft.com/tiddlytweets/]] (a tweet archiver), [[Project Cecily|http://osmosoft.com/cecily/]] (a zooming user interface for TiddlyWiki)
* As a component of other products:
** [[Dido|http://projects.csail.mit.edu/exhibit/Dido/]] - a tiddlywikified database application
** [[KNote|http://www.smartgoldfish.com/download.html]] - a notetakingprogram (desktopapplikation)
** [[Twine|http://gimcrackd.com/etc/src/]] - a program for creating interactive stories
** [[CkEditor + TW|http://simonmcmanus.wordpress.com/2010/06/28/installing-ckeditor-with-standalone-tiddlywiki/]] - wysiwyg and TW on local disk

Also, see TiddlyWikiAdaptations
</pre>
</div>
<div title="Exigency" creator="SDM" modifier="SDM" created="201304262149" book_key="" changecount="1">
<pre>* dire [[Need]]
* &lt;&lt; Bbl Pro 6:11 &gt;&gt; (NASB) //Your poverty will come in like a vagabond and your need like an armed man.//
* in 1902 there was a mining accident in Tennessee.  Lately the last letters were recovered.</pre>
</div>
<div title="Exodus-01-01-note" modifier="SDM" created="201010310340" modified="201305051921" tags="Comment" book_key="420001a" changecount="1">
<pre>10/13/88  -- I make it through the first book of my good old tattered and mutilated Bible  --  yea!
The ease of transition from Genesis to Exodus indicates same authorship.  Note the Land of Goshen particularly.
For the date of the Exodus, see &lt;&lt;Bbl 1Kings 6:1 &gt;&gt;

&lt;&lt;Bbl Exo 1:9&gt;&gt; A type is established from the beginning:  Egypt is Satan and his oppressive tactics, Israel is the Church being delivered.
1:12    Persecution  --  and its typical result.  Persecution and fear intensify each other in an horrible cycle.
1:15-21 A beautiful short story.
1:15	Pharaoh uses the midwives just as he uses the foremen, &lt;&lt;Bbl Exo 5:4&gt;&gt;.
1:16    see &lt;&lt;Bbl Rev 12:17 &gt;&gt;.  Pharaoh fears the arrival of a deliverer, and employs Herod's strategy.  But in both cases the very one they fear alone escapes, and in both cases it much later results in their downfall (a different Pharaoh).

2:3 Obedience of a sort to the edict.  A resignation (but not perhaps completely) of the child to death.  Very nearly a picture of the ark of Noah.  Cf &lt;&lt;Bbl Heb 11:24 &gt;&gt;
&lt;&lt;Bbl Ex 2:6 abbr &gt;&gt;  Women don't understand war so well.
2:10    Another resignation of the child to death.

Moses has a vision for his people

&lt;&lt;Bbl Ex 2:11 abbr &gt;&gt;-14      However misguided his attempt, Moses is showing his heart.
    19:4-6      own possession, kingdom of priests, holy nation .
    32:31-11
    33:15-17
    34:8-9
    35:30-35
&lt;&lt;Bbl Num 11:29 abbr &gt;&gt;
&lt;&lt;Bbl Dt 26:16 abbr &gt;&gt;-19

&lt;&lt;Bbl Ex 2:12 abbr &gt;&gt; Perhaps Moses' years in the Pharoah's court have instructed him in deciet and murder.  In any case he is fulfilling the most base and hateful human tendencies with perfect ease.  &quot;How to Do Things the Way the World Does.&quot;
    Jesus was tempted in just this way.  In fact this incident could be viewed as a cognate to the temptation in the wilderness  --  this one, of course, a failure.
2:13    Moses has got this idea that Egyptians and Israelites are on different sides in a conflict.  But he does not yet really know why.  Perhaps he's approaching it on purely political terms.
    Nothing is going to remain hidden.
2:14    see 18:13-16.  Moses learns that he does not have credentials.  This is a first lesson for all God's children.
    Note presence of Pharoah  is a hebriasm meaning Pharoah's soveriegn authority.  &lt;&lt;Bbl Jonah 1:3 &gt;&gt; must use the same words.  Cf &lt;&lt;Bbl Heb 11:24 &gt;&gt;-27
&lt;&lt;Bbl Ex 2:19 abbr &gt;&gt; Had Moses ever before served?  Another first lesson.</pre>
</div>
<div title="Exodus-02-23-note" modifier="SDM" created="201211261401" modified="201211261402" tags="Comment" book_key="420002g">
<pre>2:23    Their oppression does not come from a person, but from a system which cannot simply die.  People in the world are tossed from affliction to affliction like dispossessed people are tossed under royal generations.
    If God heard their groaning, we know that their groaning was directed towards him.  Perhaps it was in a way like our first prayers  --  tentative, testing, offered only from complete helplessness.
2:24-25 He heard  and remembered  ;  He saw  and took notice  (lit., knew).  This is the second time God has noticed in Exodus.  He recognizes two humble women, and then a humbled nation.

3:1 KJV, the backside of the desert.
3:5 This sign of hallowing also in &lt;&lt;Bbl Josh 5:15 &gt;&gt;.
&lt;&lt;Bbl Ex 3:6 abbr &gt;&gt;  Jesus cites this verse with special reference to the tense.
{{{
a 3:8a  a land flowing with milk and honey
b 3:8b    to the place of the Canaanites and the Hittites and ...
c 3:9a      the cry of the children of Israel has come to Me
d 3:9b         I have also seen the oppression with which the Egyptians oppress them.
e 3:10           I will send you to Pharaoh
f 3:12             this shall be a sign to you that I have sent you
g 3:13a              The God of your fathers has sent me to you,
i 3:13b               What is His name?
j 3:13c                 What shall I say to them
x 3:14                     And God said to Moses,  -- I AM WHO I AM. --
j 3:14b                 Thus you shall say to the children of Israel,
i 3:14c               I AM has sent me to you.
g 3:15a              The LORD God of your fathers, the God of Abraham, the
                   God of Isaac, and the God of Jacob, has sent me to you.
f 3:15c          This is My name forever, and this is My memorial to all generations.
e 3:16a         Go and gather the elders of Israel
d 3:16b       I have surely visited you and seen what is done to you in Egypt
c 3:17a     I will bring you up out of the affliction of Egypt
b 3:17b   to the land of the Canaanites and the Hittites and the Amorites ...
a 3:17c  a land flowing with milk and honey
}}}
{{floatright{[[source|http://www.wonderful1.com/Chiasms_in_the_Bible.html]]}}}
3:11ff  A second lesson.  Moses can learn about true credentials, because he has fully given up false ones.
3:12    Now this is an unusual sort of sign: you shall worship God at this mountain.   Our worship of God is itself an attesting miracle.
3:13    Behold  = &quot;let's pretend.&quot;  Okay, Lord, let's pretend for a moment that I really am going to stand up to the devil and encourage my brethren.  Now what exactly shall I give as my excuse for being so bold?
3:14-15 How can this be reconciled with &lt;&lt;Bbl Heb 11:27 &gt;&gt; ??
3:21-22 Within the type, how does this figure (get it?) with &lt;&lt;Bbl Rom 6:21 &gt;&gt;?</pre>
</div>
<div title="Exodus-04-01-note" modifier="SDM" created="201211261400" modified="201305051919" tags="Comment" book_key="420004" changecount="1">
<pre>4:1 Moses is recalling his last debut, 2:14.
4:2-6   The staff can be seen as representing personal power; as a snake, the satanic nature of our own control is revealed.  The leprosy also is a revelation of the fallen human nature.  Fount Shultz.
4:7 Moses was given an authority somewhat like that Jesus declares in &lt;&lt;Bbl Jn 10:18 &gt;&gt;.
&lt;&lt;Bbl Jn 4:14 abbr &gt;&gt;    God appoints a sign, fulfilled in vs. 27.
4:19    See &lt;&lt;Bbl Mt 2:20 &gt;&gt;.
&lt;&lt;Bbl Ex 4:27&gt;&gt;    Aaron's first act is one of obedience and ministry, and is the start to a long and faithful career with failings as well.
The plagues (expand) +++
The plagues (1) exposed Pharaoh's stubbornness of folly, (2) exposed and judged the idols, and (3) judged the oppression of the land.
Pharaoh's replies:
* miracles   --  no reply
# Nile to blood      --  no reply
# frogs  --  &quot;Entreat the LORD,  -- and I will let the people go.&quot;
# gnats      --  no reply
# insects    --  &quot;Go, sacrifice'within the land.&quot;     &quot;I will let you go to the wilderness, but not very far.  Make supplication for me.&quot;
# death of cattle    --  no reply
# boils      --  no reply
# hail   --  &quot;I have sinned, and my people; the LORD is righteous.  Make supplication for me; go, stay no longer.&quot;
# locusts    --  this time, momentarily distracted by wise counsel, Pharaoh tries haggling before the onset of the predicted  plague.  &quot;Go serve the LORD your # God!   -- the men among you only.&quot;  After the plague, he pleads forgiveness.
# darkness   --  &quot;Go, even your little ones; only let your flocks and herds remain.&quot;
# death of the first-born  --  full capitulation'but not really'in 14:5 they all repent of this too.
===
5:2 See &lt;&lt;Bbl Rom 1:28 &gt;&gt;.   Discredit the people, discredit their God.
5:3 This may be a unique title for the Lord.
5:5 Satan's very fear.  What follows is a remarkable description of Satan's tactics.
5:6-14  A mistake, really, trying to add work.  But it is Satan's desperate ploy.
    In 1835 Lord Prudhoe presented to the British Museum, where it is still on display, a brick made of Nile mud with chopped straw as a binder stamped with a seal bearing a cartouche containing hieroglyphics.  The seal has the name of Ramses II, who was quite possibly the pharaoh of the Exodus.

&lt;&lt;Bbl Ex 5:19 &gt;&gt;   see NAS margin for a curious idiom.
5:20-23 First complaining of the Israelites in his leadership.

6:1 A terrible place for a chapter division.
6:20    Jochebed means, &quot;Yahweh is my glory&quot;  --  apparently the name of Jehovah was in use in Israel just before Moses' birth.

7:14    See &lt;&lt;Bbl Is 14:17 &gt;&gt;.

&lt;&lt;Bbl Ex 8:7 abbr &gt;&gt;  They only add to the problem.
8:9 Silly pride; he could have said,  -- now. --
8:15    See &lt;&lt;Bbl Is 57:10 &gt;&gt;.
&lt;&lt;Bbl Ex 8:23 abbr &gt;&gt; Note NAS margin.
8:26    cf &lt;&lt;Bbl Gn 46:34 &gt;&gt;.

&lt;&lt;Bbl Ex 9:6 abbr &gt;&gt;  How were cattle left for 9:20, 12:29?  There is no def. article for the word cattle, and we can infer that it means all kinds of cattle died.

10:9,25,26  Moses is not trying to provoke Pharaoh.  But Pharaoh is trying to provoke the Lord.  Moses unswervingly demands the full demand of God.
10:14   A similar statement is made about the waters of the flood.
10:29   see 14:13.  How is this reconciled with 11:8?

11:4-6  A blow to a spiritual hierarchy based on lineage, in which the first-born was the link with the ancestral past.
11:36   see &lt;&lt;Bbl Gn 15:14 &gt;&gt;

&lt;&lt;Bbl Ex 12:42 abbr &gt;&gt;-48 ; &lt;&lt;Bbl Gn 13:9 &gt;&gt; see the Lord's Supper

''Chapter 12'' -- See [[Gold]].

13:17   Even so, God is gracious to keep His very young children from strife.
13:18   But don't we feel soldierly anyway!  NKJV says, in orderly ranks.
13:19   Anyway the bones of Joseph are the only material link with their heritage.</pre>
</div>
<div title="Exodus-15-01-note" modifier="SDM" created="201012302122" modified="201211261403" tags="Comment" book_key="420001a">
<pre>&lt;&lt;Bbl Ex 15:21 &gt;&gt; begins the new narrative of freedom.

16:4    What is the Lord's motive?  Not to provide food, but to test  them.
16:8    see &lt;&lt;Bbl Acts 5:4 &gt;&gt;
&lt;&lt;Bbl Ex 16:17 abbr &gt;&gt;-30     This is one of the great statements about works and grace in the OT.
16:23-30    First mention of the Sabbath after creation.  Here it is presented as a challenge to the faith of the Israelites, a challenge which they fail to meet.  The same challenge is given in &lt;&lt;Bbl Lv 25:20 &gt;&gt;-22 .
    The manna bread is a miracle replete with miracles, and no aspect of it is without miracle.
    When they gathered manna, did they not think of gathering straw in Egypt (&lt;&lt;Bbl Ex 5:12 &gt;&gt;)?  A people used to work, used to gathering under compulsion, and completely unaccustomed to resting in provision.  And &lt;&lt;Bbl Dt 5:15 &gt;&gt; tells them that in observing the Sabbaths they are to reflect on their former slavery.
    Note also that under the provision of Boaz, Ruth was advanced (as being seated at the banquet table) into the sheaves where gleaning was a breeze.
16:27   see &lt;&lt;Bbl Lv 25:20 &gt;&gt;-22
&lt;&lt;Bbl Ex 16:29 abbr &gt;&gt;    They are being trained to Be Like God.

17:12   see &lt;&lt;Bbl Josh 8:26 &gt;&gt;

&lt;&lt;Bbl Ex 18:13 abbr &gt;&gt;    see &lt;&lt;Bbl Ex 18:13 &gt;&gt;
&lt;&lt;Bbl Ex 18:21 abbr &gt;&gt;    see &lt;&lt;Bbl 1Tim 3:8 &gt;&gt;

&lt;&lt;Bbl Ex 19:21 abbr &gt;&gt;    break,  see following vs, also &lt;&lt;Bbl 2Sam 5:20 &gt;&gt;  --  same Hebrew verb?

20:7    see &lt;&lt;Bbl Mt 12:36 &gt;&gt;
&lt;&lt;Bbl Ex 20:8 abbr &gt;&gt;-11  Second mention of the Sabbath after creation.
20:25   If you use a chisel, you &quot;have your own reward.&quot;
20:26   In pagan ceremonies, commentators agree, the priest was exposed as he (or she) ascended the steps of the altar.

21:2    See &lt;&lt;Bbl Dt 5:15 &gt;&gt;.
&lt;&lt;Bbl Ex 21:22 abbr &gt;&gt;    she has a miscarriage   --  this is translated, &quot;her fruit depart,&quot; in &quot;The Holy Scriptures, a New Translation (Jewish)&quot;.

22:26   see &lt;&lt;Bbl Amos 2:8 &gt;&gt;

&lt;&lt;Bbl Ex 23:7 abbr &gt;&gt; Indeed!
23:9    see &lt;&lt;Bbl Titus 3:1 &gt;&gt;-8
23:13   see &lt;&lt;Bbl Eph 5:3 &gt;&gt;
&lt;&lt;Bbl Ex 23:20 abbr &gt;&gt;-33     The basic mandate, given by the Lord through Moses, by which the Israelites were to make their conquest.
23:28-33    a glorious picture of sanctification.  Fount Schultz likens the enemies to Satan and the wild beasts to the flesh.
23:28   see &lt;&lt;Bbl Josh 24:12 &gt;&gt;
&lt;&lt;Bbl Ex 23:30 abbr &gt;&gt;    see &lt;&lt;Bbl Ps 80:9 &gt;&gt;; &lt;&lt;Bbl Is 26:15 &gt;&gt;

&lt;&lt;Bbl Ex 24:11 abbr &gt;&gt;    eating: covenant seal.  The only other OT passage that talks about sitting down to a meal table with the everliving God is &lt;&lt;Bbl Is 25:6 &gt;&gt;-9 .  There it seals a union not with the Israelites but with the nations.
24:17   But to Moses it perhaps did not seem like a consuming fire; he recognized it as the fire that did not consume the bush.</pre>
</div>
<div title="Exodus-31-01-note" modifier="SDM" created="201209241557" modified="201211261404" tags="Comment" book_key="">
<pre>31:2   Bezalel means, &quot;In the shadow of God.&quot;
&lt;&lt;Bbl Ex 31:6 abbr &gt;&gt;    Ohoiab means, &quot;Father's Tent.&quot;  see &lt;&lt;Bbl Mt 25:29 &gt;&gt;
&lt;&lt;Bbl Ex 31:12 abbr &gt;&gt;-17     A covenant sign.  It is left implicit that faith is in operation; sabbath signifies faith, and faith is really the sign underneath all.

32:1    the man   --  a problem of understanding is evident.  God had brought them up.
32:3    see &lt;&lt;Bbl Gn 35:4 &gt;&gt;
&lt;&lt;Bbl Ex 32:4 abbr &gt;&gt;-5   What a study in idolatry.  These are your  Elohim, O Israel.   Feast to  Yahweh.
32:6    to play   --  this is the word from which Isaac's name is derived.
32:10   It is hard to imagine the heart of God at this moment.
    The righteous man automatically condemns the world to death, &lt;&lt;Bbl Heb 11:7 &gt;&gt;.  Jesus condemned the world to death, and God &quot;made of Him a great nation.&quot;
32:11-13    Moses is pleading on the basis of God's promises.  That is a faith God listens to.
32:15   Which to some means that it was set up as a bilateral contract, in duplicate.
32:19   see &lt;&lt;Bbl Dt 9:19 &gt;&gt;
&lt;&lt;Bbl Ex 32:20 abbr &gt;&gt;    see &lt;&lt;Bbl Num 12:3 &gt;&gt;
&lt;&lt;Bbl Ex 32:22 abbr &gt;&gt;    Aaron, the man of smooth words earlier in Exodus, is being conciliatory.
32:25   naked,  KJV.
32:29   ?? I would like to understand this better.
32:30   No room for self-righteousness arising from the massacre of sinners.
32:32   An ultimate statement of intercession.
32:33   An ultimate statement of sovereign righteousness.

33:5    see Zach 2:13
33:7-11 A portrait of our various postures towards the Lord:  fear or love, alienation or intimacy, self-centeredness or God-centeredness.
33:7    Separation is the message of this entire verse.    -- a good distance from the camp   --  in respect of verse 5.
33:14-17    The ten lepers of &lt;&lt;Bbl Lk 10:20 &gt;&gt; provide a powerful parallel.
{{hilite{
&quot;If your presence doesn't go with me, don't carry us up from here. {{rf{33.16}}} For how would people know that I have found favor in your sight, I and your people? Isn't it in that you go with us, so that we are separated, I and your people, from all the people who are on the surface of the earth?&quot;
}}}
33:16   More incredible faith.  Preach it!!
33:22   There will come a time when Moses can stand more close to the glory of God!  &lt;&lt;Bbl Lk 9:30 &gt;&gt;

34:1    see 31:18, 34:28.  This time Moses must himself cut the stones  --  can they have been as perfect as the ones God gave him?
34:6-7  see &lt;&lt;Bbl Num 14:18 &gt;&gt;.
&lt;&lt;Bbl Ex 34:9 abbr &gt;&gt; More incredible faith.  List out the prayers of [[Moses]] sometime.
34:28   see vs. 1.  Apparent contradiction, also &lt;&lt;Bbl Dt 10:4 &gt;&gt;.  ?? This is probably easily reconciled exegetically.
    The account of &lt;&lt;Bbl Dt 9:9 &gt;&gt; records two consecutive forty-day fasts.

35:4-9  How dull money has made us.

39:3    Interesting note on production.
39:23   Another interesting note on production.  A coat of mail.
39:43   Moses is acting as a steward.

40:7    Perhaps for us a picture of water baptism.
40:35   The glory, just as it was to appear in the temple.  Also see &lt;&lt;Bbl Rev 15:8 &gt;&gt;</pre>
</div>
<div title="Expectancy" modifier="SDM" created="201301132012" modified="201303102043" book_key="">
<pre>* Sometimes [[Faith]] requires us to expect fully the [[Provision]] to come.
* Elisha (&lt;&lt;Bbl 2Ki 4:30 &gt;&gt;) encourages the widow to collect vessels, &quot;not a few&quot;  --  and to that measure she receives.  Elisha is angry when King Joash strikes the ground with his arrows only three times.
* The Lord Jesus tells us that &quot;believing, you shall receive.&quot;
* Luke presents huge expectancy especially in the opening chapters.
* Yet too, God is intent on exceeding the measure of our faith, &lt;&lt;Bbl Eph 3:20 &gt;&gt;.
* Luke is huge! [[Luke-01-01-note]] -- 1:21, 2:25-26, 2:38, 3:15.</pre>
</div>
<div title="ExportTiddlersPluginInfo" modifier="ELSDesignStudios" created="200703222349" modified="201002252057" tags="howto excludeLists">
<pre>/***
|Name|ExportTiddlersPluginInfo|
|Source|http://www.TiddlyTools.com/#ExportTiddlersPlugin|
|Documentation|http://www.TiddlyTools.com/#ExportTiddlersPluginInfo|
|Version|2.9.5|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|documentation|
|Description|Documentation for ExportTiddlersPlugin|
interactively select and extract tiddlers from your ~TiddlyWiki document, and write them into another file, using one of several different file formats:
* ~TiddlyWiki - a complete, stand-alone, standard TiddlyWiki HTML document
* ~PureStore - a small HTML archive file containing tiddler data only (no core code)
* ~PlainText - a simple TXT text file with tiddler source listings
* Comma - a &quot;Comma Separated Value&quot; data/spreadsheet file
* ~NewsFeed  - an XML-format file that can be published for RSS syndication.
!!!!!Usage
&lt;&lt;&lt;
{{{
&lt;&lt;exportTiddlers&gt;&gt; (sidebar menu item)
&lt;&lt;exportTiddlers inline&gt;&gt; (embedded control panel)
}}}

Inline control panel (live):
&lt;&lt;exportTiddlers inline&gt;&gt;

Optional &quot;special tiddlers&quot; used by this plugin:
* SiteUrl&lt;br&gt;URL for official server-published version of document being viewed (used in XML export). Default: //none//
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2010.02.25 2.9.5 added merge checkbox option and improved 'merge' status message
2009.09.12 2.9.4 fixed 'return false' to prevent IE page transitions
2009.07.06 2.9.3 moved HTML to section for size reduction
2009.07.03 2.9.2 TW252 fixup: don't call convertUTF8ToUnicode() for local loadFile() I/O
2009.04.30 2.9.1 custom fields in CSV output
2009.04.19 2.9.0 added CSV format
2009.02.26 2.8.5 use macro-specific definition of $() function abbreviation (avoids conflict with JQuery)
2008.09.29 2.8.4 in getData(), convert existing TW file from UTF8 to Unicode before merging to correct handling of international characters and symbols.
2008.09.26 2.8.3 in go(), if rewriting *current* file and chkSaveBackups and/or chkGenerateAnRssFeed is enabled, then write a backup file or RSS feed, respectively.
2008.09.24 2.8.2 in assembleFile(), make sure that markup block is updated if corresponding Markup* tiddler is exported.
2008.09.19 2.8.1 in formatItem(), removed unnecessary convertUnicodeToUTF8() (was causing double-conversion!)
2008.09.11 2.8.0 extensive code cleanup: moved all global functions inside macro object. Re-wrote file generator and I/O to support TiddlyWiki, PlainText, PureStore, and NewsFeed file formats.  Replaced inline 'match tags' code with use of getMatchingTiddlers() from [[MatchTagsPlugin]] (if installed), with fallback to core getTaggedTiddlers() otherwise.
2008.05.27 2.7.0 added ability to 'merge' with existing export file.  Also, revised 'matchTags' functionality to be more robust and more efficient
2008.05.12 2.6.1 automatically add 'export' task to backstage (moved from BackstageTweaks)
2008.03.10 2.6.0 added &quot;delete tiddlers&quot; button
2007.12.04 *.*.* update for TW2.3.0: replaced deprecated core functions, regexps, and macros
2007.11.10 2.5.1 removed debugging alert messages from promptForExportFilename()
2007.10.31 2.5.0 code reduction: removed incomplete/unused interface and supporting functions for exporting directly to http, https or ftp servers.  Plugin now supports exporting to local file only.  Also, updated TW document output to generate TW2.2 compatible file format.
2007.10.30 2.4.2 added automatic shadow tiddler definition for [[ExportTiddlers]]
2007.07.16 2.4.1 in exportTWHeader(), reset HTML source 'markup' so installed markup is NOT copied to new file.
2007.06.30 2.4.0 added &quot;select related tiddlers&quot; feature.  Recursively scans the tiddler links[] info to find all tiddlers referenced by any of the currently selected tiddler, and then selects them all (including the original tiddlers).
2007.04.19 2.3.0 in exportData(), pass SiteURL value as param to saveToRss().  Fixes 'undefined' appearing in tiddler link in XML output.  Also, in refreshExportList(), added 'sort by tags'.  Also, added 'group select'... selecting a heading (date,author,tag) auto-selects all tiddlers in that group.
2007.03.02 2.2.6 in onClickExportButton(), when selecting open tiddlers for TW2.2, look for &quot;storyDisplay&quot; with fallback to &quot;tiddlerDisplay&quot; for TW2.1 or earlier
2007.03.01 2.2.5 removed hijack of store.saveChanges()
2006.11.08 2.2.4 added promptForExportFilename() and replaced type=&quot;file&quot; control with edit field + browse button (&quot;...&quot;).
2006.10.12 2.2.3 in exportDIVFooter(), write POST-BODY-START/END markers for compatibility with TW2.1 core file format.
2006.05.11 2.2.2 in createExportPanel, removed call to addNotification() to reduce unneeded feedback messages and increase overall document performance.
2006.05.02 2.2.1 Use displayMessage() to show number of selected tiddlers instead of updating listbox 'header' item after each selection.  Prevents awkward 'scroll-to-top' behavior that made multi-select via ctrl-click nearly impossible.
2006.04.29 2.2.0 New features: free-form &quot;Notes&quot; text inserted in the header of PureStore files.
2006.03.29 2.1.3 added calls to convertUnicodeToUTF8() for generated output, so it better handles international characters.
2006.02.12 2.1.2 more FF1501 bug fixes.
2006.02.04 2.1.1 added var to unintended globals to avoids FireFox1501 crash bug
2006.02.02 2.1.0 Added support for output of complete TiddlyWiki documents
2006.01.21 2.0.1 Defer initial panel creation and only register a notification function when panel first is created
in saveChanges 'hijack', create panel as needed.  Note: if window.event is not available to identify the click location, the export panel is positioned relative to the 'tiddlerDisplay' element of the TW document.
2005.12.27 2.0.0 Update for TW2.0.
2005.12.24 0.9.5 Minor adjustments to CSS to force correct link colors regardless of TW stylesheet selection
2005.12.16 0.9.4 Dynamically create/remove exportPanel so only one instance exists at a time
2005.11.15 0.9.2 added non-Ajax post to bypass cross-domain security restrictions.
2005.11.08 0.9.1 moved HTML, CSS and control initialization into exportInit() function and call from macro handler instead of at load time.
2005.10.28 0.9.0 added 'select opened tiddlers' feature. Based on a suggestion by Geoff Slocock
2005.10.24 0.8.3 Corrected hijack of 'save changes' when using http:
2005.10.18 0.8.2 added AJAX functions
2005.10.18 0.8.1 Corrected timezone handling and error checking/reporting when filtering tiddlers. More style tweaks, minor text changes and some assorted layout cleanup.
2005.10.17 0.8.0 First pre-release.
2005.10.16 0.7.0 filter by tags
2005.10.15 0.6.0 filter by title/text
2005.10.14 0.5.0 export to local file (DIV or XML)
2005.10.14 0.4.0 filter by start/end date
2005.10.13 0.3.0 panel interaction
2005.10.11 0.2.0 panel layout
2005.10.10 0.1.0 code framework
2005.10.09 0.0.0 development started
&lt;&lt;&lt;</pre>
</div>
<div title="ExternalTiddlersPluginInfo" modifier="SDM" created="200801090036" modified="201301091603" tags="howto macro excludeLists" book_key="">
<pre>|Name|ExternalTiddlersPluginInfo|
|Source|http://www.TiddlyTools.com/#ExternalTiddlersPlugin|
|Documentation|http://www.TiddlyTools.com/#ExternalTiddlersPluginInfo|
|Version|1.3.3|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|documentation|
|Description|documentation for ExternalTiddlersPlugin|
This plugin extends the {{{&lt;&lt;tiddler&gt;&gt;}}} macro syntax so you can retrieve and wikify content directly from external files or remote URLs.  You can also define alternative &quot;fallback&quot; sources to provide basic &quot;import on demand&quot; handling by automatically creating/importing tiddler content from external sources when the specified ~TiddlerName does not already exist in your document.
!!!!!Configuration
&gt;see ExternalTiddlersPlugin
!!!!!Usage
&lt;&lt;&lt;
The standard TiddlyWiki core syntax for the {{{&lt;&lt;tiddler&gt;&gt;}}} macro is:
&gt;{{{&lt;&lt;tiddler TiddlerName with: param param param ...&gt;&gt;}}}
where the optional {{{with: param param param...}}} values are used to replace any corresponding &quot;substitution markers&quot; ($1 to $9) that may be embedded in the referenced tiddler content.

This plugin allows the {{{&lt;&lt;tiddler&gt;&gt;}}} macro to ''use external file/URL references in place of the usual ~TiddlerName parameter'', so that you can render wiki-formatted source content retrieved from an external file/URL reference (as determined by the core's isExternalLink() test function), ''//as if// it had come from a tiddler in the current document''.  The external file/URL can be either ''a relative or absolute reference'' and can contain ''&quot;plain text&quot; or a full TiddlyWiki document''.  When using a TiddlyWiki document, you must specify which tiddlers should be included in the output by appending a permaview-like suffix to the file or URL reference, e.g.:
&gt;{{{&lt;&lt;tiddler &quot;myfile.txt&quot; with: param param param...&gt;&gt;}}}
&gt;or
&gt;{{{&lt;&lt;tiddler &quot;myfile.html#TiddlerName TiddlerName...&quot; with: param param param...&gt;&gt;}}}
&gt;or
&gt;{{{&lt;&lt;tiddler &quot;http://www.TiddlyWiki.com/index.html#HelloThere&quot; with: param param param...&gt;&gt;}}}
If the plugin-enhanced {{{&lt;&lt;tiddler&gt;&gt;}}} macro is unable to retrieve the external content --  perhaps because the file doesn't exist or doesn't contain the requested tiddler(s), or cross-domain security blocked file access, or the network/server &quot;timed out&quot;, etc., -- then it produces no output (i.e., just as when the standard {{{&lt;&lt;tiddler&gt;&gt;}}} macro is given a ~TiddlerName does not exist in the current document.)
&lt;&lt;&lt;
!!!!!Using alternative &quot;fallback&quot; references
&lt;&lt;&lt;
In addition to using external file/URL references in place of the usual ~TiddlerName, the plugin also allows you to use a ''fallback list'' consisting of a combination of alternative sources: tiddlers, local files, and/or URL references, each separated by &quot;|&quot;.  The first reference in a fallback list is the &quot;primary source&quot;; the remaining references are &quot;fallback sources&quot;.  The plugin will attempt to retrieve content from each fallback source until one is successfully retrieved or all alternatives have been tried.

For example, if you create a tiddler called [[HelloThere]], as well as a remotely-hosted TW document containing a published tiddler, also called [[HelloThere]], then you can write:
&gt;{{{&lt;&lt;tiddler [[HelloThere|http://www.TiddlyWiki.com/#HelloThere]]&gt;&gt;}}}
When [[HelloThere]] is present in the local document, it is processed in the normal manner.  However, if you delete the  local [[HelloThere]] tiddler, the plugin will attempt to retrieve the [[HelloThere]] tiddler from the indicated remote URL.

Please note: although you can list any number of alternative sources, in whatever order you prefer, retrieval from a remote URL occurs asynchronously via XMLHttpRequest() processing.  As a consequence, there can be ''no more than one remote URL reference in the fallback list'', and any alternatives that follow a remote URL reference will not be processed.
&lt;&lt;&lt;
!!!!!Automatically import/create missing tiddlers
&lt;&lt;&lt;
When content is retrieved from an external fallback source, the plugin can automatically import/create tiddler(s) containing that content into your document, allowing you to display, modify, save and/or search for text in that tiddler from within your own document, without needing to retrieve it again from the external source.

If no local ~TiddlerName(s) are specified in the fallback list (i.e., only direct file/URL references are present), then a tiddler will NOT be created, so that each time you render the tiddler display the external source will be re-read in order to render the most recently saved external file content.  To illustrate using the example from above:
&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;{{{&lt;&lt;tiddler [[HelloThere|http://www.TiddlyWiki.com/#HelloThere]]&gt;&gt;}}}
will automatically create a locally-stored [[HelloThere]] tiddler, so that the external source is only accessed the first time the content is rendered, while:
&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;{{{&lt;&lt;tiddler [[http://www.TiddlyWiki.com/#HelloThere]]&gt;&gt;}}}
will re-load the content from the external source each time the display is rendered.

For easy identification, any tiddlers that are automatically created/imported are tagged with &lt;&lt;tag external&gt;&gt; (or other custom-defined tag values).  These tiddlers can also be automatically tagged with &lt;&lt;tag temporary&gt;&gt; for use with [[TemporaryTiddlersPlugin]], which will skip over those tiddlers when saving changes to your document so that when you reload the document, the temporary tiddlers will no longer be present and will be retrieved anew from the external source, on demand, when (or if) they are needed.  Important reminder: ''If you modify a temporary tiddler and want to retain it in your local document, be sure to remove the &lt;&lt;tag temporary&gt;&gt; tag from the tiddler before saving.''
&lt;&lt;&lt;
!!!!!~XMLHttpRequest: performance and security issues
&lt;&lt;&lt;
This plugin uses asynchronous XMLHttpRequest() processing to access external content directly from URLs hosted on remote web servers.  However, ''cross-domain access from one remote domain to another using XMLHttpRequest() processing is generally restricted for security reasons''.  As a result, URL references between server-hosted documents will not work unless those documents are located within the same domain.  In order to ensure that external content included in server-hosted documents will be displayed as intended, you should ''always use either a relative path/file reference or an http: reference located on the same domain as the published document.'' for any document you intend to publish.

Note: Some hosting providers, such as http://www.TiddlySpot.com/ offer ''&quot;proxy&quot; services that may allow you to bypass the security restrictions'' for certain designated remote web sites.  Consult your hosting service for information regarding their proxy arrangments (if any).
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2011.04.27 1.3.3 merge/clone defaultCustomFields for saving in TiddlySpace
2011.02.08 1.3.2 fixed parsing of external links to allow retrieval of tiddler sections from remote files.  NOTE: //requires SectionLinksPlugin v1.4.1 or above//).  Also, calls to saveTiddler() use config.defaultCustomFields for TiddlySpace compatibility.
2008.10.27 1.3.1 in insertTiddler(), fixed Safari bug by replacing static Array.concat(...) with new Array().concat(...)
2008.01.08 [*.*.*] plugin size reduction: documentation moved to ExternalTiddlersPluginInfo
2008.01.03 1.3.0 use lower-level doHttp() instead loadRemoteFile() so that optional username/password values can be used in XMLHttpRequest
2007.12.22 1.2.2 in handler(), when reading from local file with relative path fixup, use decodeURIComponent() instead of decodeURI
2007.11.30 1.2.1 lots of code/documentation cleanup.  renamed option cookies.  changed auto tag value to &quot;external&quot;.
2007.11.27 1.2.0 added support for automatically importing external tiddlers
2007.11.26 1.1.1 improved XMLHttpRequest() error reporting for cross-domain security issues
2007.11.26 1.1.0 added support for multiple alternative fallback references
2007.11.25 1.0.0 initial release - moved from CoreTweaks
&lt;&lt;&lt;</pre>
</div>
<div title="Eye" modifier="SDM" created="201010270200" modified="201211201352" book_key="">
<pre>* //Vision, seeing, blind//
* Eyes, expression of -- &lt;&lt;Bbl Pr 6:25 &gt;&gt;, &lt;&lt;Bbl Son 4:9 &gt;&gt;, &lt;&lt;Bbl Son 6:5 &gt;&gt;
* Eyes of the Lord -- giving [[Grace]] -- &lt;&lt;Bbl 2Chr 16:9 &gt;&gt;; &lt;&lt;Bbl Ps 33:18 &gt;&gt;,&lt;&lt;Bbl Ps 34:15 &gt;&gt;, &lt;&lt;Bbl Ps 94:9 &gt;&gt;; &lt;&lt;Bbl Is 1:15 &gt;&gt;; &lt;&lt;Bbl Is 49:5 &gt;&gt;c; &lt;&lt;Bbl 1Pt 3:12 &gt;&gt;
* //[[Light]] to the eyes// is a cardinal blessing in God's word.
** the poor and the oppressor:  &lt;&lt;Bbl Pr 29:13 &gt;&gt;
* &lt;&lt;Bbl Gn 3:6 abbr &gt;&gt; //pleasing to the eye//
* Opened Eyes (and Closed Ears)
* Balaam:         &lt;&lt;Bbl Num 22:31 &gt;&gt;
* the Israelites:     &lt;&lt;Bbl Dt 29:4 &gt;&gt;
* Samson:         &lt;&lt;Bbl Jud 16:21 &gt;&gt;
* Eli:        &lt;&lt;Bbl 1Sam 3:1 &gt;&gt;-2 , &lt;&lt;Bbl 1Sam 4:15 &gt;&gt;
* Abijah:         1Kng 14:1-6
* Elisha's servant:  2Kng 6:17
* Aram's army:    2Kng 6:18-20
* the wicked:     &lt;&lt;Bbl Is 26:11 &gt;&gt;
* God's people:   &lt;&lt;Bbl Is 6:9 &gt;&gt;-10 , &lt;&lt;Bbl Is 29:9 &gt;&gt;-12 , &lt;&lt;Bbl Is 35:5 &gt;&gt;, &lt;&lt;Bbl Is 42:16 &gt;&gt;, &lt;&lt;Bbl Is 43:8 &gt;&gt;, &lt;&lt;Bbl Is 44:18 &gt;&gt;-20 , &lt;&lt;Bbl Is 48:8 &gt;&gt;, &lt;&lt;Bbl Jer 6:10 &gt;&gt;
* Ezekiel:        &lt;&lt;Bbl Ez 1:1 &gt;&gt;
* God's people:   &lt;&lt;Bbl Ez 12:2 &gt;&gt;
* unbelievers:    &lt;&lt;Bbl Mk 4:12 &gt;&gt;
* Christ's disciples:  &lt;&lt;Bbl Mk 8:16 &gt;&gt;-21
* Pharisees:      &lt;&lt;Bbl Jn 9:39 &gt;&gt;-41
* In John's Gospel, &quot;seeing&quot; has to do with spiritual apprehension, versus mental acknowledgement;  &lt;&lt;Bbl Jn 3:2 &gt;&gt;-3 , &lt;&lt;Bbl Jn 10:38 &gt;&gt;, &lt;&lt;Bbl Jn 14:11 &gt;&gt;</pre>
</div>
<div title="Ezekiel-01-01-note" modifier="SDM" created="201010310454" modified="201112270114" tags="Comment" book_key="701001a">
<pre>&lt;&lt;Bbl Ezekiel 1:28 &gt;&gt;  see 1:15

2:8 God doesn't trust him without the word of truth in his insides.

3:5-6   Irony in that the word of the Lord should not be unintelligible to Israel.
3:18-21 see 33:1-20
3:20    see 18:24; also &lt;&lt;Bbl Gn 4:24 &gt;&gt;; also &lt;&lt;Bbl Is 57:12 &gt;&gt;

&lt;&lt;Bbl Ezekiel 4:2 abbr &gt;&gt;  vs 2 seems to depict earthly siege, vs 3 divine siege.
4:5 I have a note that the date could refer to the division of the kingdom (931 BC).
4:14-15 I don't see the meaning of Ezekiel's plea, or of the Lord's response.

5:2 see vs 12
5:3-4   A very rich image proceeds from this.  The hem of a garment was intended by God as a reminder, &lt;&lt;Bbl Num 15:38 &gt;&gt;-40 .  The remnant of God's people is going to be a reminder of God's holiness to all they meet; 6:8, 12:16.  (I suppose this makes it a cloth remnant, har har.)

6:9 see Daniel's repentance and others who &quot;loathed themselves.&quot;

7:12b   Things are cheap, and they're going to get cheaper ?   see vs. 19
7:13    Even where the seller would have had consolation, that is gone, for the jubilee will no longer be fulfilled ??
7:26    In times of rebellion we prefer &quot;a vision&quot; to law or godly counsel.  But in this time, neither will be available.

9   A reversal of the Passover!
9:8 Ezekiel had that mark of vs. 4; one thousand fell at his right hand, and ten thousand at his left.

12:12   see &lt;&lt;Bbl Jer 52:7 &gt;&gt;
&lt;&lt;Bbl Ezekiel 12:13 abbr &gt;&gt;    Zedekiah ??
12:14   see &lt;&lt;Bbl Jer 52:8 &gt;&gt;
&lt;&lt;Bbl Ezekiel 12:16 &gt;&gt;a -- diaspora ; I wonder if the LLX uses this term.

13:4-5  Seems like a direct allusion to Nehemiah ??
13:9    Three bans which preach to the situation of hypocrites and unbelievers.
13:10   see &lt;&lt;Bbl Acts 23:3 &gt;&gt;; &lt;&lt;Bbl Mt 23:27 &gt;&gt;

&lt;&lt;Bbl Ezekiel 14:10 abbr &gt;&gt;    see &lt;&lt;Bbl Mt 10:41 &gt;&gt;
&lt;&lt;Bbl Ezekiel 14:14 abbr &gt;&gt;    see &lt;&lt;Bbl Jer 15:1 &gt;&gt;
&lt;&lt;Bbl Ezekiel 14:20 abbr &gt;&gt;    see 18:20
14:22-23    apparently addressing the prophet himself.

15:2    Notably, a dead vine does not bear fruit.

16  see &lt;&lt;Bbl Dt.32 &gt;&gt; original sin, &quot;born in iniquity&quot;
16:4    Salt, the covenant; what other, more immediate purpose ??
16:8    Arrival of God's people
16:9    She even grew up in this blood.
16:10-13    The kingdom and temple established
16:14   Climax in Solomon's reign
16:15   harlotry:  &lt;&lt;Bbl Is 23:9 &gt;&gt;; &lt;&lt;Bbl Is 58:7 &gt;&gt;
&lt;&lt;Bbl Ezekiel 16:27 abbr &gt;&gt;    see &lt;&lt;Bbl 1Cor 5:1 &gt;&gt;
&lt;&lt;Bbl Ezekiel 16:33 abbr &gt;&gt;-34     Israel's storehouses of sacred gold now empty
16:37   There is a worldly standard of &quot;pleasure&quot; which has nothing to do with love.  Cf &lt;&lt;Bbl 2Sam 13:15 &gt;&gt;
&lt;&lt;Bbl Ezekiel 16:43 abbr &gt;&gt;    If she has forgotten the days of her youth, He also will do the same.  But see vs. 60
16:52   Recognized in college as &quot;lowering the curve.&quot;  Cf &lt;&lt;Bbl Mt 11:20 &gt;&gt;-24 , &lt;&lt;Bbl Mt 12:38 &gt;&gt;-42
&lt;&lt;Bbl Ezekiel 16:56 abbr &gt;&gt;-57     Hypocrisy.  The refusal to mention a transgressor is the very reproach which will be returned to them.  Cf vs. 59
16:59-63    see 11:19

17:6-7  Fresh water from a salt well!  A plant does not grow like this.
    Next to another eagle  my notes say &quot;Tammuz?&quot;  ??
17:9    &quot;All the king's horses and all the king's men...&quot;
17:15   see &lt;&lt;Bbl Jer.42 &gt;&gt; see &lt;&lt;Bbl Mt 13:32 &gt;&gt;

&lt;&lt;Bbl Ezekiel 18:13 abbr &gt;&gt;    see &lt;&lt;Bbl Mt 27:25 &gt;&gt;
&lt;&lt;Bbl Ezekiel 18:23 abbr &gt;&gt;    see &lt;&lt;Bbl 2Pt 3:9 &gt;&gt;
&lt;&lt;Bbl Ezekiel 18:30 abbr &gt;&gt;    see Pet 1:17

20:25   &lt;&lt;Bbl Rom 7:13 &gt;&gt;

&lt;&lt;Bbl Ezekiel 24:27 abbr &gt;&gt;    fulfilled, 33:22

29:18   wearing armor

33:32   Comparable to our pleasant view of &quot;the Bible as literature.&quot;

34:16   see &lt;&lt;Bbl Mt 18:11 &gt;&gt;; &lt;&lt;Bbl Lk 19:10 &gt;&gt;.

&lt;&lt;Bbl Ezekiel 36:22 abbr &gt;&gt;    It is profane to depart from God's land.

37:16-20    see Zach 11:14.  This verse once preached to me of the unsearchable mysteries of God.  Human moral agency and His predestination, for example, are one in His hand .

46:6    I wonder why this differs from &lt;&lt;Bbl Num 28:11 &gt;&gt; ??

47:12   see &lt;&lt;Bbl Rev 22:1 &gt;&gt;-2     </pre>
</div>
<div title="Ezra-01-01-note" modifier="SDM" created="201211170213" modified="201211170214" tags="Comment" book_key="580001a">
<pre>&lt;&lt;Bbl Ezra 7:10 abbr &gt;&gt; -- In which we learn about the character of Ezra and find an outline of conduct for our own lives.

8:21-23 A statement of faith  --  especially the last words.</pre>
</div>
<div title="Faith" modifier="SDM" created="201004120330" modified="201301132015" book_key="">
<pre>* In the NT, contrasts directly with [[Eye|sight]].
* Cannot be separated from [[Obedience]] (D. Bonhoeffer //Cost of Discipleship//).
* @@color:brown;Faith honors Christ more than anything else, so Christ honors faith more than anything else.@@ // -- Matthew Henry//
* For faith and [[Works]], see W.E. Vine, p. 286.
* &lt;&lt;Bbl 2Sam 7:27 &gt;&gt;, &lt;&lt;Bbl Ezra 8:21 &gt;&gt;-23 , &lt;&lt;Bbl Esther 4:14 &gt;&gt;.
* @@color:brown;Faith is a Divine work within us which changes and renews us in God according to &lt;&lt;Bbl Jn 1:13 &gt;&gt;, `who were born not of blood, nor of the will of the flesh, nor of the will of man, but of God.' This destroys the old Adam and makes new creatures of us in heart, will, disposition, and all our powers. Oh, faith is a living, active, jealous, mighty thing, inasmuch as it cannot possibly remain unproductive of good works.@@ // -- Martin Luther, preface to Romans // [[source|http://refbible.com/j/justification.htm]]
* [[Trust]]
* [[Confidence]]
* [[Expectancy]]
* &lt;&lt;Bbl Acts 11:27 &quot;&quot; note &gt;&gt; about faith in the early church.
!! Need and Trial
* Requests of faith are based in [[Need]].  Sometimes the need may be to know God's blessing (as when Elisha smites the water).  &lt;&lt;Bbl Mk 10:35 &gt;&gt; exemplifies false faith, even the &quot;claim-it&quot; distortion of prayer.
* [[Trial]]s present needs.  See &lt;&lt;Bbl Ps 23:1 &quot;&quot; note &gt;&gt;.
* &lt;&lt;Bbl Rom 4:19 &gt;&gt; -- &quot;Without weakening in his faith, [[Abraham]] //faced the fact// (or //considered//, NASB) that his body was as good as dead...&quot;  Fascinating that &lt;&lt;Bbl Heb 11:11 &gt;&gt; shifts the focus onto Sarah.
!! Doubt
* The word doubt is related to the word double.  &lt;&lt;Bbl Ex 5:23 &gt;&gt;; &lt;&lt;Bbl Ex 15:11 &gt;&gt;-12 Kng 4:16,28; &lt;&lt;Bbl Ez 12:22 &gt;&gt;; &lt;&lt;Bbl Ez 18:25 &gt;&gt;
* //Weak faith// used by Paul to describe individual [[Scruples]].
!! Counterfiet
* Beware of the subtle error that faith is self-operating.  See &lt;&lt;Bbl Mt 14:28 &quot;&quot; note &gt;&gt;.</pre>
</div>
<div title="Faithfulness" modifier="SDM" created="201004120330" modified="201211161332" book_key="">
<pre>* &lt;&lt;Bbl Dan 6:3 &gt;&gt;-4 , &lt;&lt;Bbl Hos 4:1 &gt;&gt;; &lt;&lt;Bbl Lk 16:10 &gt;&gt;-11 ; &lt;&lt;Bbl Lk 19:17 &gt;&gt;
* unto [[Death]] -- &lt;&lt;Bbl Heb 11:35 &gt;&gt;-38 , &lt;&lt;Bbl Mt 23:34 &gt;&gt;-35 , &lt;&lt;Bbl Rev 6:9 &gt;&gt;-11 .  //Martyr//
* Endurance? -- &lt;&lt;Bbl Jer 12:5 &gt;&gt;; &lt;&lt;Bbl Mt 10:22 &gt;&gt;; &lt;&lt;Bbl Gal 6:9 &gt;&gt;
* The basis for [[Trust]], [[Faith]]
* Claire Boothe Luce said, &quot;Courage is the ladder on which all the other virtues mount.&quot;  No.  Courage is merely a rung, like humility and integrity.  The ladder is called faithfulness.
* God is faithful when we are tempted.  &lt;&lt;Bbl 1Cor 10:13&gt;&gt;.
* [[Perseverance]]
* [[Stability]]
* [[Fruit]]
* [[Faith]]
!!! Examples
* [[Soldier]]
* [[Remnant]]</pre>
</div>
<div title="Family" modifier="SDM" created="201004120330" modified="201012062128">
<pre>[[Marriage]]
-
[[Brother]]
* OT laws of [[Redemption]]</pre>
</div>
<div title="Fasting" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Ezr 8:21 &gt;&gt;; &lt;&lt;Bbl Is 58:3 &gt;&gt;-8 ; &lt;&lt;Bbl Zech 7:5 &gt;&gt;; &lt;&lt;Bbl Mt 6:16 &gt;&gt;-18 ; &lt;&lt;Bbl Mk 2:18 &gt;&gt;-20 ; &lt;&lt;Bbl Lk 18:12 &gt;&gt;</pre>
</div>
<div title="Father-Son" modifier="SDM" created="201012140342" modified="201211150156" book_key="">
<pre>* [[Family]]
* [[Discipline]]
* [[Inheritance]]
* &lt;&lt;Bbl Mt 8:22 &gt;&gt;; &lt;&lt;Bbl Mt 10:33 &gt;&gt;-34 ; &lt;&lt;Bbl Mt 12:46 &gt;&gt;-50 ; &lt;&lt;Bbl Mk 3:21 &gt;&gt;
* &lt;&lt;Bbl Lk 15:28 &gt;&gt;-32
* Does Jesus ever pray or refer to prayer or teach about prayer without reference to the Father?
* &lt;&lt;Bbl Ps 2:12 &gt;&gt;; &lt;&lt;Bbl Pr 30:4 &gt;&gt;; &lt;&lt;Bbl Dan 3:25 &gt;&gt;
* Adoption:  An adopted child can answer the reproach of the world with these words:  &quot;Your parents didn't choose you  --  but mine chose me!&quot;   &lt;&lt;Bbl Is 56:5 &gt;&gt; (but see my notes); &lt;&lt;Bbl Ez 16:3 &gt;&gt;-6 ; &lt;&lt;Bbl Hos 2:23 &gt;&gt;; &lt;&lt;Bbl Jn 1:12 &gt;&gt;-13  (note vs.14 gives the contrast in Christ); &lt;&lt;Bbl Rom 8:14 &gt;&gt;-17 ; &lt;&lt;Bbl 2Cor 6:18 &gt;&gt;; &lt;&lt;Bbl Eph 1:3 &gt;&gt;-11 ; &lt;&lt;Bbl Gal 4:1 &gt;&gt;-7 ; &lt;&lt;Bbl 1Jn 3:1 &gt;&gt;.

* &lt;&lt;Bbl Jn 1:18 &gt;&gt;
* &lt;&lt;Bbl Jn 3:16 &gt;&gt;-17
* &lt;&lt;Bbl Jn 5:17 &gt;&gt;-38
* &lt;&lt;Bbl Jn 5:43 &gt;&gt;
* &lt;&lt;Bbl Jn 6:37 &gt;&gt;-40
* &lt;&lt;Bbl Jn 6:44 &gt;&gt;-46
* &lt;&lt;Bbl Jn 6:57 &gt;&gt;
* &lt;&lt;Bbl Jn 7:28 &gt;&gt;-29
* &lt;&lt;Bbl Jn 8:19 &gt;&gt;
* &lt;&lt;Bbl Jn 8:28 &gt;&gt;-29
* &lt;&lt;Bbl Jn 10:25 &gt;&gt;-38
* &lt;&lt;Bbl Jn 12:44 &gt;&gt;-50
* &lt;&lt;Bbl Jn 13:20 &gt;&gt;
* &lt;&lt;Bbl Jn 13:31 &gt;&gt;-32
* &lt;&lt;Bbl Jn 14:1 &gt;&gt;
* &lt;&lt;Bbl Jn 14:6 &gt;&gt;-13
* &lt;&lt;Bbl Jn 6:20 &gt;&gt;-31
* &lt;&lt;Bbl Jn 17:1 &gt;&gt;ff

* &lt;&lt;Bbl Dan 7:9 &gt;&gt;-14
* &lt;&lt;Bbl Mk 9:37 &gt;&gt;
* &lt;&lt;Bbl Ph 2:9 &gt;&gt;-11</pre>
</div>
<div title="Father-Spirit-Son" modifier="SDM" created="201210211930" modified="201211230338" book_key="">
<pre>* &lt;&lt;Bbl Gn 48:15 &quot;&quot; note &gt;&gt;-16
* &lt;&lt;Bbl Is 48:16 &gt;&gt;
* &lt;&lt;Bbl Mt 3:16 &gt;&gt;-17
* &lt;&lt;Bbl Mt 28:19 &gt;&gt;
* &lt;&lt;Bbl Mk 1:9 &gt;&gt;-11
* &lt;&lt;Bbl Lk 3:21 &gt;&gt;-22
* &lt;&lt;Bbl Lk 23:46 &gt;&gt;
* &lt;&lt;Bbl Jn 1:1 &gt;&gt;-3
* &lt;&lt;Bbl Jn 1:32 &gt;&gt;-34
* &lt;&lt;Bbl Jn 6:27 &gt;&gt;
* &lt;&lt;Bbl Jn 14:16 &gt;&gt;-17
* &lt;&lt;Bbl Jn 14:26 &gt;&gt;
* &lt;&lt;Bbl Jn 15:26 &gt;&gt;
* &lt;&lt;Bbl Gal 4:6 &gt;&gt;
* &lt;&lt;Bbl Eph 1:1 &gt;&gt;ff
* &lt;&lt;Bbl 1Pt 1:2 &gt;&gt;</pre>
</div>
<div title="Favor" modifier="SDM" created="201009300249" modified="201205280133" book_key="">
<pre>* //Unmerited// (See [[Depravity]])
* &lt;&lt;Bbl 2Sam 3:36 &gt;&gt; -- [[David]] the leader of the hearts of his people
* God's high value on us
** //I have inscribed you on the palms of my hands.//
** &lt;&lt;Bbl Lk 15:1&gt;&gt;ff -- Parables of missing items.
** Illustrate using a favorite candy bar.  How likely am I to leave it half-finished, and forget about it somewhere?  Not very.  And that's with ADHD.
!!! God's conditional favor
* &lt;&lt;Bbl Dt 7:7 &gt;&gt;-11; &lt;&lt;Bbl 1Jn 4:19 &gt;&gt;</pre>
</div>
<div title="Fear" modifier="SDM" created="201004120330" modified="201211270440" book_key="">
<pre>{{anti{[[Courage]]}}}
Ungodly fear is the converse of {{anti{[[Faith]]}}}, of trusting in God.
!! of man:
* &lt;&lt;Bbl Dt 1:28 &gt;&gt;, &lt;&lt;Bbl Dt 7:17 &gt;&gt;-21 ; &lt;&lt;Bbl Jud 10:18 &gt;&gt;; &lt;&lt;Bbl Pr 29:25 &gt;&gt;; &lt;&lt;Bbl Is 51:7 &gt;&gt;, &lt;&lt;Bbl Is 51:12 abbr &gt;&gt;, &lt;&lt;Bbl Is 8:12 &gt;&gt;-13 ; &lt;&lt;Bbl Jer 26:21 &gt;&gt;; &lt;&lt;Bbl Ez 2:6 &gt;&gt;, &lt;&lt;Bbl Ez 3:9 &gt;&gt;; &lt;&lt;Bbl Jn 9:22 &gt;&gt;; &lt;&lt;Bbl 1Pt 3:14 &gt;&gt;; &lt;&lt;Bbl 1Sam 15:24 &gt;&gt;; &lt;&lt;Bbl Neh 6:1 &gt;&gt;-19 ; &lt;&lt;Bbl Mt 10:28 &gt;&gt;.
* Yet at the same time many even among the leaders believed in him. But because of the Pharisees they would not confess their faith for fear they would be put out of the synagogue; [43] for they loved praise from men more than praise from God. - John 12:42-43 NIV
* See [[Man]]
feeding on itself:      &lt;&lt;Bbl Num 13:33 &gt;&gt;; &lt;&lt;Bbl Pr 28:1 &gt;&gt;; &lt;&lt;Bbl Jer 1:8 &gt;&gt;; &lt;&lt;Bbl Ez 11:8 &gt;&gt;
of [[Death]]:           &lt;&lt;Bbl Heb 2:14 &gt;&gt;
of the godly, on the part of the ungodly:  &lt;&lt;Bbl 1Sam 18:12 &gt;&gt;-15
{{anti{[[Courage]]}}}
{{anti{[[FearOfGod]]}}}
[[Servitude]]
</pre>
</div>
<div title="FearOfGod" modifier="SDM" created="201012102256" modified="201211250403" book_key="">
<pre>A &quot;wholesome dread&quot; of violating God's will.
* Based not in the emotion, as we usually mean by {{anti{[[Fear]]}}}, but in the volition (like love; like jealousy).
* &lt;&lt;Bbl Ex 20:20 &gt;&gt; uses the term in two different aspects and shows the difference  --  indeed, their mutually exclusion.
* &lt;&lt;Bbl Ex 9:20 &gt;&gt;-21 ,&lt;&lt;Bbl Ex 20:20 &gt;&gt; (which uses fear in two aspects); &lt;&lt;Bbl Jos 24:14 &gt;&gt;; &lt;&lt;Bbl 1Sam 11:7 &gt;&gt;, &lt;&lt;Bbl 1Sam 12:18 &gt;&gt;; &lt;&lt;Bbl Ps 34:9 &gt;&gt;,&lt;&lt;Bbl Ps 36:1 &gt;&gt;-2 ; &lt;&lt;Bbl Pr 19:23 &gt;&gt;; &lt;&lt;Bbl Is 8:13 &gt;&gt;, &lt;&lt;Bbl Is 33:6 &gt;&gt;; &lt;&lt;Bbl Lk 12:5 &gt;&gt;; &lt;&lt;Bbl Mt 10:28 &gt;&gt;
* [[Wisdom]]:   &lt;&lt;Bbl Job 28:28 &gt;&gt;, &lt;&lt;Bbl Job 31:23 &gt;&gt;; many proverbs; &lt;&lt;Bbl Col 3:22 &gt;&gt;</pre>
</div>
<div title="Feedback" creator="psd" modifier="blaine" created="201102111106" modified="201102111310">
<pre>If you've any comments, corrections or observations about TiddlyWiki, the best way to get our attention is to post to the [[Community]] groups -- or write a blog entry.</pre>
</div>
<div title="Fellowship" modifier="SDM" created="201109271642" modified="201207062054" book_key="">
<pre>* [[PersonalRelations]]
* [[Church-Local]]
* Comparing the church to the Ark of Noah -- //It smelled bad inside, but still much better than being in the rain outside.//
* [[Food]]
</pre>
</div>
<div title="Fire" modifier="SDM" created="201012100356">
<pre>* [[God-Encounter]]
* Used to destroy limestone walls, as Jerusalem
* [[Refining]]
* [[Testing]] -- &lt;&lt;Bbl 1Cor 3:11 &gt;&gt;-15
* [[Rescue]]
* [[Judgment]] -- &lt;&lt;Bbl Mk 9:44 1 &gt;&gt;; &lt;&lt;Bbl 2Pt 3:7 &gt;&gt;
* &lt;&lt;Bbl Ex 24:17 &gt;&gt; //bush//</pre>
</div>
<div title="FireFox" creator="psd" modifier="jermolene" created="201102111106" modified="201111031801" tags="browsers issues">
<pre>~TiddlyWiki works well in ~FireFox v1.0 and above. If you're experiencing problems, make sure you've followed the [[downloading guidelines|Downloading]].

When saving ~TiddlyWiki in ~FireFox for the first time, you can run into problems if you accidentally click 'Deny' on the dialog, and select //Remember this decision//.

To reverse the effects, first locate the file {{{prefs.js}}} in your ~FireFox profile directory:
* Under Windows you'll find it at something like {{{C:\Documents and Settings\Jeremy\Application Data\Mozilla\Firefox\Profiles\o3dhupu6.default\prefs.js}}}, where {{{Jeremy}}} is the name of your windows profile and {{{o3dhupu6}}} will be a similar string of gobbledegook.
* On the Mac it'll be at {{{~/Library/Application Support/Firefox/Profiles/o3dhupu6.default/prefs.js}}}
* On Linux you can find this file at {{{~/.mozilla/firefox/o3dhupu6.default/prefs.js}}}.

Open the file in a text editor and find the line {{{user_pref(&quot;capability.principal.codebase.p0.denied&quot;, &quot;UniversalXPConnect&quot;);}}} and simply replace the word {{{denied}}} with {{{granted}}}.
//(Thanks to ~JonScully for figuring out this fix)//

Firefox users should be aware that GreaseMonkey can break TiddlyWiki. There's also a rather unpredictable FireFoxKeyboardIssue.</pre>
</div>
<div title="FireFoxKeyboardIssue" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="browsers issues">
<pre>Under FireFox, TiddlyWiki can get into a state where it ignores the arrow keys on the keyboard but accepts ordinary alphanumeric input. The triggers for this behaviour are unclear, but it doesn't just affect TiddlyWiki. The solution appears to be to locate the file {{{compreg.dat}}} in your FireFox profile folder and rename it to {{{compreg.dat.old}}}.</pre>
</div>
<div title="Flesh" modifier="SDM" created="201004120330" modified="201211250344" book_key="">
<pre>* The old nature is nothing to fool with.
* F.F. Bruce discusses the term in all its senses in Romans, pp. 40-44.
** [[Frailty]]
** [[Sin]], [[Weakness]]</pre>
</div>
<div title="FlickrBadge" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="tips">
<pre>Here's one way to get a Flickr badge in TiddlyWiki:

&lt;html&gt;
&lt;a href=&quot;http://www.flickr.com&quot; style=&quot;text-align:center;&quot;&gt;www.&lt;strong style=&quot;color:#3993ff&quot;&gt;flick&lt;span style=&quot;color:#ff1c92&quot;&gt;r&lt;/span&gt;&lt;/strong&gt;.com&lt;/a&gt;&lt;br&gt;
&lt;iframe style=&quot;background-color:#ffffff; border-color:#ffffff; border:none;&quot; width=&quot;113&quot; height=&quot;151&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;http://www.flickr.com/apps/badge/badge_iframe.gne?zg_bg_color=ffffff&amp;zg_person_id=35468148136%40N01&quot; title=&quot;Flickr Badge&quot;&gt;&lt;/iframe&gt;
&lt;/html&gt;

Here's the HTML code to insert in a tiddler:
{{{
&lt;html&gt;
&lt;a href=&quot;http://www.flickr.com&quot; style=&quot;text-align:center;&quot;&gt;www.&lt;strong style=&quot;color:#3993ff&quot;&gt;flick&lt;span style=&quot;color:#ff1c92&quot;&gt;r&lt;/span&gt;&lt;/strong&gt;.com&lt;/a&gt;&lt;br&gt;
&lt;iframe style=&quot;background-color:#ffffff; border-color:#ffffff; border:none;&quot; width=&quot;113&quot; height=&quot;151&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;http://www.flickr.com/apps/badge/badge_iframe.gne?zg_bg_color=ffffff&amp;zg_person_id=35468148136%40N01&quot; title=&quot;Flickr Badge&quot;&gt;&lt;/iframe&gt;
&lt;/html&gt;
}}}

You'll need to know your Flickr person ID, which should replace the value &quot;35468148136%40N01&quot; in the HTML. There's a useful [[Flickr idGettr|http://eightface.com/code/idgettr/]] to help with this.</pre>
</div>
<div title="Food" modifier="SDM" created="201004152152" modified="201211282041" book_key="">
<pre>* [[Living-Plant]]
* [[Harvest]]
* A form of [[Fellowship]], &quot;breaking [[bread]],&quot; which is so basic as to naturally connote the idea of covenant in every culture (&quot;companion&quot;, with-bread).  In fact it is often a direct symbol of [[Covenant]] throughout the Bible.
* &lt;&lt;Bbl Gn 14:18 &gt;&gt;, bread and [[Wine]] served by [[Melchizedek]]; 26:30-31, Abimelech and Phicol with Isaac; &lt;&lt;Bbl Ex 24:11 &gt;&gt;, meal with Yahweh; 32:6, before the golden calf; &lt;&lt;Bbl Num 25:2 &gt;&gt;, covenant with Baal of Peor; &lt;&lt;Bbl Jos 9:9 &gt;&gt;:9,14-16 with the Gibeonites (possibly, but Kiel and Delitzsch differ); &lt;&lt;Bbl 2Sam 9:10 &gt;&gt;-13 , Mephibosheth with King David; &lt;&lt;Bbl Pr 9:2 &gt;&gt;-5 , Wisdom's invitation; &lt;&lt;Bbl Is 25:6 &gt;&gt;, a final banquet; &lt;&lt;Bbl Dan 1:8 &gt;&gt;, Daniel in Babylon (in which the act of disobedience, whether or not it instituted a new and pagan covenant, would have violated the true one); &lt;&lt;Bbl Mt 8:11 &gt;&gt;, &quot;many shall come from east and west&quot;  (&lt;&lt;Bbl Lk 13:29 &gt;&gt;); &lt;&lt;Bbl Lk 14:15 &gt;&gt;, &quot;Blessed is everyone...&quot;; 22:30, &quot;I grant you to eat and drink in My kingdom&quot;; &lt;&lt;Bbl Rev 3:20 &gt;&gt; &quot;dine with him, and he with Me&quot;,19:9, &quot;Blessed are those who are invited...&quot;
* Parables including meals:  &lt;&lt;Bbl Mt 8:11 &gt;&gt;-12  (&lt;&lt;Bbl Lk 13:28 &gt;&gt;-30 ), &quot;Many shall come from east and west and recline...&quot;; &lt;&lt;Bbl Mt 22:1 &gt;&gt;-14 , the wedding feast which the invited do not attend, but others take their place (there is a [[dress|Clothing]] code in the [[Kingdom of Heaven|KingdomOfGod]]) (&lt;&lt;Bbl Lk 14:16 &gt;&gt;-24 ), &lt;&lt;Bbl Lk 22:27 &gt;&gt;, &quot;But I am among you as one who serves.&quot;
* Eating outside of God's favor is a daily denial of covenant with Him, and thus a daily signal of the Judgment of God.  Judas &quot;partook unworthily&quot; and instantly &quot;the devil entered into him&quot;.
* &lt;&lt;Bbl Pr 4:17 &gt;&gt;, bread of wickedness and wine of violence; 23:1-3,6-8, rules for dining with a ruler or a selfish man;  30:20, the way of an adulteress;
* &lt;&lt;Bbl Rom 14:23 &gt;&gt;, &lt;&lt;Bbl 1Cor 11:26 &gt;&gt;:34, eating without faith.
* Eating with others entails trust and vulnerability.  Illnesses are easily passed around the dinner table.  Travellers in Colombia are warned against accepting food proffered by strangers along the bus route, as it may be drugged.  &lt;&lt;Bbl Dan 11:26 &gt;&gt;.
* A funeral meal is mentioned in &lt;&lt;Bbl Jer 16:5 &gt;&gt;.
* (I am referred also to Pseudep. Enoch 62:14, Syr. Apocal. Bar 29:5-8.)
* &lt;&lt;Bbl Ps 78:18 &gt;&gt;, &lt;&lt;Bbl Ps 81:10 &gt;&gt;
* Our [[Need]], God's [[Provision]]: &lt;&lt;Bbl Mt 6:11 &gt;&gt;, &lt;&lt;Bbl Pr 6:30 &gt;&gt;, &lt;&lt;Bbl Pr 28:21 &gt;&gt;, &lt;&lt;Bbl Pr 30:9 &gt;&gt;
!!!  with God
* Ex 24:11
* Is 25
* Every meal with Jesus is an expression of eternal covenant and a prelude to Paradise.  &lt;&lt;Bbl Mt 9:10 &gt;&gt;-11 , &lt;&lt;Bbl Mt 11:19 &gt;&gt;, &lt;&lt;Bbl Mt 14:13 &gt;&gt;-21 , &lt;&lt;Bbl Mt 15:32 &gt;&gt;-38 , &lt;&lt;Bbl Mt 26:26 &gt;&gt;-30 ; &lt;&lt;Bbl Mk 2:15 &gt;&gt;-17 , &lt;&lt;Bbl Mk 3:20 &gt;&gt;, &lt;&lt;Bbl Mk 6:31 &gt;&gt;-44 , &lt;&lt;Bbl Mk 8:1 &gt;&gt;-9 , &lt;&lt;Bbl Mk 14:3 &gt;&gt;; &lt;&lt;Bbl Jn 21:12 &gt;&gt;; &lt;&lt;Bbl Rev 3:20 &gt;&gt;
* [[LordsSupper]]</pre>
</div>
<div title="Footware" modifier="SDM" created="201012160436" modified="201211160337" book_key="">
<pre>!!! relationship!
* &lt;&lt;Bbl Dt 25:7 &gt;&gt;-10
* &lt;&lt;Bbl Ruth 4:7 &gt;&gt;
* &lt;&lt;Bbl Lk 15:22 &gt;&gt;  sandals for his feet
* John the Baptist, //not worthy//
* Eph 6 //preparation of the Gospel of peace//
----
* [[Clothing]], //shoe//*</pre>
</div>
<div title="ForEachTiddlerPlugin" modifier="SDM" created="201212191946" tags="systemConfig" book_key="">
<pre>/***
|''Name:''|ForEachTiddlerPlugin|
|''Version:''|1.0.8 (2007-04-12)|
|''Source:''|http://tiddlywiki.abego-software.de/#ForEachTiddlerPlugin|
|''Author:''|UdoBorkowski (ub [at] abego-software [dot] de)|
|''Licence:''|[[BSD open source license (abego Software)|http://www.abego-software.de/legal/apl-v10.html]]|
|''Copyright:''|&amp;copy; 2005-2007 [[abego Software|http://www.abego-software.de]]|
|''TiddlyWiki:''|1.2.38+, 2.0|
|''Browser:''|Firefox 1.0.4+; Firefox 1.5; InternetExplorer 6.0|
!Description

Create customizable lists, tables etc. for your selections of tiddlers. Specify the tiddlers to include and their order through a powerful language.

''Syntax:''
|&gt;|{{{&lt;&lt;}}}''forEachTiddler'' [''in'' //tiddlyWikiPath//] [''where'' //whereCondition//] [''sortBy'' //sortExpression// [''ascending'' //or// ''descending'']] [''script'' //scriptText//] [//action// [//actionParameters//]]{{{&gt;&gt;}}}|
|//tiddlyWikiPath//|The filepath to the TiddlyWiki the macro should work on. When missing the current TiddlyWiki is used.|
|//whereCondition//|(quoted) JavaScript boolean expression. May refer to the build-in variables {{{tiddler}}} and  {{{context}}}.|
|//sortExpression//|(quoted) JavaScript expression returning &quot;comparable&quot; objects (using '{{{&lt;}}}','{{{&gt;}}}','{{{==}}}'. May refer to the build-in variables {{{tiddler}}} and  {{{context}}}.|
|//scriptText//|(quoted) JavaScript text. Typically defines JavaScript functions that are called by the various JavaScript expressions (whereClause, sortClause, action arguments,...)|
|//action//|The action that should be performed on every selected tiddler, in the given order. By default the actions [[addToList|AddToListAction]] and [[write|WriteAction]] are supported. When no action is specified [[addToList|AddToListAction]]  is used.|
|//actionParameters//|(action specific) parameters the action may refer while processing the tiddlers (see action descriptions for details). &lt;&lt;tiddler [[JavaScript in actionParameters]]&gt;&gt;|
|&gt;|~~Syntax formatting: Keywords in ''bold'', optional parts in [...]. 'or' means that exactly one of the two alternatives must exist.~~|

See details see [[ForEachTiddlerMacro]] and [[ForEachTiddlerExamples]].

!Revision history
* v1.0.8 (2007-04-12)
** Adapted to latest TiddlyWiki 2.2 Beta importTiddlyWiki API (introduced with changeset 2004). TiddlyWiki 2.2 Beta builds prior to changeset 2004 are no longer supported (but TiddlyWiki 2.1 and earlier, of cause)
* v1.0.7 (2007-03-28)
** Also support &quot;pre&quot; formatted TiddlyWikis (introduced with TW 2.2) (when using &quot;in&quot; clause to work on external tiddlers)
* v1.0.6 (2006-09-16)
** Context provides &quot;viewerTiddler&quot;, i.e. the tiddler used to view the macro. Most times this is equal to the &quot;inTiddler&quot;, but when using the &quot;tiddler&quot; macro both may be different.
** Support &quot;begin&quot;, &quot;end&quot; and &quot;none&quot; expressions in &quot;write&quot; action
* v1.0.5 (2006-02-05)
** Pass tiddler containing the macro with wikify, context object also holds reference to tiddler containing the macro (&quot;inTiddler&quot;). Thanks to SimonBaird.
** Support Firefox 1.5.0.1
** Internal
*** Make &quot;JSLint&quot; conform
*** &quot;Only install once&quot;
* v1.0.4 (2006-01-06)
** Support TiddlyWiki 2.0
* v1.0.3 (2005-12-22)
** Features:
*** Write output to a file supports multi-byte environments (Thanks to Bram Chen)
*** Provide API to access the forEachTiddler functionality directly through JavaScript (see getTiddlers and performMacro)
** Enhancements:
*** Improved error messages on InternetExplorer.
* v1.0.2 (2005-12-10)
** Features:
*** context object also holds reference to store (TiddlyWiki)
** Fixed Bugs:
*** ForEachTiddler 1.0.1 has broken support on win32 Opera 8.51 (Thanks to BrunoSabin for reporting)
* v1.0.1 (2005-12-08)
** Features:
*** Access tiddlers stored in separated TiddlyWikis through the &quot;in&quot; option. I.e. you are no longer limited to only work on the &quot;current TiddlyWiki&quot;.
*** Write output to an external file using the &quot;toFile&quot; option of the &quot;write&quot; action. With this option you may write your customized tiddler exports.
*** Use the &quot;script&quot; section to define &quot;helper&quot; JavaScript functions etc. to be used in the various JavaScript expressions (whereClause, sortClause, action arguments,...).
*** Access and store context information for the current forEachTiddler invocation (through the build-in &quot;context&quot; object) .
*** Improved script evaluation (for where/sort clause and write scripts).
* v1.0.0 (2005-11-20)
** initial version

!Code
***/
//{{{


//============================================================================
//============================================================================
//         ForEachTiddlerPlugin
//============================================================================
//============================================================================

// Only install once
if (!version.extensions.ForEachTiddlerPlugin) {

if (!window.abego) window.abego = {};

version.extensions.ForEachTiddlerPlugin = {
    major: 1, minor: 0, revision: 8,
    date: new Date(2007,3,12),
    source: &quot;http://tiddlywiki.abego-software.de/#ForEachTiddlerPlugin&quot;,
    licence: &quot;[[BSD open source license (abego Software)|http://www.abego-software.de/legal/apl-v10.html]]&quot;,
    copyright: &quot;Copyright (c) abego Software GmbH, 2005-2007 (www.abego-software.de)&quot;
};

// For backward compatibility with TW 1.2.x
//
if (!TiddlyWiki.prototype.forEachTiddler) {
    TiddlyWiki.prototype.forEachTiddler = function(callback) {
        for(var t in this.tiddlers) {
            callback.call(this,t,this.tiddlers[t]);
        }
    };
}

//============================================================================
// forEachTiddler Macro
//============================================================================

version.extensions.forEachTiddler = {
    major: 1, minor: 0, revision: 8, date: new Date(2007,3,12), provider: &quot;http://tiddlywiki.abego-software.de&quot;};

// ---------------------------------------------------------------------------
// Configurations and constants
// ---------------------------------------------------------------------------

config.macros.forEachTiddler = {
     // Standard Properties
     label: &quot;forEachTiddler&quot;,
     prompt: &quot;Perform actions on a (sorted) selection of tiddlers&quot;,

     // actions
     actions: {
         addToList: {},
         write: {}
     }
};

// ---------------------------------------------------------------------------
//  The forEachTiddler Macro Handler
// ---------------------------------------------------------------------------

config.macros.forEachTiddler.getContainingTiddler = function(e) {
    while(e &amp;&amp; !hasClass(e,&quot;tiddler&quot;))
        e = e.parentNode;
    var title = e ? e.getAttribute(&quot;tiddler&quot;) : null;
    return title ? store.getTiddler(title) : null;
};

config.macros.forEachTiddler.handler = function(place,macroName,params,wikifier,paramString,tiddler) {
    // config.macros.forEachTiddler.traceMacroCall(place,macroName,params,wikifier,paramString,tiddler);

    if (!tiddler) tiddler = config.macros.forEachTiddler.getContainingTiddler(place);
    // --- Parsing ------------------------------------------

    var i = 0; // index running over the params
    // Parse the &quot;in&quot; clause
    var tiddlyWikiPath = undefined;
    if ((i &lt; params.length) &amp;&amp; params[i] == &quot;in&quot;) {
        i++;
        if (i &gt;= params.length) {
            this.handleError(place, &quot;TiddlyWiki path expected behind 'in'.&quot;);
            return;
        }
        tiddlyWikiPath = this.paramEncode((i &lt; params.length) ? params[i] : &quot;&quot;);
        i++;
    }

    // Parse the where clause
    var whereClause =&quot;true&quot;;
    if ((i &lt; params.length) &amp;&amp; params[i] == &quot;where&quot;) {
        i++;
        whereClause = this.paramEncode((i &lt; params.length) ? params[i] : &quot;&quot;);
        i++;
    }

    // Parse the sort stuff
    var sortClause = null;
    var sortAscending = true;
    if ((i &lt; params.length) &amp;&amp; params[i] == &quot;sortBy&quot;) {
        i++;
        if (i &gt;= params.length) {
            this.handleError(place, &quot;sortClause missing behind 'sortBy'.&quot;);
            return;
        }
        sortClause = this.paramEncode(params[i]);
        i++;

        if ((i &lt; params.length) &amp;&amp; (params[i] == &quot;ascending&quot; || params[i] == &quot;descending&quot;)) {
             sortAscending = params[i] == &quot;ascending&quot;;
             i++;
        }
    }

    // Parse the script
    var scriptText = null;
    if ((i &lt; params.length) &amp;&amp; params[i] == &quot;script&quot;) {
        i++;
        scriptText = this.paramEncode((i &lt; params.length) ? params[i] : &quot;&quot;);
        i++;
    }

    // Parse the action.
    // When we are already at the end use the default action
    var actionName = &quot;addToList&quot;;
    if (i &lt; params.length) {
       if (!config.macros.forEachTiddler.actions[params[i]]) {
            this.handleError(place, &quot;Unknown action '&quot;+params[i]+&quot;'.&quot;);
            return;
        } else {
            actionName = params[i];
            i++;
        }
    }

    // Get the action parameter
    // (the parsing is done inside the individual action implementation.)
    var actionParameter = params.slice(i);


    // --- Processing ------------------------------------------
    try {
        this.performMacro({
                place: place,
                inTiddler: tiddler,
                whereClause: whereClause,
                sortClause: sortClause,
                sortAscending: sortAscending,
                actionName: actionName,
                actionParameter: actionParameter,
                scriptText: scriptText,
                tiddlyWikiPath: tiddlyWikiPath});

    } catch (e) {
        this.handleError(place, e);
    }
};

// Returns an object with properties &quot;tiddlers&quot; and &quot;context&quot;.
// tiddlers holds the (sorted) tiddlers selected by the parameter,
// context the context of the execution of the macro.
//
// The action is not yet performed.
//
// @parameter see performMacro
//
config.macros.forEachTiddler.getTiddlersAndContext = function(parameter) {

    var context = config.macros.forEachTiddler.createContext(parameter.place, parameter.whereClause, parameter.sortClause, parameter.sortAscending, parameter.actionName, parameter.actionParameter, parameter.scriptText, parameter.tiddlyWikiPath, parameter.inTiddler);

    var tiddlyWiki = parameter.tiddlyWikiPath ? this.loadTiddlyWiki(parameter.tiddlyWikiPath) : store;
    context[&quot;tiddlyWiki&quot;] = tiddlyWiki;

    // Get the tiddlers, as defined by the whereClause
    var tiddlers = this.findTiddlers(parameter.whereClause, context, tiddlyWiki);
    context[&quot;tiddlers&quot;] = tiddlers;

    // Sort the tiddlers, when sorting is required.
    if (parameter.sortClause) {
        this.sortTiddlers(tiddlers, parameter.sortClause, parameter.sortAscending, context);
    }

    return {tiddlers: tiddlers, context: context};
};

// Returns the (sorted) tiddlers selected by the parameter.
//
// The action is not yet performed.
//
// @parameter see performMacro
//
config.macros.forEachTiddler.getTiddlers = function(parameter) {
    return this.getTiddlersAndContext(parameter).tiddlers;
};

// Performs the macros with the given parameter.
//
// @param parameter holds the parameter of the macro as separate properties.
//                The following properties are supported:
//
//                      place
//                      whereClause
//                      sortClause
//                      sortAscending
//                      actionName
//                      actionParameter
//                      scriptText
//                      tiddlyWikiPath
//
//                  All properties are optional.
//                  For most actions the place property must be defined.
//
config.macros.forEachTiddler.performMacro = function(parameter) {
    var tiddlersAndContext = this.getTiddlersAndContext(parameter);

    // Perform the action
    var actionName = parameter.actionName ? parameter.actionName : &quot;addToList&quot;;
    var action = config.macros.forEachTiddler.actions[actionName];
    if (!action) {
        this.handleError(parameter.place, &quot;Unknown action '&quot;+actionName+&quot;'.&quot;);
        return;
    }

    var actionHandler = action.handler;
    actionHandler(parameter.place, tiddlersAndContext.tiddlers, parameter.actionParameter, tiddlersAndContext.context);
};

// ---------------------------------------------------------------------------
//  The actions
// ---------------------------------------------------------------------------

// Internal.
//
// --- The addToList Action -----------------------------------------------
//
config.macros.forEachTiddler.actions.addToList.handler = function(place, tiddlers, parameter, context) {
    // Parse the parameter
    var p = 0;

    // Check for extra parameters
    if (parameter.length &gt; p) {
        config.macros.forEachTiddler.createExtraParameterErrorElement(place, &quot;addToList&quot;, parameter, p);
        return;
    }

    // Perform the action.
    var list = document.createElement(&quot;ul&quot;);
    place.appendChild(list);
    for (var i = 0; i &lt; tiddlers.length; i++) {
        var tiddler = tiddlers[i];
        var listItem = document.createElement(&quot;li&quot;);
        list.appendChild(listItem);
        createTiddlyLink(listItem, tiddler.title, true);
    }
};

abego.parseNamedParameter = function(name, parameter, i) {
    var beginExpression = null;
    if ((i &lt; parameter.length) &amp;&amp; parameter[i] == name) {
        i++;
        if (i &gt;= parameter.length) {
            throw &quot;Missing text behind '%0'&quot;.format([name]);
        }

        return config.macros.forEachTiddler.paramEncode(parameter[i]);
    }
    return null;
}

// Internal.
//
// --- The write Action ---------------------------------------------------
//
config.macros.forEachTiddler.actions.write.handler = function(place, tiddlers, parameter, context) {
    // Parse the parameter
    var p = 0;
    if (p &gt;= parameter.length) {
        this.handleError(place, &quot;Missing expression behind 'write'.&quot;);
        return;
    }

    var textExpression = config.macros.forEachTiddler.paramEncode(parameter[p]);
    p++;

    // Parse the &quot;begin&quot; option
    var beginExpression = abego.parseNamedParameter(&quot;begin&quot;, parameter, p);
    if (beginExpression !== null)
        p += 2;
    var endExpression = abego.parseNamedParameter(&quot;end&quot;, parameter, p);
    if (endExpression !== null)
        p += 2;
    var noneExpression = abego.parseNamedParameter(&quot;none&quot;, parameter, p);
    if (noneExpression !== null)
        p += 2;

    // Parse the &quot;toFile&quot; option
    var filename = null;
    var lineSeparator = undefined;
    if ((p &lt; parameter.length) &amp;&amp; parameter[p] == &quot;toFile&quot;) {
        p++;
        if (p &gt;= parameter.length) {
            this.handleError(place, &quot;Filename expected behind 'toFile' of 'write' action.&quot;);
            return;
        }

        filename = config.macros.forEachTiddler.getLocalPath(config.macros.forEachTiddler.paramEncode(parameter[p]));
        p++;
        if ((p &lt; parameter.length) &amp;&amp; parameter[p] == &quot;withLineSeparator&quot;) {
            p++;
            if (p &gt;= parameter.length) {
                this.handleError(place, &quot;Line separator text expected behind 'withLineSeparator' of 'write' action.&quot;);
                return;
            }
            lineSeparator = config.macros.forEachTiddler.paramEncode(parameter[p]);
            p++;
        }
    }

    // Check for extra parameters
    if (parameter.length &gt; p) {
        config.macros.forEachTiddler.createExtraParameterErrorElement(place, &quot;write&quot;, parameter, p);
        return;
    }

    // Perform the action.
    var func = config.macros.forEachTiddler.getEvalTiddlerFunction(textExpression, context);
    var count = tiddlers.length;
    var text = &quot;&quot;;
    if (count &gt; 0 &amp;&amp; beginExpression)
        text += config.macros.forEachTiddler.getEvalTiddlerFunction(beginExpression, context)(undefined, context, count, undefined);

    for (var i = 0; i &lt; count; i++) {
        var tiddler = tiddlers[i];
        text += func(tiddler, context, count, i);
    }

    if (count &gt; 0 &amp;&amp; endExpression)
        text += config.macros.forEachTiddler.getEvalTiddlerFunction(endExpression, context)(undefined, context, count, undefined);

    if (count == 0 &amp;&amp; noneExpression)
        text += config.macros.forEachTiddler.getEvalTiddlerFunction(noneExpression, context)(undefined, context, count, undefined);


    if (filename) {
        if (lineSeparator !== undefined) {
            lineSeparator = lineSeparator.replace(/\\n/mg, &quot;\n&quot;).replace(/\\r/mg, &quot;\r&quot;);
            text = text.replace(/\n/mg,lineSeparator);
        }
        saveFile(filename, convertUnicodeToUTF8(text));
    } else {
        var wrapper = createTiddlyElement(place, &quot;span&quot;);
        wikify(text, wrapper, null/* highlightRegExp */, context.inTiddler);
    }
};


// ---------------------------------------------------------------------------
//  Helpers
// ---------------------------------------------------------------------------

// Internal.
//
config.macros.forEachTiddler.createContext = function(placeParam, whereClauseParam, sortClauseParam, sortAscendingParam, actionNameParam, actionParameterParam, scriptText, tiddlyWikiPathParam, inTiddlerParam) {
    return {
        place : placeParam,
        whereClause : whereClauseParam,
        sortClause : sortClauseParam,
        sortAscending : sortAscendingParam,
        script : scriptText,
        actionName : actionNameParam,
        actionParameter : actionParameterParam,
        tiddlyWikiPath : tiddlyWikiPathParam,
        inTiddler : inTiddlerParam, // the tiddler containing the &lt;&lt;forEachTiddler ...&gt;&gt; macro call.
        viewerTiddler : config.macros.forEachTiddler.getContainingTiddler(placeParam) // the tiddler showing the forEachTiddler result
    };
};

// Internal.
//
// Returns a TiddlyWiki with the tiddlers loaded from the TiddlyWiki of
// the given path.
//
config.macros.forEachTiddler.loadTiddlyWiki = function(path, idPrefix) {
    if (!idPrefix) {
        idPrefix = &quot;store&quot;;
    }
    var lenPrefix = idPrefix.length;

    // Read the content of the given file
    var content = loadFile(this.getLocalPath(path));
    if(content === null) {
        throw &quot;TiddlyWiki '&quot;+path+&quot;' not found.&quot;;
    }

    var tiddlyWiki = new TiddlyWiki();

    // Starting with TW 2.2 there is a helper function to import the tiddlers
    if (tiddlyWiki.importTiddlyWiki) {
        if (!tiddlyWiki.importTiddlyWiki(content))
            throw &quot;File '&quot;+path+&quot;' is not a TiddlyWiki.&quot;;
        tiddlyWiki.dirty = false;
        return tiddlyWiki;
    }

    // The legacy code, for TW &lt; 2.2

    // Locate the storeArea div's
    var posOpeningDiv = content.indexOf(startSaveArea);
    var posClosingDiv = content.lastIndexOf(endSaveArea);
    if((posOpeningDiv == -1) || (posClosingDiv == -1)) {
        throw &quot;File '&quot;+path+&quot;' is not a TiddlyWiki.&quot;;
    }
    var storageText = content.substr(posOpeningDiv + startSaveArea.length, posClosingDiv);

    // Create a &quot;div&quot; element that contains the storage text
    var myStorageDiv = document.createElement(&quot;div&quot;);
    myStorageDiv.innerHTML = storageText;
    myStorageDiv.normalize();

    // Create all tiddlers in a new TiddlyWiki
    // (following code is modified copy of TiddlyWiki.prototype.loadFromDiv)
    var store = myStorageDiv.childNodes;
    for(var t = 0; t &lt; store.length; t++) {
        var e = store[t];
        var title = null;
        if(e.getAttribute)
            title = e.getAttribute(&quot;tiddler&quot;);
        if(!title &amp;&amp; e.id &amp;&amp; e.id.substr(0,lenPrefix) == idPrefix)
            title = e.id.substr(lenPrefix);
        if(title &amp;&amp; title !== &quot;&quot;) {
            var tiddler = tiddlyWiki.createTiddler(title);
            tiddler.loadFromDiv(e,title);
        }
    }
    tiddlyWiki.dirty = false;

    return tiddlyWiki;
};



// Internal.
//
// Returns a function that has a function body returning the given javaScriptExpression.
// The function has the parameters:
//
//   (tiddler, context, count, index)
//
config.macros.forEachTiddler.getEvalTiddlerFunction = function (javaScriptExpression, context) {
    var script = context[&quot;script&quot;];
    var functionText = &quot;var theFunction = function(tiddler, context, count, index) { return &quot;+javaScriptExpression+&quot;}&quot;;
    var fullText = (script ? script+&quot;;&quot; : &quot;&quot;)+functionText+&quot;;theFunction;&quot;;
    return eval(fullText);
};

// Internal.
//
config.macros.forEachTiddler.findTiddlers = function(whereClause, context, tiddlyWiki) {
    var result = [];
    var func = config.macros.forEachTiddler.getEvalTiddlerFunction(whereClause, context);
    tiddlyWiki.forEachTiddler(function(title,tiddler) {
        if (func(tiddler, context, undefined, undefined)) {
            result.push(tiddler);
        }
    });
    return result;
};

// Internal.
//
config.macros.forEachTiddler.createExtraParameterErrorElement = function(place, actionName, parameter, firstUnusedIndex) {
    var message = &quot;Extra parameter behind '&quot;+actionName+&quot;':&quot;;
    for (var i = firstUnusedIndex; i &lt; parameter.length; i++) {
        message += &quot; &quot;+parameter[i];
    }
    this.handleError(place, message);
};

// Internal.
//
config.macros.forEachTiddler.sortAscending = function(tiddlerA, tiddlerB) {
    var result =
        (tiddlerA.forEachTiddlerSortValue == tiddlerB.forEachTiddlerSortValue)
            ? 0
            : (tiddlerA.forEachTiddlerSortValue &lt; tiddlerB.forEachTiddlerSortValue)
               ? -1
               : +1;
    return result;
};

// Internal.
//
config.macros.forEachTiddler.sortDescending = function(tiddlerA, tiddlerB) {
    var result =
        (tiddlerA.forEachTiddlerSortValue == tiddlerB.forEachTiddlerSortValue)
            ? 0
            : (tiddlerA.forEachTiddlerSortValue &lt; tiddlerB.forEachTiddlerSortValue)
               ? +1
               : -1;
    return result;
};

// Internal.
//
config.macros.forEachTiddler.sortTiddlers = function(tiddlers, sortClause, ascending, context) {
    // To avoid evaluating the sortClause whenever two items are compared
    // we pre-calculate the sortValue for every item in the array and store it in a
    // temporary property (&quot;forEachTiddlerSortValue&quot;) of the tiddlers.
    var func = config.macros.forEachTiddler.getEvalTiddlerFunction(sortClause, context);
    var count = tiddlers.length;
    var i;
    for (i = 0; i &lt; count; i++) {
        var tiddler = tiddlers[i];
        tiddler.forEachTiddlerSortValue = func(tiddler,context, undefined, undefined);
    }

    // Do the sorting
    tiddlers.sort(ascending ? this.sortAscending : this.sortDescending);

    // Delete the temporary property that holds the sortValue.
    for (i = 0; i &lt; tiddlers.length; i++) {
        delete tiddlers[i].forEachTiddlerSortValue;
    }
};


// Internal.
//
config.macros.forEachTiddler.trace = function(message) {
    displayMessage(message);
};

// Internal.
//
config.macros.forEachTiddler.traceMacroCall = function(place,macroName,params) {
    var message =&quot;&lt;&lt;&quot;+macroName;
    for (var i = 0; i &lt; params.length; i++) {
        message += &quot; &quot;+params[i];
    }
    message += &quot;&gt;&gt;&quot;;
    displayMessage(message);
};


// Internal.
//
// Creates an element that holds an error message
//
config.macros.forEachTiddler.createErrorElement = function(place, exception) {
    var message = (exception.description) ? exception.description : exception.toString();
    return createTiddlyElement(place,&quot;span&quot;,null,&quot;forEachTiddlerError&quot;,&quot;&lt;&lt;forEachTiddler ...&gt;&gt;: &quot;+message);
};

// Internal.
//
// @param place [may be null]
//
config.macros.forEachTiddler.handleError = function(place, exception) {
    if (place) {
        this.createErrorElement(place, exception);
    } else {
        throw exception;
    }
};

// Internal.
//
// Encodes the given string.
//
// Replaces
//   &quot;$))&quot; to &quot;&gt;&gt;&quot;
//   &quot;$)&quot; to &quot;&gt;&quot;
//
config.macros.forEachTiddler.paramEncode = function(s) {
    var reGTGT = new RegExp(&quot;\\$\\)\\)&quot;,&quot;mg&quot;);
    var reGT = new RegExp(&quot;\\$\\)&quot;,&quot;mg&quot;);
    return s.replace(reGTGT, &quot;&gt;&gt;&quot;).replace(reGT, &quot;&gt;&quot;);
};

// Internal.
//
// Returns the given original path (that is a file path, starting with &quot;file:&quot;)
// as a path to a local file, in the systems native file format.
//
// Location information in the originalPath (i.e. the &quot;#&quot; and stuff following)
// is stripped.
//
config.macros.forEachTiddler.getLocalPath = function(originalPath) {
    // Remove any location part of the URL
    var hashPos = originalPath.indexOf(&quot;#&quot;);
    if(hashPos != -1)
        originalPath = originalPath.substr(0,hashPos);
    // Convert to a native file format assuming
    // &quot;file:///x:/path/path/path...&quot; - pc local file --&gt; &quot;x:\path\path\path...&quot;
    // &quot;file://///server/share/path/path/path...&quot; - FireFox pc network file --&gt; &quot;\\server\share\path\path\path...&quot;
    // &quot;file:///path/path/path...&quot; - mac/unix local file --&gt; &quot;/path/path/path...&quot;
    // &quot;file://server/share/path/path/path...&quot; - pc network file --&gt; &quot;\\server\share\path\path\path...&quot;
    var localPath;
    if(originalPath.charAt(9) == &quot;:&quot;) // pc local file
        localPath = unescape(originalPath.substr(8)).replace(new RegExp(&quot;/&quot;,&quot;g&quot;),&quot;\\&quot;);
    else if(originalPath.indexOf(&quot;file://///&quot;) === 0) // FireFox pc network file
        localPath = &quot;\\\\&quot; + unescape(originalPath.substr(10)).replace(new RegExp(&quot;/&quot;,&quot;g&quot;),&quot;\\&quot;);
    else if(originalPath.indexOf(&quot;file:///&quot;) === 0) // mac/unix local file
        localPath = unescape(originalPath.substr(7));
    else if(originalPath.indexOf(&quot;file:/&quot;) === 0) // mac/unix local file
        localPath = unescape(originalPath.substr(5));
    else // pc network file
        localPath = &quot;\\\\&quot; + unescape(originalPath.substr(7)).replace(new RegExp(&quot;/&quot;,&quot;g&quot;),&quot;\\&quot;);
    return localPath;
};

// ---------------------------------------------------------------------------
// Stylesheet Extensions (may be overridden by local StyleSheet)
// ---------------------------------------------------------------------------
//
setStylesheet(
    &quot;.forEachTiddlerError{color: #ffffff;background-color: #880000;}&quot;,
    &quot;forEachTiddler&quot;);

//============================================================================
// End of forEachTiddler Macro
//============================================================================


//============================================================================
// String.startsWith Function
//============================================================================
//
// Returns true if the string starts with the given prefix, false otherwise.
//
version.extensions[&quot;String.startsWith&quot;] = {major: 1, minor: 0, revision: 0, date: new Date(2005,11,20), provider: &quot;http://tiddlywiki.abego-software.de&quot;};
//
String.prototype.startsWith = function(prefix) {
    var n =  prefix.length;
    return (this.length &gt;= n) &amp;&amp; (this.slice(0, n) == prefix);
};



//============================================================================
// String.endsWith Function
//============================================================================
//
// Returns true if the string ends with the given suffix, false otherwise.
//
version.extensions[&quot;String.endsWith&quot;] = {major: 1, minor: 0, revision: 0, date: new Date(2005,11,20), provider: &quot;http://tiddlywiki.abego-software.de&quot;};
//
String.prototype.endsWith = function(suffix) {
    var n = suffix.length;
    return (this.length &gt;= n) &amp;&amp; (this.right(n) == suffix);
};


//============================================================================
// String.contains Function
//============================================================================
//
// Returns true when the string contains the given substring, false otherwise.
//
version.extensions[&quot;String.contains&quot;] = {major: 1, minor: 0, revision: 0, date: new Date(2005,11,20), provider: &quot;http://tiddlywiki.abego-software.de&quot;};
//
String.prototype.contains = function(substring) {
    return this.indexOf(substring) &gt;= 0;
};

//============================================================================
// Array.indexOf Function
//============================================================================
//
// Returns the index of the first occurance of the given item in the array or
// -1 when no such item exists.
//
// @param item [may be null]
//
version.extensions[&quot;Array.indexOf&quot;] = {major: 1, minor: 0, revision: 0, date: new Date(2005,11,20), provider: &quot;http://tiddlywiki.abego-software.de&quot;};
//
Array.prototype.indexOf = function(item) {
    for (var i = 0; i &lt; this.length; i++) {
        if (this[i] == item) {
            return i;
        }
    }
    return -1;
};

//============================================================================
// Array.contains Function
//============================================================================
//
// Returns true when the array contains the given item, otherwise false.
//
// @param item [may be null]
//
version.extensions[&quot;Array.contains&quot;] = {major: 1, minor: 0, revision: 0, date: new Date(2005,11,20), provider: &quot;http://tiddlywiki.abego-software.de&quot;};
//
Array.prototype.contains = function(item) {
    return (this.indexOf(item) &gt;= 0);
};

//============================================================================
// Array.containsAny Function
//============================================================================
//
// Returns true when the array contains at least one of the elements
// of the item. Otherwise (or when items contains no elements) false is returned.
//
version.extensions[&quot;Array.containsAny&quot;] = {major: 1, minor: 0, revision: 0, date: new Date(2005,11,20), provider: &quot;http://tiddlywiki.abego-software.de&quot;};
//
Array.prototype.containsAny = function(items) {
    for(var i = 0; i &lt; items.length; i++) {
        if (this.contains(items[i])) {
            return true;
        }
    }
    return false;
};


//============================================================================
// Array.containsAll Function
//============================================================================
//
// Returns true when the array contains all the items, otherwise false.
//
// When items is null false is returned (even if the array contains a null).
//
// @param items [may be null]
//
version.extensions[&quot;Array.containsAll&quot;] = {major: 1, minor: 0, revision: 0, date: new Date(2005,11,20), provider: &quot;http://tiddlywiki.abego-software.de&quot;};
//
Array.prototype.containsAll = function(items) {
    for(var i = 0; i &lt; items.length; i++) {
        if (!this.contains(items[i])) {
            return false;
        }
    }
    return true;
};


} // of &quot;install only once&quot;

// Used Globals (for JSLint) ==============
// ... DOM
/*global    document */
// ... TiddlyWiki Core
/*global    convertUnicodeToUTF8, createTiddlyElement, createTiddlyLink,
            displayMessage, endSaveArea, hasClass, loadFile, saveFile,
            startSaveArea, store, wikify */
//}}}


/***
!Licence and Copyright
Copyright (c) abego Software ~GmbH, 2005 ([[www.abego-software.de|http://www.abego-software.de]])

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.

Redistributions in binary form must reproduce the above copyright notice, this
list of conditions and the following disclaimer in the documentation and/or other
materials provided with the distribution.

Neither the name of abego Software nor the names of its contributors may be
used to endorse or promote products derived from this software without specific
prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.
***/

</pre>
</div>
<div title="Forgetting" modifier="SDM" created="201004120330">
<pre>The sin of neglecting to remember.  &lt;&lt;Bbl Jud 2:10 &gt;&gt;, &lt;&lt;Bbl Jud 3:7 &gt;&gt;, &lt;&lt;Bbl Dt 8:11 &gt;&gt;-20 , &lt;&lt;Bbl Ez 16:22 &gt;&gt;, &lt;&lt;Bbl Mt 18:21 &gt;&gt;-35 , &lt;&lt;Bbl Eph 5:11 &gt;&gt;, &lt;&lt;Bbl 2Pe 1:9 &gt;&gt;.</pre>
</div>
<div title="Forgiveness" modifier="SDM" created="201004120330" modified="201211252010" book_key="">
<pre>* &lt;&lt;Bbl Is 44:22 &gt;&gt;; &lt;&lt;Bbl Ez 16:53 &gt;&gt; (see similar verses in Jer); &lt;&lt;Bbl Mt 6:14 &gt;&gt;-15 ; &lt;&lt;Bbl Mt 18:21 &gt;&gt;a; &lt;&lt;Bbl Eph 4:32 &gt;&gt;; &lt;&lt;Bbl 1Jn 1:9 &gt;&gt;, &lt;&lt;Bbl 1Jn 2:12 &gt;&gt;.
* If you know Jesus you can forgive anyone.  He forgave His foes even while they were torturing and murdering Him.
* Unforgiveness is so often linked to {{opposite[[Fear]]}}}.
* [[Reconciliation]]</pre>
</div>
<div title="Foundation" modifier="SDM" created="201004120330" modified="201210211947" tags="House" book_key="">
<pre>&lt;&lt;Bbl Ps 11:3 &gt;&gt;; &lt;&lt;Bbl Pr 10:25 &gt;&gt;, &lt;&lt;Bbl Mt 7:24 &gt;&gt;.
&lt;&lt;Bbl 1Cor 3:9 &gt;&gt;-17
[[House]]</pre>
</div>
<div title="Frailty" modifier="SDM" created="201211250340" book_key="">
<pre>* //Vulnerability//, [[Weakness]]
* //The spirit is willing, but the [[Flesh]] is weak//
* * A smoldering wick He will not extinguish</pre>
</div>
<div title="Freedom" modifier="SDM" created="201010270203" modified="201212241347" book_key="">
<pre>* Franklin D. Roosevelt said &quot;In the truest sense, freedom cannot be bestowed; it must be achieved.&quot;  But in the truest sense, freedom cannot be achieved.  It must be bestowed.  [[Grace]]
* We cherish //freedom of worship// as a political tenet.  But we know it as spiritual liberation.  Once it has come by God's Spirit, no despot can take it away.  This proves it was granted by no government but God's.
* [[Deliverance]]
* //Liberty//
* &lt;&lt;Bbl Lev 26:13 &gt;&gt;
* &lt;&lt;Bbl Jn 8:31 abbr &gt;&gt;-36
* &lt;&lt;Bbl Rom 6:18 &gt;&gt;, &lt;&lt;Bbl Rom 7:6 &gt;&gt;, &lt;&lt;Bbl Rom 8:2 &gt;&gt;
* &lt;&lt;Bbl 2Cor 3:17 &gt;&gt;
* &lt;&lt;Bbl Gal 5:1 &gt;&gt;
* {{anti{[[Prison]]}}}</pre>
</div>
<div title="Friend" modifier="SDM" created="201209241552" book_key="">
<pre>* //Companion//

He who loves a pure heart and whose speech is gracious will have the king for his friend.   (22:11)

Do not make friends with a hot-tempered man, do not associate with one easily angered, or you may learn his ways and get yourself ensnared.     (22:24-25)

Wounds from a friend can be trusted, but an enemy multiplies kisses.    (27:6)

Perfume and incense bring joy to the heart, and the pleasantness of one's friend springs from his earnest counsel.      (27:9)

Do not forsake your friend and the friend of your father, and do not go to your brother's house when disaster strikes you-- better a neighbor nearby than a brother far away.   (27:10)

He who keeps the law is a discerning son, but a companion of gluttons disgraces his father. (28:7)
A man who loves wisdom brings joy to his father, but a companion of prostitutes squanders his wealth.   (29:3)

A righteous man is cautious in friendship, but the way of the wicked leads them astray. (12:26)
He who walks with the wise grows wise, but a companion of fools suffers harm.   (13:20)

A friend loves at all times, and a brother is born for adversity.   (17:17)
A man of many companions may come to ruin, but there is a friend who sticks closer than a brother.  (18:24)</pre>
</div>
<div title="Fruit" modifier="SDM" created="201004120330" modified="201211281648" tags="Harvest" book_key="">
<pre>* [[Living-Plant]]
* &lt;&lt;Bbl Ps 90:17 &gt;&gt;; &lt;&lt;Bbl Is 11:1 &gt;&gt;; &lt;&lt;Bbl Jn 15:1 &gt;&gt;-8 ; &lt;&lt;Bbl Rom 7:4 &gt;&gt;; &lt;&lt;Bbl Php 1:11 &gt;&gt;
!!! First Fruits
* Paul's reference to certain Gentiles ... reference?
* Rahab
* The grapes of Canaan
*  &lt;&lt;Bbl Jer 2:3 &gt;&gt;</pre>
</div>
<div title="Future" modifier="SDM" created="201010252038" modified="201301070100" book_key="">
<pre>* &lt;&lt;Bbl Is 65:11 &gt;&gt;, &lt;&lt;Bbl Is 56:12 &gt;&gt;, &lt;&lt;Bbl Is 47:7 &gt;&gt;, &lt;&lt;Bbl Is 22:13 &gt;&gt;, &lt;&lt;Bbl Jer 12:4 &gt;&gt;, &lt;&lt;Bbl Ps 10:4 &gt;&gt;-6 , &lt;&lt;Bbl Ps 49:11 &gt;&gt;-12 , &lt;&lt;Bbl Pr 31:25 &gt;&gt;, &lt;&lt;Bbl Lk 12:19 &gt;&gt;-20 ,  &lt;&lt;Bbl 2Pe 3:4 &gt;&gt;.
* &lt;&lt;Bbl Jms 4:13 &gt;&gt;-16, &lt;&lt;Bbl Pr 27:1 &gt;&gt; //You do not know what tomorrow will bring//
* [[SanctifiedProgressive]], //fate//</pre>
</div>
<div title="Gal-01-01-note" modifier="SDM" created="201010310314" modified="201211230231" tags="Comment" book_key="201001a">
<pre>2:1    Titus served as &quot;Exhibit A.&quot;
2:6 //those men ''added nothing'' to my message// -- no extra burden
&lt;&lt;Bbl Gal 2:9 abbr &gt;&gt;    Paul had the anointing for the Gentiles; Peter for the Jews.
2:20    Compare the KJV.
    There is a sequel in 5:24.

3:3 Revelation  here is apocalypse; and both those terms, from the Latin and the Greek respectively, mean an unveiling (see [[Veil]]).  This finds a connection in &lt;&lt;Bbl Is 25:7 &gt;&gt;, also about the bringing in of the gentiles.
3:10    Quoting &lt;&lt;Bbl Dt 27:26 &gt;&gt;.  //All who rely on observing the law are under a curse// -- the picture again of a burden.</pre>
</div>
<div title="Gal-03-13-note" modifier="SDM" created="201112280012" modified="201211230233" tags="Comment" book_key="201003c">
<pre>{{hilite_2{
&lt;&lt;Bbl Gal 3:13 &gt;&gt;: Christ redeemed us from the curse of the law by becoming a curse for us, for it is written: Cursed is everyone who is hung on a tree.
}}}
** &lt;&lt;Bbl Dt 21:22 &gt;&gt;-23 : //If a man guilty of a capital offense is put to death and his body is hung on a tree, you must not leave his body on the tree overnight. Be sure to bury him that same day, because anyone who is hung on a tree is under God's curse. You must not desecrate the land the Lord your God is giving you as an inheritance.//
** @@color:indigo;The disciples' claim (according to Paul's theology before the Damascus road experience) that Jesus was the Messiah undermined the law  --  what was of primary importance was the affirmation of the law:  'a hanged man is accursed of God.'  The idea that one who had died under the curse of God could be the Messiah was blasphemous and scandalous.  [After his conversion, this argument] was still valid, but received a new significance.  By raising Jesus from the dead, God had reversed that curse.  But why should Jesus have undergone the curse in the first place?  Sooner rather than later, Paul must have reached the conclusion set out in &lt;&lt;Bbl Galatians 3:10 &gt;&gt;-13 , that Jesus submitted to the death of the cross in order to take on himself the curse which the law pronounced on all who failed to keep it completely (&lt;&lt;Bbl Dt 27:26 &gt;&gt;).  The form  of this argument  --  interpreting two texts in the light of a common term which they shared (here, the term 'cursed' or 'accursed' in &lt;&lt;Bbl Dt 21:23 &gt;&gt; and &lt;&lt;Bbl Dt 27:26 &gt;&gt;, LXX)  --  was such as Paul was quite familiar with in the rabbinical schools, but no rabbi had ever formulated the substance  of this bold argument:  that, by voluntarily undergoing the curse of the law in one form, the Messiah should neutralize that curse on behalf of those who had incurred it in another form.  But in this way the doctrine of a crucified Messiah, which had once been such a stone of stumbling to Paul, became the corner-stone of his faith and preaching.@@  // -- F.F. Bruce, Romans, p. 35//

* &lt;&lt;Bbl Isaiah 53:10 &gt;&gt;-12  helps complete the idea of Christ as a guilt offering.

4:3-5   &lt;&lt;Bbl Heb 2:14 &gt;&gt;-15  presents the same idea:  Christ redeemed us by virtue of His Humanity.   //born ''under'' law, to redeem those ''under'' law...//
4:9 &quot;You did not chose me, but I chose you.&quot;  Here is further reason to express our role in the passive.

5:1 Probably a bad place for a chapter division.
    // do not let yourselves be burdened again by a ''yoke'' of slavery//
5:24    This statement is preceded by 2:20.

&lt;&lt;Bbl Gal 6:1 &gt;&gt;    He calls them spiritual , then qualifies what kind of spirit they is.  &lt;&lt;Bbl Lk 9:55 &gt;&gt;, &quot;You do not know what kind of spirit you are of.&quot;
    Restore  is the word used for mending (e.g., nets); consider also the parable of the unshrunk cloth.
6:2 //Carry each other's ''burdens'', and in this way you will fulfill the law of Christ. //
6:5 //for each one should carry his own ''load.'' //  The greek word is the source of our word //portion.//
6:11    An example of the general injunction of 6:10.  </pre>
</div>
<div title="Gate" modifier="SDM" created="201004120330" modified="201211281900" tags="House" book_key="">
<pre>Used for counsel and for courts of law.  &lt;&lt;Bbl Mt 16:18 &gt;&gt;
* [[Door]], [[Wall]], [[City]]</pre>
</div>
<div title="Gender" modifier="SDM" created="201010250325" modified="201201301541" book_key="">
<pre>* Gender is intrinsic.  It doesn't slough off on the way to eternity.
* &lt;&lt;Bbl Gn 5:2 &gt;&gt;
* [[Clothing]]
* [[Marriage]]
* [[ImmoralityAvoid]]</pre>
</div>
<div title="GenerateAnRssFeed" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="features options">
<pre>A new feature for the ThirdVersion of TiddlyWiki is the ability to generate an RssFeed of its content. You can flick it on with a new addition to the InterfaceOptions. If enabled, it automatically saves an RSS 2.0 format file with the last few changed tiddlers in it. It's given the same filename as the TiddlyWiki file but with the &quot;.xml&quot; extension. Like all TiddlyWiki features, it's experimental, and will probably be a bit temperamental in your feedreader until the bugs are ironed out.

Note that you must set the tiddler SiteUrl to be the URL where your TiddlyWiki will be published. (Don't put leading spaces or line breaks before or after the URL).</pre>
</div>
<div title="Genesis-01-01-note" modifier="SDM" created="201010071847" modified="201212050355" tags="Comment" book_key="401001a">
<pre>!!! Intro Notes
* @@color:darkgreen;... the Bible begins with the universe, not with the planet earth; then with the earth, not with Palestine; then with Adam the father of the human race, not with Abraham the father of the chosen race  --  we must never demote Him to the status of a tribal deity or petty godling@@ // -- John Stott//
* It's said that every created thing can be found in the first four chapters of the book.
* The book divides at chapter twelve.  In the first half, the Judgment on sin finds three culminations: the eviction from the garden, the flood, and the division of languages.  In the second half, as Ralph Winter puts it, &quot;the Kingdom strikes back.&quot;
!!! Creation and Life
1:1-19  &lt;&lt;Bbl Ps 33:6 &gt;&gt;-9  describes the creation.
1:3 &lt;&lt;Bbl 2Cor 4:6 &gt;&gt; states that the power of this original creation is the same as that of the regeneration of souls.  See also &lt;&lt;Bbl Jn 1:4 &gt;&gt;-9 , &lt;&lt;Bbl Jn 8:12 &gt;&gt;, &lt;&lt;Bbl Jn 9:5 &gt;&gt;, &lt;&lt;Bbl Jn 12:46 &gt;&gt;.  Before light was created on the earth, light and life were manifest in the nature of the Son.  See also &lt;&lt;Bbl Ps 33:6 &gt;&gt;.
&lt;&lt;Bbl Gn 1:5 abbr &gt;&gt;  Reveals gnostic dualism as false, especially 5b which indicates integrity.

1:14    signs   --  like the sort followed by the wise men?  Seasons are mentioned in 8:22.
1:26    man  --  them   --  the wording in the NAS seems grammatically paradoxical.  But the plurality is reflected in &lt;&lt;Bbl 1Pt 3:7 &gt;&gt;, &quot;Heirs together.&quot;
1:27    As in 5:1-2, there is a pristine unity of the sexes here.  Paul's words in &lt;&lt;Bbl 2Cor 11:7 &gt;&gt; seem to be based in the chapter 2 account, though his wording points to this passage.
1:28    The covenant of dominion.  Contrast &lt;&lt;Bbl Jms 3:7 &gt;&gt; about the tongue.
1:29-30 Here man is classed with the animal kingdom as having a living soul, and the plants are food for all.

2:2     This may be the worst chapter division in the Old Testament.
2:2 God rested.  Hebrews offers the same rest to us, &lt;&lt;Bbl Heb 4:9 &gt;&gt;-10 .  //Did God rest because now, for the first time, it was possible to anthropomorphize? smile.//

&lt;&lt;Bbl Gn 2:4 abbr &gt;&gt;  This is the proper start to the chapter.
2:7 The basis for anthropology.  There are two components: dust and God's breath.  Formed is the potter's term.
    Compare &lt;&lt;Bbl Jn 20:22 &gt;&gt;
* &lt;&lt;Bbl Gn 2:8 &gt;&gt;  The garden was not created  --  it was planted.  Special purposes are evident.
&lt;&lt;Bbl Gn 2:17 0 &gt;&gt; -- the covenant of works, and the only such.  God &quot;wanted to demonstrate whether man would glorify his Creator by obeying him.&quot; (C.K. Cummings)
* GoodAndEvil
* //you shall die// -- after the fall, man was no longer eligible for salvation by works.
2:19-20 Thus was science born, in the branch of taxonomy.
** Newton said that the task of science is to think God's thoughts after Him.
** The wording emphasizes the plenary authority of Adam's role.
** See this also as the first age of language.  The next ages are found in Babel and Pentecost.
!!! The Betrayal
* God chose not to warn them about the serpent.  But Adam named the serpent; Adam knew he was the //most subtle.  //
2:23-24 &lt;&lt;Bbl Eph 5:30 &gt;&gt;-32 ; &lt;&lt;Bbl Mt 19:4 &gt;&gt;-5 .
&lt;&lt;Bbl Gn 3:1 abbr &gt;&gt;  History's first question.
3:5 is resolved with 3:22; within this passage, chiastic structure points to the curse on the serpent.  And intertwined with this:
{{{
a 3:6  She ate the fruit from the tree and then gave it to her husband.
    b 3:7  They realized they were naked.
          c 3:8  Adam and Eve hid themselves.
              d 3:9  Then the LORD God called to Adam and said to him,  -- Where are you? --
          c 3:10   -- I hid myself. --
     b 3:11a   -- Who told you that you were naked? --
a 3:11b   -- Have you eaten from the tree? --
}}}
3:6 The most neglected and important word in the English language may be &quot;No.&quot;   See &lt;&lt;Bbl Rom 5:12 &gt;&gt;-19 ; &lt;&lt;Bbl 1Tim 2:14 &gt;&gt;.
    M.R. ~DeHaan (Portraits From Genesis) presents Adam as righteous; W.A. Criswell (The Scarlet Thread of Redemption, Open Bible) as chivalrous!
    But Tim presents to me the idea (2/91) that Adam did indeed die for Eve's sake.  He was not deceived into thinking he would be &quot;like God.&quot;  He chose a form of suicide, being unwilling to suffer for righteousness' sake.  In that he died for his bride he fulfilled his picture of the Second Adam.
!!! The Shame
The word for //shame// is only used once in Genesis -- not here.  See [[Shame]].
3:7 An image of all man-made religion.  We need not assume the garment was crudely constructed.  This is the first handiwork in history; this is the origin of Hobby Lobby.
3:8 The cool   is the word //Ruah//.
    This is how many people react when you bring up Christ in a conversation.
3:9 What if God, instead of calling, had simply turned around and left?  This is grace.
The improvisation of clothing was immediately understood by Adam and Eve to be inadequate.  They hid.
*Overtures of [[Grace]] -- largely hidden as [[Need]]:
** God promises to make them enemies of [[Satan]] -- which must push them towards Himself!
** The Seed of the woman will win.
** There will be extra pain -- which is often a remedy for danger, and they could use some help there.
** There will be extra work -- which means less time for idleness, which now must lead to wickedness.
* 3:15 //[[Seed]] of the woman// is a hint of the virgin birth.
This is the first hour in which [[Redemption]] is needed.  If redemption were an old clock, and the Messiah were the main-spring, this would be the first turn of the winding knob.
* 3:21 -- 2 kinds of [[Clothing]] (see 3:7); [[Sacrifice]].
3:11    The great quest of fallen man is to be unregenerately clothed  --  religious endeavor directed towards God  --  or to be unashamedly naked  --  religious endeavor directed away from God.
3:14-19 God does __not__ curse the man and woman.
3:15    &lt;&lt;Bbl Gal 4:4 &gt;&gt; presents this as prophetic of the virgin birth.
3:16    Before, covenant had sufficed.  Now, desire and domination mark our relationships in the fallen world.  But does redemption restore the pristine order exactly, or somehow sublimate these elements?  Even paradise apparently does not return us to nakedness, but presents us clothed (see Clothing).
3:17-19 Work now has a new function as compensation for the curse.  &lt;&lt;Bbl 2The 3:10 &gt;&gt;, Paul develops this natural law into a commandment.
3:17    See &lt;&lt;Bbl Dt 13:6 &gt;&gt;.
&lt;&lt;Bbl Gn 3:21 abbr &gt;&gt; Salvation is all God's work.  Blood is shed.  An innocent substitute incurs the just penalty (2:17).  ~DeHaan presents this as fulfilling three rules for sacrifice.
3:23    Interesting that the mandate of 2:15 is unchanged.  But now the soil, Adam's source and sphere of activity and his very nature, typifies his fallen estate.  4:12 is an expansion of the curse in relation to soil.
!!!  The Eviction
3:24    High-voltage cherubim.</pre>
</div>
<div title="Genesis-04-01-note" modifier="SDM" created="201211280224" modified="201212050359" tags="Comment" book_key="401004a">
<pre>* This time of history is characterized by [[acts of Judgment|Judgment]].
!!! The Early Murders
* 4:4 -- Why did God favor Abel?  Possibilities:
## He brought a sacrificed animal, which presaged God's perfect sacrifice.  This reminds me of the [[Clothing]] God provided at the Eviction.
## He brought a better quality offering.  This is implied by the extra positive descriptors, compared with Cain's.
## &lt;&lt;Bbl Heb 11:4 &gt;&gt; says Abel had [[Faith]].  One can say that by faith he fulfilled one of the criteria above; but one might propose that while Genesis doesn't compare the brothers in terms of faith, in fact God was examining their hearts and only one had faith.  The most difficult thing about this idea is that it would remain for the writer of Hebrews to uncover this, a special revelation.  I think it's easier to assume Hebrews has one of the above criteria in mind, and adds to it the insight that faith was in action.
## __Cain's offering is from the land -- and the [[Land]] is cursed.__
* 4:10-12 //Listen!  Your brother's blood cries out to me from the ground.// The third curse in history is spoken, and the first one for a person.  &lt;&lt;Bbl Heb 12:24 &gt;&gt; compares what Christ's blood says to what Abel's says.  Abel's spoke for vengeance; Christ's for mercy.
&lt;&lt;Bbl Gn 4:1 abbr &gt;&gt; Delitzsch says Eve did not utter the name Yahweh.
4:1 Is it possible Eve had a faith response and Adam did not?
4:2 Cain and Abel find mention in &lt;&lt;Bbl Heb 11:4 &gt;&gt;, &lt;&lt;Bbl Heb 12:24 &gt;&gt;; &lt;&lt;Bbl 1Jn 3:12 &gt;&gt;.
    The antithesis of the two brothers seems to represent the two basic strains in the human race  --  those who acknowledge God on His terms and those who do not.  This is the seed of the woman and of the serpent (3:15).  There are two religions.
    His brother    --  the first instance of the phrase which marks this passage.
    Keil says that the two occupations were both passed on from Adam.  Sheep do not thrive without human care.
4:3 Cain brings the fruit of his own labors.  He is working within the curse (3:19); no atoning substitute for his own life, but only his own effort.  Abel brings an atoning substitute.  The difference between these acts is already evident from 3:7, 21.
    However, Keil says it was rather the heart attitude expressed in Abel's presentation of the first fruits.  The quality of his offering is emphasized.
    F.F. Bruce agrees that &quot;sacrifice is acceptable to God not for its material content, but in so far as it is the outward expression of a devoted and obedient heart.&quot;  And blood was not the salient feature, since &quot;it is nowhere suggested  --  that it was a sin-offering&quot; but rather a first-fruits.   This engaging discussion is found in Hebrews, 11:4.
4:4-5   Respect for the man's sacrifice equals respect for the man.
4:4 There was one precedent for this act, and Abel may have been thinking about it; the killing of the animal to clothe Adam and Eve, 3:21.
    Of their fat portions   --  Delitzsch says, the fattest of the sheep.  Others say, the fattest joints, the best eating.
4:7 an acceptance, a lifting.  This is in antithesis to the fallen countenance of vs. 6.  &quot;You will smile.&quot;  Or, it could refer to a lifting up of the sacrifice and thus of the person.
    Your countenance be lifted up   --  grace.
    Sin is crouching at the door   --  the serpent; or the lion of &lt;&lt;Bbl 1Pt 5:8 &gt;&gt;.  If part A of this verse represents grace, part B is the works of the law and fleshly struggle.
4:8 There is something here of Israel's rejection of the Messiah.  Envy and blood are found in &lt;&lt;Bbl Mt 27:18 &gt;&gt;.  The Pharisees fit Cain's description of self-wrought justification.  The sentence of wandering, too, is found (&lt;&lt;Bbl Lv 26:32 &gt;&gt;-33 ); Also the grace offered to Cain might be likened to &lt;&lt;Bbl Rom 1:25 &gt;&gt;-26 .
    Of the devil, Jesus says (&lt;&lt;Bbl Jn 8:4 &gt;&gt;) that &quot;he was a murderer from the beginning.&quot;
4:9 Compare the question of the lawyer, &lt;&lt;Bbl Lk 10:29 &gt;&gt;.
&lt;&lt;Bbl Gn 4:10 abbr &gt;&gt; Abel is a symbol of martyrs, &lt;&lt;Bbl Mt 23:35 &gt;&gt;.  Also &lt;&lt;Bbl Ps 116:15 &gt;&gt;.
&lt;&lt;Bbl Gn 4:12 abbr &gt;&gt; Amplifies or compounds 3:17-19.
4:14    Cain's fear of death may be based on &lt;&lt;Bbl Gn 9:6 &gt;&gt;.
&lt;&lt;Bbl Gn 4:15 abbr &gt;&gt;   --  the mark was perhaps not on  Cain, but for  him.  This could have been a reassuring sign; &lt;&lt;Bbl Jud 6:36 &gt;&gt;-40 , &lt;&lt;Bbl 2King 2:6 &gt;&gt;-12 .  Floyd Jones says he was made a giant  --  hence the Nephilim.
4:16    Nod   --  wandering
----
5:29    Lamech was probably looking back to the promise of 3:15.  Ironically, Noah did bring a form of rest.
6:2 W.A. Criswell says these are the children of Seth and Cain, respectively.
!!! The Flood
6:9 &lt;&lt;Bbl 2Pt 2:15 &gt;&gt; calls him a preacher of righteousness.
6:11-13 God has already repented of creating man (vs. 7).  Here He contemplates the corruption of all flesh   (7:21).
6:14    &quot;Ark&quot; comes from the Vulgate arca , chest or coffer, something closed up; or the verb acere , to close or shut up (according to one note of mine, probably related to the Spanish cerrar).
6:15    About 450' by 75' by 45'.
6:16    Note the total lack of safety features.
6:17    The word used here for flood  is archaic and has one express use (&lt;&lt;Bbl Ps 29:10 &gt;&gt;; &lt;&lt;Bbl Is 54:9 &gt;&gt;).
6:19-20 As in the flood account, the water creatures are not mentioned.
6:22    An obedience based in faith, as &lt;&lt;Bbl Heb 11:7 &gt;&gt; states.  &quot;As it was in the days of Noah,&quot; &lt;&lt;Bbl Mt 24:37 &gt;&gt;-39 ; &lt;&lt;Bbl Lk 17:26 &gt;&gt;-27 .

&lt;&lt;Bbl Gn 7:11 abbr &gt;&gt; &lt;&lt;Bbl Ps 33:7 &gt;&gt; speaks of the storehouses of the deep .
7:12    Apparently, by &lt;&lt;Bbl Gn 2:5 &gt;&gt;-6 , this is the first advent of rain.
7:13    &lt;&lt;Bbl Rev 3:7 &gt;&gt;.  What God closes will remain closed.
    There is only one Ark, and it has only one door.
7:15    The breath of life   --  this phrase repeated in vs. 22.  Breath or spirit can be applied to the Spirit of Christ which brings eternal life; thus this is a picture of the Church.
7:17-20 The creation is subjected to futility, in Paul's words, and this is the greatest instance ever.


----
8:19    A symbol of the perseverance of the saints; &lt;&lt;Bbl Jn 10:27 &gt;&gt;-29 .
&lt;&lt;Bbl Gn 8:20 abbr &gt;&gt; &quot;Why this waste?&quot;  Not an easy sacrifice.
8:21    The distress of God concerning sin is unchanged.
8:22    Seasons are foreshadowed in 1:14.
    ''Is the curse on the ground removed?''
----
9:12-17 cf &lt;&lt;Bbl Is 54:9 &gt;&gt;-10 , which links this to the Christ.
!!! The Great Confusion
10  see analysis in The Moody Atlas of Bible Lands, pp. 76-79.  Note also the seventy messengers of &lt;&lt;Bbl Lk 10:1 &gt;&gt;; here we see seventy nations.
----
chap 11 You can count nineteen consecutive generations from Adam to Abram in which it is the firstborn who carries the line.  No wonder the order of blessing figures so heavily in later events.
11:1-9  This event finds its NT sequel in the day of Pentecost.
11:3-4  These two verses are integral to each other.  Advanced building methods enables them to build higher through structural, architectural unity; this inspires and shapes the call to social unity.
        Both verses begin with the proposal Come, let us. . .   God's response is introduced with the same words.
----
11:28   Apparently Lot may have grown up fatherless.
11:31   It was Abraham's father who initiated the southward movement.  Perhaps the place Haran is named after the son; perhaps he died and was buried there.  The migration was begun prior to God's command; thus God makes our steps to continue our fathers.  But what deterred Terah from continuing?  Was it his death?</pre>
</div>
<div title="Genesis-12-01-note" modifier="SDM" created="201010310338" modified="201211292158" tags="Comment" book_key="401012a">
<pre>! The Kingdom Strikes Back!
12:1-3  [[Abraham]]'s entrance is the hinge of the book of Genesis and, aside from a few hints, the initial revelation of the Gospel.  To examine the NT treatment of these words is to find the gospel more than merely foreshadowed.
    John Stott: &lt;&lt;Bbl Rev 7:9 &gt;&gt;-17  fulfills this blessing in its components of posterity, land, and the blessing of a relationship with the Savior God.
    The theme of a departure from one's heritage resulting in a blessing is opened.  See &lt;&lt;Bbl Heb 11:8 &gt;&gt;.
    Jesus, in assuming His humanity, obeyed this command and consequently fits the description of vs. 3.
    This covenant is reviewed in 13:14-17, 15:5-21, 17:1-19, 22:16-18.  It is the Promise to the Galatians in &lt;&lt;Bbl Gal 3:6 &gt;&gt;-9 .
&lt;&lt;Bbl Gn 12:3 abbr &gt;&gt; The last clause is &quot;the Great Commission of the OT.&quot;  Don Richardson calls it the &quot;part B&quot; of a covenant.  Steven Hawthorne protests that this puts a stamp of legalistic mandate on our works.
12:10-20    This event recurs in 20:1-18, 26:1-11.
12:16   This and 20:14 point to Israel's plunder of the Egyptians.

13:1-3  //Up from Egypt// contrasts with the down to Egypt  of vs. 10.  The next verses lay great stress on his return to an earlier place.  He must resume his walk with God from the place where he had departed from it.  &lt;&lt;Bbl Jer 31:21 &gt;&gt;.
&lt;&lt;Bbl Gn 13:10 abbr &gt;&gt;-12     Zoar is the small town to which he will long to flee in his obstinacy, 19:17-29.
    Abraham is the sojourner, Lot the city-dweller; 14:12, chap. 19.
    Amazingly, Lot returns to Sodom, 14:12.
13:17   This is a type of the Holy Spirit as a down-payment.  Compare &lt;&lt;Bbl Heb 11:9 &gt;&gt;-16 .

&lt;&lt;Bbl Gn 14:12 abbr &gt;&gt;-13     Lot living in the town, Abraham lodging by the oaks.
14:19   In v. 22 possessor   refers to Yahweh.  Does it refer to him in this verse, or to Abram?
14:23   Abraham is willing to receive from the king of Salem, but not of Sodom.  &lt;&lt;Bbl 3John.7 &gt;&gt;      --  believed.    This finds reference in &lt;&lt;Bbl Gal 3:6 &gt;&gt;; &lt;&lt;Bbl Rom 4:4 &gt;&gt;; &lt;&lt;Bbl Jms 2:23 &gt;&gt;.
&lt;&lt;Bbl Gn 15:11 abbr &gt;&gt;    see &lt;&lt;Bbl Lv 6:8 &gt;&gt;-9 .  David Ravenhill likens the birds to demonic forces, and points out that a commitment made easily during a meeting often will not last through the night season.
15:16   The Canaanites had to be killed because their abominable sexual practices had drowned them, and would have drowned the world, in diseases.
15:10, 17   See &lt;&lt;Bbl Jer 34:19 &gt;&gt;.  J. Darnell likens these to the first two members of the Godhead.  The darkness he likens to the darkness of Christ's death, and quotes, &quot;The night cometh when no man can work.&quot;  The whole scene is like a diorama of the &lt;&lt;Bbl Ex 16:5 &gt;&gt;  The KJV says //my wrong//, but other versions say //The wrong done me//.</pre>
</div>
<div title="Genesis-16-01-note" modifier="SDM" created="201211292156" modified="201211292157" tags="Comment" book_key="401016a">
<pre>&lt;&lt;Bbl Gn 16:1 abbr &gt;&gt; See &lt;&lt;Bbl Gn 12:16 abbr &gt;&gt; for how Hagar very likely came to be part of the household.  Dysfunction does tend to go on and on!
16:13-14    Not only that He sees her, but she says that she has seen him.  The communion is mutual.  &quot;The Well of the Living One who Sees Me.&quot;

&lt;&lt;Bbl Gn 17:1 abbr &gt;&gt;-25 -- [[Chiasmus]] //([[source|http://www.inthebeginning.org/chiasmus/introduction/chiasmus_intro.htm]])//
{{{
A    Abram's age (1a)
  B     The LORD appears to Abram (1b)
    C    God's first speech (1b-2)
      D   Abram falls on his face (3)
        E  God's second speech
               (Abram's name changed, kings; 4-8)
          X  God's Third Speech
               (the covenant of circumcision; 9-14)
        E' God's fourth speech
               (Sari's name changed, kings; 15-16)
      D'  Abraham falls on his face (17-18)
    C'   God's fifth speech (19-21)
  B'    God &quot;goes up&quot; from Abraham (22)
A'    Abraham's age (24-25)
}}}

17:5    From &quot;Exalted Father&quot; to &quot;Father of a Multitude.&quot;
17:17   The verb is related to &quot;Isaac&quot;  --  to play, jest, make sport (BNB 850); see 18:12-15, 26:8.
17:25-26    Why does Ishmael recieve the sign of the covenant?

18:14   See Mary's remark, &lt;&lt;Bbl Lk 1:37 &gt;&gt;.
&lt;&lt;Bbl Gn 18:19 abbr &gt;&gt;    You may insert your own name.  Jesus gives the same mark of intimacy in &lt;&lt;Bbl Jn 15:15 &gt;&gt;.
&lt;&lt;Bbl Gn 18:22 abbr &gt;&gt;-33     Perhaps the portrait here painted of the Lord is anthropomorphic; after all, Abraham convinces Him of nothing.  God knows that only Lot and his family will qualify.  And God lets Himself be &quot;haggled down,&quot; in stages, just as the Lord Christ was haggled down by the Canaanite woman with the possessed daughter.
    His answer to Abraham's plea is creative, in that he does not spare the city but does deliver the righteous.  And that describes God's Judgment in a nutshell.
18:25   Boldness like this is hard to comprehend, as is the patience on God's part.

19:1    A city councilman.  I am told the name Lot means &quot;righteous&quot; ??
19:11   Only their weariness brought an end to sin.  As North says, the limitations brought about under the curse are a boundary for the wicked and thus a blessing for the righteous.
19:14   Jesting was Lot's habit; his sons-in-law were used to it.  Like the boy crying &quot;wolf,&quot; his warning carried no weight.
19:15-17    see &lt;&lt;Bbl Num 16:26 &gt;&gt;.
&lt;&lt;Bbl Gn 19:20 abbr &gt;&gt;    In Genesis, men not secure in the Lord tend to seek cities.  4:17, 10:11, 11:1-9,  19:20.
19:21   Abraham's effectual fervent prayer yet at work.  &lt;&lt;Bbl Gn 20:7 &gt;&gt;.
&lt;&lt;Bbl Gn 19:30 abbr &gt;&gt;    Lot repents of the request of v. 20.
19:36-38    Few people in the Biblical record are dishonored as Lot &lt;&lt;Bbl is 20:3 &gt;&gt;    From death to life; see vss. 17-18.
20:11   How many opportunities have been lost through an assumption that God had no people in some place or time!  Elijah at the cave, Jonah in the boat.  But there is no excuse for lying, and God can strike fear into the heathens' heart.
20:12   Why this statement?  It does not seem that Abraham would have further reason to lie, so is its face meaning the truth?

</pre>
</div>
<div title="Genesis-22-01-note" modifier="SDM" created="201211280223" modified="201211281713" tags="Comment" book_key="4010022a">
<pre>Chiastic Structure of &lt;&lt;Bbl Gn 22:1 &gt;&gt;-11:
{{{
 [1] Some time later God tested Abraham.
        He said to him, &quot;Abraham!&quot; &quot;Here I am,&quot; he replied.
 [2]    Then God said, &quot;Take your son... Sacrifice him there ...
 [3]        Early the next morning Abraham got up ...
 [6]        Abraham took the wood ...
                As the two of them went on together,
 [8]              Isaac spoke up ... &quot;God himself will provide...&quot;
                And the two of them went on together.
 [9]        Abraham built the altar there ...
            Abraham stretched out his hand ...
[11]    &quot;Abraham! Abraham!&quot; &quot;Here I am,&quot; he replied.
        &quot;Do not lay a hand on the boy...&quot;
[12] Now I know that you fear God...&quot;
}}}
* Binding = //Akedah//.  Note the verb for //saddling// the donkey corresponds with //binding// Joseph.  It's not without interest from a human point of view that //Akedah// won't pass a spell check, and what is offered as correction is &quot;naked.&quot;

22:14   This is the only use of this name of the Lord.  We use it for petty and even carnal needs, forgetting that it refers to the very provision of Christ, and that He (&lt;&lt;Bbl Mt 6:33 &gt;&gt;) is the fulfillment of our needs.
22:22   See 26:29.
22:33   &quot;The planting of this long-lived tree, with its hard wood, and its long, narrow, thickly clustered, evergreen leaves, was to be a type of the ever-enduring grace of the faithful covenant God.&quot;           --  Keil and Delitzsch

22:2    Don Richardson, among others, believes that this may be the site of Golgotha.  See &lt;&lt;Bbl 2Chr 3:1 &gt;&gt;.
    George Murray places the Temple on this same mountain and notes that this is not the only costly sacrifice offered, nor even only death of Christ; it was here that David refused to accept the land as a gift, &lt;&lt;Bbl 2Sam 24:24 &gt;&gt;.
&lt;&lt;Bbl Gn 22:5 abbr &gt;&gt; This is the first occurrence of the word &quot;worship&quot; in scripture.  It proves that true worship is related to sacrifice, to personal cost, and to obedience.
22:6-9  Richardson points out a striking image of Christ here:  first the wood rests upon the man, and then the man is placed upon the wood.
22:14   This is the only use of the name Yahweh-Jireh.  We apply it to petty needs, but it refers to the full provision of Christ Himself!
22:16   See &lt;&lt;Bbl Heb 7:13 &gt;&gt;.
    * If redemption is a watch, this is the spring. (pocket watch as visual aid)
    * vs 18 -- offspring or [[Seed]]

&lt;&lt;Bbl Gn 23:17 abbr &gt;&gt;-20     This is Abraham's only ownership of land in the land God promised He would own, and this is part of the cause for emphasis.  How often is our only purchase on eternal inheritance in this world marked by grief?

&lt;&lt;Bbl Gn 24:7 abbr &gt;&gt; -- God took an oath, which authorizes Abraham to adjure his servant.  [[Seed]]
24:17-30    Run  is used four times, along with hastened  (compare 29:12-13).
24:60   This echoes 22:17; in Christ it is all fulfilled.  But what a marvelously long-term blessing.</pre>
</div>
<div title="Genesis-25-01-note" modifier="SDM" created="201211281703" modified="201211281710" tags="Comment" book_key="4010025a">
<pre>25:22   A very pithy illustration of trial and supplication.
25:23   Finds one fulfillment in &lt;&lt;Bbl 2Sam 8:14 &gt;&gt;.  Also it finds reference in such passages as &lt;&lt;Bbl Jer 49:7 &gt;&gt;-8 ; Obediah 18; &lt;&lt;Bbl Gn 1:2 &gt;&gt;-5 ; &lt;&lt;Bbl Rom 9:10 &gt;&gt;-13 .
&lt;&lt;Bbl Gn 25:25 abbr &gt;&gt;    Esau  means hairy; red  is related to the term Edom; see also vs. 30.
25:27   A fascinating parallel construction; Esau is skilful, Jacob peaceful.  Esau trusted in his skill, and sold his birthright.
25:28   Esau and Jacob had much in common in their lust for food; what the other two had in common is left implied.
25:30   The verb for swallow  is important; BDB 542.
    Just as idolators become what they worship, Esau came to be known by the object of his downfall; and his name served as a reminder to God's people.
25:31   There is no reason to suppose Esau was ignorant of the significance of the birthright.  Isaac had rehearsed it many times.
    What is the birthright?  We can look to &lt;&lt;Bbl Gn 49:3 &gt;&gt;; &lt;&lt;Bbl Dt 21:17 &gt;&gt;; &lt;&lt;Bbl Gn 27:29 &gt;&gt;.  Also, in terms of land inheritance, Jacob/Israel indeed possessed more ground than Esau/Edom.
25:32   A rationalization both facile and false.
25:33   This finds its most cogent commentary in &lt;&lt;Bbl Heb 12:16 &gt;&gt;-17

&lt;&lt;Bbl Gn 28:20 abbr &gt;&gt;    cf &lt;&lt;Bbl 1Tim 6:8 &gt;&gt;

&lt;&lt;Bbl Gn 29:12 abbr &gt;&gt;-13     More running here (24:17-30).
29:25   Takes us back to Jacob's deception; here he is repaid, and gets seven years to think about it.

31:1-3  Learning God's will through circumstances and God's direct counsel.
31:32   This vow is like one made by Jacob's son in 44:9.

First Jacob encounters God's //army// (32;1), then God's //face// (32:30).

{{{
A   The angels of God encounter Jacob -- place name
    is changed to Mahanaim (32:1-2)
     B   Jacob sends envoy to Esau (32:3-8)
          X  Jacob's prayer to the LORD (32:9-12)
             Note chiasmus within this passage as well,
             centering on the River Jordan as change/contrast
     B'  Jacob sends envoy to Esau (32:13-21)
A'  A man opposes Jacob, blesses and changes his name to
    Israel, after which Jacob renames the place Peniel (32:22-31)
}}}
&lt;&lt;Bbl Gn 32:2 abbr &gt;&gt; Jacob's really got the hang of recognizing God's presence at this point!
&lt;&lt;Bbl Gn 33:22 abbr &gt;&gt; compare &lt;&lt;Bbl Lk 9:30 &gt;&gt;
&lt;&lt;Bbl Gn 34:2 abbr &gt;&gt;-3 -- interesting converse with Amnon and Tamar, &lt;&lt;Bbl 2Sam 13:13 &gt;&gt;-14

35:22   The sequel is given in 49:4</pre>
</div>
<div title="Genesis-36-01-note" modifier="SDM" created="201010310339" modified="201211170236" tags="Comment" book_key="401001a">
<pre>&lt;&lt;Bbl Gn 37:1 abbr &gt;&gt;   The contrast in verbs seems to be the point.
37:3    Why, given the motivation, was not Benjamin the most loved son?  Perhaps because it was his birth that deprived Jacob of his beloved wife.  Is it possible that Benjamin was rejected by his father?  Is it possible that Joseph was saddened by this treatment, and that his final grand treatment of Benjamin was partly an act of restitution?
37:11   Like Mary.
37:13   But vs. 2 explains a precedent for this which foreshadows the malice just ahead.
37:14   Piquantly, it is in Shechem that Joseph's bones come to rest some centuries later.
37:17-18    The brothers' move to Dothan will already become the basis for a bad report to Jacob.

39:3    We needn't think of Potiphar as some spiritual giant.
39:20   That he was not killed is probably a measure of the favor he had with Potiphar.

40:6    [[Joseph]] is sensitive.  And he's such a good trustee that he expects his charges to look happy!
40:8    As palace officials they had free access to the royal dream interpretation service.  Note Joseph's optimism and faith in God.
40:15   Note he could as easily have stated his earlier status in terms more important to the court officials:   -- I was Potiphar's chief steward. --
40:20   Lifted up the heads  --   clearly there must be a word play here with the next two verses ??

41:8    How was their inadequacy revealed?  Pray that the counsel of the ungodly can be revealed by God as futile.  See vs. 38.
41:30b  This detail is from vs. 21.
41:50-52    The order of his sons' names seems significant.</pre>
</div>
<div title="Genesis-42-01-note" modifier="SDM" created="201210171913" modified="201212070011" tags="Comment" book_key="401042a">
<pre>&lt;&lt;Bbl Gn 42:1 abbr &gt;&gt;    This is still in the first two of the seven years, 45:6.
42:2    There is a doting quality to Jacob's statement.  His affection becomes a point of testing for everyone  --  Joseph, the brothers, even himself.  In 28:20 he entrusted his own safe return to the Lord; now he cannot entrust his child in the same way.
42:8    Being clean-shaven as the Egyptians, 41:14, he was hard to recognize.  (By the way, Alexander the Great did NOT invent shaving.)
42:9a   Here the act of bowing, as Joseph had dreamed.
42:18-19    The desperation of the famine causes Joseph to soften his demands.  After all, he wants his family alive.
42:34b  They play up the advantages gained.
42:36   The accusation as it relates to Joseph hits a raw spot.
42:7-13 To this exchange more is recorded in 43:7.

43:18   They contemplate the idea of malice resulting in bondage.
43:32   Here Joseph is revealed as a divided man, a lonely man.

44:9    Jacob made a very similar vow to Laban, 31:32.
44:12   The order of birth is again rehearsed, by Joseph's pre-arrangement.
44:33   This is the absolute climax of Joseph's story.  It flashes back to the original betrayal.  Judah and the others are showing a self-sacrificial love, having been humbled by the years of their father's grief, his special fondness for Benjamin, the weight of conscience, the cruelties of famine, and the intensity of their dealings with this leader second only to Pharoah.  They are also resigned to accepting full blame for Benjamin's demise  --  a blame they had evaded with Joseph.  Now Joseph can no longer conceal his love for his father, Benjamin and all his brothers; he gives up.

45:7    A great deliverance  in that the dire conditions in Egypt (47:20-26) would only have been worse in Canaan.   Vs 11 enlarges this.
45:12   Compare the walk to Emmaus!
45:23   The gender of the donkeys carries direct symbolism.

46:30   Compare &lt;&lt;Bbl Lk 2:29 &gt;&gt;-30 .

&lt;&lt;Bbl Gn 47:13 abbr &gt;&gt;-26    This is not exactly the welfare state.

48:14   Takes us back to Jacob's early guile.
&lt;&lt;Bbl Gn 48:15 abbr &gt;&gt;-16 -- Evocation of God as [[One-In-Three]]:
# ''Father'' -- The God before whom my fathers ... walked,
# ''Spirit'' -- the God who has been my shepherd all my life long to this day,
# ''Son'' -- the angel who has redeemed me from all evil...
48:22   Thus Joseph receives the inheritance of the first-born, and foreshadows the portion of the Levites (2/92  --  I'm not sure what I meant by the last clause).  And Rueben can hardly begrudge him this.
    Note that the preceding verse indicates Jacob is refering to land.  His spoken blessing is his last mighty act of faith.

49:4    Refers back to Rueben's  disgrace in 35:22.
49:7    The motive is not related, but it's interesting that Levi is to be scattered   --  as indeed the priesthood was throughout Israel.

50:11   Abel Mizraim    --  as in modern Arabic.
50:14   Joseph outlived Israel by 54 years.
50:15-20    Of course he is grieved  --  he had forgiven them so long ago!
    Many lives   --    ultimately this includes us Gentiles in Christ!
50:24-26    see &lt;&lt;Bbl Heb 11:22 &gt;&gt; and [[Joseph]].  </pre>
</div>
<div title="GettingStarted" creator="psd" modifier="SDM" created="200903231358" modified="201211121505" tags="howto excludeLists" book_key="">
<pre>The following [[setup instructions|GettingStarted]] outline the basic steps for configuring your own copy of this document:
# ''Get a copy'' by transferring a copy of this ~QuickStart&amp;trade; document onto your own computer.  Just use &quot;Save As&quot; on your browser menu.  (You can also go to the original&amp;trade; version [[here|http://www.tiddlytools.com/download.php?file=quickstart/basics.html]].)
# ''Open local copy.''  After the file is saved to your filesystem, __close__ ''//this//'' browser/tab window and ''__open__ the //local// file you just saved''.
# Now start ''exploring!''
# Whenever you're ready, customize everything to suit yourself:
## Change content in SiteTitle, SiteSubtitle, and MainMenu
## Edit [[DefaultTiddlers]] to select which tiddlers will be displayed at startup.
# Remember to ''save your work'' as you go.</pre>
</div>
<div title="GettingStarted shadows" creator="colmbritton" modifier="colmbritton" created="201102161540" modified="201102161540" tags="shadow">
<pre>The GettingStarted shadow tiddler contains information about how to start using your TiddlyWiki.
You can change it to include anything you desire.

For example a lot of tiddlywiki authors use it to explain what their wiki is about. This is a particularly useful approach because by default the GettingStarted tiddler is in the [[DefaultTiddlers|DefaultTiddlers shadows]] tiddler, thus opens automatically upon loading of the page.

By default it is also part of the [[MainMenu|MainMenu shadows]] tiddler so is included on the left side of the menu bar above.</pre>
</div>
<div title="Gifts" modifier="SDM" created="201004120330" modified="201211160334" book_key="">
<pre>[[SpiritOfChrist]]
[[Virtue]]
  &lt;&lt;Bbl Pr 18:16 &gt;&gt;, &lt;&lt;Bbl Pr 22:29 &gt;&gt;; &lt;&lt;Bbl Eph 4:11 &gt;&gt;-13 ; &lt;&lt;Bbl 1Pt 4:10 &gt;&gt;-11 .
A helpful division of spiritual gifts from Sam Cooksey:
| DOING  |teaching, ministering, healing.  |
| SAYING  |prophecy, tongues, interpretation.  |
| KNOWING  |knowledge, wisdom, discernment. |

* see &lt;&lt;Bbl Ex 31:6 &gt;&gt; -- spiritual gifts may correspond the natural
Here find a Useful Analysis (perhaps from Ion -- ):
| |UNITY|DIVERSITY|MATURITY|
|1Cor 12 | 1-13  |  14-31  | 1-13 |
|Rom 12 | 1-5 | 6-8  | 9-21 |
|Eph 4    |   1-6 | 7-12  |  13-16 |</pre>
</div>
<div title="Gleaning" modifier="SDM" created="201012110212">
<pre>&lt;&lt;Bbl Lv 19:9 &gt;&gt;, &lt;&lt;Bbl Lv 23:22 &gt;&gt; command gleaning privileges for the poor and foreigners.  Ruth exemplifies the finest use of this privilege and the Canaanite woman who entreats Jesus, &lt;&lt;Bbl Mt 15:27 &gt;&gt; could almost be alluding to it.
[[Harvest]]</pre>
</div>
<div title="God" modifier="SDM" created="201004120330" modified="201211190421" book_key="">
<pre>* existence of, evidence:   &lt;&lt;Bbl Ps 94:8 &gt;&gt;-11 ,&lt;&lt;Bbl Ps 145:15 &gt;&gt;; &lt;&lt;Bbl Jer 14:22 &gt;&gt;; &lt;&lt;Bbl Rom 1:18 &gt;&gt;ff.
!!! Decisions &amp; Sympathies of God
* &lt;&lt;Bbl Ex 32:14 &gt;&gt;; &lt;&lt;Bbl Josh 10:12 &gt;&gt;-14 ;  &lt;&lt;Bbl Jud 10:16 &gt;&gt;; &lt;&lt;Bbl 1Sam 10:9 &gt;&gt;; &lt;&lt;Bbl 2Sam 24:16 &gt;&gt;Kng 20:1-6; &lt;&lt;Bbl 1Chr 21:15 &gt;&gt;; &lt;&lt;Bbl Jer 18:7 &gt;&gt;-10 , &lt;&lt;Bbl Jer 26:3 &gt;&gt;, &lt;&lt;Bbl Jer 31:20 &gt;&gt;, &lt;&lt;Bbl Jer 35:17 &gt;&gt;, &lt;&lt;Bbl Jer 36:3 &gt;&gt;, &lt;&lt;Bbl Jer 44:21 &gt;&gt;-22 ; &lt;&lt;Bbl Lam 3:33 &gt;&gt;; &lt;&lt;Bbl Ez 6:9 &gt;&gt;, &lt;&lt;Bbl Ez 12:3 &gt;&gt;, &lt;&lt;Bbl Ez 24:14 &gt;&gt;; &lt;&lt;Bbl Dan 4:27 &gt;&gt;; &lt;&lt;Bbl Amo 7:1 &gt;&gt;-9 ; &lt;&lt;Bbl 2Pt 3:12 &gt;&gt;
!!! God's Purposes
* see list in SoF above
* [[Seeking]]
* [[God-HisWill]]
* [[God-HisTouch]]
* of Christ's Coming:   &lt;&lt;Bbl Mt 10:34 &gt;&gt;-36 , &lt;&lt;Bbl Mt 18:11 &gt;&gt;, &lt;&lt;Bbl Mt 20:28 &gt;&gt;; &lt;&lt;Bbl Mk 2:17 &gt;&gt;; &lt;&lt;Bbl Lk 4:18 &gt;&gt;-19 , &lt;&lt;Bbl Lk 12:49 &gt;&gt;, &lt;&lt;Bbl Lk 19:10 &gt;&gt;; &lt;&lt;Bbl Jn 3:16 &gt;&gt;-17 , &lt;&lt;Bbl Jn 9:39 &gt;&gt;, &lt;&lt;Bbl Jn 10:10 &gt;&gt;, &lt;&lt;Bbl Jn 12:27 &gt;&gt;, &lt;&lt;Bbl Jn 18:37 &gt;&gt;, &lt;&lt;Bbl Rom 14:9 &gt;&gt;; &lt;&lt;Bbl Gal 2:21 &gt;&gt;; &lt;&lt;Bbl Gal 4:3 &gt;&gt;-5 ; &lt;&lt;Bbl Heb 2:14 &gt;&gt;, &lt;&lt;Bbl Heb 9:26 &gt;&gt;; &lt;&lt;Bbl 1Tim 1:15 &gt;&gt;;  &lt;&lt;Bbl 1Pt 2:21 &gt;&gt; (poss.); &lt;&lt;Bbl 1Jn 3:5 &gt;&gt;.
* of His Second Coming:
* of us, His redeemed, the -:  &lt;&lt;Bbl 2Cor 5:15 &gt;&gt;
* for His own sake, &lt;&lt;Bbl 2Sam 7:21 &gt;&gt;; &lt;&lt;Bbl Ps 23:3 &gt;&gt;; &lt;&lt;Bbl Is 43:25 &gt;&gt;
* &lt;&lt;Bbl Jn 17:19 &gt;&gt; //for their sake I sanctify Myself//
* Mission of Christ -- &lt;&lt;Bbl Jn 1:29 &gt;&gt;, &lt;&lt;Bbl 1Jn 3:5 &gt;&gt;, &lt;&lt;Bbl 1Jn 4:9 &gt;&gt;, &lt;&lt;Bbl Rom 14:9 &gt;&gt;, &lt;&lt;Bbl Heb 2:14 &gt;&gt;-15 </pre>
</div>
<div title="God-Anthropomorph" modifier="SDM" created="201203080009" modified="201207301642" book_key="">
<pre>* //God loves us insanely!// -- Steve Johnson
* Shannon Reeves playing a love song from Michael Buble -- //It's you, it's you.//</pre>
</div>
<div title="God-Encounter" modifier="SDM" created="201011011615" modified="201012132255">
<pre>&lt;&lt;Bbl Gn 16:13 &gt;&gt;-14 ;  &lt;&lt;Bbl Ex 20:18 &gt;&gt;-19 ,&lt;&lt;Bbl Ex 24:9 &gt;&gt;-11 ; &lt;&lt;Bbl Num 17:12 &gt;&gt;-13 , &lt;&lt;Bbl Num 24:15 &gt;&gt;-16 ; &lt;&lt;Bbl Jud 6:22 &gt;&gt;-23 , &lt;&lt;Bbl Jud 13:22 &gt;&gt;; &lt;&lt;Bbl 1Sam 6:19 &gt;&gt;-21 ; &lt;&lt;Bbl Job 42:5 &gt;&gt;-6 ; &lt;&lt;Bbl Is 6:1 &gt;&gt;-5 , &lt;&lt;Bbl Is 33:14 &gt;&gt;, &lt;&lt;Bbl Ez 2:1 &gt;&gt;-2 , &lt;&lt;Bbl Ez 3:23 &gt;&gt;-24 , &lt;&lt;Bbl Ez 8:1 &gt;&gt;-4 , &lt;&lt;Bbl Ez 43:3 &gt;&gt;; &lt;&lt;Bbl Dan 10:7 &gt;&gt;-11 ; &lt;&lt;Bbl Mt 17:5 &gt;&gt;-7 ; &lt;&lt;Bbl Lk 5:8 &gt;&gt;; &lt;&lt;Bbl Jn 18:6 &gt;&gt;; &lt;&lt;Bbl Act 9:3 &gt;&gt;-4 ; &lt;&lt;Bbl Mk 9:26 &gt;&gt;-27 ;
Burning bush
* [[God-HisTouch]]
!!!! Christophany
the &quot;Angel of the LORD.&quot;  Appearing to Hagar, &lt;&lt;Bbl Gn 16:7 &gt;&gt;-14 ; to Abraham, 22:11,12,15-18, to Abraham's servant, 24:7,40; to Jacob, 31:11-13; as a cloud of smoke and pillar of fire, 14:19; to Joshua, &lt;&lt;Bbl Jos 5:13 &gt;&gt;-15 ; to Gideon, &lt;&lt;Bbl Jud 6:11 &gt;&gt;-24 ; to Samson's mother, &lt;&lt;Bbl Jud 13:3 &gt;&gt;-21
&lt;&lt;Bbl 2Sam 24:16 abbr &gt;&gt;, &lt;&lt;Bbl 1Ch 21:15 &gt;&gt;-20
* Jacob at Peniel
* the Emmaus road</pre>
</div>
<div title="God-HisTouch" modifier="SDM" created="201011281433" modified="201012132257">
<pre>* Cleansing    --  &lt;&lt;Bbl Mt 8:1 &gt;&gt;-3
* Reassuring        -- &lt;&lt;Bbl Mt 17:5 &gt;&gt;-7
* for Children   -- &lt;&lt;Bbl Mk 10:13 &gt;&gt;-15
* [[Healing]]   --  &lt;&lt;Bbl Lk 22:50 &gt;&gt;-51
*           ...  &lt;&lt;Bbl Jn 12:49 &gt;&gt;-50
* [[God-Encounter]]</pre>
</div>
<div title="God-HisWill" modifier="SDM" created="201010221531" modified="201012132250">
<pre>Many of the references in the &quot;mutable&quot; section below come from Jeremiah.  [[God]] is revealing the direst consequences of sin at the most crucial moment of decision.  Jeremiah is not a prophet of doom but of consequences.
I can claim to know the will of God in some matters, but I can never claim to know His will as well as He knows it!  I need to write Rick Bell and extract that story out of the book about the silver mine:  the story where black streaks may or may not reveal the presence of silver.
* awful:        &lt;&lt;Bbl Amo 6:11 &gt;&gt;; &lt;&lt;Bbl Jer 4:10 &gt;&gt;
* mutable:          &lt;&lt;Bbl Jud 10:10 &gt;&gt;-16 ; &lt;&lt;Bbl Jer 18:7 &gt;&gt;-10 , &lt;&lt;Bbl Jer 26:3 &gt;&gt;, &lt;&lt;Bbl Jer 35:17 &gt;&gt;, &lt;&lt;Bbl Jer 36:3 &gt;&gt;; &lt;&lt;Bbl Dan 4:27 &gt;&gt;; &lt;&lt;Bbl Jon 2:9 &gt;&gt;-10 ; &lt;&lt;Bbl Ex 32:14 &gt;&gt;; &lt;&lt;Bbl 2Pt 3:12 &gt;&gt;; &lt;&lt;Bbl Jos 10:12 &gt;&gt;-14 ; &lt;&lt;Bbl 1Sam 10:9 &gt;&gt;; &lt;&lt;Bbl 2Sam 14:14 &gt;&gt;, &lt;&lt;Bbl 2Sam 24:16 &gt;&gt; = &lt;&lt;Bbl 1Chr 21:15 &gt;&gt;Kng 20:1-6; &lt;&lt;Bbl Ez 12:3 &gt;&gt;
* immutable:    This obviously deserves more references!  &lt;&lt;Bbl 1Sam 15:29 &gt;&gt;
* loving and emotive:  &lt;&lt;Bbl Jer 31:20 &gt;&gt;; &lt;&lt;Bbl Lam 3:30 &gt;&gt;; &lt;&lt;Bbl Ez 6:9 &gt;&gt;, &lt;&lt;Bbl Ez 7:9 &gt;&gt;, &lt;&lt;Bbl Ez 12:13 &gt;&gt;, &lt;&lt;Bbl Ez 24:14 &gt;&gt;; &lt;&lt;Bbl Jud 10:16 &gt;&gt;; &lt;&lt;Bbl Mt 15:32 &gt;&gt;, &lt;&lt;Bbl Mt 23:37 &gt;&gt;
* in Judgment:      &lt;&lt;Bbl Ex 9:16 &gt;&gt;</pre>
</div>
<div title="God-Sees-All" modifier="SDM" created="201207111514" modified="201301070100" book_key="">
<pre>* &lt;&lt;Bbl Heb 4:13&gt;&gt; //There is no creature that is hidden from His sight, but all things are naked and laid open before the eyes of Him with whom we have to do. //
* Every Google search, every tweet ...
* [[Truth]] and [[Justice]]
* [[Invisible-Visible]]
* [[Secrecy]]
* &lt;&lt;Bbl John 1:48 &gt;&gt; -- Nathaniel under the fig tree
* &lt;&lt;Bbl John 2:25 &gt;&gt;
* Acts 4 -- Ananias
* &lt;&lt;Bbl 1Sam 16:7 &gt;&gt;
!! God {{anti{won't notice}}}
* &lt;&lt;Bbl Ez 12:28 &gt;&gt;
</pre>
</div>
<div title="Godliness" modifier="SDM" created="201010272118" modified="201301091605" book_key="">
<pre>* [[God]], [[Virtue]], //character//
* [[Integrity]], [[Discretion]], [[Faithfulness]], [[Purity]], [[Nobility]], [[Patience]], [[Humility]], [[SelfControl]], [[Compassion]], [[Reverence]]
* [[Fruit]], [[SanctifiedProgressive]]
* //Orderliness// (not to be confused with tidiness)</pre>
</div>
<div title="Gold" modifier="SDM" created="201004120330" modified="201305051927" book_key="" changecount="1">
<pre>* [[Refining]]
* [[Purity]]
* &lt;&lt;Bbl 2Chron 9:13 &gt;&gt;-14
A type of sanctification is found in Exodus in the figure of gold.  It can stand for the experience of our old life as it is redeemed for the new.
(collapse) ++++
* 12:21-22; 11:2:  God commanded them not to borrow but to take.
* 12:35-36:  Thus they plundered the Egyptians.  
** The ultimate purpose was for the building of the Tabernacle.  
** The gold itself was redeemed from the pagan jewelry of the Egyptians, commonly found in the form of scarabs.  
** I wonder if the gold, as it was handed from the humbled Egyptian to the Hebrew, was a vindication as when Abimelech gave silver to Abraham's wife Sarah.  
* 32:2-4:  Anything tends to be more important to you if you've paid for it, as the director of my grade-school newspaper knew.
* Highest holiness is subverted to achieve lowest corruption.
* 32:20:   The gold that was dedicated to sin is lost, destroyed; worse, it is direct Judgment against the sin to which it had been dedicated.
* 33:4-6:   Note that the people did not throw the rest of the gold away.  Even so for us, a gift that has been misused should not be thrown away.  Perhaps, however, it should be packed away for awhile.  For some pastors, systematic theology has become a snare.  Books of theology are not themselves evil, but they may have become the calf of idolatry.  The Israelites misused the true value of the gold.
* 35:21-22:  Here at last the gold is used for its original purpose.  Gold is a burden when it merely hangs around its neck.  It was never intended for your own glory.  See &lt;&lt;Bbl Job 22:24 &gt;&gt;-25 .
* According to the Student Bible, a ton of gold went into the ark and tabernacle as well as four tons of silver.
===</pre>
</div>
<div title="GoldenRule" modifier="SDM" created="201010191840" modified="201211230336" book_key="">
<pre>* &lt;&lt;Bbl Lk 6:31 &gt;&gt;  //Treat others as you yourself would like to be treated.//  This can be confounding to someone who is compulsively self-abusive.
* Other passages reinforce this principle of [[Love]]:
** Husbands to wives -- //No man ever hated __his own__ flesh ...// &lt;&lt;Bbl Eph 5:28 &gt;&gt;-29
** &lt;&lt;Bbl Mt 19:18 &gt;&gt; //You shall love your neighbor as yourself.//
** &lt;&lt;Bbl Rom 13:9 abbr &gt;&gt;</pre>
</div>
<div title="GoodAndEvil" modifier="SDM" created="201012102245" modified="201012102249">
<pre>Vos renders the idiom &quot;good-and-evil;&quot; good and evil as mutually conditioned, as revealed in contrast to each other.
* &lt;&lt;Bbl Gn 2:17 &gt;&gt;
* &lt;&lt;Bbl 1Kng 3:9 &gt;&gt;
* &lt;&lt;Bbl Heb 5:14 &gt;&gt;</pre>
</div>
<div title="Gospel" modifier="SDM" created="201004120330" modified="201211250022" book_key="">
<pre>* the Gospel is not a philosophy of life, a system of ethics, good advice, a list of do's and don'ts, or even an anointed teaching on the Christian life.  It is &quot;the power of God unto salvation to those who believe.&quot;
* &lt;&lt;Bbl Rom 1:16 &gt;&gt;
* &lt;&lt;Bbl Is 40:9 &gt;&gt;, &lt;&lt;Bbl Is 52:7 abbr &gt;&gt;, &lt;&lt;Bbl Is 60:6 abbr &gt;&gt;, &lt;&lt;Bbl Is 61:1 abbr &gt;&gt;
* Another dimension is found in the announcements made by Roman rulers following their conquests.
* [[Christianity]] -- A word not found in the Scriptures.  Called &quot;the Way&quot; occasionally (see [[Road]]).  The title given at Antioch was perhaps not self-nominated or spoken in a term of respect.  &lt;&lt;Bbl Act 9:2 &gt;&gt;; &lt;&lt;Bbl Act 22:4 &gt;&gt;; &lt;&lt;Bbl Act 22:22 &gt;&gt;.  &lt;&lt;Bbl Act 24:14 &gt;&gt; gives a special contrast.
* Concept of //gossip//.  Would be effective to use a puppet-mouth gesture whenever saying the word.
* //Good news, evangel//
* @@color:brown;Since the light which the Devil wants to prevent people seeing and which God shines into them is the gospel, we had better  preach it!  It is the God-appointed means by which the prince of darkness is defeated and the light comes streaming into people's hearts.@@ // -- John Stott  //
* &lt;&lt;Bbl 2Cor 4:4 &quot;&quot; note&gt;&gt;-6
</pre>
</div>
<div title="GotoPlugin" modifier="SDM" created="200605052341" tags="systemConfig excludeLists">
<pre>/***
|Name|GotoPlugin|
|Source|http://www.TiddlyTools.com/#GotoPlugin|
|Documentation|http://www.TiddlyTools.com/#GotoPluginInfo|
|Version|1.9.2|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides||
|Description|view any tiddler by entering it's title - displays list of possible matches|
''View a tiddler by typing its title and pressing //enter//.''  As you type, a list of possible matches is displayed.  You can scroll-and-click (or use arrows+enter) to select/view a tiddler, or press escape to close the listbox to resume typing.  When the listbox is not displayed, pressing //escape// clears the current input.
!!!Documentation
&gt;see [[GotoPluginInfo]]
!!!Configuration
&lt;&lt;&lt;
*Match titles only after {{twochar{&lt;&lt;option txtIncrementalSearchMin&gt;&gt;}}} or more characters are entered.&lt;br&gt;Use down-arrow to start matching with shorter input.  //Note: This option value is also set/used by [[SearchOptionsPlugin]]//.
*To set the maximum height of the listbox, you can create a tiddler tagged with &lt;&lt;tag systemConfig&gt;&gt;, containing:
//{{{
config.macros.gotoTiddler.listMaxSize=10;  // change this number
//}}}
&lt;&lt;&lt;
!!!Revisions
&lt;&lt;&lt;
2009.05.22 [1.9.2] use reverseLookup() for IncludePlugin
|please see [[GotoPluginInfo]] for additional revision details|
2006.05.05 [0.0.0] started
&lt;&lt;&lt;
!!!Code
***/
//{{{
version.extensions.GotoPlugin= {major: 1, minor: 9, revision: 2, date: new Date(2009,5,22)};

// automatically tweak shadow SideBarOptions to add &lt;&lt;gotoTiddler&gt;&gt; macro above &lt;&lt;search&gt;&gt;
config.shadowTiddlers.SideBarOptions=config.shadowTiddlers.SideBarOptions.replace(/&lt;&lt;search&gt;&gt;/,&quot;{{button{goto}}}\n&lt;&lt;gotoTiddler&gt;&gt;&lt;&lt;search&gt;&gt;&quot;);

if (config.options.txtIncrementalSearchMin===undefined) config.options.txtIncrementalSearchMin=3;

config.macros.gotoTiddler= {
    listMaxSize: 10,
    listHeading: 'Found %0 matching title%1...',
    searchItem: &quot;Search for '%0'...&quot;,
    handler:
    function(place,macroName,params,wikifier,paramString,tiddler) {
        var quiet   =params.contains(&quot;quiet&quot;);
        var showlist    =params.contains(&quot;showlist&quot;);
        var search  =params.contains(&quot;search&quot;);
        params = paramString.parseParams(&quot;anon&quot;,null,true,false,false);
        var instyle =getParam(params,&quot;inputstyle&quot;,&quot;&quot;);
        var liststyle   =getParam(params,&quot;liststyle&quot;,&quot;&quot;);
        var filter  =getParam(params,&quot;filter&quot;,&quot;&quot;);
        var html=this.html;
        var keyevent=window.event?&quot;onkeydown&quot;:&quot;onkeypress&quot;; // IE event fixup for ESC handling
        html=html.replace(/%keyevent%/g,keyevent);
        html=html.replace(/%search%/g,search);
        html=html.replace(/%quiet%/g,quiet);
        html=html.replace(/%showlist%/g,showlist);
        html=html.replace(/%display%/g,showlist?'block':'none');
        html=html.replace(/%position%/g,showlist?'static':'absolute');
        html=html.replace(/%instyle%/g,instyle);
        html=html.replace(/%liststyle%/g,liststyle);
        html=html.replace(/%filter%/g,filter);
        if (config.browser.isIE) html=this.IEtableFixup.format([html]);
        var span=createTiddlyElement(place,'span');
        span.innerHTML=html; var form=span.getElementsByTagName(&quot;form&quot;)[0];
        if (showlist) this.fillList(form.list,'',filter,search,0);
    },
    html:
    '&lt;form onsubmit=&quot;return false&quot; style=&quot;display:inline;margin:0;padding:0&quot;&gt;\
        &lt;input name=gotoTiddler type=text autocomplete=&quot;off&quot; accesskey=&quot;G&quot; style=&quot;%instyle%&quot;\
            title=&quot;Enter title text... ENTER=goto, SHIFT-ENTER=search for text, DOWN=select from list&quot;\
            onfocus=&quot;this.select(); this.setAttribute(\'accesskey\',\'G\');&quot;\
            %keyevent%=&quot;return config.macros.gotoTiddler.inputEscKeyHandler(event,this,this.form.list,%search%,%showlist%);&quot;\
            onkeyup=&quot;return config.macros.gotoTiddler.inputKeyHandler(event,this,%quiet%,%search%,%showlist%);&quot;&gt;\
        &lt;select name=list style=&quot;display:%display%;position:%position%;%liststyle%&quot;\
            onchange=&quot;if (!this.selectedIndex) this.selectedIndex=1;&quot;\
            onblur=&quot;this.style.display=%showlist%?\'block\':\'none\';&quot;\
            %keyevent%=&quot;return config.macros.gotoTiddler.selectKeyHandler(event,this,this.form.gotoTiddler,%showlist%);&quot;\
            onclick=&quot;return config.macros.gotoTiddler.processItem(this.value,this.form.gotoTiddler,this,%showlist%);&quot;&gt;\
        &lt;/select&gt;&lt;input name=&quot;filter&quot; type=&quot;hidden&quot; value=&quot;%filter%&quot;&gt;\
    &lt;/form&gt;',
    IEtableFixup:
    &quot;&lt;table style='width:100%;display:inline;padding:0;margin:0;border:0;'&gt;\
        &lt;tr style='padding:0;margin:0;border:0;'&gt;&lt;td style='padding:0;margin:0;border:0;'&gt;\
        %0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&quot;,
    getItems:
    function(list,val,filter) {
        if (!list.cache || !list.cache.length || val.length&lt;=config.options.txtIncrementalSearchMin) {
            // starting new search, fetch and cache list of tiddlers/shadows/tags
            list.cache=new Array();
            if (filter.length) {
                var fn=store.getMatchingTiddlers||store.getTaggedTiddlers;
                var tiddlers=store.sortTiddlers(fn.apply(store,[filter]),'title');
            } else
                var tiddlers=store.reverseLookup('tags','excludeLists');
            for(var t=0; t&lt;tiddlers.length; t++) list.cache.push(tiddlers[t].title);
            if (!filter.length) {
                for (var t in config.shadowTiddlers) list.cache.pushUnique(t);
                var tags=store.getTags();
                for(var t=0; t&lt;tags.length; t++) list.cache.pushUnique(tags[t][0]);
            }
        }
        var found = [];
        var match=val.toLowerCase();
        for(var i=0; i&lt;list.cache.length; i++)
            if (list.cache[i].toLowerCase().indexOf(match)!=-1) found.push(list.cache[i]);
        return found;
    },
    getItemSuffix:
    function(t) {
        if (store.tiddlerExists(t)) return &quot;&quot;;  // tiddler
        if (store.isShadowTiddler(t)) return &quot; (shadow)&quot;; // shadow
        return &quot; (tag)&quot;; // tag
    },
    fillList:
    function(list,val,filter,search,key) {
        if (list.style.display==&quot;none&quot;) return; // not visible... do nothing!
        var indent='\xa0\xa0\xa0';
        var found = this.getItems(list,val,filter); // find matching items...
        found.sort(); // alpha by title
        while (list.length &gt; 0) list.options[0]=null; // clear list
        var hdr=this.listHeading.format([found.length,found.length==1?&quot;&quot;:&quot;s&quot;]);
        list.options[0]=new Option(hdr,&quot;&quot;,false,false);
        for (var t=0; t&lt;found.length; t++) list.options[list.length]=
            new Option(indent+found[t]+this.getItemSuffix(found[t]),found[t],false,false);
        if (search)
            list.options[list.length]=new Option(this.searchItem.format([val]),&quot;*&quot;,false,false);
        list.size=(list.length&lt;this.listMaxSize?list.length:this.listMaxSize); // resize list...
        list.selectedIndex=key==38?list.length-1:key==40?1:0;
    },
    keyProcessed:
    function(ev) { // utility function
        ev.cancelBubble=true; // IE4+
        try{event.keyCode=0;}catch(e){}; // IE5
        if (window.event) ev.returnValue=false; // IE6
        if (ev.preventDefault) ev.preventDefault(); // moz/opera/konqueror
        if (ev.stopPropagation) ev.stopPropagation(); // all
        return false;
    },
    inputEscKeyHandler:
    function(event,here,list,search,showlist) {
        if (event.keyCode==27) {
            if (showlist) { // clear input, reset list
                here.value=here.defaultValue;
                this.fillList(list,'',here.form.filter.value,search,0);
            }
            else if (list.style.display==&quot;none&quot;) // clear input
                here.value=here.defaultValue;
            else list.style.display=&quot;none&quot;; // hide list
            return this.keyProcessed(event);
        }
        return true; // key bubbles up
    },
    inputKeyHandler:
    function(event,here,quiet,search,showlist) {
        var key=event.keyCode;
        var list=here.form.list;
        var filter=here.form.filter;
        // non-printing chars bubble up, except for a few:
        if (key&lt;48) switch(key) {
            // backspace=8, enter=13, space=32, up=38, down=40, delete=46
            case 8: case 13: case 32: case 38: case 40: case 46: break; default: return true;
        }
        // blank input... if down/enter... fall through (list all)... else, and hide or reset list
        if (!here.value.length &amp;&amp; !(key==40 || key==13)) {
            if (showlist) this.fillList(here.form.list,'',here.form.filter.value,search,0);
            else list.style.display=&quot;none&quot;;
            return this.keyProcessed(event);
        }
        // hide list if quiet, or below input minimum (and not showlist)
        list.style.display=(!showlist&amp;&amp;(quiet||here.value.length&lt;config.options.txtIncrementalSearchMin))?'none':'block';
        // non-blank input... enter=show/create tiddler, SHIFT-enter=search for text
        if (key==13 &amp;&amp; here.value.length) return this.processItem(event.shiftKey?'*':here.value,here,list,showlist);
        // up or down key, or enter with blank input... shows and moves to list...
        if (key==38 || key==40 || key==13) { list.style.display=&quot;block&quot;; list.focus(); }
        this.fillList(list,here.value,filter.value,search,key);
        return true; // key bubbles up
    },
    selectKeyHandler:
    function(event,list,editfield,showlist) {
        if (event.keyCode==27) // escape... hide list, move to edit field
            { editfield.focus(); list.style.display=showlist?'block':'none'; return this.keyProcessed(event); }
        if (event.keyCode==13 &amp;&amp; list.value.length) // enter... view selected item
            { this.processItem(list.value,editfield,list,showlist); return this.keyProcessed(event); }
        return true; // key bubbles up
    },
    processItem:
    function(title,here,list,showlist) {
        if (!title.length) return;
        list.style.display=showlist?'block':'none';
        if (title==&quot;*&quot;)   { story.search(here.value); return false; } // do full-text search
        if (!showlist) here.value=title;
        story.displayTiddler(null,title); // show selected tiddler
        return false;
    }
}
//}}}</pre>
</div>
<div title="GotoPluginInfo" modifier="SDM" created="200801081338" modified="201211272020" tags="excludeLists howto" book_key="">
<pre>/***
|Name|GotoPluginInfo|
|Source|http://www.TiddlyTools.com/#GotoPlugin|
|Documentation|http://www.TiddlyTools.com/#GotoPluginInfo|
|Version|1.9.2|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|documentation|
|Description|Documentation for GotoPlugin|
''View a tiddler by typing its title and pressing //enter//.''  As you type, a list of possible matches is displayed.  You can scroll-and-click (or use arrows+enter) to select/view a tiddler, or press escape to close the listbox to resume typing.  When the listbox is not displayed, pressing //escape// clears the current input.
!!!!!Usage/Examples
&lt;&lt;&lt;
syntax: {{{&lt;&lt;gotoTiddler quiet search inputstyle:... liststyle:... filter:...&gt;&gt;}}}
All parameters are optional.
* ''quiet'' (//keyword//)&lt;br&gt;list will not be automatically display as each character is typed.  Use //down// or //enter// to view the list.
* ''showlist'' (//keyword//)&lt;br&gt;list will always be displayed, inline, directly below the input field.
* ''search'' (//keyword//)&lt;br&gt;adds an extra 'command item' to the list that can be used to invoke a full-text search using the entered value.  This can be especially useful when no matching tiddler titles have been found.
* ''inputstyle:'' and ''liststyle:''&lt;br&gt;are CSS declarations that modify the default input and listbox styles, respectively.  Note: the CSS styles must be surrounded by ({{{&quot;...&quot;}}} or {{{'...'}}}) or ({{{[[...]]}}}) (e.g., {{{liststyle:&quot;border:1px dotted blue;color:green;...&quot;}}}.
* ''filter:''&lt;br&gt;is a single tag value (or a boolean tag expression if MatchTagsPlugin is installed), and is used to limit the search to only those tiddlers matching the indicated tag or tag expression (e.g., {{{&lt;&lt;gotoTiddler filter:&quot;faq or help&quot;&gt;&gt;}}})
{{{&lt;&lt;gotoTiddler&gt;&gt;}}}
&lt;&lt;gotoTiddler&gt;&gt;
{{{&lt;&lt;gotoTiddler search&gt;&gt;}}}
&lt;&lt;gotoTiddler search&gt;&gt;
{{{&lt;&lt;gotoTiddler showlist filter:&quot;pluginInfo&quot; liststyle:&quot;height:10em;width:auto;&quot;&gt;&gt;}}}
&lt;&lt;gotoTiddler showlist filter:&quot;pluginInfo&quot; liststyle:&quot;height:10em;width:auto;&quot;&gt;&gt;
&lt;&lt;&lt;
!!!!!Configuration
&lt;&lt;&lt;
*Match titles only after {{twochar{&lt;&lt;option txtIncrementalSearchMin&gt;&gt;}}} or more characters are entered.&lt;br&gt;Use down-arrow to start matching with shorter input.  //Note: This option value is also set/used by [[SearchOptionsPlugin]]//.
*To set the maximum height of the listbox, you can create a tiddler tagged with &lt;&lt;tag systemConfig&gt;&gt;, containing:
//{{{
config.macros.gotoTiddler.listMaxSize=10;  // change this number
//}}}
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2009.05.22 1.9.2 use reverseLookup() for IncludePlugin
2009.04.12 1.9.1 support multiple instances with different filters by using per-element tiddler cache instead of shared static cache
2009.04.05 1.9.0 added 'showlist' parameter for inline display with listbox always visible.
2009.03.23 1.8.0 added txtIncrementalSearchMin (default=3).  Avoids fetching long lists.  Use down arrow to force search with short input.
2008.12.15 1.7.1 up arrow from input field now moves to end of droplist (search for input).  Also, shift+enter cam now be used to quickly invoke search for text.
2008.10.16 1.7.0 in macro handler(), changed to use //named// params instead of positional params, and added optional &quot;filter:&quot; param for tag filtering.  Removed 'insert' handling (now provided by [[QuickEditPlugin]]).
2008.10.02 1.6.1 for IE, wrap controls in a table.  Corrects placement of listbox so it is below input field.
2008.10.02 1.6.0 added 'search' param for optional &quot;Search for:&quot; item that invokes full text search (especially useful when no title matches are found)
2008.02.17 1.5.0 ENTER key always displays tiddler based on current input regardless of whether input matches any existing tiddler
2007.10.31 1.4.3 removed extra trailing comma on last property of config.macros.gotoTiddler object.  This fixes an error under InternetExplorer that was introduced 6 days ago... sure, I should have found it sooner, but... WHY DON'T PEOPLE TELL ME WHEN THINGS ARE BROKEN!!!!
2007.10.25 1.4.2 added onclick handler for input field, so that clicking in field hides the listbox.
2007.10.25 1.4.1 re-wrote getItems() to cache list of tiddlers/shadows/tags and use case-folded simple text match instead of regular expression to find matching tiddlers.  This *vastly* reduces processing overhead between keystrokes, especially for documents with many (&gt;1000) tiddlers.  Also, removed local definition of replaceSelection(), now supported directly by the TW2.2+ core, as well as via backward-compatible plugin
2007.04.25 1.4.0 renamed macro from &quot;goto&quot; to &quot;gotoTiddler&quot;.  This was necessary to avoid a fatal syntax error in Opera (and other browsers) that require strict adherence to ECMAScript 1.5 standards which defines the identifier &quot;goto&quot; as &quot;reserved for FUTURE USE&quot;... *sigh*
2007.04.21 1.3.2 in html definition, removed DIV around droplist (see 1.2.6 below).  It created more layout problems then it solved. :-(
2007.04.01 1.3.1 in processItem(), ensure that correct textarea field is found by checking for edit==&quot;text&quot; attribute
2007.03.30 1.3.0 tweak SideBarOptions shadow to automatically add {{{&lt;&lt;goto&gt;&gt;}}} when using default sidebar content
2007.03.30 1.2.6 in html definition, added DIV around droplist to fix IE problem where list appears next to input field instead of below it.
2007.03.28 1.2.5 in processItem(), set focus to text area before setting selection (needed for IE to get correct selection 'range')
2007.03.28 1.2.4 added prompt for 'pretty text' when inserting a link into tiddler content
2007.03.28 1.2.3 added local copy of core replaceSelection() and modified for different replace logic
2007.03.27 1.2.2 in processItem(), use story.getTiddlerField() to retrieve textarea control
2007.03.26 1.2.1 in html, use either 'onkeydown' (IE) or 'onkeypress' (Moz) event to process &lt;esc&gt; key sooner, to prevent &lt;esc&gt; from 'bubbling up' to the tiddler (which will close the current editor).
2007.03.26 1.2.0 added support for optional &quot;insert&quot; keyword param.
2006.05.10 1.1.2 when filling listbox, set selection to 'heading' item... auto-select first tiddler title when down/enter moves focus into listbox
2006.05.08 1.1.1 added accesskey (&quot;G&quot;) to input field html (also set when field gets focus).  Also, inputKeyHandler() skips non-printing/non-editing keys.
2006.05.08 1.1.0 added heading to listbox for better feedback (also avoids problems with 1-line droplist)
2006.05.07 1.0.0 list matches against tiddlers/shadows/tags.  input field auto-completion... 1st enter=complete matching input (or show list)... 2nd enter=view tiddler.  &quot;quiet&quot; param controls when listbox appears.  handling for enter (13), escape(27), and down(40) keys.   Change 'ondblclick' to 'onclick' to avoid unintended triggering of tiddler editor).  Shadow titles inserted into list instead of appended to the end.
2006.05.05 0.0.0 started
&lt;&lt;&lt;</pre>
</div>
<div title="Government" modifier="SDM" created="201211031759" modified="201211031809" book_key="">
<pre>* We use it as an abbreviation for //federal// government, and tend to miss the fuller more basic sense.
* &lt;&lt;Bbl 1Cor 7:20 &quot;&quot; note &gt;&gt;
!!! Control
''Control'' is a synonym.  I've tried hard to think of a difference.   I think there is a connotative difference in that //government// indicates personal relationship.
* [[Sovereignty], [[King]], [[Authority]
!!! Virtues
* [[Love]]
* [[Blessing]], [[Affirmation]], [[Vindication]], [[Freedom]]
* [[Information]], [[Benefits], [[Mercy]], [[Provision]]
* Accommodates and nourishes values, needs, visions, dreams and wishes.
* Supports [[Frailty]]s.  Empowers.
* [[Order]]s relationships with others (respecting them as well)
!!!! Constraints:
* [[Resources]]
* [[Circumstances]]
* [[Justice]]
* [[Discipline]]</pre>
</div>
<div title="Grace" modifier="SDM" created="201004120330" modified="201212241347" book_key="">
<pre>* &lt;&lt;Bbl Micah 7:18 &gt;&gt;-20.
* @@color:brown;One thing we have to keep in mind as we talk about truthfulness is that Christ does not receive us on the basis of how well we tell the truth.  God forgives us because of what Jesus did.  This means that there is unlimited grace from God.  In other words, after the one-hundredth lie, God does not say, &quot;Enough, no more forgiveness.&quot;  Since Jesus lives as our defense attorney (Heb. 7), grace is never exhausted.  But the fact that Jesus died to forgive sins also means that he died to break the pattern of lies.  By God's grace we are headed to a place where we don't have to keep confessing the same thing.@@ // -- E.T. Welch, __Addictions__ p. 190//
* Entry in Scott Wiki about Mike Reed.
* The Holy Spirit is represented by oil; grace might be likened to grease.
* Grace is only revealed in the context of [[Broken]]ess.
* &quot; 'Grace' is one of the great Christian words, and it is a minor mystery that John uses it three times in the Prologue and not again throughout his Gospel (Morris).&quot;
* [[Freedom]]</pre>
</div>
<div title="GraceCommon" modifier="SDM" created="201010271657" modified="201211201351" book_key="">
<pre>Common grace, &lt;&lt;Bbl Ps 136:25 &gt;&gt;, &lt;&lt;Bbl Ps 145:9 &gt;&gt;; &lt;&lt;Bbl Mt 5:45 &gt;&gt;; &lt;&lt;Bbl Jn 1:9 &gt;&gt;, &lt;&lt;Bbl Jn 5:3 &gt;&gt;-4 ; &lt;&lt;Bbl Lk 6:35 &gt;&gt;;&lt;&lt;Bbl 1Cor 12:3 &gt;&gt;b.  As opposed to special [[Revelation]].
----
Witness of natural world
The universe is moral.  &lt;&lt;Bbl Lv 18:25 &gt;&gt;; &lt;&lt;Bbl Job 8:18 &gt;&gt;; &lt;&lt;Bbl Mt 3:9 &gt;&gt;
against sin:        &lt;&lt;Bbl Job 32:38 &gt;&gt;; &lt;&lt;Bbl Hab 2:11 &gt;&gt;; &lt;&lt;Bbl Jms 5:4 &gt;&gt;
for righteousness:      &lt;&lt;Bbl Job 5:23 &gt;&gt;
for God's existance:    &lt;&lt;Bbl Rom 1:18 &gt;&gt;-20
for Jesus as the Christ:  &lt;&lt;Bbl Lk 19:4 &gt;&gt;
the poor and the oppressor have this in common:  &lt;&lt;Bbl Pr 29:13 &gt;&gt;</pre>
</div>
<div title="GreaseMonkey" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="issues">
<pre>Several popular GreaseMonkey scripts can cause some or all features of TiddlyWiki to stop working - the default Linkify script seems to be particularly troublesome. There doesn't seem to be a //solid// way to disable GreaseMonkey from within TiddlyWiki (which is technically entirely understandable but does lead to a fairly grim user experience).</pre>
</div>
<div title="GridPluginInfo" modifier="ELSDesignStudios" created="200801090454" modified="201003070528" tags="howto excludeLists">
<pre>/***
|Name|GridPluginInfo|
|Source|http://www.TiddlyTools.com/#GridPlugin|
|Documentation|http://www.TiddlyTools.com/#GridPluginInfo|
|Version|2.0.7|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1.3|
|Type|documentation|
|Description|documentation for GridPlugin|
!!!!!Usage
&lt;&lt;&lt;
The {{{&lt;&lt;grid&gt;&gt;}}} macro generates a table, where ''rows are tiddlers, columns are any combination of slices, sections or field names'', and grid cells display individual values (or colored boxes with mouseover 'tooltips' to view values).
*Use tag filtering to select and display specific subsets of tiddlers.
*Grid column headings can be shown/hidden by clicking the {{{&gt;&gt;&gt;}}} symbol in the upper-left corner
*Optionally, clicking on a cell allows you to edit the value in that cell.  Pressing enter (or moving away from the input field) saves the changed value.  Pressing escape cancels the changes (after confirming)
{{{
&lt;&lt;grid    columns:[[name name name...]]
    tags:[[tag tag...]]
    filter:...
    clip:...
    inline wikify edit all&gt;&gt;
}}}
//all parameters are optional//
*''columns:...'' (list) default=use all slices defined in the document&lt;br&gt;display columns using the specified names, which refer to any combination of slices, sections and fields.
**If a column name begins with '=' (equal sign), then it is a tiddler field reference.
**If a column name begins with '!' (exclamation), then it is a tiddler section reference.
**Column names without either prefix are tiddler slice references.
**''{{{+TiddlerName}}}'' uses a space-separated list of column names stored in another tiddler.
**''{{{@TiddlerName}}}'' uses the slices from a given tiddler as column names.
**''{{{@!TiddlerName}}}'' uses the sections from a given tiddler.
**''{{{@=TiddlerName}}}'' uses the fields from a given tiddler.
**A special read-only 'fake' slice name, ''~TiddlerSize'', can be used to automatically compute and show the tiddler's size in bytes.
*''tags:...'' (list) default=show all tiddlers&lt;br&gt;display tiddlers that match at least ONE of the specified tags.
**''{{{+TiddlerName}}}'' uses a space-separated list of tags stored in another tiddler.
**''{{{@TiddlerName}}}'' uses the tags assigned to the indicated tiddler.
*''filter:...'' (filter syntax) default=none&lt;br&gt;enhanced tiddler selection by tags, using core filter syntax (e.g., {{{&quot;[tag[tag1]][tag[tag2]]&quot;}}}) or MatchTagsPlugin's compound //Boolean tag expressions// (e.g., {{{&quot;tag1 or (tag2 and tag3) and not tag4)&quot;}}})
*''clip:...'' (number) default=no clip length limit&lt;br&gt;maximum # of characters to show in a grid cell when using 'inline' keyword.  Text values are truncated with '...'
*''inline'' (keyword)&lt;br&gt;displays column values directly in grid cells.  Default=use a colored block if a value is defined, with mouseover 'tooltip' to show the actual value
*''wikify'' (keyword)&lt;br&gt;parses and formats wiki-syntax contained in values.  Default=show values ''as-is'', without wiki formatting
*''edit'' (keyword)&lt;br&gt;enables click-to-edit to change values.  Default=read-only display of values.
*''all'' (keyword)&lt;br&gt;displays a row for each tiddler, even tiddlers that have NO non-blank values. Default=show only tiddlers that have at least one defined value.
Note: this plugin uses a modified version of slices pattern:
{{{
slicesRE = /(?:^\|[\'\/]*~?(\w+)\:?[\'\/]*\|\s*(.*?)\s*\|$)/gm;
}}}
* eliminates TONS of spurious slices caused by over-eager 'description' format pattern matches
* enforces beginning-of-line and end-of-line sequences.  (Allows slice values to contain |, such as in pretty links)
&lt;&lt;&lt;
!!!!!Examples
&lt;&lt;&lt;
*{{block{
View 'mouseover' summary of slices
for tiddlers matching at least one tag from a list of tags
using slices from this tiddler as columns
&lt;&lt;&lt;
{{{
&lt;&lt;grid tags:[[systemConfig pluginInfo script]] columns:@GridPluginInfo&gt;&gt;
}}}
+++[show results...]...
&lt;&lt;grid tags:[[systemConfig pluginInfo script]] columns:@GridPluginInfo&gt;&gt;
===
&lt;&lt;&lt;
}}}
*{{block{
Edit slices (Description, Version), fields (changecount) and sections (Revisions)
for tiddlers using TW core filter syntax:
&lt;&lt;&lt;
{{{
&lt;&lt;grid filter:[tag[systemConfig]][tag[pluginInfo]][tag[script]]
    columns:[[Description Version =changecount !Revisions]] inline wikify edit&gt;&gt;
}}}
+++[show results...]...
&lt;&lt;grid filter:[tag[systemConfig]][tag[pluginInfo]][tag[script]]
    columns:[[Description Version =changecount !Revisions]] inline wikify edit&gt;&gt;
===
&lt;&lt;&lt;
}}}
*{{block{
Edit slices (Description, Version), fields (changecount) and sections (Revisions)
for tiddlers using enhanced boolean filter syntax (requires [[MatchTagsPlugin]])
&lt;&lt;&lt;
{{{
&lt;&lt;grid filter:[[systemConfig or pluginInfo or script]]
    columns:[[Description Version =changecount !Revisions]] inline wikify edit&gt;&gt;
}}}
+++[show results...]...
&lt;&lt;grid filter:[[systemConfig or pluginInfo or script]]
    columns:[[Description Version =changecount !Revisions]] inline wikify edit&gt;&gt;
===
&lt;&lt;&lt;
}}}
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2010.03.06 2.0.7 fixed setSection()
2009.09.26 2.0.6 fixed setSlice() for existing slices with empty values
2009.09.25 2.0.5 fixed cell redraw after edit-in-place
2009.09.25 2.0.4 fixed ({{{@!name}}} ) and {{{@=name}}} handling
2009.09.24 2.0.3 added handling for getting columns from tiddler sections ({{{@!name}}} ) or fields {{{@=name}}}
2009.09.23 2.0.2 fixed handling for {{{@TiddlerName/+TiddlerName}}}
2009.09.21 2.0.1 split keydown() and blur() functions from editInPlace() and added confirmation for escape key (discard changes)
2009.09.20 2.0.0 Complete re-write.  Renamed [[GridPlugin]].  View and/or edit any tiddler section, slice or field.  Renamed 'slices:...' param to 'columns:...'
2009.09.17 1.1.1 added textarea handling for multi-line fields (e.g., 'text')
2009.09.17 1.1.0 added '=fieldname' syntax for 'field grid'
2008.08.15 1.0.3 add brackets around row headings when wikifying so that non-wikiword tiddler titles are linked
2008.08.13 1.0.2 wikify row headings (in addition to slice value cells) whenever 'wikify' param is used
2008.05.01 1.0.1 in editSlice(), corrected fixup for titles containing double-quotes
2007.09.18 1.0.0 added 'wikify' param and handling to format wiki-syntax contained in slice values
2008.05.01 1.0.1 in editSlice(), corrected fixup for titles containing double-quotes
2007.09.18 1.0.0 added 'wikify' param and handling to format wiki-syntax contained in slice values
2007.08.02 0.9.8 when generating HTML, replace double-quotes in tiddler titles with {{{&amp;#x22;}}} to avoid ambiguity with quotes used as HTML attribute syntax delimiters.
2007.07.22 0.9.7 removed hard-coded 99% 'width bias' and wordwrap from Description cells, default to autosize (equal size for all columns).  Added width:xxxx param to easily stretch table to fit containing space
2007.06.08 0.9.6 fixed generated code for row headings and edit_slice() handlers, so titles with single-quotes will work
2007.04.24 0.9.5 added 'fake' slicename: 'TiddlerSize', to display # of bytes in tiddler as a grid column.
2007.04.13 0.9.4 honor 'excludeLists' tag so that 'hidden' tiddlers aren't displayed in the grid
2007.04.08 0.9.3 fixed cell bgcolor (non-inline grid 'blocks') after edit-in-place adds/clears a slice value
2007.04.07 0.9.2 support edit in place for non-inline grids (color 'blocks').  Also create new slices in tiddlers if slice not already present
2007.04.07 0.9.1 use locally-defined slicesRE (and getSlice() method) instead of re-defining core slicesRE.  Avoids breaking use of shadow ColorPalette slices.
2007.04.05 0.9.0 Added functioning 'set slice' handler and 'edit-in-place' feature.  Eliminated mouseover popups (use tooltips instead).  Added ''tags:'', ''slices:'' and ''edit'' params.  Lots of code cleanup.
2007.04.04 0.8.1 in info() and popup() functions, instead of creating popup display, use element tooltip to show mouseover details.
2007.03.25 0.8.0 change to BETA status and added support for 'tags:tag tag tag tag' filtering param
2007.02.03 0.0.2 change display of slices from 'tiddler[slidename]' to 'tiddler:slicename' to match TW slice syntax
2007.01.30 0.0.1 started (adapted from TagGridPlugin)
&lt;&lt;&lt;</pre>
</div>
<div title="Grief" modifier="SDM" created="201211211329" book_key="">
<pre>[[Comfort]]</pre>
</div>
<div title="Growth" modifier="SDM" created="201210212007" modified="201211230314" tags="Living-Plant" book_key="">
<pre>[[Transformation]]
[[Maturity]]
* God causes growth -- Col 2:16, 1Cor //Neither I who planted nor Apollos who watered//
</pre>
</div>
<div title="GuerillaWiki" creator="psd" modifier="colmbritton" created="201102111106" modified="201102161205" tags="concepts">
<pre>TiddlyWiki makes a great GuerillaWiki in situations where it's not practical to use a traditional wiki.

For instance, in a corporate setting, persuading an over-worked IT department to install you a Wiki server for you isn't always going to be possible overnight. And your PC is locked down so you can't install a conventional Wiki yourself. But, equally, you can't go and use one of the public hosted Wiki services because your Information Security department would not allow all that corporate data to flow into an outside server.

TiddlyWiki slices through those barriers by being usable on virtually all ~PCs.</pre>
</div>
<div title="Guidance" modifier="SDM" created="201004120330" modified="201302121404" book_key="">
<pre>&lt;&lt;Bbl Is 30:21 &gt;&gt;, &lt;&lt;Bbl Is 49:10 &gt;&gt;
* //Advice, direction,// [[Vision]], [[Counsel]]
!!!! Geographical guidance from God
* the cloud and fire
* the star leading to Bethlehem's stable
* the cows leading the cart on which rested the Ark
* Acts 15 (?) -- on the way to Macedonia
* And of course, there is always bodily translation...
!!!! Pictures
* John Glenn in flight, low on fuel, during an exercise in which the carrier was blacked out.  Below he sees the wake in phosphorescent glow and this guides him to safety.  //The Right Stuff// probably.</pre>
</div>
<div title="Guilt" modifier="SDM" created="201004120330" modified="201011031342">
<pre>* @@color:brown;We carry His nails in our pocket.@@ // -- Martin Luther//
* 1Kng 2:44; &lt;&lt;Bbl Ezr 9:5 &gt;&gt;-7 ; &lt;&lt;Bbl Jn 15:22 &gt;&gt;-25 ; &lt;&lt;Bbl Jms 4:17 &gt;&gt;; &lt;&lt;Bbl 2Pt 2:20 &gt;&gt;-21 .
*  See [[Responsibility]], [[Shame]], [[Sin]].
* Related in English to word //guile//?</pre>
</div>
<div title="HTML Entities Formatting" creator="matt" modifier="psd" created="201102111428" modified="201102151515" tags="formatting">
<pre>HTML entities can be used to easily type special characters:
{{{
Here is a quote symbol: &amp;quot;
And a pound sign: &amp;pound;
}}}
Displays as:
Here is a quote symbol: &amp;quot;
And a pound sign: &amp;pound;
!Notes
For a full list of available HTML references see:
http://www.w3schools.com/tags/ref_entities.asp</pre>
</div>
<div title="HTML Formatting" creator="matt" modifier="psd" created="201102111429" modified="201102151518" tags="formatting">
<pre>Raw HTML text can be included in a tiddler:
{{{
&lt;html&gt;
This is some &lt;strong&gt;HTML&lt;/strong&gt; formatting
&lt;/html&gt;
}}}
&lt;html&gt;
This is some &lt;strong&gt;HTML&lt;/strong&gt; formatting
&lt;/html&gt;
!Notes
* only static HTML elements that are valid within a {{{&lt;div&gt;}}} work correctly
* {{{document.write}}} cannot be used to generate dynamic content
* External {{{&lt;script&gt;}}} elements cannot be used within {{{&lt;html&gt;}}} blocks</pre>
</div>
<div title="HTMLFormattingPlugin" modifier="SDM" created="200512011522" tags="systemConfig excludeLists">
<pre>/***
|Name|HTMLFormattingPlugin|
|Source|http://www.TiddlyTools.com/#HTMLFormattingPlugin|
|Documentation|http://www.TiddlyTools.com/#HTMLFormattingPluginInfo|
|Version|2.4.0|
|Author|Eric Shulman - ELS Design Studios|
|License|http://www.TiddlyTools.com/#LegalStatements &lt;br&gt;and [[Creative Commons Attribution-ShareAlike 2.5 License|http://creativecommons.org/licenses/by-sa/2.5/]]|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides|'HTML' formatter|
|Description|embed wiki syntax formatting inside of HTML content|
The ~HTMLFormatting plugin allows you to ''mix wiki-style formatting syntax within HTML formatted content'' by extending the action of the standard TiddlyWiki formatting handler.
!!!!!Documentation
&gt;see [[HTMLFormattingPluginInfo]]
!!!!!Revisions
&lt;&lt;&lt;
2009.01.05 [2.4.0] in wikifyTextNodes(), pass w.highlightRegExp and w.tiddler to wikify() so that search term highlighting and tiddler-relative macro processing will work
| see [[HTMLFormattingPluginInfo]] for additional revision details |
2005.06.26 [1.0.0] Initial Release (as code adaptation - pre-dates TiddlyWiki plugin architecture!!)
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.HTMLFormattingPlugin= {major: 2, minor: 4, revision: 0, date: new Date(2009,1,5)};

// find the formatter for HTML and replace the handler
initHTMLFormatter();
function initHTMLFormatter()
{
    for (var i=0; i&lt;config.formatters.length &amp;&amp; config.formatters[i].name!=&quot;html&quot;; i++);
    if (i&lt;config.formatters.length)  config.formatters[i].handler=function(w) {
        if (!this.lookaheadRegExp)  // fixup for TW2.0.x
            this.lookaheadRegExp = new RegExp(this.lookahead,&quot;mg&quot;);
        this.lookaheadRegExp.lastIndex = w.matchStart;
        var lookaheadMatch = this.lookaheadRegExp.exec(w.source)
        if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
            var html=lookaheadMatch[1];
            // if &lt;nowiki&gt; is present, just let browser handle it!
            if (html.indexOf('&lt;nowiki&gt;')!=-1)
                createTiddlyElement(w.output,&quot;span&quot;).innerHTML=html;
            else {
                // if &lt;hide linebreaks&gt; is present, suppress wiki-style literal handling of newlines
                if (html.indexOf('&lt;hide linebreaks&gt;')!=-1) html=html.replace(/\n/g,' ');
                // remove all \r's added by IE textarea and mask newlines and macro brackets
                html=html.replace(/\r/g,'').replace(/\n/g,'\\n').replace(/&lt;&lt;/g,'%%(').replace(/&gt;&gt;/g,')%%');
                // create span, let browser parse HTML
                var e=createTiddlyElement(w.output,&quot;span&quot;); e.innerHTML=html;
                // then re-render text nodes as wiki-formatted content
                wikifyTextNodes(e,w);
            }
            w.nextMatch = this.lookaheadRegExp.lastIndex; // continue parsing
        }
    }
}

// wikify #text nodes that remain after HTML content is processed (pre-order recursion)
function wikifyTextNodes(theNode,w)
{
    function unmask(s) { return s.replace(/\%%\(/g,'&lt;&lt;').replace(/\)\%%/g,'&gt;&gt;').replace(/\\n/g,'\n'); }
    switch (theNode.nodeName.toLowerCase()) {
        case 'style': case 'option': case 'select':
            theNode.innerHTML=unmask(theNode.innerHTML);
            break;
        case 'textarea':
            theNode.value=unmask(theNode.value);
            break;
        case '#text':
            var txt=unmask(theNode.nodeValue);
            var newNode=createTiddlyElement(null,&quot;span&quot;);
            theNode.parentNode.replaceChild(newNode,theNode);
            wikify(txt,newNode,highlightHack,w.tiddler);
            break;
        default:
            for (var i=0;i&lt;theNode.childNodes.length;i++)
                wikifyTextNodes(theNode.childNodes.item(i),w); // recursion
            break;
    }
}
//}}}</pre>
</div>
<div title="HTMLFormattingPluginInfo" modifier="ELSDesignStudios" created="200801090044" modified="201005071837" tags="howto excludeLists">
<pre>|Name|HTMLFormattingPluginInfo|
|Source|http://www.TiddlyTools.com/#HTMLFormattingPlugin|
|Documentation|http://www.TiddlyTools.com/#HTMLFormattingPluginInfo|
|Version|2.4.1|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|documentation|
|Description|documentation for HTMLFormattingPlugin|
The ~HTMLFormatting plugin allows you to freely ''mix wiki-style formatting syntax within HTML formatted content'' by extending the action of the standard TiddlyWiki formatting handler.
!!!!!Usage
&lt;&lt;&lt;
The shorthand Wiki-style formatting syntax of ~TiddlyWiki is very convenient and enables most content to be reasonably well presented. However, there are times when tried-and-true HTML formatting syntax allows more more precise control of the content display.

When a tiddler is about to be displayed, ~TiddlyWiki looks for tiddler content contained within {{{&lt;html&gt;}}} and {{{&lt;/html&gt;}}} markers.  When present, the TiddlyWiki core simply passes this content directly to the browser's internal &quot;rendering engine&quot; to process as ~HTML-formatted content.  However, TiddlyWiki does not also process the HTML source content for any embedded wiki-formatting syntax it may contain.  This means that while you can use HTML formatted content, you cannot mix wiki-formatted content within the HTML formatting.

This plugin extends the TiddlyWiki core processing so that, after the HTML formatting has been processed, all the pieces of text occuring within the HTML block are then processed one piece at a time, so that normal wiki-style formatting can be applied to the individual text pieces.

Note: To bypass this extended processing for a specific section of HTML content, embed ''{{{&lt;nowiki&gt;}}}'' //anywhere// inside the {{{&lt;html&gt;...&lt;/html&gt;}}} delimiters, and wiki formatting will not be applied to that content.
&lt;&lt;&lt;
!!!!!Line breaks
&lt;&lt;&lt;
One major difference between Wiki formatting and HTML formatting is how &quot;line breaks&quot; are processed. Wiki formatting treats all line breaks as literal content to be displayed //as-is//. However, because HTML normally ignores line breaks and actually processes them as simple &quot;word separators&quot; instead, many people who write HTML include extra line breaks in their documents, just to make the &quot;source code&quot; easier to read.

Even though you can use HTML tags within your tiddler content, the default treatment for line breaks still follows the Wiki-style rule (i.e., all new lines are displayed as-is). When adding HTML content to a tiddler (especially if you cut-and-paste it from another web page), you should take care to avoid adding extra line breaks to the text.

If removing all the extra line breaks from your HTML content would be a big hassle, you can quickly //override the default Wiki-style line break rule// so that the line breaks use the standard HTML rules, by placing ''{{{&lt;hide linebreaks&gt;}}}'' //anywhere// within the HTML content.  This automatically converts all line breaks to spaces before rendering the content, so that the literal line breaks will be processed as simple word-breaks instead.

Alternatively, if you //always// want to omit all line breaks from the rendered output, you can set this option:
&gt;&lt;&lt;option chkHTMLHideLinebreaks&gt;&gt; ignore all line breaks
which can also be 'hard coded' into your document by adding the following to a tiddler, tagged with &lt;&lt;tag systemConfig&gt;&gt;
&gt;{{{config.options.chkHTMLHideLinebreaks=true;}}}

Note: this does //not// alter the actual tiddler content that is stored in the document, just the manner in which it is displayed. Any line breaks contained in the tiddler will still be there when you edit its content. Also, to include a literal line break when the ''&lt;{{{hide linebreaks}}}&gt;'' tag is present, you will need to use a ''&lt;{{{br}}}&gt;'' or ''&lt;{{{p}}}&gt;'' HTML tag instead of simply typing a line break.
&lt;&lt;&lt;
!!!!!How it works
&lt;&lt;&lt;
The TW core support for HTML does not let you put ANY wiki-style syntax (including TW macros) *inside* the {{{&lt;html&gt;...&lt;/html&gt;}}} block.  Everything between {{{&lt;html&gt;}}} and {{{&lt;/html&gt;}}} is handed to the browser for processing and that is it.

However, not all wiki syntax can be safely passed through the browser's parser. Specifically, any TW macros inside the HTML will get 'eaten' by the browser since the macro brackets, {{{&lt;&lt;...&gt;&gt;}}} use the &quot;&lt;&quot; and &quot;&gt;&quot; that normally delimit the HTML/XML syntax recognized by the browser's parser.

Similarly, you can't use InlineJavascript within the HTML because the {{{&lt;script&gt;...&lt;/script&gt;}}} syntax will also be consumed by the browser and there will be nothing left to process afterward.  Note: unfortunately, even though the browser removes the {{{&lt;script&gt;...&lt;/script&gt;}}} sequence, it doesn't actually execute the embedded javascript code that it removes, so any scripts contained inside of &lt;html&gt; blocks in TW are currently being ignored. :-(

As a work-around to allow TW *macros* (but not inline scripts) to exist inside of &lt;html&gt; formatted blocks of content, the plugin first converts the {{{&lt;&lt;}}} and {{{&gt;&gt;}}} into &quot;%%(&quot; and &quot;)%%&quot;, making them &quot;indigestible&quot; so they can pass unchanged through the belly of the beast (the browser's HTML parser).

After the browser has done its job, the wiki syntax sequences (including the &quot;undigested&quot; macros) are contained in #text nodes in the browser-generated DOM elements.  The plugin then recursively locates and processes each #text node, converts the %%( and )%% back into {{{&lt;&lt;}}} and {{{&gt;&gt;}}}, passes the result to wikify() for further rendering of the wiki-formatted syntax into a containing SPAN that replaces the previous #text node.  At the end of this process, none of the encoded %%( and )%% sequences remain in the rendered tiddler output.
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2010.05.07 2.4.1 added chkHTMLHideLinebreaks option
2009.01.05 2.4.0 in wikifyTextNodes(), pass w.highlightRegExp and w.tiddler to wikify() so that search term highlighting and tiddler-relative macro processing will work
2008.10.02 2.3.0 added use of {{{&lt;nowiki&gt;}}} marker to bypass all wikification inside a specific HTML block
2008.09.19 2.2.0 in wikifyTextNodes(), don't wikify the contents of STYLE nodes (thanks to MorrisGray for bug report)
2008.04.26 [*.*.*] plugin size reduction: more documentation moved to HTMLFormattingInfo
2008.01.08 [*.*.*] plugin size reduction: documentation moved to HTMLFormattingInfo
2007.12.04 [*.*.*] update for TW2.3.0: replaced deprecated core functions, regexps, and macros
2007.06.14 2.1.5 in formatter, removed call to e.normalize().  Creates an INFINITE RECURSION error in Safari!!!!
2006.09.10 2.1.4 update formatter for 2.1 compatibility (use this.lookaheadRegExp instead of temp variable)
2006.05.28 2.1.3 in wikifyTextNodes(), decode the *value* of TEXTAREA nodes, but don't wikify() its children.  (thanks to &quot;ayj&quot; for bug report)
2006.02.19 2.1.2 in wikifyTextNodes(), put SPAN element into tiddler DOM (replacing text node), BEFORE wikifying the text content.  This ensures that the 'place' pasced to any macros is correctly defined when the macro is evaluated, so that calls to story.findContainingTiddler(place) will work as expected. (Thanks for bug report from GeoffSlocock)
2006.02.05 2.1.1 wrapped wikifier hijack in init function to eliminate globals and avoid FireFox 1.5.0.1 crash bug when referencing globals
2005.12.01 2.1.0 don't wikify #TEXT nodes inside SELECT and TEXTAREA elements
2005.11.06 2.0.1 code cleanup
2005.10.31 2.0.  replaced hijack wikify() with hijack config.formatters[&quot;html&quot;] and simplified recursive WikifyTextNodes() code
2005.10.09 1.0.2 combined documentation and code into a single tiddleb
2005.08.05 1.0.1 moved HTML and CSS definitions into plugin code instead of using separate tiddlers
2005.07.26 1.0.1 Re-released as a plugin. Added &lt;{{{html}}}&gt;...&lt;/{{{nohtml}}}&gt; and &lt;{{{hide newlines}}}&gt; handling
2005.06.26 1.0.0 Initial Release (as code adaptation - pre-dates TiddlyWiki plugin architecture!!)
&lt;&lt;&lt;</pre>
</div>
<div title="Hail" modifier="SDM" created="201004120330" modified="201211281646" tags="Harvest" book_key="">
<pre>&lt;&lt;Bbl Job 38:22 &gt;&gt;-23 , &lt;&lt;Bbl Ex 9:18 &gt;&gt;-26 , &lt;&lt;Bbl Rev 18:7 &gt;&gt;Sm 12:17, &lt;&lt;Bbl Josh 10:11 &gt;&gt;.</pre>
</div>
<div title="Harvest" modifier="SDM" created="201210091511" modified="201210091522" book_key="">
<pre>[[Food]]
!!! Tiddlers tagged with //Harvest//
&lt;&lt;matchTags %0 &quot;\n&quot; Harvest &gt;&gt;</pre>
</div>
<div title="Headings Formatting" creator="matt" modifier="psd" created="201102111427" modified="201102151516" tags="formatting">
<pre>{{{
!Heading Level 1
!!Heading Level 2
!!!Heading Level 3
!!!!Heading Level 4
!!!!!Heading Level 5
!!!!!!Heading Level 6
}}}
Display as:
!Heading Level 1
!!Heading Level 2
!!!Heading Level 3
!!!!Heading Level 4
!!!!!Heading Level 5
!!!!!!Heading Level 6</pre>
</div>
<div title="Healing" modifier="SDM" created="201004120330" modified="201208141218" book_key="">
<pre>* &lt;&lt;Bbl Ex 15:26 &gt;&gt; -- bitter waters
* &lt;&lt;Bbl Ex 23:25 &gt;&gt;
* &lt;&lt;Bbl Num 21 4&gt;&gt;-9 -- the serpent lifted up (points to Christ as Healer)
* A sort of progression found in &lt;&lt;Bbl Mk 5:28 &gt;&gt;, &lt;&lt;Bbl Mk 6:56 &gt;&gt;; &lt;&lt;Bbl Act 5:15 &gt;&gt;.
| Healing | Provision |h
| help for a wound | help for an unmet need |
| crisis event | process |</pre>
</div>
<div title="Heart" modifier="SDM" created="201004120330" modified="201210091516" book_key="">
<pre>* &quot;In Hebrew the heart is the seat of mind, intellect, and purpose&quot;  (J. Hertz, Pentateuch and Haftorahs, p. 16).
* divided:          &lt;&lt;Bbl 1Ki 11:4 &gt;&gt;  (&lt;&lt;Bbl 1Co 7:32 &gt;&gt;-35 ), 18:21, &lt;&lt;Bbl Ps 119:70 &gt;&gt;, &lt;&lt;Bbl Is 1:22 &gt;&gt;, &lt;&lt;Bbl Jer 3:10 &gt;&gt;, &lt;&lt;Bbl James 1:6 &gt;&gt;-8 , &lt;&lt;Bbl Mt 6:24 &gt;&gt;.
* whole, undivided:  (see [[Unity]], [[Integrity]]) &lt;&lt;Bbl 1Chron 12:33 &gt;&gt;, &lt;&lt;Bbl 1Chron 29:9 &gt;&gt;, &lt;&lt;Bbl 2Chron 31:21 &gt;&gt;, &lt;&lt;Bbl Ps 86:11 &gt;&gt;, &lt;&lt;Bbl Ps 119:2 &gt;&gt;; &lt;&lt;Bbl Ps 119:10 &gt;&gt;; &lt;&lt;Bbl Jer 32:40 &gt;&gt;
* sinful:       &lt;&lt;Bbl Jer 17:9 &gt;&gt;
* God &quot;is greater than&quot;:  &lt;&lt;Bbl 1Jn 3:20 &gt;&gt;
* and will enlarge:  &lt;&lt;Bbl Ps 119:32 &gt;&gt;
* &lt;&lt;Bbl Rom 5:5 &gt;&gt; //God's love has been poured out into our hearts//
* love from:    &lt;&lt;Bbl 1Pt 1:22 &gt;&gt;
* of flesh, not stone:  &lt;&lt;Bbl Ez 11:19 &gt;&gt;, &lt;&lt;Bbl Ez 36:26 &gt;&gt;
* new:          &lt;&lt;Bbl Ez 18:31 &gt;&gt;
* misc:         &lt;&lt;Bbl Ps 119:36 &gt;&gt;.
* &lt;&lt;Bbl Pr 14:30 &gt;&gt;  The life of the body is a heart at peace, but envy rots the bones.   [[Contentment]].
* &lt;&lt;Bbl Judges 16 15&gt;&gt;-17   Giving away the heart
* [[Attitude]]</pre>
</div>
<div title="HeathenQuestion" modifier="SDM" created="201004120330" modified="201010250257">
<pre>''The Doctrine about the Peoples Who Haven't Heard Yet''
# God is just
# God is loving
# Everyone has sinned
# Jesus is the Unique Savior
# The Church is responsible to carry the truth to every people</pre>
</div>
<div title="Heaven" modifier="SDM" created="201201101312" modified="201211250019" book_key="">
<pre>* I wonder if in Heaven every morning we're going to come out and say //We're all on our faces in bright shining places!//
* [[Eschatology]]</pre>
</div>
<div title="Hebrews-01-01-note" modifier="SDM" created="201009302048" modified="201211281858" tags="Comment" book_key="201001a">
<pre>Look for the theme of [[Waiting]].

&lt;&lt;Bbl Hebrews 2:14 &gt;&gt;-15       Vs.15 presents the language of redemption.  We are slaves, and slaves to what?   Sin, says Paul says in &lt;&lt;Bbl Rom 7:14 &gt;&gt;.  Sin introduces death, and the devil too implicated, as 14c relates.  This says He delivered us from that.  And what, according to the preceding verse, is the basis of Christ's ability to redeem?  His participation in our humanity.  &lt;&lt;Bbl Gal 4:3 &gt;&gt;-5 takes the same theme precisely.
&lt;&lt;Bbl Hebrews 2:22 &gt;&gt;   This word for [[Shame]] is used in &lt;&lt;Bbl Rom 1:16 &gt;&gt;, &lt;&lt;Bbl Heb 2:22 &gt;&gt; and &lt;&lt;Bbl Heb 11:16 &gt;&gt;.  In all three a negative is used to strongly express a positive (this is called a //litotes//).
&lt;&lt;Bbl Heb 3:1 false&gt;&gt;-6   The [[House]] is the Church.
3:4 see &lt;&lt;Bbl Ps 127:1 &gt;&gt;
&lt;&lt;Bbl Heb 3:18 abbr &gt;&gt; The relationship between rest and faith is evinced.  These are both integral to the [[Sabbath|Rest]].

4:5 Jesus was tempted with fear, unbelief, rational pride, disillusionment, abdication of godliness.  These sins, rather than the ones that come more immediately to mind, fit into the context.
4:12    Sometimes misapplied to the Bible.
4:16    Bold access is taken up in &lt;&lt;Bbl Eph 3:12 &gt;&gt;.

&lt;&lt;Bbl Heb 6:16 abbr &gt;&gt; See &lt;&lt;Bbl Mt 23:17 &gt;&gt;-19  on swearing; [[Vow]].

Chap 9 the [[Mediator]]

10:5    See &lt;&lt;Bbl Ps 40:6 &gt;&gt;-8 ; but part B is quite different (my ears you have opened).
10:11-12    Note the contrast between standing and sitting.  There was no chair in the Tabernacle.  Also the one-time and the once for all events.
10:19-25    Seems to include all the ingredients of the [[Gospel]].
&lt;&lt;Bbl Heb 10:19 abbr &gt;&gt;    See [[Veil]]</pre>
</div>
<div title="Hebrews-11-01-note" modifier="SDM" created="201009302119" modified="201211230321" tags="Comment" book_key="201001a">
<pre>* [[Abraham]] was never looking for the merely earthly blessings.
* Abel first obtained the victory of faith.  Vss. 4-22 have Genesis; 23-29 Exodus; 30-31 Joshua; and 32 Judges and on.

&lt;&lt;Bbl Heb 11:1 abbr &gt;&gt; [[Invisible-Visible]]
11:2    Here is a clear statement of how [[Salvation]] came to the OT saints.
11:4    Abel's present speech is mentioned in 12:24.
11:5    The author's wording here, both in direct quotation and allusion, is palpably based on the Septuagint.
11:6    Not that He is  as opposed to atheism, but that He is the one described in Hebrews' opening words.
11:16   For not ashamed , see 2:22.
11:21-22    Faith is remarkable here because of hte context of geography and time -- these men are looking to the promises from a long way off.
11:23-29    Moses is also &quot;a sojourner in strange land,&quot;  &lt;&lt;Bbl Ex 2:22 &gt;&gt;
&lt;&lt;Bbl Heb 11:33 abbr &gt;&gt;    &lt;&lt;Bbl Pr 16:32 &gt;&gt;, &lt;&lt;Bbl Pr 25:28 &gt;&gt;.  Pastor Sam relates these to the text and cites David, who for all his military victories achieved a greater one yet when he refrained from killing Saul.
11:33,39    The promises of vs. 33 must be distinguished from the Promise of vs. 39.
11:34   The three Hebrew men quenched fire.  See also &lt;&lt;Bbl Is 43:2 &gt;&gt;.
&lt;&lt;Bbl Heb 11:35 abbr &gt;&gt;    see &lt;&lt;Bbl Php 3:10 &gt;&gt;-11 ; &lt;&lt;Bbl Heb 12:2 &gt;&gt;; &lt;&lt;Bbl Rev 12:11 &gt;&gt;  </pre>
</div>
<div title="Hebrews-12-01-note" modifier="SDM" created="201010310239" modified="201305100317" tags="Comment" book_key="201001a" changecount="2">
<pre>&lt;&lt;Bbl Hb 12:1&gt;&gt; //every weight (or hindrance)//, all casual weaknesses; //sin//, outright rebellion; //let us run with perseverance//, robust godliness.  These correspond with the 
12:2   see 11:35; also Adams, Counselor's Manual, p.166.
12:18-24    Vss 18-21 has seven elements of the Old Covenant; vss 22-24 has eight elements; all these are separated by a conjunction and .   If we take the last two elements of the latter, Jesus and the sprinkled Blood, a general parallelism emerges:

| Mt Zion |     Mt Sinai |h
| heavenly city of the Living God |     a mountain blazing with fire |
| myriad of angels in assembly |    darkness |
| congregation of saints in heaven |    gloom |
| God, the Judge of all |   a tempest |
| spirits of righteous men made perfect | blast of a trumpet |
| Jesus, the sprinkled blood |  the terrifying voice of the  |

12:18   Mountain that may be touched   --  as opposed to the spiritual Mt. Zion.
12:24   good things, i.e., of mercy, as compared the Judgment for which Abel's blood cried from the ground, see &lt;&lt;Bbl Jms 2:13 &gt;&gt;.  Bruce renders the words here as &quot;speaks more graciously than the blood of Abel.&quot;  The tense is present because the full Judgment has not yet come; compare the cry of the martyrs in &lt;&lt;Bbl Rev 6:9 &gt;&gt;-11 .  Wuest, however, takes it as the blood of Abel's sacrifice  (Vol II, p. 228-29).  </pre>
</div>
<div title="Hell" modifier="SDM" created="201004120330">
<pre>Does not appear to have been created for its value as a deterrent.
When Jesus came, He taught more about Hell, far more, than had previously been known.</pre>
</div>
<div title="HelloThere" creator="psd" modifier="SDM" created="201012280613" modified="201212211554" tags="wiki wiki-link excludeSearch excludeLists" book_key="">
<pre>! Welcome to the ''Bible Wiki.''
* [[About These Notes]]
* [[Dev-Overview]]
* [[Wiki-ToDo]]
| Usage | Display |  Action |h
|{{{ &lt;&lt;Bbl Lk 7:1 &gt;&gt;   }}} |&lt;&lt;Bbl Lk 7:1 &gt;&gt;  |Points to 6.46 |
|{{{ &lt;&lt;Bbl Lk 7:1 abbr &gt;&gt;   }}} |&lt;&lt;Bbl Lk 7:1 abbr &gt;&gt;  |Points to 6.46 |
|{{{ &lt;&lt;Bbl Lk 7:1 &quot;&quot; note &gt;&gt;   }}} |&lt;&lt;Bbl Lk 7:1 &quot;&quot; note &gt;&gt;  |Points to 6.46 note |
&lt;&lt;tiddler HideTiddlerTags&gt;&gt; </pre>
</div>
<div title="Help" modifier="SDM" created="201208251616" modified="201208251617" book_key="">
<pre>* //a very ready help in times of trouble//
* Eve, help-meet.
* The Holy Spirit our Helper.
* //Available// = ''avail'' (help)  ''+ able''
* [[Rescue]]</pre>
</div>
<div title="Help and Support" creator="psd" modifier="jermolene" created="201102111106" modified="201111031657" tags="community gettingstarted help">
<pre>TiddlyWiki is an [[OpenSourceLicense|open source]] product, with most help and support being provided by the [[Community]]. The best way to get help with a specific problem is the TiddlyWiki DiscussionForums (it's worth searching the group archives to see if anyone else has already solved the same problem).

There are a number of other useful resources for learning about TiddlyWiki:

* [[TiddlerToddler|http://tiddlertoddler.tiddlyspot.com/]] from Julie Starr
* [[TwHelp|http://twhelp.tiddlyspot.com/]] from Morris Gray


</pre>
</div>
<div title="Heresy" modifier="SDM" created="201203050321" book_key="">
<pre>A good statement for understanding the scope of heresy from [[D. Musick|http://kenosis.info/index.shtml#KenoticistsChristian]]:
&lt;&lt;&lt;
Most kenotic theology is neo-Arian or neo-Nestorian; it destroys the efficacy of Christ's atoning blood. It either diminishes Christ's deity into something less than God and recreates God into three gods, or it separates the divine nature from the human nature, thus splitting the Person of Christ. Therefore, to the true, consistent kenoticist, Christ's blood has no intrinsic power to save us from sin. The true, consistent kenoticist is thus not a Christian.

However, many kenoticists are inconsistent in their Christology. They do not believe that Christ was sovereign when He died on the cross, but they do believe literally that the blood of Christ is the blood of God (Acts 20:28), and they believe literally that the blood of Jesus cleanses us from all sin (1Jn. 1:7). These kenoticists are brothers and sisters either who haven't taken the time to study the two natures of Christ, or they have been sidetracked and need to return to sound Biblical truth about our Lord's two natures.
&lt;&lt;&lt;</pre>
</div>
<div title="HideEditingFeatures" creator="psd" modifier="jermolene" created="201102111106" modified="201110201351" tags="features options">
<pre>This is an [[advanced option|AdvancedOptions]] that lets you choose whether editting features are shown when a TiddlyWiki file is viewed over {{{http:}}} (as opposed to {{{file:}}}).

To publish a TiddlyWiki with the editting features hidden you'll need to create a tiddler tagged with 'systemConfig' and include in it the line:

{{{
config.options.chkHttpReadOnly = true;
}}}

End users can then override the setting using the AdvancedOptions panel.
</pre>
</div>
<div title="HideTiddlerBackground" modifier="ELSDesignStudios" created="200602171545" tags="macro excludeLists">
<pre>/%
|Name|HideTiddlerBackground|
|Source|http://www.TiddlyTools.com/#HideTiddlerBackground|
|Version|0.0.0|
|Author|Eric Shulman - ELS Design Studios|
|License|http://www.TiddlyTools.com/#LegalStatements &lt;br&gt;and [[Creative Commons Attribution-ShareAlike 2.5 License|http://creativecommons.org/licenses/by-sa/2.5/]]|
|~CoreVersion|2.1|
|Type|script|
|Requires|InlineJavascriptPlugin|
|Overrides||
|Description|hide a tiddler's background and border (if any)|

Usage: &lt;&lt;tiddler HideTiddlerBackground&gt;&gt;

%/&lt;script&gt;
    var t=story.findContainingTiddler(place);
    if (!t || t.id==&quot;HideTiddlerBackground&quot;) return;
    var nodes=t.getElementsByTagName(&quot;*&quot;);
    for (var i=0; i&lt;nodes.length; i++) if (hasClass(nodes[i],&quot;viewer&quot;)) {
        var s=nodes[i].style;
        s.backgroundImage=&quot;none&quot;;
        s.backgroundColor=&quot;transparent&quot;
        s.borderColor=&quot;transparent&quot;;
        s.borderWidth=0;
        s.margin=0;
        s.padding=0;
        break;
    }
&lt;/script&gt;</pre>
</div>
<div title="HideTiddlerTags" modifier="SDM" created="200601042022" tags="macro excludeLists">
<pre>/%
|Name|HideTiddlerTags|
|Source|http://www.TiddlyTools.com/#HideTiddlerTags|
|Version|0.0.0|
|Author|Eric Shulman - ELS Design Studios|
|License|http://www.TiddlyTools.com/#LegalStatements &lt;br&gt;and [[Creative Commons Attribution-ShareAlike 2.5 License|http://creativecommons.org/licenses/by-sa/2.5/]]|
|~CoreVersion|2.1|
|Type|script|
|Requires|InlineJavascriptPlugin|
|Overrides||
|Description|hide a tiddler's tagged/tagging display elements|

Usage: &lt;&lt;tiddler HideTiddlerTags&gt;&gt;

%/&lt;script&gt;
    var t=story.findContainingTiddler(place);
    if (!t || t.id==&quot;tiddlerHideTiddlerTags&quot;) return;
    var nodes=t.getElementsByTagName(&quot;div&quot;);
    for (var i=0; i&lt;nodes.length; i++)
        if (hasClass(nodes[i],&quot;tagged&quot;))
            nodes[i].style.display=&quot;none&quot;;
&lt;/script&gt;</pre>
</div>
<div title="History" creator="jermolene" modifier="jermolene" created="201110201351" modified="201110201351">
<pre>Released in September 2004, the [[first version|firstversion.html]] was pretty basic, weighing in at 52KB.

Released in December 2004, the [[second version|secondversion.html]] of TiddlyWiki grew 50% over the FirstVersion to 76KB. It added IncrementalSearch, the ReferencesButton, the PermalinkCommand, PermaView, [[closeAll macro]], smooth scrolling, an improved sidebar, an animation for the CloseTiddlerCommand and a tiny Easter egg in homage for Macintosh OS X. It also introduced a new site design.

After that, there's a nearly complete archive of old versions of TiddlyWiki at:
* http://www.tiddlywiki.com/archive/
</pre>
</div>
<div title="HistoryRecountings" modifier="SDM" created="201010250259">
<pre>(Note fuller context of these  --  &quot;Therefore...&quot;)
* &lt;&lt;Bbl Dt.1-4FIXME_1Deu 1-4FIXME_2:         We are informed by 1:3 that Moses' account was directed specifically by God, and by v. 5 that this account was tantamount to an exposition of the Torah.   Moses is reminding the people of his authority and their support of his leadership, and of God's authority and their obedience and disobedience.  The circling of Mt. Seir is recorded.  2:10-12 and 20-3 record the displacements of specific families of giants.  The conquests over Sihon and Og are pivotal: after these victories, the dread of Israel falls upon the heathen.  After the overview of chapters 1-3, Moses focuses sternly on the encounter at Horeb in chap. 4 and exhorts Israel to obey God's commands.
* &lt;&lt;Bbl Dt.33FIXME_1Deu 33FIXME_2:       See Keil &amp; Delitzsche, vol.7, pp. 74f.
* &lt;&lt;Bbl Jos 24:2 &gt;&gt;-13 :    In recounting the election of Abraham, the deliverance from Pharaoh's oppression and Balaam's curse, the expulsion of the heathen &quot;not by your sword or your bow,&quot; and the bestowal of lands &quot;on which you had not labored,&quot; Joshua thoroughly emphasizes God's great grace towards His people.  Halfway through this narrative, Joshua dramatically shifts from &quot;the fathers&quot; to the people themselves: &quot;Your own eyes saw what I did in Egypt.&quot;  This is followed in v.14 by the command to fear and serve the Lord and put away idols, the threat of His sovereign Judgment, and the setting up of a stone of witness.
* &lt;&lt;Bbl Ps.78 &gt;&gt;:      God's faithfulness is the brilliant theme of this psalm.
* &lt;&lt;Bbl Ps.106FIXME_1Psa 106FIXME_2:         Each stanza recalls Israel's sin and God's fierce Judgment, axcept the five beginning and five ending verses, which declare and request His mercy.  (V.15 clearly recalls 78:29-31.)
* &lt;&lt;Bbl Ez.16FIXME_1Eze 16FIXME_2:       The first of two strongly poetic and even brutal accounts in Ezekiel (which in addition to these contains many less comprehensive recountings).  Israel is compared to a forsaken infant who by God's mercy becomes a beautiful woman, yet turns aside to the most obscene harlotry.
* &lt;&lt;Bbl Ez 23:1 &gt;&gt;-21 :    The account of Oholah and Oholibah.
* &lt;&lt;Bbl Neh.9FIXME_1Neh 9FIXME_2:         A terse description of God's faithfulness and Israel's disobedience in exalted language, which forms the prologue to a covenant restoring the right worship of God.
* &lt;&lt;Bbl Act 7:2 &gt;&gt;-53 :         Stephen's recounting of the period from Abraham's election to the building of Solomon's temple, abruptly followed by an indictment against the Jews before him and his stoning.  It is precise and consists largely of direct O.T. quotes.
* &lt;&lt;Bbl 1Co 10:1 &gt;&gt;-11 :    Paul's concise application of the history of Israel to our daily walk.</pre>
</div>
<div title="Holiness" modifier="SDM" created="201004120330" modified="201211250413" book_key="">
<pre>* &lt;&lt;Bbl Ps 29:9 &gt;&gt;, &lt;&lt;Bbl Ps 93:5 &gt;&gt;, &lt;&lt;Bbl Ez 43:10 &gt;&gt;-12 , &lt;&lt;Bbl Zec 14:20 &gt;&gt;-21 , &lt;&lt;Bbl 2Co 7:1 &gt;&gt;, &lt;&lt;Bbl Dt 6:1 &gt;&gt;-25 , &lt;&lt;Bbl Ez 44:13 &gt;&gt;-23 .
* &quot;Holy&quot; shares the same ~Anglo-Saxon root with &quot;whole.&quot;
* [[Separation]] from the [[World]].
* [[SpiritOfChrist]]
* //Consecration, purposefulness//
* {{anti{[[Desecration]]}}}
&lt;&lt;Bbl Ps 4:2 &gt;&gt;; &lt;&lt;Bbl 2Tim 2:4 &gt;&gt;; &lt;&lt;Bbl 1Cor 7:29&gt;&gt;-31; &lt;&lt;Bbl 2Tim 4:10 &gt;&gt;, &lt;&lt;Bbl 1Jn 2:15 &gt;&gt;-17 ; &lt;&lt;Bbl Jms 4:4 &gt;&gt;; &lt;&lt;Bbl Rom 12:2 &gt;&gt;, &lt;&lt;Bbl 2Cor 6:14 &gt;&gt;-18
!!! Provided by Christ
* &lt;&lt;Bbl Ps 119:32 &gt;&gt;
* &lt;&lt;Bbl 2Peter 1:3 &gt;&gt;-4
* Initial work: raising the standard of {{medium{[[Righteousness]]}}}.</pre>
</div>
<div title="Homosexuality" modifier="SDM" created="201004120330" modified="201112282048" book_key="">
<pre>* &lt;&lt;Bbl Lv 18:22 &gt;&gt;, &lt;&lt;Bbl 1Ki 22:46 &gt;&gt;
* Tm 1:10</pre>
</div>
<div title="Hope" modifier="SDM" created="201004120330" modified="201301121920" book_key="">
<pre>* &lt;&lt;Bbl Ez 12:23 &gt;&gt;
* &lt;&lt;Bbl Jer 29:11 &gt;&gt;-14
* &lt;&lt;Bbl Rom 15:4 &gt;&gt;
* &lt;&lt;Bbl Rom 8:24 &gt;&gt;-25
* &lt;&lt;Bbl Col 1:23 &gt;&gt;
* &lt;&lt;Bbl Heb 6:18 &gt;&gt;-19
* [[Faith]], [[Security]]
* [[Christ]] our Hope
* [[Heaven]]
* Hope of [[Resurrection]]</pre>
</div>
<div title="Horizontal Rule Formatting" creator="matt" modifier="psd" created="201102111428" modified="201102151518" tags="formatting">
<pre>Four dashes on a line by themselves are used to introduce a horizontal rule:
{{{
Before the rule
----
After the rule
}}}
Displays as:

Before the rule
----
After the rule

The HTML tag {{{&lt;hr&gt;}}} can be used as an alternative syntax:

{{{
Before the rule&lt;hr&gt;After the rule
}}}
Displays as:

Before the rule&lt;hr&gt;After the rule
</pre>
</div>
<div title="Horse" modifier="SDM" created="201004120330" modified="201212171702" tags="Living-Animal" book_key="">
<pre>'' Weapon ''
* The offensive weapon in ancient [[War]].
* &lt;&lt;Bbl Dt 17:16 &gt;&gt;; &lt;&lt;Bbl Josh 11:6 &gt;&gt;; &lt;&lt;Bbl Is 2:7 &gt;&gt;, &lt;&lt;Bbl Is 30:16 &gt;&gt;, &lt;&lt;Bbl Is 36:8 &gt;&gt;; &lt;&lt;Bbl Amos 4:10 &gt;&gt;; &lt;&lt;Bbl Ps 147:10 &gt;&gt;.
''Symbol of [[Pride]]''
* I have recorded that the Greek word for //humility// is rooted in the idea of a horse made tame.
* @@color:brown;Just donÃÂ¢ÃÂÃÂt let them put me on a horse.@@ // -- Eisenhower, when asked in his old age how he wanted to be memorialized.//</pre>
</div>
<div title="Hospitality" modifier="SDM" created="201004120330" modified="201010252058">
<pre>&lt;&lt;Bbl 2Kngs 4:8 &gt;&gt;-10 ; &lt;&lt;Bbl 1Pt 4:9 &gt;&gt; (NAS marginal note).  </pre>
</div>
<div title="Host" modifier="SDM" created="201211241950" modified="201302121410" book_key="">
<pre>* Not alone!
* [[Remnant]]
* The //Lord of Hosts//.
* &lt;&lt;Bbl 1Kings 19:18&gt;&gt; //Yet 4,000 who have not bowed the knee//
* Obadiah hiding the prophets in the caves
* Hebrews:  //These trials are suffered also by others//
* Josaph:  //Who is with me?  Anyone?//
* //Fall in behind me//
* The retinue of a (wanna-be) [[King]]
* &lt;&lt;Bbl 1Pt 5:9 &gt;&gt;
* {{anti{ [[Solitude]], [[Loneliness]]}}}</pre>
</div>
<div title="HostedOptions" creator="jermolene" modifier="jermolene" created="201102111508" modified="201210011234">
<pre>There are several ways that you can have your TiddlyWiki data hosted online, making it easier to access and share your information.

!~TiddlySpot
[&lt;img[http://tiddlyspot.com/_ts/images/banner-logo.png][TiddlySpot|http://tiddlyspot.com]] ~TiddlySpot lets you put TiddlyWiki documents on the Web, and edit them directly in your browser. It doesn't yet offer full support for simultaneous editing by multiple users.

!~DropBox
Many people use [[DropBox|http://dropbox.com]] to synchronise their TiddlyWiki documents to make them available on multiple computers. The ~DropBox iPhone/iPad application also permits read only access to TiddlyWiki documents. See [[A Personal Knowledgebase Solution: Tiddlywiki and Dropbox|http://www.broowaha.com/articles/7671/a-personal-knowledgebase-solution-tiddlywiki-and-dropbox]]

!~TiddlyWeb &amp; ~TiddlySpace
[&lt;img[TiddlySpace|http://tiddlyspace.com/bags/frontpage_public/tiddlers/shinyspace.png][http://tiddlyspace.com]] [[TiddlySpace|http://tiddlyspace.com]] is a full hosted service for TiddlyWiki that allows multiple people to edit the same wiki at the same time. It is particularly focussed on sharing tiddlers.

~TiddlySpace is built on top of [[TiddlyWeb|http://tiddlyweb.com]], a flexible architecture for putting tiddlers on the web.

!TiddlyWiki Server for node.js (TWS)
[[TWS|https://github.com/PoulStaugaard/TWS]] by Poul Staugaard is a simple node.js based serverside for TiddlyWiki.

!~GieWiki
[[GieWiki|http://code.google.com/p/giewiki/]] by Poul Staugaard is a new serverside for TiddlyWiki that focusses on making TiddlyWiki behave like a real wiki, with preview and versioning of tiddlers, any number of pages in any hierachy, an auto-generated sitemap, comments on tiddlers, fine-grained access control, image upload, recent changes etc. You can see a default instance at http://giewiki.appspot.com/.

!ccTiddly
[[ccTiddly|http://tiddlywiki.org/#ccTiddly]] is an older serverside written in PHP to use [[MySQL|http://en.wikipedia.org/wiki/MySQL]] for storage. It is no longer under active development, but remains a popular choice for basic TiddlyWiki hosting needs.

!~TiddlyCouch
[[TiddlyCouch|http://bijl.iriscouch.com/bijl-ctw/_design/tiddlycouch/_list/tiddlywiki/tiddlers]] is an experimental integration of TiddlyWiki with CouchDB.
</pre>
</div>
<div title="House" modifier="SDM" created="201011010114" modified="201211121531" tags="House" book_key="">
<pre>* //building, edifice, edify; temple, building, dwelling, roof//.
* //Tabernacle, booth, fortress, stronghold, prison.//
* [[BuildingUp]]; //Deconstructionism, tearing down//
* Proverbs -- //the wise woman builds ...//
* &lt;&lt;Bbl Mt 7:27 &gt;&gt;
* &lt;&lt;Bbl Heb 3:1 &gt;&gt;-6
* &lt;&lt;Bbl Mt 7:24 &gt;&gt; -- I will liken him to a wise man, who built his house on a rock.  The rain came down, the floods came ...
* &lt;&lt;Bbl Heb 3:1&gt;&gt;-6 -- For [Jesus] has been counted worthy of more glory than Moses, inasmuch as he who built the house has more honor than the house.  For every house is built by someone; but he who built all things is God.  ... Christ is faithful as a Son over his house; whose house we are, if we hold fast our confidence and the glorying of our hope firm to the end.
* &lt;&lt;Bbl Pr 10:25 &gt;&gt; -- When the whirlwind passes, the wicked is no more; but the righteous stand firm forever.
* &lt;&lt;Bbl 1Pt 2:4&gt;&gt;-5 -- As you come to him, the living Stone -- rejected by men but chosen by God and precious to him -- you also, like living stones, are being built into a spiritual house to be a holy priesthood, offering spiritual sacrifices acceptable to God through Jesus Christ.
* &lt;&lt;Bbl 1Cor 3:9&gt;&gt;-17 -- You are ... God's building.   According to the grace of God which was given to me, as a wise master builder I laid a foundation, and another builds on it. But let each man be careful how he builds on it.   For no one can lay any other foundation than that which has been laid, which is Jesus Christ.  But if anyone builds on the foundation with gold, silver, costly stones, wood, hay, or stubble;  each man's work will be revealed. For the Day will declare it, because it is revealed in fire; and the fire itself will test what sort of work each man's work is.   If any man's work remains which he built on it, he will receive a reward.   If any man's work is burned, he will suffer loss, but he himself will be saved, but as through fire.   Don't you know that you are a temple of God, and that God's Spirit lives in you?   If anyone destroys the temple of God, God will destroy him; for God's temple is holy, which you are.
!!!! Tiddlers tagged with //House//
&lt;&lt;matchTags '* %0' '\n' House &gt;&gt;</pre>
</div>
<div title="HoverMenu" modifier="SDM" created="201211210150" modified="201212211555" tags="macro menu excludeLists" book_key="">
<pre>&lt;&lt;top&gt;&gt;
&lt;&lt;closeAll&gt;&gt;&lt;&lt;renameButton c 'Close all tiddlers'&gt;&gt;&lt;&lt;toggleSideBar '' '' hide&gt;&gt;&lt;&lt;renameButton '&gt;' &gt;&gt;
&lt;&lt;jump j '' top&gt;&gt;
&lt;&lt;saveChanges&gt;&gt;&lt;&lt;renameButton s 'Save TiddlyWiki'&gt;&gt;
{{button{[[Bible-Index]]}}}&lt;&lt;renameButton b 'Open Bible Index'&gt;&gt;
&lt;&lt;newTiddler&gt;&gt;&lt;&lt;renameButton n&gt;&gt;
</pre>
</div>
<div title="HoverMenuCommandsPlugin" modifier="SDM" created="201211291838" modified="201212211554" tags="systemConfig macro excludeLists" book_key="">
<pre>/***
Start ToggleSideBarMacro code
***/
//{{{
config.macros.toggleSideBar={};

config.macros.toggleSideBar.settings={
         styleHide :  &quot;#sidebar { display: none;}\n&quot;+&quot;#contentWrapper #displayArea { margin-right: 1em;}\n&quot;+&quot;&quot;,
         styleShow : &quot; &quot;,
         arrow1: &quot; -- &quot;,
         arrow2: &quot; -- &quot;
};

config.macros.toggleSideBar.handler=function (place,macroName,params,wikifier,paramString,tiddler)
{
          var tooltip= params[1]||'toggle sidebar';
          var mode = (params[2] &amp;&amp; params[2]==&quot;hide&quot;)? &quot;hide&quot;:&quot;show&quot;;
          var arrow = (mode == &quot;hide&quot;)? this.settings.arrow1:this.settings.arrow2;
          var label= (params[0]&amp;&amp;params[0]!='.')?params[0]+&quot; &quot;+arrow:arrow;
          var theBtn = createTiddlyButton(place,label,tooltip,this.onToggleSideBar,&quot;button HideSideBarButton&quot;);
          if (mode == &quot;hide&quot;)
             {
             (document.getElementById(&quot;sidebar&quot;)).setAttribute(&quot;toggle&quot;,&quot;hide&quot;);
              setStylesheet(this.settings.styleHide,&quot;ToggleSideBarStyles&quot;);
             }
};

config.macros.toggleSideBar.onToggleSideBar = function(){
          var sidebar = document.getElementById(&quot;sidebar&quot;);
          var settings = config.macros.toggleSideBar.settings;
          if (sidebar.getAttribute(&quot;toggle&quot;)=='hide')
             {
              setStylesheet(settings.styleShow,&quot;ToggleSideBarStyles&quot;);
              sidebar.setAttribute(&quot;toggle&quot;,&quot;show&quot;);
              this.firstChild.data= (this.firstChild.data).replace(settings.arrow1,settings.arrow2);
              }
          else
              {
               setStylesheet(settings.styleHide,&quot;ToggleSideBarStyles&quot;);
               sidebar.setAttribute(&quot;toggle&quot;,&quot;hide&quot;);
               this.firstChild.data= (this.firstChild.data).replace(settings.arrow2,settings.arrow1);
              }

     return false;
}

setStylesheet(&quot;.HideSideBarButton .button {font-weight:bold; padding: 0 5px;}\n&quot;,&quot;ToggleSideBarButtonStyles&quot;);
//}}}
//end ToggleSideBarMacro code

//start JumpToTopMacro code
//{{{
config.macros.top={};
config.macros.top.handler=function(place,macroName)
{
               createTiddlyButton(place,&quot;^&quot;,&quot;jump to top&quot;,this.onclick);
}
config.macros.top.onclick=function()
{
               window.scrollTo(0,0);
};

config.commands.top =
{
               text:&quot; ^ &quot;,
               tooltip:&quot;jump to top&quot;
};

config.commands.top.handler = function(event,src,title)
{
               window.scrollTo(0,0);
}
//}}}
//end JumpToStartMacro code

//start JumpMacro code
//{{{
config.macros.jump= {};
config.macros.jump.handler = function (place,macroName,params,wikifier,paramString,tiddler)
{
        var label = (params[0] &amp;&amp; params[0]!=&quot;.&quot;)? params[0]: 'jump';
        var tooltip = (params[1] &amp;&amp; params[1]!=&quot;.&quot;)? params[1]: 'jump to an open tiddler';
        var top = (params[2] &amp;&amp; params[2]=='top') ? true: false;

        var btn =createTiddlyButton(place,label,tooltip,this.onclick);
        if (top==true)
              btn.setAttribute(&quot;top&quot;,&quot;true&quot;)
}

config.macros.jump.onclick = function(e)
{
        if (!e) var e = window.event;
        var theTarget = resolveTarget(e);
        var top = theTarget.getAttribute(&quot;top&quot;);
    var popup = Popup.create(this);
    if(popup)
        {
                 if(top==&quot;true&quot;)
                                {createTiddlyButton(createTiddlyElement(popup,&quot;li&quot;),'Top ?','Top of TW',config.macros.jump.top);
                                 createTiddlyElement(popup,&quot;hr&quot;);}

        story.forEachTiddler(function(title,element) {
            createTiddlyLink(createTiddlyElement(popup,&quot;li&quot;),title,true);
            });
                }
    Popup.show(popup,false);
    e.cancelBubble = true;
    if (e.stopPropagation) e.stopPropagation();
    return false;
}

config.macros.jump.top = function()
{
       window.scrollTo(0,0);
}
//}}}
//end JumpMacro code

//utility functions
//{{{
Popup.show = function(unused,slowly)
{
    var curr = Popup.stack[Popup.stack.length-1];
    var rootLeft = findPosX(curr.root);
    var rootTop = findPosY(curr.root);
    var rootHeight = curr.root.offsetHeight;
    var popupLeft = rootLeft;
    var popupTop = rootTop + rootHeight;
    var popupWidth = curr.popup.offsetWidth;
    var winWidth = findWindowWidth();
        if (isChild(curr.root,'hoverMenu'))
              var x = config.hoverMenu.settings.x;
        else
              var x = 0;
    if(popupLeft + popupWidth+x &gt; winWidth)
        popupLeft = winWidth - popupWidth -x;
        if (isChild(curr.root,'hoverMenu'))
            {curr.popup.style.right = x + &quot;px&quot;;}
        else
                curr.popup.style.left = popupLeft + &quot;px&quot;;
    curr.popup.style.top = popupTop + &quot;px&quot;;
    curr.popup.style.display = &quot;block&quot;;
    addClass(curr.root,&quot;highlight&quot;);
    if(config.options.chkAnimate)
        anim.startAnimating(new Scroller(curr.popup,slowly));
    else
        window.scrollTo(0,ensureVisible(curr.popup));
}

window.isChild = function(e,parentId) {
        while (e != null) {
                var parent = document.getElementById(parentId);
                if (parent == e) return true;
                e = e.parentNode;
                }
        return false;
};


config.macros.renameButton={};
config.macros.renameButton.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{

               if (place.lastChild.tagName!=&quot;BR&quot;)
                     {
                      place.lastChild.firstChild.data = params[0];
                      if (params[1]) {place.lastChild.title = params[1];}
                     }
};
//}}}</pre>
</div>
<div title="HowTo" modifier="SDM" created="201211121502" modified="201211121502" tags="wiki" book_key="">
<pre>&lt;&lt;matchTags &quot;* %0&quot; &quot;\n&quot; howto &gt;&gt;</pre>
</div>
<div title="HowToUpgrade" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="instructions">
<pre>The core TiddlyWiki code is regularly updated with bug fixes and new features. If you're using an earlier revision of TiddlyWiki, you should consider upgrading to the latest version.

The steps you need to take depend on which version of TiddlyWiki you are upgrading from. From version 2.4.0 onwards, you can upgrade to the latest version using the 'Upgrade' tab in the BackstageArea, as described below. If you're using an earlier version of TiddlyWiki, you'll need to follow [[these instructions|HowToUpgradeOlderTiddlyWikis]] instead.

! Upgrading from ~TiddlyWiki 2.4.0+ to the most recent version
* Open the BackstageArea by clicking the 'backstage' button at the top right
* Click on the 'Upgrade' tab
* Click on the 'Upgrade' button, and follow the prompts</pre>
</div>
<div title="HowToUpgradeOlderTiddlyWikis" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="instructions">
<pre>The steps you need to take depend on which version of TiddlyWiki you are upgrading from. From version 2.4.0 onwards, you can upgrade to the latest version using the 'Upgrade' tab in the BackstageArea, as described in HowToUpgrade. If you're using an earlier version of TiddlyWiki, you'll need to follow these instructions instead:
! Upgrading from TiddlyWiki earlier than version 2.4.0 to the latest version
* Download a fresh, empty version of TiddlyWiki by right-clicking on [[this link|http://www.tiddlywiki.com/empty.html]], selecting 'Save target' or 'Save link' and saving it in a convenient location as (say) &quot;mynewtiddlywiki.html&quot;
* Open the new TiddlyWiki file in your browser
* Choose ''import'' from the BackstageArea at the top of the window (you may need to click the 'backstage' button at the upper right to show the BackstageArea)
* Click the ''browse'' button and select your original TiddlyWiki file (say, &quot;mytiddlywiki.html&quot;) from the file browser
* Click the ''open'' button on the import wizard; a list of all of your tiddlers is displayed
* Click on the top-left checkbox to select all the tiddlers in the list
* Scroll down to the bottom of the wizard and ensure that the checkbox labelled //Keep these tiddlers linked to this server...// is ''clear''
* Click the ''import'' button
The most likely cause of the upgrade process not working properly is that one of the [[Plugins]] you're using is not compatible with a change in the new release. If so, you can repeat the process omitting the troublesome plugins.</pre>
</div>
<div title="HtmlEntities" creator="psd" modifier="jermolene" created="201102111106" modified="201102111621" tags="formatting">
<pre>Entities in HTML documents allow characters to be entered that can't easily be typed on an ordinary keyboard. They take the form of an ampersand (&amp;), an identifying string, and a terminating semi-colon (;). There's a complete reference [[here|http://www.htmlhelp.com/reference/html40/entities/]]; some of the more common and useful ones are shown below.

|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;| !HTML Entities |
| &amp;amp;nbsp; | &amp;nbsp; | no-break space | &amp;nbsp;&amp;nbsp; | &amp;amp;apos; | &amp;apos; | single quote, apostrophe |
| &amp;amp;ndash; | &amp;ndash; | en dash |~| &amp;amp;quot; | &quot; | quotation mark |
| &amp;amp;mdash; | &amp;mdash; | em dash |~| &amp;amp;prime; | &amp;prime; | prime; minutes; feet |
| &amp;amp;hellip; | &amp;hellip; |	horizontal ellipsis |~| &amp;amp;Prime; | &amp;Prime; | double prime; seconds; inches |
| &amp;amp;copy; | &amp;copy; | Copyright symbol |~| &amp;amp;lsquo; | &amp;lsquo; | left single quote |
| &amp;amp;reg; | &amp;reg; | Registered symbol |~| &amp;amp;rsquo; | &amp;rsquo; | right  single quote |
| &amp;amp;trade; | &amp;trade; | Trademark symbol |~| &amp;amp;ldquo; | &amp;ldquo; | left double quote |
| &amp;amp;dagger; | &amp;dagger; | dagger |~| &amp;amp;rdquo; | &amp;rdquo; | right double quote |
| &amp;amp;Dagger; | &amp;Dagger; | double dagger |~| &amp;amp;laquo; | &amp;laquo; | left angle quote |
| &amp;amp;para; | &amp;para; | paragraph sign |~| &amp;amp;raquo; | &amp;raquo; | right angle quote |
| &amp;amp;sect; | &amp;sect; | section sign |~| &amp;amp;times; | &amp;times; | multiplication symbol |
| &amp;amp;uarr; | &amp;uarr; | up arrow |~| &amp;amp;darr; | &amp;darr; | down arrow |
| &amp;amp;larr; | &amp;larr; | left arrow |~| &amp;amp;rarr; | &amp;rarr; | right arrow |
| &amp;amp;lArr; | &amp;lArr; | double left arrow |~| &amp;amp;rArr; | &amp;rArr; | double right arrow |
| &amp;amp;harr; | &amp;harr; | left right arrow |~| &amp;amp;hArr; | &amp;hArr; | double left right arrow |

The table below shows how accented characters can be built up by subsituting a base character into the various accent entities in place of the underscore ('_'):

|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;| !Accented Characters |
| grave accent | &amp;amp;_grave; | &amp;Agrave; | &amp;agrave; | &amp;Egrave; | &amp;egrave; | &amp;Igrave; | &amp;igrave; | &amp;Ograve; | &amp;ograve; | &amp;Ugrave; | &amp;ugrave; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; |
| acute accent | &amp;amp;_acute; | &amp;Aacute; | &amp;aacute; | &amp;Eacute; | &amp;eacute; | &amp;Iacute; | &amp;iacute; | &amp;Oacute; | &amp;oacute; | &amp;Uacute; | &amp;uacute; | &amp;nbsp; | &amp;nbsp; | &amp;Yacute; | &amp;yacute; | &amp;nbsp; | &amp;nbsp; |
| circumflex accent | &amp;amp;_circ; | &amp;Acirc; | &amp;acirc; | &amp;Ecirc; | &amp;ecirc; | &amp;Icirc; | &amp;icirc; | &amp;Ocirc; | &amp;ocirc; | &amp;Ucirc; | &amp;ucirc; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; |
| umlaut mark | &amp;amp;_uml; | &amp;Auml; | &amp;auml; |  &amp;Euml; | &amp;euml; | &amp;Iuml; | &amp;iuml; | &amp;Ouml; | &amp;ouml; | &amp;Uuml; | &amp;uuml; | &amp;nbsp; | &amp;nbsp; | &amp;Yuml; | &amp;yuml; | &amp;nbsp; | &amp;nbsp; |
| tilde | &amp;amp;_tilde; | &amp;Atilde; | &amp;atilde; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;Otilde; | &amp;otilde; | &amp;nbsp; | &amp;nbsp; | &amp;Ntilde; | &amp;ntilde; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; |
| ring | &amp;amp;_ring; | &amp;Aring; | &amp;aring; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; |
| slash | &amp;amp;_slash; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;Oslash; | &amp;oslash; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; |
| cedilla | &amp;amp;_cedil; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;nbsp; | &amp;Ccedil; | &amp;ccedil; |</pre>
</div>
<div title="Humility" modifier="SDM" created="201004120330" modified="201210091517" book_key="">
<pre>* [[Lowliness]]
* [[Limitations]]
* [[Attitude]]
* Moses:        &lt;&lt;Bbl Num 12:3 &gt;&gt;, &lt;&lt;Bbl Ex 32:20 &gt;&gt;.
* Daniel:       &lt;&lt;Bbl Dan 2:30 &gt;&gt;
* Paul &amp; Peter:     (&quot;as if by our own power or piety...&quot;)
* Jesus:        &lt;&lt;Bbl Mt 11:29 &gt;&gt;, &lt;&lt;Bbl Mt 21:12 &gt;&gt;-13 ; &lt;&lt;Bbl Php 2:5 &gt;&gt;-8
* false:        &lt;&lt;Bbl 2Ki 6:30 &gt;&gt;
* at the banquet table:  &lt;&lt;Bbl Pr 25:6 &gt;&gt;-7 ; &lt;&lt;Bbl Lk 14:7 &gt;&gt;-11
* in knowing one's weakness:  &lt;&lt;Bbl 1Cor 10:12 &gt;&gt;; &lt;&lt;Bbl Gal 6:1 &gt;&gt;
* as a child:   &lt;&lt;Bbl Ps 127:3 &gt;&gt;-5 , &lt;&lt;Bbl Ps 128:3 &gt;&gt;
* failure in this:      &lt;&lt;Bbl Job 12:5 &gt;&gt;.  See [[Moses]].
* Godly conduct:  &lt;&lt;Bbl Tit 3:2 &gt;&gt;
* God upholds:  &lt;&lt;Bbl Mt 12:20 &gt;&gt;
* misc.:        &lt;&lt;Bbl Ps.131 &gt;&gt;, &lt;&lt;Bbl Dan 4:37 &gt;&gt;; &lt;&lt;Bbl Php 2:3 &gt;&gt;
* Humbling, by God  &lt;&lt;Bbl 2Ki 1:9 &gt;&gt;-15 , &lt;&lt;Bbl 2Ki 5:8 &gt;&gt;-14 , &lt;&lt;Bbl Dan 4:37 &gt;&gt;, &lt;&lt;Bbl 2Ki 17:25 &gt;&gt;.
* Pro 25:27 //not good to eat too much honey, nor is it honorable to seek one's own honor//
* Birds can count.  Sort of.  British hunters have tricks based on the apparently sound theory that they can count to three.  What if we have limitations?  How would we know if we do? </pre>
</div>
<div title="Hypocrisy" modifier="SDM" created="201004120330" modified="201211250629" book_key="">
<pre>* Our English word shares the same root as the Greek word for &quot;theater&quot;.  The Greek word for &quot;sincere&quot; adds a negative prefix to that word.
* Always entails [[Deceit]].  But it is often flung out as a provocative insult against people who are not liars.
* Of course, [[Denial]] is always a danger.
* Ananias and Sapphira did not even rise to a significant level of external obedience.  Their actions merely displayed the heart, for they did not choose to make God their resource.  //Where your heart is, there will your treasure be also.//
* Judas was a betrayer, and he used to filch from the benevolence purse.  You know Peter was thinking of him when Ananias tried to deceive him.
* [[Counterfeit]]</pre>
</div>
<div title="Identification" modifier="SDM" created="201010270158" modified="201212011647" book_key="">
<pre>* [[Compassion]]
!! Man with God
* &lt;&lt;Bbl Ps 69:9 &gt;&gt;
* &lt;&lt;Bbl Ez 2:7 &gt;&gt;
* &lt;&lt;Bbl Mt 10:24 &gt;&gt;-25
* &lt;&lt;Bbl Jn 13:20 &gt;&gt;,
* &lt;&lt;Bbl Jn 15:15 &gt;&gt;,
* &lt;&lt;Bbl Jn 20:17 &gt;&gt;;
* &lt;&lt;Bbl Acts 9:5 &gt;&gt;.
!! God with man
* &lt;&lt;Bbl Is 63:9 &gt;&gt;; &lt;&lt;Bbl 1Sam 8:7 &gt;&gt;-8 ; &lt;&lt;Bbl Mk 9:37 &gt;&gt;; &lt;&lt;Bbl Lk 10:16 &gt;&gt;; &lt;&lt;Bbl Ex 4:15 &gt;&gt;
!! Man with man
* &lt;&lt;Bbl Is 58:7 &gt;&gt;; &lt;&lt;Bbl Eph 5:29 &gt;&gt;; &lt;&lt;Bbl 1Sam 18:3 &gt;&gt;; James 1? //your own flesh//
* OT law of [[Redemption]]
!! Man with wife
* Genesis 2:23 And Adam said, This is now bone of my bones, and flesh of my flesh: she shall be called Woman, because she was taken out of Man.
* Matthew 19:5 And said, For this cause shall a man leave father and mother, and shall cleave to his wife: and they twain shall be one flesh?
!! [[Individual]] vs. Group
* &lt;&lt;Bbl 1Cor 12:25 &gt;&gt;
* &lt;&lt;Bbl 1Sam 22:23&gt;&gt;</pre>
</div>
<div title="Idolatry" modifier="SDM" created="201004120330" modified="201010251554">
<pre>The Lord we serve to His [[Glory]], an idol to our own.  But &quot;He will not give His glory to another.&quot;
* Israel's idolatry was usually syncretistic, invoking the name of the Lord.
* [[Counterfeit]]
&lt;&lt;Bbl Ex 18:11 abbr &gt;&gt;, &lt;&lt;Bbl Ex 20:25 &gt;&gt;-26
&lt;&lt;Bbl Num 33:4 abbr &gt;&gt;.
&lt;&lt;Bbl Dt 4:15 abbr &gt;&gt;-19 , &lt;&lt;Bbl Dt 32:16 &gt;&gt;-17 .
&lt;&lt;Bbl Jud 8:24 abbr &gt;&gt;-27 , &lt;&lt;Bbl Jud 10:14 &gt;&gt;
&lt;&lt;Bbl 1Sam 4:3 abbr &gt;&gt;, &lt;&lt;Bbl 1Sam 5:1 &gt;&gt;-5 ), 12:21.
2Kng 16:10-18, 17:7-12,27-41, 18:4,33-35.
&lt;&lt;Bbl Ps 69:5 abbr &gt;&gt;, &lt;&lt;Bbl Ps 97:7 &gt;&gt;.
&lt;&lt;Bbl Is 2:8 abbr &gt;&gt;, &lt;&lt;Bbl Is 10:10 &gt;&gt;-11 , &lt;&lt;Bbl Is 17:7 &gt;&gt;-10 , &lt;&lt;Bbl Is 37:19 &gt;&gt;, &lt;&lt;Bbl Is 40:18 &gt;&gt;-20 , &lt;&lt;Bbl Is 41:7 &gt;&gt;, &lt;&lt;Bbl Is 42:17 &gt;&gt;, &lt;&lt;Bbl Is 46:5 &gt;&gt;-7 , &lt;&lt;Bbl Is 48:5 &gt;&gt;, &lt;&lt;Bbl Is 44:12 &gt;&gt;-20
&lt;&lt;Bbl Jer 2:9 abbr &gt;&gt;-13 , &lt;&lt;Bbl Jer 3:9 &gt;&gt;, &lt;&lt;Bbl Jer 10:11 &gt;&gt;, &lt;&lt;Bbl Jer 16:20 &gt;&gt;.
&lt;&lt;Bbl Ez 7:8 abbr &gt;&gt;,&lt;&lt;Bbl Ez 14:3 &gt;&gt;-7 , &lt;&lt;Bbl Ez 16:16 &gt;&gt;-21 ; &lt;&lt;Bbl Ez 20:27 &gt;&gt;-32 .
&lt;&lt;Bbl Dan 5:4 abbr &gt;&gt;, &lt;&lt;Bbl Dan 3:6 &gt;&gt; (power of Judgment).
&lt;&lt;Bbl Hos 2:8 abbr &gt;&gt;, &lt;&lt;Bbl Hos 3:4 &gt;&gt;, &lt;&lt;Bbl Hos 4:12 &gt;&gt;, &lt;&lt;Bbl Hos 9:10 &gt;&gt;, &lt;&lt;Bbl Hos 8:4 &gt;&gt;-7 , &lt;&lt;Bbl Hos 13:10 &gt;&gt;-11 .
&lt;&lt;Bbl Amo 5:25 abbr &gt;&gt;-26 .
&lt;&lt;Bbl Hab 1:11 abbr &gt;&gt;, &lt;&lt;Bbl Hab 2:18 &gt;&gt;-22 .
&lt;&lt;Bbl Zep 2:11 abbr &gt;&gt;, &lt;&lt;Bbl Zep 1:4 &gt;&gt;-6 .
&lt;&lt;Bbl Col 3:5 abbr &gt;&gt; (greed), &lt;&lt;Bbl Eph 5:5 &gt;&gt;, &lt;&lt;Bbl 1Co 10:20 &gt;&gt;, &lt;&lt;Bbl Rev 9:20 &gt;&gt;.
Goat demon -- &lt;&lt;Bbl Lv 17:7 &gt;&gt;, &lt;&lt;Bbl 2Chr 11:15 &gt;&gt;.</pre>
</div>
<div title="Image Formatting" creator="matt" modifier="psd" created="201102111430" modified="201102151519" tags="formatting">
<pre>!Simple Images
{{{
[img[http://wikitext.tiddlyspace.com/fractalveg.jpg]]
}}}
Displays as:
[img[http://wikitext.tiddlyspace.com/fractalveg.jpg]]
!Tooltips for Images
{{{
[img[tooltip|http://wikitext.tiddlyspace.com/fractalveg.jpg]]
}}}
Displays as:
[img[tooltip|http://wikitext.tiddlyspace.com/fractalveg.jpg]]
!Image Links
{{{
[img[http://wikitext.tiddlyspace.com/fractalveg.jpg][http://www.flickr.com/photos/jermy/10134618/]]
}}}
Displays as:
[img[http://wikitext.tiddlyspace.com/fractalveg.jpg][http://www.flickr.com/photos/jermy/10134618/]]
!Floating Images with Text
{{{
[&lt;img[http://wikitext.tiddlyspace.com/fractalveg.jpg]]
}}}
[&lt;img[http://wikitext.tiddlyspace.com/fractalveg.jpg]]Displays as.
{{{
@@clear:both;display:block; @@
}}}
Will then clear the float.
@@clear:both;display:block;Like this@@
{{{
[&gt;img[http://wikitext.tiddlyspace.com/fractalveg.jpg]]
}}}
[&gt;img[http://wikitext.tiddlyspace.com/fractalveg.jpg]]Displays as.@@clear:both;display:block; @@
!See Also
[[Image Macro]]</pre>
</div>
<div title="Image-Metaphor" modifier="SDM" created="201010291348" modified="201210212128" book_key="">
<pre>Some image-ideas pervade the entire Bible:
* [[River]], water
* [[Tree]]
* [[Wine]] -- man's innovation, a contrast
* [[Family]]
* [[Clothing]]/nakedness -- man's innovation, a contrast
* [[Light]]/dark
* [[Rock]] (foundation)
* [[Living-Animal]]
* [[Living-Plant]]
----
* //type, symbol, typograph//</pre>
</div>
<div title="Immorality" modifier="SDM" created="201109071356" modified="201211161342" book_key="">
<pre>1Tim 3 2 one wife
* &lt;&lt;Bbl 1Tim 3 2&gt;&gt; //...of one wife // -- In Roman culture a wealthy man customarily had a wife, a Grecian slave girl, and a temple prostitute on retainer.
* {{anti{[[ImmoralityAvoid]]}}}</pre>
</div>
<div title="ImmoralityAvoid" modifier="SDM" created="201201301547" modified="201211161342" book_key="">
<pre>Probably good to view foolishness in this area as simply that -- and not as sin.
* {{anti{[[Immorality]]}}}
* [[Uprightness]]
* [[Ministry]]
!!! Inner danger
* [[Marriage]]
* [[Purity]]
* &lt;&lt;Bbl 1Tim 2:22 &gt;&gt;
!!! Outside danger -- reputation
* The greatest builder of one's [[Reputation]] is to remain morally pure.  //Gene Getz. //
* If you can t trust a man morally, you can't trust him.  //Gene Getz, as heard from a business leader//
* Jonathan points out that while one might be concerned about his reputation when driving with a woman, it's not just about being seen by people he knows.  Those people can say &quot;that's not normal; is something wrong here?&quot;  But concern also for those who DON'T know him or the woman, for they will assume they are together, and what danger could arise from that?  (Must ask him how precisely that might work; seems valid to me, but not sure how.)
* By the way, there are cameras everywhere.
* See entry on Billy Graham in Scott Wiki.
* The degree to which you neglect the rules indicates a failure to understand one of these:
## The deadliness and hatred of satan
## The cunning of satan
## The [[Value]] of your ministry.
* [[Openness]] is achieved by avoiding {{anti{[[Secrecy]]}}}.
!!! Examples in History
* Phineas.</pre>
</div>
<div title="Importing Tiddlers" creator="psd" modifier="jermolene" created="201103011514" modified="201110201351">
<pre>To import tiddlers from another ~TiddlyWiki file, or from an external website, follow these instructions.
#If the tiddler is on an external site, first copy the URL of the site which includes the tiddler you'd like to download into your clipboard (eg http://www.tiddlytools.com)
#Open your local ~TiddlyWiki file from your computer.
#Click on the 'Backstage' link that you can see at the very top right hand side of the page.
#In the menu, click on 'Import'. You will then see a window that looks like this - and you can follow the guidance from there. Note that you may need to grant authorisation to your ~TiddlyWiki file to import tiddlers - this is fine and expected.
To import tiddlers from another ~TiddlyWiki file, or from an external website, follow these instructions.
#If the tiddler is on an external site, first copy the URL of the site which includes the tiddler you'd like to download into your clipboard (eg http://www.tiddlytools.com)
#Open your local ~TiddlyWiki file from your computer.
#Click on the 'Backstage' link that you can see at the very top right hand side of the page.
#In the menu, click on 'Import'. You will then see a window that looks like this - and you can follow the guidance from there. Note that you may need to grant authorisation to your ~TiddlyWiki file to import tiddlers - this is fine and expected.
&lt;&lt;importTiddlers&gt;&gt;

</pre>
</div>
<div title="Improved-Links Review" modifier="SDM" created="201212042157" modified="201212150233" tags="wiki todo wiki-link" book_key="">
<pre># Strip all {{{ &lt;&lt;Bbl &gt;&gt; }}} links.


{{{
1Bk 3:16; 2Bk 2:20
1Bk 3:16ff; 2Bk 2:20
1Bk 3:16a; 2Bk 2:20
1Bk 3:16b; 2Bk 2:20
1Bk 3:16; 4:12; 2Bk 2:20
1Bk 3:16-17; 2Bk 2:20
1Bk 3:16-4:5; 2Bk 2:20
1Bk 3:16-17, 22; 2Bk 2:20
}}}</pre>
</div>
<div title="IncrementalSearch" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="features">
<pre>When you type more than three characters in the search box at the upper right, any matching tiddlers are automatically displayed with the text highlighted. There's a couple of minor issues: the highlights don't get removed when you clear the search, and occasionally, on some browsers, keystrokes get missed if you type quickly so you may need to click the 'search' button to manually trigger the search.</pre>
</div>
<div title="Individual" modifier="SDM" created="201009300406" modified="201212150016" tags="House typography" book_key="">
<pre>Individual versus Group orientation.
Peter and Paul's use of building, made of stones
!!!! Group
# //... to a thousand generations//
# [[Seed]]
# NT still has some of group orientation -- //and your household.//
# //Son of _____ // -- ex, &lt;&lt;Bbl Eph 2:3&gt;&gt;
# [[Authority]] -- Authority through identification (husband is //head=source//)
!!!! Individual
# &lt;&lt;Bbl Ez.18 &gt;&gt; //The soul that sins, it shall [[die|Death]]// -- [[Responsibility]]
#  //your Father who sees you in secret will reward you in secret//
# [[Name]] -- //a white stone with a name no one else knows//
!!!! Tension
# [[Abraham]] haggling
# The fathers eat grapes ...
# The woman who says &quot;even the dogs&quot;
----
* Gender-neutral language is really just an extension of the individualistic trend.  The woman says, //I wish to not be lumped in with the man.//
* The word &quot;synecdoche&quot; is derived from the Greek word συνεκδοχή, from the prepositions συν- + εκ- and the verb δέχομαι (= &quot;I accept&quot;), originally meaning accepting a part as responsible for the whole, or vice versa.</pre>
</div>
<div title="Inheritance" modifier="SDM" created="201004120330" modified="201207111634" book_key="">
<pre>* [[Father-Son]]
&lt;&lt;Bbl 1Sam 2:8 &gt;&gt;; &lt;&lt;Bbl Ps 37:9 &gt;&gt;; &lt;&lt;Bbl Ez 44:28 &gt;&gt;; &lt;&lt;Bbl Lk 12:32 &gt;&gt;; &lt;&lt;Bbl Eph 1:14 &gt;&gt;,&lt;&lt;Bbl Eph 5:5 &gt;&gt;; &lt;&lt;Bbl Heb 9:15 &gt;&gt;.  Only the son of the king can inherit the kingdom.
* &lt;&lt;Bbl Ps 16:6 &quot;&quot; note &gt;&gt;
* //heir, legacy, birthright//</pre>
</div>
<div title="InlineJavascriptPlugin" modifier="ELSDesignStudios" created="200512130544" tags="systemConfig excludeLists">
<pre>/***
|Name|InlineJavascriptPlugin|
|Source|http://www.TiddlyTools.com/#InlineJavascriptPlugin|
|Documentation|http://www.TiddlyTools.com/#InlineJavascriptPluginInfo|
|Version|1.9.5|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides||
|Description|Insert Javascript executable code directly into your tiddler content.|
''Call directly into TW core utility routines, define new functions, calculate values, add dynamically-generated TiddlyWiki-formatted output'' into tiddler content, or perform any other programmatic actions each time the tiddler is rendered.
!!!!!Documentation
&gt;see [[InlineJavascriptPluginInfo]]
!!!!!Revisions
&lt;&lt;&lt;
2009.04.11 [1.9.5] pass current tiddler object into wrapper code so it can be referenced from within 'onclick' scripts
2009.02.26 [1.9.4] in $(), handle leading '#' on ID for compatibility with JQuery syntax
|please see [[InlineJavascriptPluginInfo]] for additional revision details|
2005.11.08 [1.0.0] initial release
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.InlineJavascriptPlugin= {major: 1, minor: 9, revision: 5, date: new Date(2009,4,11)};

config.formatters.push( {
    name: &quot;inlineJavascript&quot;,
    match: &quot;\\&lt;script&quot;,
    lookahead: &quot;\\&lt;script(?: src=\\\&quot;((?:.|\\n)*?)\\\&quot;)?(?: label=\\\&quot;((?:.|\\n)*?)\\\&quot;)?(?: title=\\\&quot;((?:.|\\n)*?)\\\&quot;)?(?: key=\\\&quot;((?:.|\\n)*?)\\\&quot;)?( show)?\\&gt;((?:.|\\n)*?)\\&lt;/script\\&gt;&quot;,

    handler: function(w) {
        var lookaheadRegExp = new RegExp(this.lookahead,&quot;mg&quot;);
        lookaheadRegExp.lastIndex = w.matchStart;
        var lookaheadMatch = lookaheadRegExp.exec(w.source)
        if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
            var src=lookaheadMatch[1];
            var label=lookaheadMatch[2];
            var tip=lookaheadMatch[3];
            var key=lookaheadMatch[4];
            var show=lookaheadMatch[5];
            var code=lookaheadMatch[6];
            if (src) { // external script library
                var script = document.createElement(&quot;script&quot;); script.src = src;
                document.body.appendChild(script); document.body.removeChild(script);
            }
            if (code) { // inline code
                if (show) // display source in tiddler
                    wikify(&quot;{{{\n&quot;+lookaheadMatch[0]+&quot;\n}}}\n&quot;,w.output);
                if (label) { // create 'onclick' command link
                    var link=createTiddlyElement(w.output,&quot;a&quot;,null,&quot;tiddlyLinkExisting&quot;,wikifyPlainText(label));
                    var fixup=code.replace(/document.write\s*\(/gi,'place.bufferedHTML+=(');
                    link.code=&quot;function _out(place,tiddler){&quot;+fixup+&quot;\n};_out(this,this.tiddler);&quot;
                    link.tiddler=w.tiddler;
                    link.onclick=function(){
                        this.bufferedHTML=&quot;&quot;;
                        try{ var r=eval(this.code);
                            if(this.bufferedHTML.length || (typeof(r)===&quot;string&quot;)&amp;&amp;r.length)
                                var s=this.parentNode.insertBefore(document.createElement(&quot;span&quot;),this.nextSibling);
                            if(this.bufferedHTML.length)
                                s.innerHTML=this.bufferedHTML;
                            if((typeof(r)===&quot;string&quot;)&amp;&amp;r.length) {
                                wikify(r,s,null,this.tiddler);
                                return false;
                            } else return r!==undefined?r:false;
                        } catch(e){alert(e.description||e.toString());return false;}
                    };
                    link.setAttribute(&quot;title&quot;,tip||&quot;&quot;);
                    var URIcode='javascript:void(eval(decodeURIComponent(%22(function(){try{';
                    URIcode+=encodeURIComponent(encodeURIComponent(code.replace(/\n/g,' ')));
                    URIcode+='}catch(e){alert(e.description||e.toString())}})()%22)))';
                    link.setAttribute(&quot;href&quot;,URIcode);
                    link.style.cursor=&quot;pointer&quot;;
                    if (key) link.accessKey=key.substr(0,1); // single character only
                }
                else { // run script immediately
                    var fixup=code.replace(/document.write\s*\(/gi,'place.innerHTML+=(');
                    var c=&quot;function _out(place,tiddler){&quot;+fixup+&quot;\n};_out(w.output,w.tiddler);&quot;;
                    try  { var out=eval(c); }
                    catch(e) { out=e.description?e.description:e.toString(); }
                    if (out &amp;&amp; out.length) wikify(out,w.output,w.highlightRegExp,w.tiddler);
                }
            }
            w.nextMatch = lookaheadMatch.index + lookaheadMatch[0].length;
        }
    }
} )
//}}}

// // Backward-compatibility for TW2.1.x and earlier
//{{{
if (typeof(wikifyPlainText)==&quot;undefined&quot;) window.wikifyPlainText=function(text,limit,tiddler) {
    if(limit &gt; 0) text = text.substr(0,limit);
    var wikifier = new Wikifier(text,formatter,null,tiddler);
    return wikifier.wikifyPlain();
}
//}}}

// // GLOBAL FUNCTION: $(...) -- 'shorthand' convenience syntax for document.getElementById()
//{{{
if (typeof($)=='undefined') { function $(id) { return document.getElementById(id.replace(/^#/,'')); } }
//}}}</pre>
</div>
<div title="InlineJavascriptPluginInfo" modifier="ELSDesignStudios" created="200801081257" modified="201012151753" tags="howto excludeLists">
<pre>/***
|Name|InlineJavascriptPluginInfo|
|Source|http://www.TiddlyTools.com/#InlineJavascriptPlugin|
|Documentation|http://www.TiddlyTools.com/#InlineJavascriptPluginInfo|
|Version|1.9.6|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|documentation|
|Description|Documentation for InlineJavascriptPlugin|
''Call directly into TW core utility routines, define new functions, calculate values, add dynamically-generated TiddlyWiki-formatted output'' into tiddler content, or perform any other programmatic actions each time the tiddler is rendered.
!!!!!Usage
&lt;&lt;&lt;
This plugin adds wiki syntax for surrounding tiddler content with {{{&lt;script&gt;}}} and {{{&lt;/script&gt;}}} markers, so that it can be recognized as embedded javascript code.  When a tiddler is rendered, the plugin automatically invokes any embedded scripts, which can be used to construct and return dynamically-generated output that is inserted into the tiddler content.
{{{
&lt;script type=&quot;...&quot; src=&quot;...&quot; label=&quot;...&quot; title=&quot;...&quot; key=&quot;...&quot; show&gt;
    /* javascript code goes here... */
&lt;/script&gt;
}}}
All parameters are //optional//.    When the ''show'' keyword is used, the plugin will also include the script source code in the output that it displays in the tiddler.  This is helpful when creating examples for documentation purposes (such as used in this tiddler!)

__''Deferred execution from an 'onClick' link''__
&lt;script label=&quot;click here&quot; title=&quot;mouseover tooltip text&quot; key=&quot;X&quot; show&gt;
    /* javascript code goes here... */
    alert('you clicked on the link!');
&lt;/script&gt;
By including a {{{label=&quot;...&quot;}}} parameter in the initial {{{&lt;script&gt;}}} marker, the plugin will create a link to an 'onclick' script that will only be executed when that specific link is clicked, rather than running the script each time the tiddler is rendered.  You may also include a {{{title=&quot;...&quot;}}} parameter to specify the 'tooltip' text that will appear whenever the mouse is moved over the onClick link text, and a {{{key=&quot;X&quot;}}} parameter to specify an //access key// (which must be a //single// letter or numeric digit only).

__''Loading scripts from external source files''__
&lt;script src=&quot;URL&quot; show&gt;
    /* optional javascript code goes here... */
&lt;/script&gt;You can also load javascript directly from an external source URL, by including a src=&quot;...&quot; parameter in the initial {{{&lt;script&gt;}}} marker (e.g., {{{&lt;script src=&quot;demo.js&quot;&gt;&lt;/script&gt;}}}).  This is particularly useful when incorporating third-party javascript libraries for use in custom extensions and plugins.  The 'foreign' javascript code remains isolated in a separate file that can be easily replaced whenever an updated library file becomes available.

In addition to loading the javascript from the external file, you can also use this feature to invoke javascript code contained within the {{{&lt;script&gt;...&lt;/script&gt;}}} markers.  This code is invoked //after// the external script file has been processed, and can make immediate use of the functions and/or global variables defined by the external script file.
&gt;Note: To ensure that your javascript functions are always available when needed, you should load the libraries from a tiddler that is rendered as soon as your TiddlyWiki document is opened, such as MainMenu.  For example: put your {{{&lt;script src=&quot;...&quot;&gt;&lt;/script&gt;}}} syntax into a separate 'library' tiddler (e.g., LoadScripts), and then add {{{&lt;&lt;tiddler LoadScripts&gt;&gt;}}} to MainMenu so that the library is loaded before any other tiddlers that rely upon the functions it defines.
&gt;
&gt;Normally, loading external javascript in this way does not produce any direct output, and should not have any impact on the appearance of your MainMenu.  However, if your LoadScripts tiddler contains notes or other visible content, you can suppress this output by using 'inline CSS' in the MainMenu, like this: {{{@@display:none;&lt;&lt;tiddler LoadScripts&gt;&gt;@@}}}
&lt;&lt;&lt;
!!!!!Creating dynamic tiddler content and accessing the ~TiddlyWiki DOM
&lt;&lt;&lt;
An important difference between TiddlyWiki inline scripting and conventional embedded javascript techniques for web pages is the method used to produce output that is dynamically inserted into the document: in a typical web document, you use the {{{document.write()}}} (or {{{document.writeln()}}}) function to output text sequences (often containing HTML tags) that are then rendered when the entire document is first loaded into the browser window.

However, in a ~TiddlyWiki document, tiddlers (and other DOM elements) are created, deleted, and rendered &quot;on-the-fly&quot;, so writing directly to the global 'document' object does not produce the results you want (i.e., replacing the embedded script within the tiddler content), and instead will //completely replace the entire ~TiddlyWiki document in your browser window (which is clearly not a good thing!)//.  In order to allow scripts to use {{{document.write()}}}, the plugin automatically converts and buffers all HTML output so it can be safely inserted into your tiddler content, immediately following the script.

''Note that {{{document.write()}}} can only be used to output &quot;pure HTML&quot; syntax.  To produce //wiki-formatted// output, your script should instead return a text value containing the desired wiki-syntax content'', which will then be automatically rendered immediately following the script.  If returning a text value is not sufficient for your needs, the plugin also provides an automatically-defined variable, 'place', that gives the script code ''direct access to the //containing DOM element//'' into which the tiddler output is being rendered.  You can use this variable to ''perform direct DOM manipulations'' that can, for example:
* generate wiki-formatted output using {{{wikify(&quot;...content...&quot;,place)}}}
* vary the script's actions based upon the DOM element in which it is embedded
* access 'tiddler-relative' DOM information using {{{story.findContainingTiddler(place)}}}
Note:
''When using an 'onclick' script, the 'place' element actually refers to the onclick //link text// itself, instead of the containing DOM element.''  This permits you to directly reference or modify the link text to reflect any 'stateful' conditions that might set by the script.  To refer to the containing DOM element from within an 'onclick' script, you can use &quot;place.parentNode&quot; instead.
&lt;&lt;&lt;
!!!!!Instant &quot;bookmarklets&quot;
&lt;&lt;&lt;
You can also use an 'onclick' link to define a &quot;bookmarklet&quot;: a small piece of javascript that can be ''invoked directly from the browser without having to be defined within the current document.''  This allows you to create 'stand-alone' commands that can be applied to virtually ANY TiddlyWiki document... even remotely-hosted documents that have been written by others!!  To create a bookmarklet, simply define an 'onclick' script and then grab the resulting link text and drag-and-drop it onto your browser's toolbar (or right-click and use the 'bookmark this link' command to add it to the browser's menu).

Notes:
*When writing scripts intended for use as bookmarklets, due to the ~URI-encoding required by the browser, ''you cannot not use ANY double-quotes (&quot;) within the bookmarklet script code.''
*All comments embedded in the bookmarklet script must ''use the fully-delimited {{{/* ... */}}} comment syntax,'' rather than the shorter {{{//}}} comment syntax.
*Most importantly, because bookmarklets are invoked directly from the browser interface and are not embedded within the TiddlyWiki document, there is NO containing 'place' DOM element surrounding the script.  As a result, ''you cannot use a bookmarklet to generate dynamic output in your document,''  and using {{{document.write()}}} or returning wiki-syntax text or making reference to the 'place' DOM element will halt the script and report a &quot;Reference Error&quot; when that bookmarklet is invoked.
Please see [[InstantBookmarklets]] for many examples of 'onclick' scripts that can also be used as bookmarklets.
&lt;&lt;&lt;
!!!!!Special reserved function name
&lt;&lt;&lt;
The plugin 'wraps' all inline javascript code inside a function, {{{_out()}}}, so that any return value you provide can be correctly handled by the plugin and inserted into the tiddler.  To avoid unpredictable results (and possibly fatal execution errors), this function should never be redefined or called from ''within'' your script code.
&lt;&lt;&lt;
!!!!!$(...) 'shorthand' function
&lt;&lt;&lt;
As described by Dustin Diaz [[here|http://www.dustindiaz.com/top-ten-javascript/]], the plugin defines a 'shorthand' function that allows you to write:
{{{
$(id)
}}}
in place of the normal standard javascript syntax:
{{{
document.getElementById(id)
}}}
This function is provided merely as a convenience for javascript coders that may be familiar with this abbreviation, in order to allow them to save a few bytes when writing their own inline script code.
&lt;&lt;&lt;
!!!!!Examples
&lt;&lt;&lt;
simple dynamic output:
&gt;&lt;script show&gt;
    document.write(&quot;The current date/time is: &quot;+(new Date())+&quot;&lt;br&gt;&quot;);
    return &quot;link to current user: [[&quot;+config.options.txtUserName+&quot;]]\n&quot;;
&lt;/script&gt;
dynamic output using 'place' to get size information for current tiddler:
&gt;&lt;script show&gt;
    if (!window.story) window.story=window;
    var title=story.findContainingTiddler(place).getAttribute(&quot;tiddler&quot;);
    var size=store.getTiddlerText(title).length;
    return title+&quot; is using &quot;+size+&quot; bytes&quot;;
&lt;/script&gt;
dynamic output from an 'onclick' script, using {{{document.write()}}} and/or {{{return &quot;...&quot;}}}
&gt;&lt;script label=&quot;click here&quot; show&gt;
    document.write(&quot;&lt;br&gt;The current date/time is: &quot;+(new Date())+&quot;&lt;br&gt;&quot;);
    return &quot;link to current user: [[&quot;+config.options.txtUserName+&quot;]]\n&quot;;
&lt;/script&gt;
creating an 'onclick' button/link that accesses the link text AND the containing tiddler:
&gt;&lt;script label=&quot;click here&quot; title=&quot;clicking this link will show an 'alert' box&quot; key=&quot;H&quot; show&gt;
    if (!window.story) window.story=window;
    var txt=place.firstChild.data;
    var tid=story.findContainingTiddler(place).getAttribute('tiddler');
    alert('Hello World!\nlinktext='+txt+'\ntiddler='+tid);
&lt;/script&gt;
dynamically setting onclick link text based on stateful information:
&gt;{{block{
{{{
&lt;script label=&quot;click here&quot;&gt;
    /* toggle &quot;txtSomething&quot; value */
    var on=(config.txtSomething==&quot;ON&quot;);
    place.innerHTML=on?&quot;enable&quot;:&quot;disable&quot;;
    config.txtSomething=on?&quot;OFF&quot;:&quot;ON&quot;;
    return &quot;\nThe current value is: &quot;+config.txtSomething;
&lt;/script&gt;&lt;script&gt;
    /* initialize onclick link text based on current &quot;txtSomething&quot; value */
    var on=(config.txtSomething==&quot;ON&quot;);
    place.lastChild.previousSibling.innerHTML=on?&quot;disable&quot;:&quot;enable&quot;;
&lt;/script&gt;
}}}
&lt;script label=&quot;click here&quot;&gt;
    /* toggle &quot;txtSomething&quot; value */
    var on=(config.txtSomething==&quot;ON&quot;);
    place.innerHTML=on?&quot;enable&quot;:&quot;disable&quot;;
    config.txtSomething=on?&quot;OFF&quot;:&quot;ON&quot;;
    return &quot;\nThe current value is: &quot;+config.txtSomething;
&lt;/script&gt;&lt;script&gt;
    /* initialize onclick link text based on current &quot;txtSomething&quot; value */
    var on=(config.txtSomething==&quot;ON&quot;);
    place.lastChild.innerHTML=on?&quot;enable&quot;:&quot;disable&quot;;
&lt;/script&gt;
}}}
loading a script from a source url:
&gt;http://www.TiddlyTools.com/demo.js contains:
&gt;&gt;{{{function inlineJavascriptDemo() { alert('Hello from demo.js!!') } }}}
&gt;&gt;{{{displayMessage('InlineJavascriptPlugin: demo.js has been loaded');}}}
&gt;note: When using this example on your local system, you will need to download the external script file from the above URL and install it into the same directory as your document.
&gt;
&gt;&lt;script src=&quot;demo.js&quot; show&gt;
    return &quot;inlineJavascriptDemo() function has been defined&quot;
&lt;/script&gt;
&gt;&lt;script label=&quot;click to invoke inlineJavascriptDemo()&quot; key=&quot;D&quot; show&gt;
    inlineJavascriptDemo();
&lt;/script&gt;
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2010.12.15 1.9.6 allow (but ignore) type=&quot;...&quot; syntax
2009.04.11 1.9.5 pass current tiddler object into wrapper code so it can be referenced from within 'onclick' scripts
2009.02.26 1.9.4 in $(), handle leading '#' on ID for compatibility with JQuery syntax
2008.06.11 1.9.3 added $(...) function as 'shorthand' for document.getElementById()
2008.03.03 1.9.2 corrected fallback declaration of wikifyPlainText() (fixes Safari &quot;parse error&quot;)
2008.02.23 1.9.1 in onclick function, use string instead of array for 'bufferedHTML' (fixes IE errors)
2008.02.21 1.9.0 output from 'onclick' scripts (return value or document.write() calls) are now buffered and rendered into into a span following the script.  Also, added default 'return false' handling if no return value provided (prevents HREF from being triggered -- return TRUE to allow HREF to be processed).  Thanks to Xavier Verges for suggestion and preliminary code.
2008.02.14 1.8.1 added backward-compatibility for use of wikifyPlainText() in TW2.1.3 and earlier
2008.01.08 [*.*.*] plugin size reduction: documentation moved to ...Info tiddler
2007.12.28 1.8.0 added support for key=&quot;X&quot; syntax to specify custom access key definitions
2007.12.15 1.7.0 autogenerate URI encoded HREF on links for onclick scripts.  Drag links to browser toolbar to create bookmarklets.  IMPORTANT NOTE: place is NOT defined when scripts are used as bookmarklets.  In addition, double-quotes will cause syntax errors.  Thanks to PaulReiber for debugging and brainstorming.
2007.11.26 1.6.2 when converting &quot;document.write()&quot; function calls in inline code, allow whitespace between &quot;write&quot; and &quot;(&quot; so that &quot;document.write ( foobar )&quot; is properly converted.
2007.11.16 1.6.1 when rendering &quot;onclick scripts&quot;, pass label text through wikifyPlainText() to parse any embedded wiki-syntax to enable use of HTML entities or even TW macros to generate dynamic label text.
2007.02.19 1.6.0 added support for title=&quot;...&quot; to specify mouseover tooltip when using an onclick (label=&quot;...&quot;) script
2006.10.16 1.5.2 add newline before closing '}' in 'function out_' wrapper.  Fixes error caused when last line of script is a comment.
2006.06.01 1.5.1 when calling wikify() on script return value, pass hightlightRegExp and tiddler params so macros that rely on these values can render properly
2006.04.19 1.5.0 added 'show' parameter to force display of javascript source code in tiddler output
2006.01.05 1.4.0 added support 'onclick' scripts.  When label=&quot;...&quot; param is present, a button/link is created using the indicated label text, and the script is only executed when the button/link is clicked.  'place' value is set to match the clicked button/link element.
2005.12.13 1.3.1 when catching eval error in IE, e.description contains the error text, instead of e.toString().  Fixed error reporting so IE shows the correct response text.  Based on a suggestion by UdoBorkowski
2005.11.09 1.3.0 for 'inline' scripts (i.e., not scripts loaded with src=&quot;...&quot;), automatically replace calls to 'document.write()' with 'place.innerHTML+=' so script output is directed into tiddler content.  Based on a suggestion by BradleyMeck
2005.11.08 1.2.0 handle loading of javascript from an external URL via src=&quot;...&quot; syntax
2005.11.08 1.1.0 pass 'place' param into scripts to provide direct DOM access
2005.11.08 1.0.0 initial release
&lt;&lt;&lt;</pre>
</div>
<div title="InstallingPlugins" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="features">
<pre>[[Plugins]] are just tiddlers containing ~JavaScript code that is tagged with &lt;&lt;tag systemConfig&gt;&gt;. TiddlyWiki executes any [[Plugins]] as it loads; they can add [[Macros]] or otherwise extend and enhance the base code.

The recommended way to install a plugin into your own copy of TiddlyWiki is to use ImportTiddlers (there are instructions for ManuallyInstallIngPlugins when required).</pre>
</div>
<div title="Integrity" modifier="SDM" created="201004120330" modified="201201301606" book_key="">
<pre>* [[Heart]], [[Unity]], [[Openness]]
* [[Reputation]]
* //honest //
* The requirement for a good conscience and moral authority.
* [[Heart]] and [[Unity]] -- as related to //single//.  Note Paul says being //single// promotes //undivided// attention to ministry.
* Required for moral authority; see [[Reputation]].
* &lt;&lt;Bbl Num 16:15 &gt;&gt;; &lt;&lt;Bbl Is 32:8 &gt;&gt;, &lt;&lt;Bbl Ps 86:11 &gt;&gt;; &lt;&lt;Bbl Pr 11:13 &gt;&gt;,&lt;&lt;Bbl Pr 20:6 &gt;&gt;-7 , &lt;&lt;Bbl Pr 21:8 &gt;&gt;; &lt;a style=&quot;white-space: nowrap;&quot; rel=&quot;KJV.Mat.6.22-23FIXME_1Mat+6.22-23&amp;t=KJV&quot; target=&quot;BLB_NW&quot;&gt;Mat 6:22-23 ()&lt;/a&gt;;
* [[Conduct]] -- &lt;&lt;Bbl Pr 20:11 &gt;&gt;
* Samuel:   &lt;&lt;Bbl 1Sam 12:3 &gt;&gt;:19,12:1-5,16:4
* Paul: &lt;&lt;Bbl Acts 20:18 &gt;&gt;-21 ; &lt;&lt;Bbl 1Cor 4:2 &gt;&gt;-5 ; &lt;&lt;Bbl 2Cor 1:12 &gt;&gt;,&lt;&lt;Bbl 2Cor 7:2 &gt;&gt;
* Pharisees, lacking:  &lt;&lt;Bbl Mt 23:2 &gt;&gt;-4
* //inte-gritty//
* In metaphysical sense, contrasts with [[Division]]
* Root of the English word is related to &quot;integer&quot;.  From the Latin, //in// (negation) + //tangere// (touch).  Literally untouched or intact (the latter is a word of parallel development).  </pre>
</div>
<div title="InterfaceOptions" creator="psd" modifier="jermolene" created="201102111106" modified="201110201351" tags="features options">
<pre>InterfaceOptions are displayed when you click the 'options' button on the right in your TiddlyWiki file. They are saved in a cookie on your browser, making them sticky between visits:
&lt;&lt;&lt;
&lt;&lt;tiddler OptionsPanel&gt;&gt;
&lt;&lt;&lt;
* The user name for edits should be set //before// starting to edit things
* SaveBackups gives the option of whether to generate backup files
* AutoSave gives the option of automatically saving every time a change is made
* RegExpSearch allows more complex search expressions
* CaseSensitiveSearch does as its name implies
</pre>
</div>
<div title="InternetExplorer" creator="psd" modifier="jermolene" created="201102111106" modified="201111031802" tags="browsers issues">
<pre>TiddlyWiki works on InternetExplorer 6.x and above under Windows. It also allows you to SaveChanges, albeit there are some annoying XP ServicePack2Problems and VistaIssues to work around. If you're having problems, make sure you've followed the appropriate [[downloading guidelines|Downloading]].

Known problems with ~TiddlyWiki under InternetExplorer:
* [[Gradient|GradientMacro]] fills sometimes appear in the wrong place until you move the mouse over the tiddler
* Horizontal gradients don't work correctly
* Links to tiddlers with multiple consecutive spaces in their titles is broken
* Runs of spaces within tiddlers get conflated into a single space when you edit a tiddler. This is particularly annoying when using MonospacedText blocks</pre>
</div>
<div title="Invisible-Visible" modifier="SDM" created="201010131724" modified="201301070048" book_key="">
<pre>* [[God-Sees-All]]
* &lt;&lt;Bbl 2Kng 6:16 &gt;&gt;; &lt;&lt;Bbl Mt 6:1 &gt;&gt;-6; &lt;&lt;Bbl Col 1:16 &gt;&gt;; &lt;&lt;Bbl Heb 11:1 &gt;&gt;-3; &lt;&lt;Bbl Rom 8:24 &gt;&gt;-25.
* &lt;&lt;Bbl Ruth 3:9 &quot;&quot; note &gt;&gt;
* Elisha on the city wall
* [[Faith]], [[Hope]]
* [[Veil]] vs [[Revelation]]
* Hidden [[Treasure]]
!! Holiness
* The Ark holding its secrets
* The Holy of Holies behind the veil
* Our Lord Christ in His vulnerable body
!! Secrecy, secret (positive)
* &lt;&lt;Bbl Dt 29:29 &gt;&gt;</pre>
</div>
<div title="Isaiah-01-01-note" modifier="SDM" created="201010310510" modified="201212240145" tags="Comment" book_key="701001a">
<pre>Outline from the Wycliffe Ency.:
#   Introduction, Chapters 1-6
#   The Book of Immanuel, 7-12
#   Oracles Concerning the Nations, 13-23
#   The Little Apocalypse, 24-27
#   The Book of Woes, 28-35
#   The Book of Hezekiah, 36-39
#   The Book of Consolation, 40-66
##  Deliverance from sin and captivity, 40-48
##  The Deliverer, Servant of Yahweh, 49-57
##  The Delivered people and their future glory, 58-66
----
Some likely bad chapter divisions are 53:1, 57:1, 60:1, 64:1.
----
1:5 Describing what Jesus took on.
1:11-15 see &lt;&lt;Bbl Mt 21:28 &gt;&gt;-32 .  Because of our knowledge we are responsible.  But woe to those who refuse knowledge, who spurn instruction!  We, after Israel, have been &quot;entrusted with the oracles of God.&quot;
1:17    Cf &lt;&lt;Bbl Jms 1:27 &gt;&gt;.  Learn to do good   --  sanctification is learning.
1:18-20 This seems to me to contrast a live lamb and a dead lamb.
1:27    God's covenant would not be compromised in receiving His people back to Himself.  How could this be?  Through the fulfillment of the curses in Leviticus.  Even so, Christ fulfilled these curses, &quot;becoming a curse for us,&quot; thus to fulfill God's law while purchasing His grace, see &lt;&lt;Bbl Jn 1:17 &gt;&gt;.
&lt;&lt;Bbl Is 1:29 &gt;&gt; A reference to Lot 13:10-11.
1:30    Well describes the futility of trying to continue without the Lord.  Both images of a great strength and beauty which might well persist in pride, except that a most basic provision  --  in the first case, foliage, in the second, Water  --  has been removed.  Van Til declares all the fruits of modern technology a brief profit made on &quot;borrowed capital.&quot;  Even so, the oak and the garden are enjoying a very brief glory.
1:31    Dead works.  They are in themselves an agent of Judgment.  In my life I have known many &quot;strong men,&quot; many whom I have come to respect .  .  .
----
2:3 But for now the word &lt;&lt;Bbl is 8:16 &gt;&gt;, &quot;Seal up the Law...&quot;
2:5 Light  is followed in 50:10-11.
2:6-8   Filled with  is the alliterative theme here  --  eastern influences, silver and gold, horses which symbolize military pride, and idols.
2:6 Occult influence is discussed in 8:16.
----
3:1 This image is a metaphor for the topic of false leadership.
3:7 Note literal meaning of healer , &quot;binder of wounds&quot;  --  see 1:6.
4:1 This apparently belongs with the previous verses in chapter 3.
----
5:1-7   Cf Christ's parable of the vineyard.  Destruction simply means the end of provision.  see 1:30, 64:8.
5:18-23 Four woes.
6:6 The coal symbolizing atonement is brought from the altar.
6:13    Subject to burning  may simply mean that it will again have enough substance to be substantial.  We can rejoice perhaps that after God's discipline, there will be enough left of our lives to be disciplined again.</pre>
</div>
<div title="Isaiah-07-01-note" modifier="SDM" created="201212240141" modified="201212240146" tags="Comment" book_key="701007a">
<pre>7:2 Preparations for a second assault.  Aram has settled down upon  (joined military forces with) Ephraim .  Ephraim is the leading tribe of Israel and the term here signifies Israel's whole military force (Keil &amp; Delitzsch, VII, 207).  His  refers to Ahaz.
7:12-14 The marvelousness of the sign  --  deep as Sheol. High as Heaven  --  is intensified by the fact that God himself designs it to fit that requirement.
    This is a spectacular instance of dual fulfillment.
7:14-20 Isaiah presents the boy as growing up under the oppressions of Assyria; this is true in that, as Delitzsch says,  &quot;the Holy Land, deprived of its previous abundance, was under the dominion of the imperial power, and in a condition whose primary cause was to be traced to the unbelief of Ahaz.&quot;
7:21-22 Delitzsch says that verse 21 points out that not much livestock will be left, while the next verse adds that even fewer people will be left, and furthermore that the land once useful for growing crops (vss 22-25) will now only serve as pasturage.  Curds and honey refers not to a luxurious diet but to a monotonous one.  Cf 36:15.

8:8 Apparently Immanuel is here a title for Israel!
8:12-13 Close to Christ's words, &lt;&lt;Bbl Mt 10:28 &gt;&gt;.
&lt;&lt;Bbl Mt 8:16 abbr &gt;&gt;    The d'nouement &lt;&lt;Bbl is 2:3 &gt;&gt;.
&lt;&lt;Bbl is 8:18 &gt;&gt;    The signs of Isaiah are people - his own sons and the Christ.

9:10    The Bionic Land - &quot;We can rebuild it; make it better.&quot;
9:14    The plants refer to the high and the low.

10:3c   Jesus asks the same question, &lt;&lt;Bbl Lk 12:20 &gt;&gt;.
&lt;&lt;Bbl Is 10:10 abbr &gt;&gt;    Hezekiah reflects back on this in &lt;&lt;Bbl 2Kngs 19:17 &gt;&gt;-18 .
&lt;&lt;Bbl Is 10:14 abbr &gt;&gt;    Hitler made a similar statement in comparing the Jews to sheep.
10:27   Jay Green's marginal translation says, &quot;...the yoke shall be destroyed because of the anointing (fatness).

11:2    &lt;&lt;Bbl Rev 3:1 &gt;&gt; refers to &quot;the seven Spirits of God&quot;.
11:3    see &lt;&lt;Bbl 1Sam 16:7 &gt;&gt;; &lt;&lt;Bbl Jn 7:24 &gt;&gt;, &lt;&lt;Bbl Jn 8:15 &gt;&gt;
&lt;&lt;Bbl Is 11:7 abbr &gt;&gt; The new earth is (symbolically at least) vegetarian.
11:16   Chapters 10 &amp; 11 refer to Egypt several times; this precious promise is a culmination.

12:3    see &lt;&lt;Bbl Jn 4:10 &gt;&gt;3 This chapter commences the oracles concerning the nations.

14:12   This is the verse which, through the Vulgate, Satan has come to be called &quot;Lucifer&quot;.
14:13-14    Five &quot;I wills&quot;.

17:12   Similar to the description of the nations in &lt;&lt;Bbl Ps.2 &gt;&gt; Whose land the rivers divide   --  that it, a land so large that the rivers do form its boundaries, as is the case with most nations.

19:18-23    This astounding prophecy of redemption to Egypt echoes the &lt;&lt;Bbl Ex 19:24 &gt;&gt;-25     Here Israel is very deliberately mentioned as a peer among other nations!</pre>
</div>
<div title="Isaiah-20-01-note" modifier="SDM" created="201211110344" modified="201211282036" tags="Comment" book_key="701020a">
<pre>20:3-4  Isaiah is portraying a captive.  That in a way was Jesus' portrayal, too.

22:1-11 Delitzsch (Isaiah, p.389ff) proposes that this prophecy describes Sannacherib's siege of Jerusalem (2Chrn 32, &lt;&lt;Bbl Is 38:39) and explains the passage more or less as follows:  Jerusalem does not perceive a true military threat from Assyria, and everyone is on their housetop eagerly awaiting a glimpse of the arriving army.   But vs. 2b-3 states the truth that even the honor of death in battle is to be denied them.  The armies of Assyria fill the valleys and face the gates of the city, ready for the breach.  In vs. 8 Jerusalem's true exigency has become clear and prudent measures are taken, yet without God's help.  Examine the verbs in vss. 8-11.
22:8    The NAS defense  is rendered &quot;covering&quot; by Delitzsch and signifies how blind the nation was to Assyria's threat.  Could it not also refer to the cloud in the wilderness (compare &lt;&lt;Bbl Ps 105:39 &gt;&gt;)?   The forest-house  is part of Solomon's work  (&lt;&lt;Bbl 1Kngs 7:2 &gt;&gt;-5 ).
22:9,11 The efforts to store up water are not the same as Hezekiah's work as described in 2Chrn 32:2-5, but the two descriptions do not preclude each other.
22:11b  An antithesis is found in 26:1.
22:22   The key of the house of David   --  see &lt;&lt;Bbl Rev 3:2 &gt;&gt;.  Outside of this specific reference, this does not seem to refer to Christ.

23:9    See &lt;&lt;Bbl Ez 16:15 &gt;&gt;.
&lt;&lt;Bbl Is 23:18 abbr &gt;&gt;    As in &lt;&lt;Bbl Pr 13:22 &gt;&gt;

&lt;&lt;Bbl Is 24:2 abbr &gt;&gt; It is distinctions that make our world what it &lt;&lt;Bbl Is 25:6 &gt;&gt;-9 Compare &lt;&lt;Bbl Rev 21:4 &gt;&gt; - 22:3.
&lt;&lt;Bbl Is 25:6 abbr &gt;&gt; The NIV says, with excellent simplicity, &quot;the best of meats and the finest of wines.&quot;
25:7    The shroud probably symbolizes death; this shade is brought out in the NIV.  Also it may refer to mourning and shame.  Also it may well refer to secrecy, solitude, mystery; indeed, that is what Paul calls the inclusion of the gentiles in &lt;&lt;Bbl Eph 3:2 &gt;&gt;-11 .  In fact Paul uses the term apocalypsis, lit., unveiling (or, in its Latin form, revelation, with the same literal derivation); and that is precisely what Isaiah is presenting here!

26:1    Israel can now make the confession it forgot in 22:11.
26:13   see &lt;&lt;Bbl Col 3:17 &gt;&gt;; &lt;&lt;Bbl 1Cor 12:3 &gt;&gt;.
&lt;&lt;Bbl Is 26:16 abbr &gt;&gt;    Whispering  is mentioned in 29:4.
26:18   Hezekiah draws the same portrait in 37:3.
26:20-21    Refers to Passover deliverance.

27:2    This all seems foundational to the first part of &lt;&lt;Bbl John.15 &gt;&gt;   Jesus makes that offer in &lt;&lt;Bbl Lk 14:32 &gt;&gt;.

&lt;&lt;Bbl Is 28:21 abbr &gt;&gt;    unusual task  (or strange task )  --  F.F. Bruce (Romans, p. 79) says that Isaiah means that wrath does not &quot;come naturally&quot; to God.  Paul expresses a similar sentiment in &lt;&lt;Bbl 2Cor 13:10 &gt;&gt;.

&lt;&lt;Bbl Is 29:4 abbr &gt;&gt; Whispering  is mentioned in 26:16.
29:8    A careful reading of this will reveal much about the world, sin, Judgment.
29:14   See 19:11.
29:24   An exceedingly precious promise.

30:8    As indeed it is doing.
30:9    Does false sons   mean they are illegitimate children?
30:18-33    This is so confusing!   Switches such as vss 28,29 are difficult.
30:20   Delitzsch stresses that the Hebrew for teacher is plural here (against the N.A.S.) and suggests that teachers of the Law were in hiding and had been since Ahaz.

32:17   All too often the work of righteousness has been war.

33:14   See &lt;&lt;Bbl Mal 3:2 &gt;&gt;.
&lt;&lt;Bbl Is 33:22 abbr &gt;&gt;    This verse coincides oddly with our three branches of government.

36:1 -- 38:6    A parallel narrative commences at &lt;&lt;Bbl 2Kngs 18:13 &gt;&gt;.
&lt;&lt;Bbl Is 36:17 abbr &gt;&gt;    This is Satan's counterfeit of the promised land.

37:3    Isaiah prophecies with the same image in 26:18.

38:10-20    There is a firm symmetry to this poem, the climax at vs 16. </pre>
</div>
<div title="Isaiah-40-01-note" modifier="SDM" created="201011260100" modified="201211130150" tags="Comment" book_key="701040a">
<pre>40 The watershed.   Vss. 1,9 have a new charge.
40:2    Double  in the sense of benefit, as of redemption, or in the sense of punishment ??
40:3-5  The road is made level through repentance  --  John the Baptist's ministry.  The &quot;Highway of Holiness&quot; is set forth in 35:8-10.
40:12   We can easily picture each of these descriptions.
40:27-31    The prophet begins by saying that far from being ignorant of Israel's plight, or impotent, the Creator God is infinitely powerful.  He goes on to state that that very power is itself Israel's provision.

41:2-4  Abraham, or Cyrus'or a dual fulfillment.  Recalled in 46:11.

42:1    In a sense, the nations have been bringing Judgment to Israel for some time now.
42:8    I am Yahweh (&quot;I am that I am&quot;)

43:28

45:18   Seems to hearken to &lt;&lt;Bbl Gn 1:2 &gt;&gt;.

&lt;&lt;Bbl Is 46:3 abbr &gt;&gt;-4   Check verbs for parallel structure ??

48:5    Jesus makes a similar, albeit less reproachful, statement in &lt;&lt;Bbl Jn 13:19 &gt;&gt;.
&lt;&lt;Bbl Is 48:16 abbr &gt;&gt;   What an exciting portrait of the One-In-Three, here spoken by the Son.  Not spoken in secret , &lt;&lt;Bbl Jn 18:20 &gt;&gt;; I was there , &lt;&lt;Bbl Is 1:1 &gt;&gt;-3 ; has sent Me , &lt;&lt;Bbl Lk 4:18 &gt;&gt;.

&lt;&lt;Bbl Is 49:2 &gt;&gt; An arrow reserved among the others for one crucial shot.  The parallelism that takes up all of verse 2 is interesting.
49:8    Compare &lt;&lt;Bbl Gn 2:15 &gt;&gt;.
&lt;&lt;Bbl Is 49:21 abbr &gt;&gt;    Compare &lt;&lt;Bbl Jer 31:15 &gt;&gt;-17 .

&lt;&lt;Bbl Is 50:1 abbr &gt;&gt; Some legal grounds explained.  Compare &lt;&lt;Bbl Col 2:14 &gt;&gt;.
&lt;&lt;Bbl Is 50:4 abbr &gt;&gt; Compare &lt;&lt;Bbl Eph 4:29 &gt;&gt;.
&lt;&lt;Bbl Is 50:8 abbr &gt;&gt;-10  see &lt;&lt;Bbl Rom 8:31 &gt;&gt;-37
&lt;&lt;Bbl Is 50:10 abbr &gt;&gt;    Amplified says, &quot;yet who walks in darkness  -- &quot;

52:15   Sprinkle   --  some versions say startle.

53:1    See 52:10, 63:9.
53:5    Quoted in &lt;&lt;Bbl 1Cor 15:3 &gt;&gt;, &lt;&lt;Bbl 1Pt 2:24 &gt;&gt;.

&lt;&lt;Bbl Is 54:5 abbr &gt;&gt;    Ruth attests to the closeness of husband and redeemer.
54:9    See &lt;&lt;Bbl Rom 6:9 &gt;&gt;.
    God alludes to the rainbow and links it with Christ's eternal redemption.
54:16-17    Since 16a and 17a form a couplet, it would seem 16b and 17b do as well.

55:2    See 29:8.
55:8    See &lt;&lt;Bbl 1Cor 2:6 &gt;&gt;-16 .</pre>
</div>
<div title="Isaiah-56-01-note" modifier="SDM" created="201211110342" tags="Comment" book_key="701056a">
<pre>&lt;&lt;Bbl Is 56:4 abbr &gt;&gt;-5  Under &quot;Adoption&quot;, the Wycliffe Bible Ency. lists vs. 5; in context, however, name   seems to refer to the legacy of progeny.  The NT parallel is &lt;&lt;Bbl Mt 19:12 &gt;&gt;.

&lt;&lt;Bbl Is 57:1 abbr &gt;&gt;-2  According to Bro. Dave, Methuselah died in the year of the Flood  --  i.e., in the Flood.
57:8    &lt;&lt;Bbl Dt 6:9 &gt;&gt; for the significance of the [[doorpost|Door]].  But this is behind the doorpost, like an illicit announcement, barely concealed.
57:10   Compare with Pharaoh's reprobation, &lt;&lt;Bbl Ex 8:15 &gt;&gt; etc.
57:12   Compare &lt;&lt;Bbl Ez 3:20 &gt;&gt;.

&lt;&lt;Bbl Is 58:7 abbr &gt;&gt; From your own flesh   --  i.e., fellow Israelites.

59:4b-6 A convoluted arrangement is found in the two images here, eggs of a snake and spider's web.
            conceive mischief
                 bring forth iniquity
                 hatch adders' eggs
            weave spiders' webs

            death from eating the eggs
                 from what is crushed, a snake
            webs do not clothe a man
                 works are not a covering

59:15   See &lt;&lt;Bbl Amos 5:13 &gt;&gt;.

&lt;&lt;Bbl Is 60:1 abbr &gt;&gt;    Go on to vss. 19-20.
60:2    Like Egypt's plague of darkness.  &lt;&lt;Bbl Mt 5:4 &gt;&gt;
&lt;&lt;Bbl Is 60:18 abbr &gt;&gt;   The image here shows the role of praise  in entering.

61:3    See &lt;&lt;Bbl Ps 29:11 &gt;&gt;.

&lt;&lt;Bbl Is 62:2 abbr &gt;&gt;-3   See &lt;&lt;Bbl Rev 2:17 &gt;&gt;,&lt;&lt;Bbl Rev 19:13 &gt;&gt;.

&lt;&lt;Bbl Is 63:9 abbr &gt;&gt; Angel of His Presence  identifies the [[Suffering]] Servant with the Lord.

64:3-4  Try &lt;&lt;Bbl Eph 3:20 &gt;&gt;.

&lt;&lt;Bbl Is 65:8 abbr &gt;&gt; see 5:1-6; &lt;&lt;Bbl Lk 13:6 &gt;&gt;-9
&lt;&lt;Bbl Is 65:16 abbr &gt;&gt;      the God of Truth , a title which seems to correspond to &lt;&lt;Bbl Rev 3:14 &gt;&gt;.

&lt;&lt;Bbl Is 66:24 abbr &gt;&gt;    Among the Jews the penultimate verse is repeated to form a less terrifying conclusion to the book.  See &lt;&lt;Bbl Rev 14:10 &gt;&gt;.  </pre>
</div>
<div title="James-01-01-note" modifier="SDM" created="201010310234" modified="201211230317" tags="Comment" book_key="201001a">
<pre>The commentary has an interesting character sketch.  This man, the brother of Jesus, absorbed through all of his youth the words and personality of the Lord.

1:5 Without reproach   --  see &lt;&lt;Bbl Pr 10:22 &gt;&gt;.
&lt;&lt;Bbl James 1:6 abbr &gt;&gt;    In the K.J.V., the words wave  and waver  are placed close together.  In fact those translators probably saw these two words are small variant forms of the same word.  (Webster's also cites these related words: waive, waiver, waif, vibrate, and probably weave.)
1:12    This verse can easily be taken as something the Lord said, something which is not recorded in the gospel accounts.
1:15    This description can be traced, down to subtle analogy, in &lt;&lt;Bbl 2Sam 11:1 &gt;&gt;ff.  See &lt;&lt;Bbl Is 1:16 &gt;&gt;-17.

&lt;&lt;Bbl James 2:9 abbr &gt;&gt;-10     &lt;&lt;Bbl Pr 22:2 &gt;&gt;:  &quot;The rich and the poor have this in common,  -- &quot;
2:17-26 Edward Goodrick provides insight into James' view of faith Do-It-Yourself Hebrew and Greek.

    Some of these notes are from a lesson taught by Van Gill on 5/6/91.

3:1 The KJV says masters .
3:3-4   In both pictures there are three elements:  the guided vessel, the item which gives control, and the guiding agent.  The last item, in our speech, should be the Holy Spirit.
3:5 Only __you__ can prevent forest fires.
3:6 &lt;&lt;Bbl Pr 17:20 &gt;&gt; has another strong word about the tongue.
3:7 See &lt;&lt;Bbl Gn 1:26 &gt;&gt;; &lt;&lt;Bbl Gn 9:2 &gt;&gt;.
&lt;&lt;Bbl James 3:11 abbr &gt;&gt;-12; an evil spirit must be cast out.  The image of tree pertains to nature; an evil nature must be cast down.  &quot;Spirits feed on flesh.&quot;
3:15-18 These verses are best read as an extension of Vss. 10-11.
3:15    Van calls the influence of this anti-wisdom &quot;passive demonization.&quot;  The three characteristics, he amplifies with three others: worldly, non-spiritual, and having its source in Satan.  It springs from an inner philosophy;  it is not itself an imp, but it is an imp's idea.

4:4 See &lt;&lt;Bbl 1Jn 2:15 &gt;&gt;.
&lt;&lt;Bbl James 4:5 abbr &gt;&gt;    This actual verse is not found in the Bible.  The likely explanation is that James is making no attempt to quote a specific verse, but alluding to the tenor of Scripture.
4:8 For sinners, salvation; for the doubting saints, sanctification.
4:13    This is the first of two &quot;Come now&quot;s; the second is &lt;&lt;Bbl James 5:1 &gt;&gt;.
&lt;&lt;Bbl James 4:14 abbr &gt;&gt;   The phrase this or that  does not mean &quot;nothing at all&quot;.  It may mean, all the plans you may have been making, including the sort of plans in v. 13.   We shall  seems to be the &quot;arrogant boasting&quot; reproved by James.  What is at stake here is the motivating attitude.   Slivell, the young man who stopped by Blake and Carter's selling magazines, declared that his goal was to come and go exactly whenever and to wherever he pleased.

5:2 Compare Jesus' words in &lt;&lt;Bbl Mt 6:19 &gt;&gt;.
&lt;&lt;Bbl James 5:7 abbr &gt;&gt;    See &lt;&lt;Bbl Hos 6:3 &gt;&gt;, Php 4:5.  Rain is mentioned again in vss. 17-18.
5:14    In &lt;&lt;Bbl Mk 6:13 &gt;&gt;, the disciples are anointing with oil.  </pre>
</div>
<div title="JavaScript" creator="jermolene" modifier="jermolene" created="201110201351" modified="201110201351">
<pre>JavaScript is the programming language that powers the [[Web]]. In the browser it is used to script behaviours that breathe life into the static world of [[HTML]] and [[CSS]], and it is increasingly being selected as a ServerSide programming language.

TiddlyWiki relies on JavaScript, and can't function properly without it. An alternative is to use a ServerSide adaptation like TiddlyWeb or TiddlySpace that can provide a static HTML view of TiddlyWiki content that doesn't require JavaScript in the browser.</pre>
</div>
<div title="Jealousy" modifier="SDM" created="201004120330">
<pre>Frequently confused with the word envy, which has to do with coveting.  Jealousy is, in its primary sense, a positive motivation.  (My Webster's fails to confirm this excellant fact.  Try the O.E.D.  ??  Also check the KJV)  In English, it is related to the word &quot;zeal&quot;.   &lt;&lt;Bbl Song 8:6 &gt;&gt;.
God's:      &lt;&lt;Bbl Num 25:11 &gt;&gt;, &lt;&lt;Bbl Dt 4:24 &gt;&gt;</pre>
</div>
<div title="Jeremiah-01-01-note" modifier="SDM" created="201009302059" modified="201210071756" tags="Comment" book_key="701001a">
<pre>!!! General Notes
* He is not a prophet of doom but of consequences.
* The book is a collection of documents which are not in chronological order.
* Jeremiah is identified with Jesus, &lt;&lt;Bbl Jer 15:15 &gt;&gt;-21 :

&lt;&lt;Bbl Jer 13:17 abbr &gt;&gt;    Look 19:42-44, &lt;&lt;Bbl Mt 25:37 &gt;&gt;
    &lt;&lt;Bbl Mt 15:1 &gt;&gt;      (&quot;Ninevah repented...&quot; )
    26:10-15    His trial
    40:2,3  Identification with sin's punishment
    36:26   His several escapes
    38:4-28
&lt;&lt;Bbl Jer 1:16 abbr &gt;&gt;, ch. 3  &quot;Eli, Eli, lamach sabathoni?&quot;
    3:53    The tomb as well as the cistern

1:4-8   Jesus knew this passage well, knew it directly.

2   [[Water]] (13) is the symbol of God's presence; drought (6,25), of His absence; and false waters (13), of idolatry.
2:5 Idolatry!

7:12    Shiloh is mentioned in &lt;&lt;Bbl Judg 18:31 &gt;&gt;.

&lt;&lt;Bbl Jer 16:7 abbr &gt;&gt; In a sense the communion cup is for us a cup of consolation .

22:23   The NIV offers the insight that Lebanon refers to the &quot;house of Lebanon,&quot; that is, of cedars (&lt;&lt;Bbl 1King 7:2 &gt;&gt;).
22:30   As I recall, Pastor Kenneth Parker used this verse to help harmonize Luke and Matthew's genealogies of the Lord.  Thomas and Gundry (Harmony) favor a different theory.

23:28   The image of straw and grain reveals what true prophecy is to do:  feed a person.  See &lt;&lt;Bbl 1Cor 14:3 &gt;&gt;.

&lt;&lt;Bbl Jer 24:8 abbr &gt;&gt; Yet Jeremiah must be carried off with the rotten figs.

25:29   Compare 49:12.

28:11   Interesting that Jeremiah does not have a ready reply at that moment.

30:21   This could be applied to Christ's ministry.  Also it could be applied as a blessed desire for any church body.

31:31  -- a new [[Covenant]] of [[Grace]]

&lt;&lt;Bbl Jer 31:9 abbr &gt;&gt; The rebellion of the Northern Kingdom will have ended, and Jeroboam's bulls will hold no more attraction.

32:6-9  Jeremiah emphasizes the veracity of his communication with the Lord.
32:17-25    &quot;Lord, everything makes sense except the last part.&quot;  This reminds me of the disciples of Jesus asking Him to explain a parable; and vs. 27 is like one oh His replies, &quot;Have you been with Me so long?  Are you also so hard of hearing?&quot;

36:3,7  These statements represent God's will for the people in their response to Him.  The officials of vss. 11-12 seem to have a measure of the fear of God (16,19,25), but their response does not correspond to God's idea  --  they prefer to go to the king instead of God Himself.

38  The eunuch is as Joseph of Arimithea, Zedeciah a reprobate Nicodemus.
38:7    This man receives his reward, 39:15-18.
38:17   Not my back, but thy back.
38:12   If I were pulled out of mud like that, I'd appreciate the padding.
38:24-27    Jeremiah is willing to lie at the king's command.  The larger context of Zedekiah's disobedience makes this the more interesting.

39:12   The vilest of heathen are doing better than Zedekiah!

44:26   &quot;I have a [[Vow]] of my own,&quot; says the Lord.

49:12   &lt;&lt;Bbl Jer 25:29 abbr &gt;&gt;; &lt;&lt;Bbl Lam 4:21 &gt;&gt;

&lt;&lt;Bbl Jer 51:7 abbr &gt;&gt; Similar to &lt;&lt;Bbl Rev 17:4 &gt;&gt;,&lt;&lt;Bbl Rev 18:6 &gt;&gt;.

! Lamentations

&lt;&lt;Bbl Lamentations 4:21 &gt;&gt;  Compare &lt;&lt;Bbl Jer 25:29 &gt;&gt;, &lt;&lt;Bbl Jer 49:12 &gt;&gt;.  </pre>
</div>
<div title="JeremyRuston" creator="psd" modifier="jermolene" created="201102111106" modified="201110201351" tags="welcome">
<pre>Jeremy is the original creator of TiddlyWiki (nowadays, it's more of a [[group effort|Community]]). He works at [[BT|http://www.btplc.com/]] where he is Head of Open Source Innovation. He runs the [[Osmosoft]] team, and generally tries to help BT be better at understanding and participating in open source.

I can be reached at {{{jeremy (at) osmosoft (dot) com}}}, and I regularly read and reply to messages on the [[TiddlyWiki Google Groups|Community]]. I (occasionally) write on my TiddlySpace at http://jermolene.com/ and you can also find me on [[Flickr|http://www.flickr.com/photos/jermy/]], [[del.icio.us|http://del.icio.us/jeremyruston]] and [[twitter|http://twitter.com/Jermolene]].
</pre>
</div>
<div title="Jerusalem" modifier="SDM" created="201012110216">
<pre>God chose it outside of any recommending qualities, Ez 16, Zech 3:2 (applies to both Joshua and Jerusalem).</pre>
</div>
<div title="Job-01-01-note" modifier="SDM" created="201010310426" modified="201212181744" tags="Comment" book_key="601001a">
<pre>! General Notes
* Let's call him &quot;Yob&quot;.  It's got to be closer.
* Yob is a faith-filled and holy man.  In God's mysterious economy, his trust in God is tested and particularly his acceptance of God's dealings with him.
* Concerning the structure, see [[Chiasmus]]
!!! the Truth about Yob
The test consists of stripping away all earthly support and then providing one single earthly support in the form of three sympathetic counselors.  Again and again the argument is reduced to a proposition that Job's trial must be a result of his sin; the apparent alternative -- that God is unjust -- can't be countenanced.  But if Job agrees to this, he betrays the truth and God's righteousness.  This is he refuses to do (however tenuous his stance may appear at times).
!!! the Mediocre View
The test consists of stripping away all earthly support.  Then arrive three sympathetic counselors, and together they try to account for God's dealings.  But they are unable and the counselors are, it seems, a bit glib at some point in their attempts.  Job comes out the better man, somehow.  Commentary of F.I. Anderson follows this line.
* If Job is not righteous, the basic arguments are destroyed.  The book doesn't support this idea.  (Yet Lynn Wilson preaches this ~1985, based on his statement //that which I feared has come upon me//.)
* The arrival of a fourth man depicts one entering the storm at personal peril.
* &quot;...God appeared to Job and taught him that his greatest need was trust in God, not the assurance of justice in this life or vindication before some heavenly court.&quot;    // -- NAS &quot;Student Bible&quot; notes//
!! The essential test
What means did Satan use to test Job?   Irene offers a stunning insight (c. 2004):  Job's friends are sent by Satan.  Yes, one must go further:  The three friends are the very test of Satan; the opening calamities are just the staging.
* [[Satan]] asks permission first to strike Job's worldly resources and his bodily health, but he doesn't ask permission to send the friends.  Maybe Satan gets a pass when it comes to using fellow believers!  Maybe God was letting him sneak one through, showing His final [[Sovereignty]] even over wicked subtlety.  Maybe God's final appearance was a rescue on instant notice.
* Did Satan ask permission to tempt Eve?
----
2:9     //Curse God and die//   --  suicide, like the yellow and black handles of an ejection seat.  Our culture screams continually at us like Job's wife.  Compare Jonah 4:6

3:13-19 A clear exposition of death in the OT;  Rest In Peace.
3:23    hedged   --  same as 1:10 ??
3:24    Is water  here in a parallel construction with food   ??
3:25    Seems not to refer to the disasters but to his immediate calamity of continued daily life.

4:18    see 15:15
4:12-21 Is vs. 17 at the climax of this passage?
4:18    see 15:15 (also Eliphaz)
4:20, 5:2   These seem cruelly pointed.</pre>
</div>
<div title="Job-05-01-note" modifier="SDM" created="201211240248" modified="201212181514" tags="Comment" book_key="601005a">
<pre>5:7 I finally see (2/7/89)  what a simple proverb he's making.  Still it's disquieting.
6:26    Because of the preceding, I spoke in cursing.
7:1-2   See 14:6
7:14    Is this another aspect of Satan's oppression?  And yet Job ascribes these dreams to God, and it has been pointed out to me that the Bible ascribes no dreams to Satan.
7:17-18 The continued attention of God may be a source of comfort (&lt;&lt;Bbl Ps.139FIXME_1Psa 139FIXME_2) or of terror.
----
8:6-7   Are these false words?  Hard to say, especially as they come true in the end.
8:16-17 Compare the parable of the sower.
8,  9   Bildad and Job seem to switch arguments in these passages.

9:27    Positive confession.
10:10-11    see &lt;&lt;Bbl Ps 139:13 &gt;&gt;-15 ; &lt;&lt;Bbl Ecc 5:11 &gt;&gt;
&lt;&lt;Bbl Job 11:6 abbr &gt;&gt; the source of J.I. Packer's article title.
12:4    Poignant!
13:5    The plea of one in mourning.
14:6    see 7:1-2 and similar passages from &lt;&lt;Bbl Ecc 14:18 &gt;&gt;-2 3  The climax is vs. 19c.  Entropy, erosion, decay.
15:15   see 4:18 (also Eliphaz)
15:29   i.e., heavy for harvest.
----
16:2    The same in the KJV ??
16:3    How many charges of windy words  are made in Job, anyway?
16:17   How is Job's prayer pure?
16:21   The &quot;Rock that is higher than I&quot;.  This prayer will be answered in a greater measure than Job can reckon.

17:8    Not against God, apparently, but against his friends.

19:25   Vine's, under &quot;Kinsman (OT)&quot;, has a corrective note; see my own notes.

21:13   i.e., no lingering death.

23:7    An irony.
23:12   see &lt;&lt;Bbl Mt 4:4 &gt;&gt;

&lt;&lt;Bbl Job 27:18 abbr &gt;&gt;    Watchman's Hut   --  for a night's shelter only, or is this similar to the towers placed in vineyards ??

28:7    path   --  the vein of ore?

30:18   A strong image.

31  Many IF's , but one seems missing:  If I have been demanding justice from the Lord on my own terms, let it not be granted (34:36).

32:19   see &lt;&lt;Bbl Mt 9:17 &gt;&gt;

&lt;&lt;Bbl Job 33:6 abbr &gt;&gt;-7   A poignant exhortation; &quot;I'm human too&quot;.
33:23-30    This is a great description of salvation, with Jesus at vs. 23.

34:17   Both parts apparently referring to God.
34:26   Jesus!

35:8    One can only assess his life in his own humanly terms.

36:13   A crucial indictment?

42:5-6  One of the milder reactions to God's arrival that is recorded.

About the close of Job, see [[Chiasmus]]</pre>
</div>
<div title="John-01-01-note" modifier="SDM" created="201010310326" modified="201212010355" tags="Comment framedLinks" book_key="100001a">
<pre>General Notes
[[John 16:8-11|./Bbl/John.htm#C16V8]]
[[Eph 3:16|http://www.blueletterbible.org/Bible.cfm?b=Eph&amp;c=3&amp;v=16&amp;t=ESV#16]]
* John's intention is to reveal Jesus as the Messiah and Son of God.  Morris, p. 133n.
* //Thank You, Lord, that John was there...// -- Gene Getz, reflecting on the precious episodes recounted by John.
* Irony and misunderstanding by [[Dave Gifford|http://www.giffmex.org/nsdb.html]]
----

1:1-18  The other great passages of Christ's deity are &lt;&lt;Bbl Col.1 &gt;&gt;   FIXME Comprehend   --  the same Greek term is used in 12:35.  &quot;Overcome&quot; is better here.
&lt;&lt;Bbl Jn 1:8 abbr &gt;&gt; John was the lamp,  5:35, but not the Light.
1:11    This idea finds a place in the parables of the man who &quot;goes to a distant land to receive a kingdom.&quot;  For unto His own,  see Morris, p. 97.
1:12    This opens John's theme of individualism.
1:13    Morris takes the three negative expressions as signifying human activity in general, and thus denying the Jewish pride of ancestry.
1:14    &lt;&lt;Bbl Ps 78:60 &gt;&gt;; see Morris for &quot;points of contact.&quot;
    &quot; 'Grace' is one of the great Christian words, and it is a minor mystery that John uses it three times in the Prologue and not again throughout his Gospel (Morris).&quot;
1:17    Christ is the fulfillment both of God's grace and of His Judgment of sin.
1:18    He has explained Him    --  Unfolded in teaching, declared by making known (Vine).  See &lt;&lt;Bbl Heb 1:3 &gt;&gt;.
    only begotten God  is the reading defended by Morris, most strongly by the point that no one would make a transcription error in this direction.
1:21    John's answers grow more and more terse. Morris: &quot;It appears to stem from a dislike for answering questions about himself.  He had come to bear witness to another.&quot;  </pre>
</div>
<div title="John-01-23-note" modifier="SDM" created="201010310326" modified="201201092106" tags="Comment" book_key="100001b">
<pre>1:26   Seems to allude to 1:10c.
1:30    &lt;&lt;Bbl Mt 22:41 &gt;&gt;-46   [&lt;&lt;Bbl Mk 12:35 &gt;&gt;-37 , &lt;&lt;Bbl Lk 20:41 &gt;&gt;-11 ]  presents the question of Christ's Lordship over King David; this verse aptly provides the answer, left implied by Jesus.
1:32-33 C. Williams gives &quot;resting&quot; for &quot;remaining&quot;.  This alludes to the dove sent out by Noah; in Jesus of Nazareth, the Holy Spirit sent out by God found for the first time a place to &quot;rest the sole of His foot.&quot;
1:35-40 One disciple is named, the other not.  It might be John, especially since the eyewitness' details are present.
1:42    Wuest says simply &quot;Rock&quot; for Peter.  To give a literal translation into English better fulfills John's purpose.</pre>
</div>
<div title="John-01-43-note" modifier="SDM" created="201010310326" modified="201201092109" tags="Comment" book_key="100001c">
<pre>&lt;&lt;Bbl Jn 1:45 &gt;&gt; Philip is already the evangelist, already the one able to explain the Scriptures.  (But Morris finds him a little slow and ordinary, p. 162.)  Note he has got Jesus' origin all wrong: He's not the son of Joseph.  This makes Nathaniel's reply all the more significant.
1:46    Nathanael is right about the unlikelihood of Jesus' goodness.  But when we examine Phillip's introductory statement, the problem is not with Nazareth but with Jesus' humanity.
    In &lt;&lt;Bbl 1King 9:13 &gt;&gt;, Hiram the King of Tyre gives the ten cities of Galilee the name, &quot;As good as nothing.&quot;  The same estimation now comes from Nathanael, who not impossibly has the Tyrian denigration in mind.  But Jesus came from there.
1:47    See &lt;&lt;Bbl Ps 32:2 &gt;&gt;.
    &quot;An Israelite,&quot; some propose, &quot;in whom there is no Jacob.&quot;  Morris says the word for guile  means &quot;bait&quot; and is used in the Bible (the LXX, we presume) of Jacob.
1:48    &quot;A more guileful man would have &quot;modestly&quot; asserted his unworthiness (Morris, 166).&quot;
1:49    Jesus calls Nathanael an Israelite; he calls Him the King of Israel, thus his own King.

&quot;The opening of the narrative proper (1:19ff) might well be understood as the account of the happenings of one momentous week.&quot;  Morris, p. 129.
The events in this chapter can be compared to the Temptation accounts (Morris, p. 207).
[[John-02-01-note]]</pre>
</div>
<div title="John-02-01-note" modifier="SDM" created="201201092109" modified="201201100023" tags="Comment" book_key="">
<pre>&lt;&lt;Bbl Jn 2:1 &gt;&gt;-11 compared with &lt;&lt;Bbl Jn 19:25 &gt;&gt;-30 -- structurally significant to John's narrative, as the placement indicates chiastic form.
|&gt;| //''Dear woman ...''// to Mary |h
|&gt;|Shift in the relationship with Mary His mother |
|&gt;|Shift in the nature of His ministry |
|&gt;| Glory turned to [[Shame]] ... and back to glory ...&lt;br&gt; but the glory is hidden! |
|&gt;|Foreshadowing of the glorious Resurrection |
| A celebration | An execution |
| [[Wine]] unavailable | Vinegar as a substitute |
| //My hour not yet come// | //It is finished!// |
* @@color:brown;Christ's changing of the water of Jewish purification into the wine of the new age.@@ // -- F.F. Bruce //
2:3 Mary's initiative indicates that she had a role as a friend of the family.
2:7-8   @@color:darkgreen;Duties are ours.  Events are God's.  It is ours to fill the water-pots.  It is Christ's to make the water wine.@@ // -- J.C. Ryle //
* No one here is responding by faith except Mary.  The servants are following her instruction to obey Jesus, but (we presume) not as to God.
* How did Mary feel after a cup of that wine? See &lt;&lt;Bbl Amos 9:13 &gt;&gt;.
* Consider the servant in vs. 8, on his way to the headwaiter with a cup and not even comprehending the glory within.  Furthermore he has to wonder if the jar's function hasn't been abused, and perhaps he to blame. (Also the teaching that merely to fill the jars with unconsecrated water would be a violation ... not sure that is supportable.)
* As with the shepherds in Luke, the humble people are the only ones in the know.
* The wine is a treasure in an earthy vessel -- a joyous celebration just ahead.
2:11  An 'Elisha miracle' -- pragmatic, earthly provision that points to an abundant life. John records no Transfiguration; signs like these, and the entire scope and essence of Christ's life, are His glory.
----
&lt;&lt;Bbl Jn 2:14 &gt;&gt;-16  -- There seems no doubt among expositors that the court of the Gentiles is the site.
 -- Note something very sweet and curious (6/15/91), that Jesus did not treat all the transgressors the same way but took consideration on the special circumstances of each.  In particular, He had mercy on the pigeons.  Would a lesser man have done so?
2:17    &lt;&lt;Bbl Ps 119:53 &gt;&gt; would also apply.</pre>
</div>
<div title="John-02-18-note" modifier="SDM" created="201010310327" modified="201211121340" tags="Comment" book_key="100002b">
<pre>&lt;&lt;Bbl Jn 2:18 abbr &gt;&gt;   For the Jews this disruption of the status quo was a very serious irreverence.  Zeal propelled by a regard for the Scripture was not a sufficient justification, in their eyes, for Jesus' action.
 -- They demand a sign and are given a word  --  which they reject as impossible or irrelevant, and in any case not demonstrated to their satisfaction.  Of course this word contains the only and mightiest sign, and in refusing it these Jews settle themselves in rejection of the Messiah.  They forfeit opportunity to recognize the many very manifest signs.  For the true disciples, who have not made fleshly demands, the word becomes their sign (vs 22).
2:22 -- The disciples believed the Scripture, that is, the general testimony of the Messiah, including that quoted in vs. 17.
2:23-24 The people, acting on external evidence, believed that He is good.  But He, needing no such external evidence, knew they were not to be trusted.  The verb trust/believe is the same!
2:25    The bearing of witness was something the people had needed from John the forerunner.  Wuest says, &quot;was knowing experientially.&quot;
3:2-3   The phrases are reversed, but Jesus gives a perfect and parallel answer to the opening query of Nicodemus.  Nicodemus is concerned with the sanction of God and performing signs; Jesus with knowing God and being born again.  The difference is poignantly found in the verbs knowing  and seeing.   Compare 2:18, 10:38, 14:11.
3:4 Why is the rabbi so dense?  Morris offers two options; either hurt dignity is making him obtuse, or his question is rhetorical and wistful: can human nature be changed?
3:5 &quot; --  the mystery religions make use of the terminology of rebirth.  But any connection between them and this Gospel is purely verbal.  In them the worshipper may be brought more surely into relationship with his god [or, for the new agers, himself], but there is no idea of a transformation of his whole nature such as the Christian conception signifies.&quot;  Morris, p. 216.  Thus it is birth from above.
    &quot;In its own way this chapter does away with &quot;works of the law&quot; every bit as thoroughly as anything in Paul.&quot;  Morris p. 209.
3:8 Did they hear a gust of wind at this point?
3:12    Contrast with His statement to Nathanael, 1:50-51.
3:14-15 -- Later Nicodemus assists Joseph of Arimathea.  Was he emboldened by the memory of this conversation?
 -- &lt;&lt;Bbl Num 21:4&gt;&gt;-9 //Lifted up//
3:16    Like &lt;&lt;Bbl Rom 5:8 &gt;&gt;, the atonement proceeds from God's love and not the other way around.  The Greek emphasizes this.
3:18    see &lt;&lt;Bbl Acts 13:46 &gt;&gt;.
    As the sun incidentally creates a shadow, Christ brings Judgment.
3:19    &quot;The word translated Judgment  here denotes the process of judging, not the sentence of condemnation.&quot;  Morris p. 233.
3:20    Paul uses the same imagery and theme in &lt;&lt;Bbl Eph 5:12 &gt;&gt;.
&lt;&lt;Bbl Jn 3:21 abbr &gt;&gt;    The challenge is set before Christ's visitor.  Note that Nicodemus has come secretly, in darkness. </pre>
</div>
<div title="John-03-22-note" modifier="SDM" created="201010310327" tags="Comment" book_key="100003c">
<pre>3:25-26 What is the relationship between the two verses?
3:29    Compare &lt;&lt;Bbl Mt 11:11 &gt;&gt;.
&lt;&lt;Bbl Mt 3:30 abbr &gt;&gt;    Michaelangelo is reported to have said, &quot;As the marble wastes, the sculpture grows.&quot;
3:32    Compare &lt;&lt;Bbl Mt 16:17 &gt;&gt; on the Agent of revelation.</pre>
</div>
<div title="John-04-09-note" modifier="SDM" created="201010310328" modified="201211160257" tags="Comment" book_key="100004b">
<pre>4:10   This proposed reply rhymes with the protests of John the Baptist (&lt;&lt;Bbl Mt 3:14 &gt;&gt;) and Peter (&lt;&lt;Bbl Jn 13:6 &gt;&gt;).

4:3
4:7 see &lt;&lt;Bbl Mk 6:37 &gt;&gt; and meditate.  God challenges the woman to give him a drink.  The opening of communion with God is in His request for communion (in one parable, a sample of the vineyard which He has planted), a request we cannot naturally fulfill, try as we may!  It is when we realize the futility of our own resources that we learn to draw upon His.  The contrast between the two waters is complete: one is a temporal and temporary relief brought up only by heavy toil, the other a free and unstoppable fountain of true refreshment.
    Later (9:28) He thirsts again.  Morris points out more parallels (p. 255).
    Note the contrast with the end of the account, 4:31-32.  It seems that to a perishing gentile He presents his human side, to those already on the road to realization His divine side.
4:8 Besides the natural hardships of the third-world, while in Samaria, the disciples must maintain purity by going to the kosher food booth.  This requires a trip to the city.  But later, the trip is proved needless (vss. 31-34).
4:10    In other words, the woman's reply should have sounded like the Baptist's reply in &lt;&lt;Bbl Mt 3:14 &gt;&gt;, or Peter's reply in &lt;&lt;Bbl Jn 13:6 &gt;&gt;.
    see &lt;&lt;Bbl Is 12:3 &gt;&gt;, &lt;&lt;Bbl Pr 24:27 &gt;&gt;.  I wonder if living water is an idiom for artesian waters.
4:13-14 Jesus makes a succinct statement in three parts.  The world leaves me thirst; water from Jesus will end my thirst; I will become in myself a fountain.  See &lt;&lt;Bbl Lk 15:11 &gt;&gt;-32 , the younger son (son 4 11-15?).   This woman is obsessed with practical details.
4:21, 23    //Neither __in__ the city nor the he mountain... but __in__ Spirit and truth//
4:23    This verse finds a fulfillment in context in vs. 42.
4:26    The syntax places I am  first.
4:27 The dramatic treatment by Acts Of Recovery gives this special significance:  far from being in danger of molestation, the woman is treated with dignity by not being challenged with questions.  </pre>
</div>
<div title="John-04-30-note" modifier="SDM" created="201010310328" modified="201211160307" tags="Comment" book_key="100004d">
<pre>4:39   After all, she had done a lot.
4:42    An ingathering among the gentiles!  And the Lord was just traveling through; they are, as it were, dogs scarfing up crumbs from the table.  How fitting the majestic title here, Saviour of the world.
4:48    Possible Jesus was stating a truth and not making one of those hard-seeming challenges?  Possible He was saying //Yes, I do miracles, and let me remind you why//?</pre>
</div>
<div title="John-05-01-note" modifier="SDM" created="201010310328" modified="201212190128" tags="Comment" book_key="100005a">
<pre>&lt;&lt;Bbl Jn 5:2 &gt;&gt;  Surely someone has made out the five  to represent the Torah.
5:4
* ESV Bible skips from verse 3 to 5. According to their footnote and the Study Bible commentary there is a significant problem with the manuscripts for this passage in that the phrase in question is not found in the earliest known manuscripts. The translators made the following judgement call:  &quot;The statement in the ESV footnote about an angel of the Lord stirring the water and the first person who stepped in being healed is found in some early manuscripts, but not the earliest. Therefore the omitted verse 4 should not be considered part of Scripture, although v.7 (which is in all manuscripts) shows that people believed something like what this statement reports.&quot;
* I hear this misapplied as &quot;a word of faith for our fellowship.  We've got to step in while the waters are stirring.&quot;  Actually this verse describes a profoundly truncated kind of grace.  In fact it seems a perverse sort of athletic competition, or a lottery.

5:10    Good news, bad news!
5:11    The command to walk was an opportunity for instant decision and obedience.
5:17    What about the sabbath of the Creator?  I suppose Jesus does not have that original Rest in mind.
* The NEB is strong.
5:18    His own Father  --  this is what enraged the Pharisees.  &quot;The deity of Christ is pivotal to all the objections to both basic doctrine and consecrated life.&quot;
5:40    See &lt;&lt;Bbl Ps 119:38 &gt;&gt;.
&lt;&lt;Bbl Jn 5:46 abbr &gt;&gt;   Moses' prophecy is in &lt;&lt;Bbl Dt 18:15 &gt;&gt;-19.
&lt;&lt;Bbl Jn 5:58 abbr &gt;&gt;   Omnipresence refers to time as well as space.  Jesus claims to inhabit eternity, and here lies the provocation.
* //[[Amen]], amen// </pre>
</div>
<div title="John-06-01-note" modifier="SDM" created="201010310331" modified="201211092151" tags="Comment" book_key="100006a">
<pre>&lt;&lt;Bbl Jn 6:1 &gt;&gt;-9    The multitude's zeal seems very promising; in their haste they have forgotten food.
6:2 see 6:15-26
6:7 &lt;&lt;Bbl Num 11:22 &gt;&gt; presents a like situation.
6:9 &quot;The LORD is not restrained  --  many or few.&quot;  &lt;&lt;Bbl 1Sam 14:6 &gt;&gt;.  But you can easily guess Andrew's sense of embarrassment for bringing up this bit of irrelevance.
6:10    What an irony  --  plenty of grass!   Plenty of room to rest, relax in God's provision.
6:14    the Prophet  refers, as does 1:21 and 1:45, to He of whom Moses prophesied.  The people instantly recalled the manna in the wilderness.  This fact illuminates Jesus' answers of 6:26-58.
6:22-25 This is like the action of a stirred-up ants' nest.
6:26-27 These echo His words to the Samaritan woman, 4:14-15.
6:29    See &lt;&lt;Bbl 1Jn 3:23 &gt;&gt;.
&lt;&lt;Bbl 1Jn 6:36 abbr &gt;&gt;   They had seen the miracle of vs. 11, but the questions of vss. 30-31 reflect the hardness of their hearts.

7:6 See &lt;&lt;Bbl 1Jn 4:5 &gt;&gt;.
&lt;&lt;Bbl 1Jn 7:7 abbr &gt;&gt;    Compare 15:18-19, also &lt;&lt;Bbl Esther 3:8 &gt;&gt;.
&lt;&lt;Bbl Esther 7:10 abbr &gt;&gt;  not publically  takes up the &quot;manifest thyself&quot; of vs 4 and rejects it.
7:24    see 8:15; &lt;&lt;Bbl 1Sam 16:7 &gt;&gt;; &lt;&lt;Bbl Is 11:3 &gt;&gt;
&lt;&lt;Bbl Is 7:35 abbr &gt;&gt; &quot;Notice that they speak of going to the Dispersion, but not of teaching the Greeks.  This would seem to mean going to the Jewish synagogues and making them the springboard for a mission ourward to the Greeks.  It is, of course, the method that according to Acts the first Christian preachers actually employed.  These Jews, however, dismiss the method as too fantastic to be considered a proper activity of the Messiah.&quot;  (Morris, p 418)</pre>
</div>
<div title="John-08-07-note" modifier="SDM" created="201009302058" modified="201211192313" tags="Christ Faith Comment" book_key="100008a">
<pre>8:3    Did the opening of Lamentations, Jerusalem as a ruined woman, cross the mind of Christ?  &lt;&lt;Bbl Ezek 16:1 &gt;&gt;?
&lt;&lt;Bbl Jn 8:4 abbr &gt;&gt; Morris believes that a trap had been deliberately set.  Also a special vindictiveness is evident.  Also a lynching was in consideration.
8:5     While the Law orders death for the man and women, these Jews use the feminine pronoun.
8:6 David Holford says it probably wasn't the sign of the fish.
8:7 Morris has a stunningly clear analysis of Christ's reply.
8:9 Some fled the Light, one remained.  The former wanted to conceal their sins, the latter acknowledged them.  And all in accord with 3:20-21.  Fount Schultz.
8:11    There is nothing about forgiveness.  The guilty woman has shown no sign of repentance or of faith.  Jesus simply shows mercy and makes a call to righteousness.  &quot;Here then the mercy of God and His truth meet.  For only in the mouth of the sinless Jesus can the full condemnation of sin, and the full demand for the righteousness of God, march with the authoritative pronouncement of His mercy and charity.&quot;  (Morris p 891)
8:12    Fount Schultz sees this verse as naturally following the story.
8:43    &quot;Everything in this verse depends upon the contrast between speech  and word .  The former term will denote the form of expression, the latter signifies rather its content.  If there is a lack of sympathy and comprehension of the basic position then all manner of details will inevitably be misunderstood.&quot;   (Morris p 463)
8:56 -- Abraham's faith</pre>
</div>
<div title="John-08-48-note" modifier="SDM" created="201010310331" tags="Comment" book_key="100009a">
<pre>9:3    Is Christ then a superlapsarianist?
9:6 Floyd McClung says spitting on the ground was a Sabbath violation because the spittle pushed the soil, representative of farming.
9:7 Perhaps John provides the translation of the pool's name to note an irony:  Jesus &quot;sends&quot; him to &quot;Sent.&quot;  Here, direction and purpose from the Guide lead to vision.  Morris notes that the name will originally have had to do with the channel which fed the pool.
9:11    The man that is called Jesus   --  but note how his understanding of who Christ is grows through the account.  Vss 27f, 33, 35-38.  The Pharisees follow a converse path of anti-revelation 9 24-33     &quot;Far from shaking him, their arguments caused him to clarify his position, and he finished the interrogation with a deeper appreciation of Jesus than he had had at the beginning.  We should not miss this further example of John's irony.&quot;  (Morris 490)
9:25    The simplest apologetic  --  our new life.
9:28    see 4:7
9:34    The man's state of sin, and its supposed consequences, was occasion for the disciples' ignorant wonder, for Jesus' love, for the Pharisees' arrogance.

10:11-13    see &lt;&lt;Bbl 1Sam 17:34 &gt;&gt;-35   --  He could almost have been alluding to David.
10:19-21    But both sides share in the description of vs. 6.
10:33   &quot;Jesus, they affirm, is a man, yet makes Himself God; in reality He, being God, had become man (&lt;&lt;Bbl Php 2:5 &gt;&gt;-8 ).&quot;  (Morris 525)
10:35   &quot;This means, of course, that in the Saviour's view the indefectible authority of Scripture attaches to the very form of expression of its most casual clauses.  It belongs to Scripture through and through, down to its most minute particulars, that it is of indefectible authority.&quot;  (Morris p 526)
10:39   Hand  contrasts with the hand of the Father, vs 29.  </pre>
</div>
<div title="John-11-01-note" modifier="SDM" created="201010310332" tags="Comment" book_key="100011a">
<pre>11:1-37    In which God displays His foolishness.
    The raising of Lazarus is a great turning point in John's Gospel.  It considerably thickens the plot.  Morris has a cogent discussion of why this story is absent from the Synoptics; it is likely Peter, the eyewitness of the Synoptics, was not part of this scene.
11:5-6  The NEB changes the meaning somewhat: though He loved them, he remained two days longer.  If the &quot;though&quot; belongs, it is given from a throroughly human perspective, unlikely it seems to me to come from &lt;&lt;Bbl Jn 11:9 &gt;&gt;-10   See 12:35-36, 13:10b.
11:16   For His disciples, all is doubt and all is confusion.  Thomas sounds like Eeyore.
11:27   &quot;Martha should be known to us from this moving declaration rather than from her worst moment of criticism and fretfulness.&quot;  Morris p 552.
11:34   Morris, p 558, cites a remarkable comment by Lightfoot associating this come and see   with that of chap. 1.
11:40   &quot;All there, believing or not, would see the miracle.  But Jesus is promising Martha a sight of the glory.&quot;  Morris p 560.
11:51   God is working sovereignly through the office.  The next verse expands.  </pre>
</div>
<div title="John-12-09-note" modifier="SDM" created="201010310333" modified="201208081425" tags="Comment" book_key="100012a">
<pre>12:1-8 In this scene everyone is doing just what they do best.
&lt;&lt;Bbl Jn 12:10 abbr &gt;&gt;   &quot;If they hated Me...&quot;
12:21   Morris thoroughly agrees that this signaled for Jesus the precipitation of His final work.
12:24   A seed carries within it the entire blueprint, so to speak, of the plant which comes forth.  Even so, Jesus' life contained the glory of the death unto resurrection; it was repeated over and over in the miracles of the Gospels.  Also this seed was to bring forth &quot;plants after its own kind&quot;  --  resurrection in the lives of all who believe.  See E.M. Blaiklock, The World of the New Testament.
12:27   &quot;John does not record the agony in Gethsemane, and this is his equivalent of the Synoptic prayer in the Garden, 'not what I will, but what Thou wilt.' &quot;  Morris p 595.
12:34   This is important; it seems to indicate that the crowd understood &quot;lifted up&quot; to mean &quot;allowed to die.&quot;
12:35-36    This theme also found in 11:9-10, 13:30b.  See Morris, 600 n, for a stunning observation.
----
13:3-11 More than a lesson in humility, it betokens the atonement just ahead.
13:2    The &quot;opportune time&quot; of &lt;&lt;Bbl Lk 4:13 &gt;&gt;.
&lt;&lt;Bbl Jn 13:3 abbr &gt;&gt;    Do we share this confidence that Jesus had?  The next verse presents its natural consequence.
13:11   See &lt;&lt;Bbl Jn 15:3 1 t&gt;&gt;.  Jesus seems to be referring to several things:  the cleansing of the group from Judas, and the need of the regenerate man for occasional restoration  --  but not radical renewal.
13:26   Morris regards it as obvious that Jesus designs His signal for John only.  But Matthew and Mark do not indicate any privacy in Jesus' identification of the traitor, and Morris doesn't deal with this difficulty at all.  However, one can read Matthew and Mark's words as simply a reiteration of the fact that it is one of the intimate group that will betray the Lord.
13:27   see &lt;&lt;Bbl Ex 12:11 &gt;&gt;
&lt;&lt;Bbl Jn 13:31 abbr &gt;&gt;   But to any natural eye, however discerning, this could not be true.
13:36   To where do we follow?  First, into the true will of God.  Second, into a blessed eternity.  Third, into His sufferings, as Jesus in 21:18.

14:6    &quot;We should not overlook the faith involved both in the utterance and in the acceptance of those words, spoken as they were on the eve of the crucifixion... &quot;  Morris p 641.
14:12   &quot;On the day of Pentecost alone more believers were added to the little band of believers than throughout Christ's entire earthy life.&quot;  Morris p 646.  </pre>
</div>
<div title="John-15-08-note" modifier="SDM" created="201010242357" modified="201112270119" tags="Comment" book_key="100015a">
<pre>* &lt;&lt;Bbl Jn 15:1 abbr &gt;&gt;-8 --  Generally, the O.T. context for the [[vine|Vineyard]] as a symbol of Israel is terribly negative.  &lt;&lt;Bbl Ps 80:1 &gt;&gt;-16 , &lt;&lt;Bbl Is 5:1 &gt;&gt;-7 ; &lt;&lt;Bbl Jer 2:21 &gt;&gt;, &lt;&lt;Bbl Ez 19:10 &gt;&gt;; &lt;&lt;Bbl Hos 10:1 &gt;&gt;.  But see also &lt;&lt;Bbl Is 27:2 &gt;&gt;-3 .
* 15:2 -- Morris relates this to 13:10 with strong import.
* 15:3 --  clean, purged, [[Pruning]].  John uses the term one other time, &lt;&lt;Bbl Jn 13:11 &gt;&gt;.  Between these two passages, Judas defects.
* 15:15 -- &lt;&lt;Bbl Gn 18:17 &gt;&gt; -19 1 presents Yahweh's counsel with [[Abraham]].
----
* &lt;&lt;Bbl Jn 16:8 abbr &gt;&gt;  -- The NEB is good here.
* 16:10 -- Peter addresses this theme in &lt;&lt;Bbl Act 2:32 &gt;&gt;-36 .
* 16:13 -- See &lt;&lt;Bbl Mt 10:20 &gt;&gt;.
* 16:20 -- &lt;&lt;Bbl Ps 126:5 &gt;&gt;-6 , anguish followed by joy ([[Birth]])
----
* 17 -- Perhaps the prayer can best be imagined as prayed when Christ entered the true Holy Place, &lt;&lt;Bbl Heb 9:24 &gt;&gt;.
* 17:19  -- Christ sanctified Himself (NEB, consecrated) for our sake.
* 17:20-23 -- He is simply describing the [[One-In-Three]]!  But He never names the Spirit directly  --  rather He names the Spirit's special realm, the hearts of believers.  </pre>
</div>
<div title="John-18-01-note" modifier="SDM" created="201010310325" modified="201211121359" tags="Comment" book_key="100018a">
<pre>18:17  Peter is very concerned about being identified as the man who cut off the ear of the high priest's servant.  The high priest! -- and Peter has been known to respect offices.  When Peter made that assault, he set himself up for the betrayal of his Friend that was to follow.

18:21-23       Did Jesus fail to &quot;turn the other cheek?&quot;  Of course not; He was crucified in turning the other cheek.  He also gave the word of truth in faithfulness and humility, which is always our right, and our obligation.

&lt;&lt;Bbl Jn 2:1 &quot;&quot; note &gt;&gt; seems to be a structural opener for this passage.

&lt;&lt;Bbl Jn 19:35 abbr &gt;&gt;   See &lt;&lt;Bbl 1Jn 5:13 &gt;&gt;.
&lt;&lt;Bbl Jn 20:11 abbr &gt;&gt; //the net was not torn// -- the perseverance of the saints; &quot;no one will snatch them out of my hand.&quot;
&lt;&lt;Bbl Jn 20:22 abbr &gt;&gt;   Just as the Lord breathed His breath into the man, &lt;&lt;Bbl Gn 2:7 &gt;&gt;.
&lt;&lt;Bbl Jn 20:23 abbr &gt;&gt;   &lt;&lt;Bbl Mt 16:19 &gt;&gt;
&lt;&lt;Bbl Jn 20:25 abbr &gt;&gt;   Jesus was fully healed from the atrocities, but retained these scars as a kind of token.  This is like the testimony of a Christian's past before knowing Christ; it has no significance for his current station, but remains as a demonstration for all who would see and touch.
20:27-28    The command of Jesus to be not unbelieving but believing  is fulfilled in Thomas, as he makes the strongest confession of faith yet in history  --  my God.
----
&lt;&lt;Bbl Jn 21:15&gt;&gt; -- cf &lt;&lt;Bbl Jonah 4:9 &gt;&gt;, which has //vine// in the place of //fish//
21:25   After observing that John seems to have written in order to record things unmentioned by the other Gospel writers, we note here that he says Jesus is beyond books.  Perhaps an idolatry of the NT scriptures was already beginning to appear (a feature of gnosticism?).  </pre>
</div>
<div title="Jonah-01-01-note" modifier="SDM" created="201011072257" modified="201208021824" tags="Comment" book_key="701001a">
<pre>* The //word of the Lord// opens and closes the book.
* God is the main character, Jonah is His foil.  (This and some other insights from Jim Pye, July 2012.)
* Simple obedience on Jonah's part would make for an extremely short book.  Am I adding extra chapters for myself?
* God shows His sovereignty over all the world through numerous interventions which are supernatural, subtle, and sometimes both.  He influences men, nations, plants, animals, insects and the natural elements of sun, wind and sea.
* The narrative is striking for zooming continuously and compellingly from large to small, abstract to concrete.
* The first declaration is presented formalistically, the last one intimately.
* &lt;&lt;Bbl Jonah 4:2 abbr &gt;&gt; tells us Jonah had protested his mission from the very beginning (though the beginning did not report it).  The effect is of a man who is more closely reviewing his actions, his faults.
* Our Lord Jesus confirms the real historicity of Jonah in &lt;&lt;Bbl Matthew 12:40 &gt;&gt;.
* The existence of the book is our best indicator of Jonah's final state, a good resolution.
!!! Chapter 1
* The boat of sailors is a microcosm of the great city of Ninevah.  No less than the whale, it is provided by God to bring an object lesson to Jonah.  Instead of being merely capsized, it is rescued and redeemed.  If one asks as Rich Salas did, &quot;Will you assert these sailors came to fully know God?&quot;, the answer comes from the heart of Jonah's experience and narrative; we guess he was far from comfortable, and he consistently prefers death over faith-filled obedience.
* I wonder how Jonah learned the outcome of the sailors.
&lt;&lt;Bbl Jonah 1:3 abbr &gt;&gt; Jonah &quot;goes with them from the presence of the Lord.&quot;  He pays money to join the heathens in their flight from God.  Fool's money!  Herman Melville gives this delicious treatment in __Moby Dick__.
1:4 //The Lord sent...// -- later the verb //prepared// rings again and again.
1:5 //to lighten the ship// foreshadows Jonah's immediate fate.  They were reminded of his presence while rummaging the hold.
&lt;&lt;Bbl Jonah 2:3 abbr &gt;&gt;    The word //heart// connects this verse vividly to &lt;&lt;Bbl Matthew 12:40 &gt;&gt;.
{{hilite{
!!!Jonah as a sign
# God's servant is put to death, one for the many.
# He is raised after three days -- this Jesus cites particularly.
# His message reproves the smug hardheartedness of religious leaders -- this Jesus presents most vividly.
# He hints at the inclusion of the gentiles.
}}}
1:17    The great fish is God's agent of doom, but truly of salvation.  It is an object lesson in calamity, as well as the realization of God's preserving power.

&lt;&lt;Bbl Jonah 2:6 abbr &gt;&gt;    The leader is the last to know.
!!! Chapter 4
* Present chapter four using a petri dish, a heat lamp, a hair-dryer and a miniature umbrella (as for a daiquiri).  After demonstrating how great God's control, confront people on their readiness to trust God's love.
* I imagine Jonah laying down his pen at the end; perhaps overcome, unable to continue; or perhaps well satisfied with the narrative tension.
&lt;&lt;Bbl Jonah 4:9 abbr &gt;&gt;    Cf. &lt;&lt;Bbl Jn 21:15 &gt;&gt;, //Do you love Me more than these?//  God's compassion perhaps also extends to the deprivation of the fast; their ignorance has prompted an overly stringent prostration.
</pre>
</div>
<div title="Joseph" modifier="SDM" created="201211170232" modified="201211170238" book_key="">
<pre>* Joseph is my favorite OT person.  My son is named after him.
* Eleven chapters of Genesis give the details of his life, but few references occur in NT.
* Joseph entered the prison with his dreams large in his mind and, we can imagine, the promises of God small.  But he emerged with the promises magnified, the dreams diminished.  A clue to this is found in 40:15 (see note).
* We must give him full due for his ability to enter the foreign culture:  39:1-6, 21-23; note especially 41:14 in which he shaves.
* Joseph endured temptations in the strongest sense offered by the Lord Jesus' model prayer, for he was pressed repeatedly by his difficult decisions, and pressed into the most difficult bondage.
** His dreams.  Should he reveal them or not?
** The garment.  How can he wear it and not bring a provocation?
** His appointment as auditor over his brothers.  Must he bring the bad report?
** His betrayal by the person who most held the trust of his master Potiphar.
* There is much more to say about this.  Would he not have been tempted to withhold the interpretations of dreams, both in the prison and the palace?  Would not alternate schemes have occurred to him?  The more I consider him, the less I accept the theory that arrogance or immaturity were failings.

&lt;&lt;Bbl Gn 39:8 abbr &gt;&gt;  It is easy to infer a boastful, provocative tone in Joseph's words here, just as when he divulged his dreams to his family. In fact there may be no such implication.
    The wife would have been perhaps the one to lose most in Joseph's rise to authority within the household.
39:12   We are commanded //flee fornication.//  Note he was snagged by his garment, ''just as when in years earlier his garment signified so much.''
    Jesus had often to deal with Potiphar's wife: the Jews who wanted to make a king out of Him.  In vs. 17, the Hebrew slave  seems to echo this, since Jesus came as a servant.  To posit Potiphar as the Father Godhead is probably too far towards allegory, but there is a bit of profit.

49:29-32    Note Jacob's sojournings  --  first north, fleeing Esau, then south fleeing the famine.  Note that his commitment to God at Bethel was based on his returning to the land.  Jacob's faith is found in his commitment to the promised land:  -- Therefore God is not ashamed to be called their God. --   But note that his strongest confession comes at the end of his life, when he is in exile that second time.  When at home in Canaan he may have tended to forget the promises of God; this neglect was manifest in his sons' deficient vision.  In &lt;&lt;Bbl Gn.50FIXME_1Gen 50FIXME_2 he seems to have much firmer faith and understanding than before.
What is the faith to which Hebrews refers?  Great acts of faith come from exigency; so what was the need Joseph faced?  Possibly the need for his enbalmed corpse (50:26) to remain on display in Egypt so that his people would remain in favor.  Otherwise the sequel of &lt;&lt;Bbl Ex 1:8 &gt;&gt; would have happened earlier.  See 43:32; 46:31-34.
    Joseph's bones are found again in &lt;&lt;Bbl Ex 13:19 &gt;&gt;; &lt;&lt;Bbl Josh 24:32 &gt;&gt;.

50:15-20    Of course he is grieved  --  he had forgiven them so long ago!  Examine the occasions where Joseph weeps.  How do they tell us of God's weepings?</pre>
</div>
<div title="Joshua-01-01-note" modifier="SDM" created="201010310419" modified="201211280210" tags="Comment" book_key="501001a">
<pre>&lt;&lt;Bbl Joshua 1:8 abbr &gt;&gt;    The Book of the Law had previously been placed in the ark, &lt;&lt;Bbl Dt 31:24 &gt;&gt;-26 .
&lt;&lt;Bbl Joshua 1:9 abbr &gt;&gt;  Inverted structure A,B,B,A, as found in &lt;&lt;Bbl Mt 28:8 &gt;&gt;-20   --  and so very similar in tone and prospect.
1:11    I wonder how this relates to the cessation of the manna, 5:12.
1:17    The first part of this statement may have given Joshua no great comfort.

2   Like the spies sent out by Moses, the assignment is to apprehend the favor of God concerning a difficult venture.  These spies could have returned without a confident confession.
&lt;&lt;Bbl Joshua 2:1 abbr &gt;&gt; A harlot's house, performing some functions of an inn and a bit of a cover.
2:3-5   Rahab lies to the king.  Thus she stakes her life on the victorious invasion force..
2:9 Rahab says everybody is terrified, and the king's actions are what we could expect from a frightened man.  Rahab prefers full and immediate capitulation  --  with the marvelous expectation of mercy.
2:10-11 A statement of faith in God based in solid evidence of His power.  Rahab is using the title //Elohim.//
2:12-13 Fear provides a sufficient motivation for Rahab's salvation.
* Observe that everyone is convinced, everyone terrified -- but most are pushed toward hardened resistance (see &lt;&lt;Bbl James 2:19&gt;&gt;) instead of capitulation.
* Like Noah, Rahab acts alone in her faith and commits everything.
* Rahab is in a strong bargaining position ... and she has strong faith ... so she takes rather for granted the family will be saved as well.
2:17-19 The signal they offer is precisely similar to the sign of the Passover in &lt;&lt;Bbl Ex 12:21&gt;&gt;-23.  Thus they extend the covenant; the angel of death will pass over her.

3:3 Apparently this is replacing the smoke and fire.
3:4 The white line at the front of the bus.  The Levites are not to be confused by human counsel.  The counsel of God, as well as His presence, is holy.
    Or is it possible that we see the opening of an ecclesiocracy here?  First, they're going beyond the measures of sanctification prescribed by God.  Second, the manifest presence of God is evidently being replaced by a token of His presence (albeit a very direct token).  Would this passage be classed as &quot;Priestly&quot; by those deceived scholars?
3:15-17 An entirely new generation, minus two, witnesses the miracle.  See 4:23.  Also perhaps this is the baptism of &lt;&lt;Bbl 1Cor 10:2 &gt;&gt; for the new generation.

4:10    Fulfillment of &lt;&lt;Bbl Dt 27:1 &gt;&gt; (or somewhere in that chapter  --  but I'm confused about 9:30-35 ??</pre>
</div>
<div title="Joshua-05-01-note" modifier="SDM" created="201211280208" modified="201211280209" tags="Comment" book_key="501005a">
<pre>Chap 5  The power of God grows to a crescendo within His people.  Vss 1-10, Consecration; 11-12, Provision; 13-15, Power.
5:9 Rolling   --  does this foreshadow the rolling away of the stone over the tomb?  See &lt;&lt;Bbl Ps 119:22 &gt;&gt;.
&lt;&lt;Bbl Joshua 5:11 abbr &gt;&gt;-12  Manna was a down-payment of the bounty of the promised land.  Thus it is a symbol of the Spirit.
5:13-15 This is Joshua's &quot;burning bush&quot;, and in his dealings with the mysterious Captain Joshua demonstrates courage followed by submission, obedience, and consecration.
5:13    See &lt;&lt;Bbl 1Jn 4:1 &gt;&gt;
&lt;&lt;Bbl Joshua 5:14 abbr &gt;&gt;    The question is implicitly turned back on Joshua:  Who is Joshua for?
5:15    Joshua expects a command of activity, but receives a command of passivity.

6:5 It is not written that the common people of Israel knew what to expect, precisely, except for victory.
6:20    Evidently Rahab's family was under special providence, since the wall fell to the ground, and that's where they lived.
&lt;&lt;Bbl Joshua 6:23 abbr &gt;&gt;  the first fruits of the Promised Land.  Rahab believed big and received a big salvation.  A bit later the Gibeonites ask for a kind of amnesty -- small faith, a small amnesty.
6:25    to this day   --  this reveals the book of Joshua as a contemporary account.
6:26    Fulfilled in &lt;&lt;Bbl 1Kings 16:34 &gt;&gt;

&lt;&lt;Bbl Joshua 8:28 abbr &gt;&gt;   Ai  means &quot;ruin.&quot;  Ai is a symbol of the fallen nature, which must be crucified.
8:30-35 This is the fulfillment (belated?) of &lt;&lt;Bbl Dt.27 &gt;&gt;   See &lt;&lt;Bbl Lk 14:31 &gt;&gt;-32 .  See also &lt;&lt;Bbl 2Sam 21:1 &gt;&gt;-2 , Saul's betrayal.

&lt;&lt;Bbl Joshua 10:1 abbr &gt;&gt;-5    This alliance of kings for war is a formidable threat, motivated by hatred and fear.
10:4    //...let us strike Gibeon; for it has made peace with Joshua and with the children of Israel.//  The king of Jerusalem seems to be offering a //causus belli//.

11:6    hamstring   --  cut the tendon in back of the hock.
11:23   A manifest destiny that is no politician's slogan, but revealed from God.

15:63   This probably speaks for the excellent situation of Jerusalem.  Another instance of to this day  (6:25), and no indication that Jerusalem is going to be specially chosen.  See &lt;&lt;Bbl Ez 16:3 &gt;&gt;.  The conquest is found in &lt;&lt;Bbl Judg 1:8 &gt;&gt;

&lt;&lt;Bbl Joshua 17:1 abbr &gt;&gt;    See &lt;&lt;Bbl Ps 22:12 &gt;&gt;; &lt;&lt;Bbl Amos 4:1 &gt;&gt;&amp;nbsp;

24:12   See &lt;&lt;Bbl Ex 23:28 &gt;&gt;
&lt;&lt;Bbl Joshua 24:13 abbr &gt;&gt;    see &lt;&lt;Bbl Pr 13:22 &gt;&gt;</pre>
</div>
<div title="Judges-01-01-note" modifier="SDM" created="201010310419" modified="201211132336" tags="Comment" book_key="501001a">
<pre>!! General Notes
The book of Judges presents the first three hundred years, approximately, of the Jewish settlement.  God's basic mandate for taking the land is presented in Eco 23:20-33 (also see &lt;&lt;Bbl Num 33:51 &gt;&gt;-56 ).  &lt;&lt;Bbl Judges 1:27 &gt;&gt;-36  (note vs. 3 especially) mark the violation of this mandate.  Like Joshua, this book has much to do with war; but while the fighting in the first book is increasingly more effectual, the fighting here is increasingly more futile.
* &lt;&lt;Bbl 1Sam 4:18 abbr &gt;&gt; presents Eli as a judge over Israel.
* See &lt;&lt;Bbl 2Sam 7:10 &gt;&gt;-11 .   See also &lt;&lt;Bbl 2Cor 11:31 &gt;&gt;-32.
----
&lt;&lt;Bbl Judges 2:1 abbr &gt;&gt;-5     Areas of past sin that are not rooted (or routed) out upon conversion may become lasting snares.  Look at how much trouble comes from vs. 3.  If they had known, they might have wept a lot harder.
2:1 From Gilgal, &quot;Rolling,&quot; the place where the reproach was removed in &lt;&lt;Bbl Josh.5 &gt;&gt;    See vss. 20-23
2:10    Such ignorance could only come from neglecting God's commands to remember His power.  It is universally human, and universally fallen, to forget.
2:20-23 See the opening of the chapter.  Somehow that uncrucified flesh becomes our own special area of testing from the Lord.

3:1-2   A strange piece of redemption.  By now the Israelites could have obtained peace.  The author seems to present it as a nice idea, but we step back and realize that having to learn war is not a very nice idea.  I have so much unnecessary striving in my life.
3:4 In addition to teaching God's people about war, the nations are to test them in their obedience to God.  This has the same strange logic to it as vss.1-2.  They're already clearly disobedience, otherwise the nations would have been vanquished.
3:13    the city of the palm trees    --  ??   Whichever this city is, it would be the then-capital of the Israelites.
3:17    See &lt;&lt;Bbl Ps 73:4 &gt;&gt;
&lt;&lt;Bbl Judges 3:19 abbr &gt;&gt; Interesting references to Ehud's treatment of the idols.

5   The Gloat of Deborah.  What low satire.  Compare with &quot;The Battle of New Orleans.&quot;
5:14-18 I'll bet this is rife with puns.  Possibly vss. 14-17 are derogatory of the ten tribes, while vs.18 lauds only the two that were called to fight.
5:14    Interesting use of the name Ephraim, which later will denote rebellious Israel.  See 12:15.

6:10    A quotation mark after the sentence at the end of the passage is misplaced.  It should be before that sentence.
6:13    The tone of the whole passage suggests that Gideon, far from complaining or mocking God, is making a serious inquiry.  See &lt;&lt;Bbl Gn 25:22 &gt;&gt;.
&lt;&lt;Bbl Judges 6:16 abbr &gt;&gt; Presumably as if they, Midian, were one man.
6:19-21 The bread reappears in 7:13.
6:25-27 Before using Gideon to defeat Gideon, God must use him to defeat idolatry.  From the outset He must demonstrate to Israel the source of Gideon's strength.  Love of the Father is hatred of the world; thus, &quot;Let Baal contend against him,&quot; which Tim Clemens points out that this is a direct satanic curse.
6:31    See &lt;&lt;Bbl Acts 19:35 &gt;&gt;-36 .
&lt;&lt;Bbl Judges 6:33 abbr &gt;&gt;    This is like a screenplay; as a western, we imagine that just as the noose is dropped over a tree limb and secured, fifty Comanche Indians on horseback come charging over the ridge.
6:35    Naphtali and Zebulun, the warriors of chap. 4.

7:1 A name of war, from 6:32.  But his original name is the one by which he is remembered.
7:3 This is in accord with the Law.  Ironically, Gideon himself is still fearful, as vs.10 shows.
7:13    From the mind of the Midianite, the symbols are clear.  His people are nomads, well represented by a tent; his prey are farmers, producers of bread.  Note that the bread offered in sacrifice by Gideon in 6:19-21 is now the agent of victory.
7:19    What a sound as the jars were all broken -- a unique sound and very loud.  (Compare good-natured applause when a busboy drops a tray full of dishes.)  Imagine the discomfiture of Hebrew wives.  Imagine the mischievous delight of the men telling them after the battle.

8:16    David does worse in &lt;&lt;Bbl 2Sam 12:31 &gt;&gt;.
&lt;&lt;Bbl Judges 8:24 abbr &gt;&gt;    One of Gideon's intended statements in making the ephod concerned the unity forged in Israel during the crisis.  He had fought hard himself for that unity.
8:33    berith  --  covenant.</pre>
</div>
<div title="Judges-09-01-note" modifier="SDM" created="201211132336" modified="201211281850" tags="Comment" book_key="501009a">
<pre>9:5 The remnant.

11:12-28    Quite a study 0n the basis of territorial rights.  Ammon accuses Israel of taking his land;  Jephthah uses a tightly-reasoned theological argument to respond, &quot;So what?&quot;
    Heshbon was possessed in &lt;&lt;Bbl Num 21:25 &gt;&gt;
&lt;&lt;Bbl Judges 11:31 &gt;&gt;  Epic Fail of a [[Vow]].

13:8-9  see &lt;&lt;Bbl Jms 1:5 &gt;&gt;
&lt;&lt;Bbl Judges 13:11 &gt;&gt; -- I am
&lt;&lt;Bbl Judges 13:23 abbr &gt;&gt; -- wonderful statement of faith.

14:9    Violation of &lt;&lt;Bbl Lv 11:27 &gt;&gt;.

&lt;&lt;Bbl Judges 15:18 abbr &gt;&gt; The same tenet of faith offered by his mother in 13:18.

16  There is a sort of progression in Samson's answers.  They have to do with holiness, and then with his hair, but finally he mentions holiness and hair and the specific commands of God, and it's all over but the vengeance.
16:4    This is the third of Samson's Philistine women.  They represent a breach of his parents' wishes and a violation of their vows on his behalf.
16:17,19    From Samson's understanding, my strength ; from the writer's, Yahweh was departed from Him.   His strength lay not in his hair, but in that the Lord was with Him.  But Samson required every humility to understand his dependence upon that Lord.  &quot;And here, also, the history of Samson finds its parallel in that of blinded Israel, with the Judgment of bondage, degradation, and suffering, consequent upon their great national sin of casting aside their Nazarite vow&quot;  (Edersheim, The Bible History).
16:18   There they go, plowing with his heifer again (14:18).
16:19   How is it that she &quot;began to afflict him&quot; ??
16:21   See &lt;&lt;Bbl Ps 32:9 &gt;&gt; for the moral.
&lt;&lt;Bbl Judges 16:22 abbr &gt;&gt;     Samson had genuinely begun to learn that quality he had always lacked, self-control.  He could have uprooted the machine and walked out, but he waited and slaved until a better opportunity came.

17:2    One of those curses with an option.
17:6    The first instance of this proverb (also 19:1).  See &lt;&lt;Bbl Dt 12:8 &gt;&gt;.  Note too, that with this chapter the events of Judges take on a horrible and sinister quality.

18:19   An early description of priest as father.
18:27-28    A sympathetic tone to this passage.
18:31   concerning Shiloh, see &lt;&lt;Bbl Jer 7:12 &gt;&gt;

&lt;&lt;Bbl Judges 19:22 abbr &gt;&gt;    Like Sodom.

20,21   Benjamin is decimated.  Later, in the histories, it is counted with Judah.  &lt;&lt;Bbl 1Sam 9:21 &gt;&gt; calls it the smallest of the tribes.

21:1-7  Many presumptuous, illicit oaths.  </pre>
</div>
<div title="Judgment" modifier="SDM" created="201201061352" modified="201211270429" book_key="">
<pre>* True judgment is a prime responsibility of God's man.  Therefore {{anti{[[Judgmentalism]]}}} is a prime defect.
* [[Judgment-ofGod]]
* [[FearOfGod]]
* &lt;&lt;Bbl 2Chron 19:7&gt;&gt; &quot;Consider carefully what you do, because you are not judging for man but for the LORD, who is with you whenever you give a verdict. Now let the fear of the LORD be upon you. Judge carefully, for with the LORD our God there is no injustice or partiality or bribery.
----
In Great Britain and elsewhere, 'judgement' is the correct spelling; but Americans since Noah Webster have omitted it.</pre>
</div>
<div title="Judgment-ofGod" modifier="SDM" created="201012110214" modified="201211121656" book_key="">
<pre>* Between creation and Abraham, Genesis 3-11 can be viewed as a series of acts in judgment:
## the Eviction
## the Exile (Cain)
## the Flood
## the Confusion (Babel)
* &lt;&lt;Bbl Ex 12:12 &gt;&gt;
* &lt;&lt;Bbl Josh 11:20 &gt;&gt;
* &lt;&lt;Bbl 1Sam 16:7 &gt;&gt;
* &lt;&lt;Bbl Job 19:4 &gt;&gt;,36:17;
* &lt;&lt;Bbl Is 11:1 &gt;&gt; -5, 49:26;
* &lt;&lt;Bbl Lam 3:39 &gt;&gt;
* &lt;&lt;Bbl Ez 12:22 &gt;&gt; -28; 13:14;
* &lt;&lt;Bbl Nahum 1:3 &gt;&gt;
* &lt;&lt;Bbl Mt 7:1 &gt;&gt; -2;
* &lt;&lt;Bbl Lk 6:36 &gt;&gt; -38; 12:57;
* &lt;&lt;Bbl Jn 5:27 &gt;&gt; , 5:7-11,14-16;
* &lt;&lt;Bbl Jms 2:13 &gt;&gt;
* Gn 18:22-33:  The Lord knows that only Lot and his family will qualify.  His answer to Abraham's plea is creative, in that He does not spare the city, but He does deliver the righteous.  And that describes God's judgment in a nutshell.
* Is 5:6 [[Pruning]]
* comparative,      Mat 11:20-24, 12:38-42, Ez 16:51-52
* Exposes for the purpose of deliverance, like a doctor who wouldn't withhold a grave diagnosis (M. Bickle).
* of the elders first:  Ez 9:6, &quot;Judgment begins in the house of God.&quot;  Amo 3:1,2
* severity of:          Ez 21:14-17  --  Let us realize to how great a judgment Christ was subjected.  God's heart has not changed, but His wrath for me has been fully satisfied in Christ.  ISam 25.
* on Israel, final:         first announced, 2Ki 21:10-15, 23:27; Is 1:28-31; Hos 2:2, Amo 3:2, 9:8.  See [[Cup]].

* man's attempt to usurp:  Dan 3:6 - to the idol is attributed the power more or less to judge.  (Daniel, //God is Judge//)
* [[Judgementalism]]
* against worldly intelligence and beauty:  Is 23:9; Lk 10:21; 1Cor 1:17-31  --  2:16, 3:18-20; Jn 9:39-41.  See [[Pride]].
* God is our Judge:     Jud 11:27; Is 33:22
* built into sin as automatic penalty:  &lt;&lt;Bbl Job 8:4 &gt;&gt;; &lt;&lt;Bbl Jer 2:19 &gt;&gt;; &lt;&lt;Bbl Ps 94:23 &gt;&gt;; &lt;&lt;Bbl Is 65:7 &gt;&gt;.
* of believers:         &lt;&lt;Bbl 1Cor 5:10 &gt;&gt;; &lt;&lt;Bbl Eph 6:8 &gt;&gt;</pre>
</div>
<div title="Judgmentalism" modifier="SDM" created="201201061350" modified="201301281727" book_key="">
<pre>* man's, natural:          2Ch 19:5-7, Jer 8:9
* &quot;Judging a person does not define who they are.  It defines who //you// are.&quot; Source: found all over the Internets.
* Not by appearance, but rightly &lt;&lt;Bbl Is 11:1 &gt;&gt;-3, &lt;&lt;Bbl Jn 7:24&gt;&gt;
* sin of false judgment:    Ez 7:27, 1Cor 3:5, Jn 7:24, 8:15
* @@color:brown;Men do not differ much about what things they will call evils; they differ enormously about what evils they will call excusable.@@ // -- G. K. Chesterton//
* [[Judgment]]</pre>
</div>
<div title="JumpCommand" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="commands">
<pre>Offers a popup menu to jump directly to any of the currently open tiddlers. It is used with the ToolbarMacro like this:
{{{
&lt;&lt;toolbar jump&gt;&gt;
}}}</pre>
</div>
<div title="Justice" modifier="SDM" created="201010261930" modified="201301131925" book_key="">
<pre>* Justice, Social -- &lt;&lt;Bbl Is 28:6 &gt;&gt;, &lt;&lt;Bbl Is 30:10 &gt;&gt;-21 , &lt;&lt;Bbl Is 56:1 &gt;&gt;, &lt;&lt;Bbl Jer 21:12 &gt;&gt;, &lt;&lt;Bbl Hab 1:4 &gt;&gt;, &lt;&lt;Bbl Pr 28:5 &gt;&gt;, &lt;&lt;Bbl Pr 29:26 &gt;&gt;, &lt;&lt;Bbl 1Sam 12:12 &gt;&gt;-13 ).
* [[King]]
!!!! Statute of Limitations
* Necessary for human courts because
## evidence decays, thus guilt becomes harder to establish
## a perverse person could wait to bring a charge (ex, for blackmail)
## a perverse person could bring a false charge, banking on the first principle above
## anything that reduces the docket is potentially a good thing; and the other complex of issues described above can by this statute be reduced to an administrative trifle
* Unneccesary for God
## He knows everything in the realm of evidence
## He knows every human motive and plan
## His docket is never over-loaded; there's never any queue
## He does not resort to //let bygones be bygones//</pre>
</div>
<div title="Justice-and-Mercy" modifier="SDM" created="201207031211" modified="201211192324" book_key="">
<pre>''Outside of Christ, [[Justice]] and [[Mercy]] are irreconciliable.''
* //Justice and mercy have kissed ...//
* Melchizedek, King of Salem
* &lt;&lt;Bbl Jn 8:11 &quot;&quot; note &gt;&gt;
* &lt;&lt;Bbl Eph 4:15 &quot;&quot; note &gt;&gt;</pre>
</div>
<div title="Key" modifier="SDM" created="201112262210" modified="201112262231" book_key="">
<pre>!!! of David
* &lt;&lt;Bbl Is 22:15 &gt;&gt;-19
* &lt;&lt;Bbl Rev 3:7 &gt;&gt;-8</pre>
</div>
<div title="KeyboardShortcuts" creator="psd" modifier="jermolene" created="201102111106" modified="201110311634" tags="features">
<pre>Access keys are shortcuts to common functions accessed by typing a letter with either the 'alt' (PC) or 'control-alt' (Mac) key:
|!PC|!Mac|!Function|
|~Alt-F|~Ctrl-Alt-F|Search|
|~Alt-J|~Ctrl-Alt-J|NewJournal|
|~Alt-N|~Ctrl-Alt-N|NewTiddler|
|~Alt-S|~Ctrl-Alt-S|SaveChanges|
These access keys are provided by the associated internal [[Macros]] for the functions above. The macro needs to be used in an open tiddler (or the MainMenu or SideBar) in order for the access keys to work.

While editing a tiddler:
* ~Control-Enter or ~Control-Return accepts your changes and switches out of editing mode (use ~Shift-Control-Enter or ~Shift-Control-Return to stop the date and time being updated for MinorChanges)
* Escape abandons your changes and reverts the tiddler to its previous state

In the search box:
* Escape clears the search term</pre>
</div>
<div title="King" modifier="SDM" created="201012110216" modified="201211232045" book_key="">
<pre>* [[Authority]]
* [[Government]]
* [[Sovereignty]]
* [[KingdomOfGod]]
* //One greater than Solomon is here//
* The Lord Himself was to rule Israel, but the people desired an earthly king (1Sam 8, 12:12-13).  God gave Saul and rebuked them, knowing that one day they would try to subject Jesus to an earthly kingdom when they were supposed to recognize only God Himself.
* &lt;&lt;Bbl Dt 31:2 &gt;&gt;-6
* &lt;&lt;Bbl Jud 8:23 &gt;&gt;
* &lt;&lt;Bbl Lk 19:12 &gt;&gt;-15 =&lt;&lt;Bbl Lk 4:5 &gt;&gt;-8 ; &lt;&lt;Bbl Mt 4:8 &gt;&gt;-10 , &lt;&lt;Bbl Mt 16:23 &gt;&gt;, &lt;&lt;Bbl Mt 17:25 &gt;&gt;; &lt;&lt;Bbl Lk 19:11 &gt;&gt;, &lt;&lt;Bbl Lk 23:2 &gt;&gt;, &lt;&lt;Bbl Lk 24:21 &gt;&gt;; &lt;&lt;Bbl Jn 6:15 &gt;&gt;, &lt;&lt;Bbl Jn 7:4 &gt;&gt;, &lt;&lt;Bbl Jn 12:24 &gt;&gt;, &lt;&lt;Bbl Jn 18:36 &gt;&gt;, &lt;&lt;Bbl Jn 19:12 &gt;&gt;-15
* A wanna-be king (//usurper//) started by getting a retinue.  see &lt;&lt;Bbl 2Sam 15:1 &gt;&gt;, &lt;&lt;Bbl 1Kings 1:5 &gt;&gt;.

16 12 Kings detest wrongdoing,
       for a throne is established through righteousness.

 13 Kings take pleasure in honest lips;
       they value a man who speaks the truth.

 14 A king's wrath is a messenger of death,
       but a wise man will appease it.</pre>
</div>
<div title="KingdomOfGod" modifier="SDM" created="201010291406" modified="201209112038" book_key="">
<pre>* @@color:brown; God's people in God's place, under God's rule and blessing.@@ // -- Alistair Begg's definition//
* &lt;&lt;Bbl Col 1:13 &gt;&gt;.  The Kingdom of Heaven and of God, synonymous, &lt;&lt;Bbl Mt 19:23 &gt;&gt;-24 .
* [[Heaven]]
* &lt;&lt;Bbl Ex 19:5 &gt;&gt; -- //Kingdom of priests//</pre>
</div>
<div title="Knowledge" modifier="SDM" created="201004120330" modified="201304270411" book_key="" changecount="2">
<pre>* Paul believes that right knowledge leads to right behavour. &lt;&lt;Bbl 1Cor 15:33 &gt;&gt;-34 ; also see F.F. Bruce's list, Colossians,  p. 186.
* God's knowledge might be said (humorously) to consist of four parts:
## Everything that you know.
## Everything that you think you know, but are wrong about, unbeknownst to you.
## Everything you don't know, and you know that you don't know it.
## Everything you don't know, but you don't know that you don't know it.</pre>
</div>
<div title="Land" modifier="SDM" created="201012110219" modified="201208061456" book_key="">
<pre>* Gn 3, 4, 9
** Curse laid on the land
** May explain the rejection of Cain's sacrifice
* the sabbath for the land
* //ground, earth, field//
!! Real estate
* &lt;&lt;Bbl Pr 31:16 &gt;&gt;
* Sarah's tomb
* Joseph of Arimethea's tomb
* Naboth's vineyard
* Joshua and Judges
* Boaz -- see [[Treasure]]
* &lt;&lt;Bbl Mt 13:44 &gt;&gt;
* //The lines have fallen to me in pleasant places//
* //Do not move the ancient boundary stone//</pre>
</div>
<div title="Law" modifier="SDM" created="201004120330" modified="201210111228" book_key="">
<pre>@@color:indigo;No one is going to arrive in Heaven thinking he got there by keeping the Law.  No one is going to experience the torment of Hell and think they deserve something else.@@
@@color:brown;The Sermon on the Mount is not, as many people fondly imagine nowadays, the fulfillment or essence of the Gospel, but it is the fulfillment of the Law.@@ // -- A.R. Vidler, Quoted in F.F. Bruce, Romans, p. 55//
F.F. Bruce thoroughly discusses the term as found in the book of Romans, in Romans, pp. 50-56.
* Antinomianism -- see [[Lawlessness]]
* [[Self-Justification]]
* [[Legalism]]
!!! The rightness of the Law
* &lt;&lt;Bbl Hos 14:9 &gt;&gt;, &lt;&lt;Bbl Mic 2:7 &gt;&gt;, &lt;&lt;Bbl Dt 4:6 &gt;&gt;-8 , &lt;&lt;Bbl Pr 28:4 &gt;&gt;, &lt;&lt;Bbl Is 42:21 &gt;&gt;, &lt;&lt;Bbl Mt 5:17 &gt;&gt;-20
* The Law, read at face value, does say: must be kept in order to live.  Paradox.
* The commandments are not a ladder by which we ascend to Heaven; rather they are a mirror by which we see our true condition.
* @@color:brown;the law of the Holy God is not a ladder of merit whereby sinners seek to come to God to win His favor and climb into His good books; His holy law is rather His appointed and required pattern of life for those who by redemption have been brought to Him already who already belong to Him, and are already in His good books. The Law of God is the lifestyle of the redeemed.@@ // -- Alec Motyer (__Look to The Rock__)//
!!! Uses of the Law
# to convict of sin and drive the repentant sinner to the Lord Jesus Christ;
# to restrain lawlessness in society;
# to function as the rule of life for the believer. One of the most famous statements of this comes from the Puritan Samuel Bolton in his The True Bounds of Christian Freedom - 'The law sends us to the gospel for our justification; the gospel sends us to the law to frame our way of life'.
!!! The Ten Commandments
&lt;&lt;Bbl Ex 20:1 abbr &gt;&gt;-17  From my notes:  &quot;According to R. Bainton (ref. unknown, p. 22), Philo numbered 'Thou shalt have no other gods .  .  .' as the first and 'no graven image' as the second.  But Augustine combined them.  Eastern Orthodoxy and Calvinists have followed the former, Catholic and Lutheran the latter.  This division, specifically which commandment was the fourth, prevented (or hindered?) the union of Lutheran and Presbyterian churches in southern India.&quot;  Now I can see why I jotted it down, but 1) how would the latter view make a total of ten, and 2) why the fourth as a special point of contention?
!!! Promises for the Nations
* &lt;&lt;Bbl Mic 4:1 &gt;&gt;-4 , &lt;&lt;Bbl Dt 4:6 &gt;&gt;-8
!!!! Linked to [[Sin]]
* Galatians
* &lt;&lt;Bbl 1Cor 15:56 &gt;&gt;, &lt;&lt;Bbl 1Jn 3:4 &gt;&gt;
!!! Superficial compliance
* &lt;&lt;Bbl Php 3:6 &gt;&gt; //righteousness of ''my own'' ... faultless//
* &lt;&lt;Bbl Mt 5:17 &gt;&gt; //unless your righteousness surpasses ... Pharisees//
| Command | Superficial | Heart response |h
| Murder | literal | hate, harshness, grudges |
| Adultery | flagrant | lust of the eyes; divorce |
!!! Heart compliance
* &lt;&lt;Bbl Dt 15:9 &gt;&gt;-10  //Be careful not to harbor this wicked thought: &quot;The seventh year, the year for canceling debts, is near,&quot; so that you do not show ill will toward your needy brother and give him nothing. He may then appeal to the Lord against you... Give generously to him and do so without a grudging heart; then because of this the Lord your God will bless you ...//
* &lt;&lt;Bbl Lv 19:16 &gt;&gt;-18  //Do not go about spreading slander among your people ... Do not hate your brother in your heart.  Rebuke your neighbor frankly so you will not share in his guilt. ... Do not seek revenge or bear a grudge against one of your people, but love your neighbor as yourself.  I am the Lord.//
* Coveting!
!!! Freedom from
* &lt;&lt;Bbl 1Cor 15:56 &gt;&gt;,
!!! and Vision
* &lt;&lt;Bbl Ez 7:26 &gt;&gt;, &lt;&lt;Bbl Lam 2:9 &gt;&gt;, &lt;&lt;Bbl Pr 29:18 &gt;&gt;.  The terms are the same, '' torah'' and ''chazon''.
* &lt;&lt;Bbl Is 8:20 &gt;&gt;  //they have no dawn//
----
* and Righteousness:    &lt;&lt;Bbl Php 3:6 &gt;&gt;-9 , &lt;&lt;Bbl Dt 6:2 &gt;&gt;,&lt;&lt;Bbl Dt 7:12 &gt;&gt;,&lt;&lt;Bbl Dt 30:11 &gt;&gt;-14 , &lt;&lt;Bbl Lv 18:5 &gt;&gt;, &lt;&lt;Bbl Gal 3:10 &gt;&gt;-12
* Christ &quot;born under&quot;:    &lt;&lt;Bbl Gal 4:4 &gt;&gt;
* fulfilled by believers:   &lt;&lt;Bbl 1Jn 2:3 &gt;&gt;-7 ; &lt;&lt;Bbl 1Jn 3:4 &gt;&gt;.
* Prophetic function:   &lt;&lt;Bbl Mt 11:13 &gt;&gt;, &lt;&lt;Bbl Jn 5:39 &gt;&gt;
* the Ten Commandments:  &lt;&lt;Bbl Dt 4:13 &gt;&gt;,&lt;&lt;Bbl Dt 5:22 &gt;&gt;  --  apparently only the Ten were inscribed by God on the stones.</pre>
</div>
<div title="Lawlessness" modifier="SDM" created="201012051945" modified="201212150141" tags="typography" book_key="">
<pre>* &lt;&lt;Bbl Pr 28:9 &gt;&gt;, //prayers are detestable//
* &lt;&lt;Bbl 2Thes 2:3 &gt;&gt;-12 //man of lawlessness//
* &lt;&lt;Bbl 1Jn 3:4 &gt;&gt;  //[[Sin]] is lawlessness//
* [[Mocking]]
!!! Antinomianism
* Important Greek term: ἀνομία (anomia).   Best translated //lawlessness,// it is often rendered less clearly as //[[Wickedness]], unrighteousness,// etc.  Found in &lt;&lt;Bbl Mt 7:23&gt;&gt;, &lt;&lt;Bbl Mt 13:41&gt;&gt;, &lt;&lt;Bbl Mt 23:28&gt;&gt;, &lt;&lt;Bbl Mt 24:12&gt;&gt;, &lt;&lt;Bbl Rom 4:7&gt;&gt;, &lt;&lt;Bbl Rom 6:19&gt;&gt;, &lt;&lt;Bbl 2Cor 6:14&gt;&gt;, &lt;&lt;Bbl 2Thes 2:3&gt;&gt;, &lt;&lt;Bbl 2Thes 2:7&gt;&gt;, &lt;&lt;Bbl Titus 2:14&gt;&gt;, &lt;&lt;Bbl Heb 1:9&gt;&gt;, &lt;&lt;Bbl Heb 10:17&gt;&gt;, &lt;&lt;Bbl 1Jn 3:4&gt;&gt;.
* @@color:darkgreen;Fundamental Christianity in our times is deeply influenced by that ancient enemy of righteousness, Antinomianism.  The creed of the Antinomian is easily stated: We are saved by faith alone; works have no place in salvation; conduct is works, and is therefore of no importance.  What we do cannot matter as long as we believe rightly.  The divorce between creed and conduct is absolute and final.  The question of sin is settled by the Cross; conduct is outside the circle of faith and cannot come between the believer and God.  Such in brief, is the teaching of the Antinomian.  And so fully has it permeated the Fundamental element in modern Christianity that it is accepted by the religious masses as the very truth of God.  Antinomianism is the doctrine of grace carried by uncorrected logic to the point of absurdity.  It takes the teaching of justification by faith and twists it into deformity.@@ // -- A.W. Tozer, __Paths to Power__//
* http://www.banneroftruth.org/pages/articles/article_detail.php?748
* In truth, //The [[Law]] sends us to the gospel for our justification; the gospel sends us to the law to frame our way of life.//
* Striking instance of this error found in VonVanderen, __Tired of Trying to Measure Up.__</pre>
</div>
<div title="Leader" modifier="SDM" created="201209221815" modified="201211222238" book_key="">
<pre>* [[Church-Local]]
!!! Kinds
* Leadership seems to divide into //shepherding// and //administrative//.  I doubt these are helpful terms, as they suggest overly narrow categories.  John Bower, for one, referred to //people// and //project// orientation.
{{annotation{
The ''sword-and-trowel'', or the ''basin-and-towel''.  (But of course we always need both.)
}}}
* &lt;&lt;Bbl 2Kings 2:16 &quot;&quot; note&gt;&gt; -- The test of one's leadership may give way to confidence in one's leadership.</pre>
</div>
<div title="LessBackupsPlugin" creator="SDM" modifier="SDM" created="201012202359" modified="201304050202" tags="systemConfig macro excludeLists" book_key="" changecount="1">
<pre>/***
|Name:|LessBackupsPlugin|
|Description:|Intelligently limit the number of backup files you create|
|Version:|3.0.1a|
|Date:|27-Jun-2011|
|Source:|http://mptw.tiddlyspot.com/#LessBackupsPlugin|
|Author:|Simon Baird|
|Email:|simon.baird@gmail.com|
|License:|http://mptw.tiddlyspot.com/#TheBSDLicense|
!!Description
You end up with just backup one per year, per month, per weekday, per hour, minute, and second.  So total number won't exceed about 200 or so. Can be reduced by commenting out the seconds/minutes/hours line from modes array
!!Notes
Works in IE and Firefox only.  Algorithm by Daniel Baird. IE specific code by by Saq Imtiaz.
***/
//{{{

var MINS  = 60 * 1000;
var HOURS = 60 * MINS;
var DAYS  = 24 * HOURS;

if (!config.lessBackups) {
  config.lessBackups = {
    // comment out the ones you don't want or set config.lessBackups.modes in your 'tweaks' plugin
    modes: [
      //[&quot;YYYY&quot;,  365*DAYS], // one per year for ever
      [&quot;MMM&quot;,   31*DAYS],  // one per month
      //[&quot;ddd&quot;,   7*DAYS],   // one per weekday
      //[&quot;d0DD&quot;,  1*DAYS],   // one per day of month
      [&quot;h0hh&quot;,  24*HOURS], // one per hour
      //[&quot;m0mm&quot;,  1*HOURS],  // one per minute
      //[&quot;s0ss&quot;,  1*MINS],   // one per second
      [&quot;latest&quot;,0]         // always keep last version. (leave this).
    ]
  };
}

window.getSpecialBackupPath = function(backupPath) {

  var now = new Date();

  var modes = config.lessBackups.modes;

  for (var i=0;i&lt;modes.length;i++) {

    // the filename we will try
    var specialBackupPath = backupPath.replace(/(\.)([0-9]+\.[0-9]+)(\.html)$/,
        '$1'+now.formatString(modes[i][0]).toLowerCase()+'$3')

    // open the file
    try {
      if (config.browser.isIE) {
        var fsobject = new ActiveXObject(&quot;Scripting.FileSystemObject&quot;)
        var fileExists  = fsobject.FileExists(specialBackupPath);
        if (fileExists) {
          var fileObject = fsobject.GetFile(specialBackupPath);
          var modDate = new Date(fileObject.DateLastModified).valueOf();
        }
      }
      else {
        netscape.security.PrivilegeManager.enablePrivilege(&quot;UniversalXPConnect&quot;);
        var file = Components.classes[&quot;@mozilla.org/file/local;1&quot;].createInstance(Components.interfaces.nsILocalFile);
        file.initWithPath(specialBackupPath);
        var fileExists = file.exists();
        if (fileExists) {
          var modDate = file.lastModifiedTime;
        }
      }
    }
    catch(e) {
      // give up
      return backupPath;
    }

    // expiry is used to tell if it's an 'old' one. Eg, if the month is June and there is a
    // June file on disk that's more than an month old then it must be stale so overwrite
    // note that &quot;latest&quot; should be always written because the expiration period is zero (see above)
    var expiry = new Date(modDate + modes[i][1]);
    if (!fileExists || now &gt; expiry)
      return specialBackupPath;
  }
}

// hijack the core function
window.getBackupPath_mptw_orig = window.getBackupPath;
window.getBackupPath = function(localPath) {
  return getSpecialBackupPath(getBackupPath_mptw_orig(localPath));
}

//}}}
</pre>
</div>
<div title="Lev-01-01-note" modifier="SDM" created="201004120330" modified="201212060349" tags="Comment" book_key="440001a">
<pre>&lt;&lt;Bbl Lev 1:1 abbr &gt;&gt;  Much of this preaches to me richly of Christ.
    The death itself does not sooth God, but the aroma of burning, which is perhaps a symbol of Judgment and consummation, does.

3:13    The offering of Christ was seasoned with the salt of the covenant.

4:2 Seems to be an introduction to the whole chapter, and a sentence on its own.

5:1 This was invoked in &lt;&lt;Bbl Mt 26:63 &gt;&gt;

&lt;&lt;Bbl Lv 6:8 abbr &gt;&gt;-9    see &lt;&lt;Bbl Gn 15:11 &gt;&gt;

&lt;&lt;Bbl Lv 10:1 abbr &gt;&gt;-6   The sin of these two, at the very onset of God's establishment of His people, seems to correspond with Ananias and Sapphira in &lt;&lt;Bbl Acts 10:6 &gt;&gt;.
10:19-20    //this very day// -- referring to his deceased sons. Aaron has improved in his answers to Moses since the calf incident.

11:27   Samson broke this regulation, &lt;&lt;Bbl Jud 14:9 &gt;&gt;.

&lt;&lt;Bbl Lv 13:13 abbr &gt;&gt;    But is he not also dead?

{{holyquote{
He shall kill one of the birds in an earthen vessel over running water... but he shall let the living bird go out of the city into the open field. So shall he make atonement for the house; and it shall be clean.
}}}
&lt;&lt;Bbl Lv 14:1 abbr &gt;&gt;-7  The breath-taking picture of Christ's sacrifice; similar sacrifices are described later in the chapter.  Commanded in &lt;&lt;Bbl Mk 1:44 &gt;&gt;.  My Bible titles this the &quot;Law of Cleansing a Leper,&quot; but the priest apparently only declares him clean.  Hyssop is basically an applicator and symbolizes cleansing: &lt;&lt;Bbl Ex 12:21 &gt;&gt; (24:8); &lt;&lt;Bbl Ps 51:5 &gt;&gt;; &lt;&lt;Bbl Heb 9:19 &gt;&gt;-22 .  Scarlet is a color of vibrancy, thus of life.  Geno says the water and the blood are mixed in the jar, and takes us to &lt;&lt;Bbl Jn 19:31 &gt;&gt;-34 , &lt;&lt;Bbl 1Jn 5:6 &gt;&gt;.
    Leprosy is painless.
14:5    Running water  is actually living water.

16:7-22 The scapegoat contains the same metaphor of vicarious Judgment as the dove.

19:14   curse  i.e., verbally, a man who cannot hear.
19:17,18    Here is a glorious proof that the Mosaic law addressed the heart.

20:11   This was the sin reported in &lt;&lt;Bbl 1Cor 5:1 &gt;&gt;

&lt;&lt;Bbl Lv 21:4 abbr &gt;&gt; This is difficult.  Maybe it means not to show mourning for in-laws.
21:11   Compare &lt;&lt;Bbl 1The 4:13 &gt;&gt;.

&lt;&lt;Bbl Lv 22:1 abbr &gt;&gt;-7   This could perhaps be applied to the sort of starvation that sin produces in the soul.

25:9    I have noted Rushdoony, Institutes, pg. 141.
25:21-22    The precedent is in the provision of manna, &lt;&lt;Bbl Ex 16:22 &gt;&gt;-30 , where rest likewise required faith.
25:42   This seems to allude directly to  (data lost).

{{holyquote{
{{rf{26.13}}} I am Yahweh your God, who brought you forth out of the land of Egypt, that you should not be their slaves; and I have broken the bars of your yoke, and made you go upright.
}}}
&lt;&lt;Bbl Lv 26:13 &gt;&gt;  uprightness, right-standing, rectitude -- the true //homo erectus//

26:29   The fulfillment is declared in &lt;&lt;Bbl Jer 19:9 &gt;&gt;. </pre>
</div>
<div title="Licence" creator="blaine" modifier="blaine" created="201102111259" modified="201102111310">
<pre>~TiddlyWiki is published under a BSD licence, and is owned by the not-for-profit [[UnaMesa Foundation|http://www.unamesa.org/]].</pre>
</div>
<div title="Life" modifier="SDM" created="201004120330" modified="201211161337" book_key="">
<pre>* God's gift:              &lt;&lt;Bbl 2Sam 14:14 &gt;&gt;; &lt;&lt;Bbl Ez 16:6 &gt;&gt;; &lt;&lt;Bbl Jn 10:10 &gt;&gt;
* God of the living:    &lt;&lt;Bbl Mk 12:27 &gt;&gt;
* &lt;&lt;Bbl Pr 14:30 &gt;&gt;  The life of the body is a heart at peace, but envy rots the bones.
* Sam Cooksey says:     &quot;Keepers, weepers; Losers, finders!&quot;
* [[Hidden|Invisible-Visible]] in Christ:       &lt;&lt;Bbl Col 3:3 &gt;&gt;-4
* by the [[Spirit]]:        &lt;&lt;Bbl Rom 8:4 &gt;&gt;-10
* by the Son:           &lt;&lt;Bbl Jn 3:36 &gt;&gt;
* Color GREEN:          &lt;&lt;Bbl Job 33:29 &gt;&gt;-33 Kng 3:26-27; &lt;&lt;Bbl Rom 4:17 &gt;&gt;; &lt;&lt;Bbl 2Cor 4:10 &gt;&gt;-14
* You can do, or you can die.
* brevity:              &lt;&lt;Bbl Ps 39:4 &gt;&gt;-6
* [[Book]] of life
* //Resurrection//, [[Living_Plant]], [[Living_Animal]]
* {{anti{[[Death]]}}}

!!! a fountain
* Pro 4:23 - Above all else, guard your heart, for it is the wellspring of life.
* Pro 10:11 - The mouth of the righteous is a fountain of life, but violence overwhelms the mouth of the wicked.
* Pro 13:14 - The teaching of the wise is a fountain of life, turning a man from the snares of death.
* Pro 14:27 - The fear of the Lord is a fountain of life, turning a man from the snares of death.
* Pro 16:22 - Understanding is a fountain of life to those who have it, but folly brings punishment to fools.
!!! a tree
* Pro 3:18 - She is a tree of life to those who embrace her; those who lay hold of her will be blessed.
* Pro 15:4 - The tongue that brings healing is a tree of life, but a deceitful tongue crushes the spirit.
* Pro 11:30 - The fruit of the righteous is a tree of life, and he who wins souls is wise.
* Pro 13:12 - Hope deferred makes the heart sick, but a longing fulfilled is a tree of life.
</pre>
</div>
<div title="Light" modifier="SDM" created="201004120349" modified="201304262155" book_key="" changecount="4">
<pre>* Always active.  A one-way operation.  Creates [[Security]].
* [[Darkness]] can never penetrate light, because light is a presence, but darkness is only light's absence.  Darkness flees to precisely the degree that light is present.  Light &quot;more than overcomes&quot; (it would make a good pulpit demonstration).
* [[Darkness]] for verses that directly contrast the two.
* When you check a plank for straightness, it is light -- the absence of shadow -- that lets you make the assessment.  Light is as straight as straight can be.  
* &lt;&lt;Bbl Ex 10:23 &gt;&gt;
* &lt;&lt;Bbl Est 8:16 &gt;&gt;
* &lt;&lt;Bbl Job 24:13 &gt;&gt;-17 
* &lt;&lt;Bbl Ps 36:9 &gt;&gt;
* &lt;&lt;Bbl Ps 97:11 &gt;&gt;
* &lt;&lt;Bbl Is 50:10 &gt;&gt;-11 
* &lt;&lt;Bbl Is 60:1 &gt;&gt;-2 
* &lt;&lt;Bbl Ez 8:12 &gt;&gt;
* &lt;&lt;Bbl Mt 5:14 &gt;&gt;-16 
* &lt;&lt;Bbl Jn 3:2 &gt;&gt;
* &lt;&lt;Bbl Jn 8:12 &gt;&gt;
* &lt;&lt;Bbl Jn 12:35 &gt;&gt;-36 
* &lt;&lt;Bbl Act 13:47 &gt;&gt;
* &lt;&lt;Bbl Rom 13:12 &gt;&gt;
* &lt;&lt;Bbl 2Cor 4:6 &gt;&gt;
* &lt;&lt;Bbl 2Cor 6:14 &gt;&gt;
* &lt;&lt;Bbl Eph 5:8 &gt;&gt;
* &lt;&lt;Bbl 1Pt 2:9 &gt;&gt;
* &lt;&lt;Bbl 1Jn 1:5 &gt;&gt;-7 
* &lt;&lt;Bbl 1Jn 2:8 &gt;&gt;-11 </pre>
</div>
<div title="LikeThis" creator="psd" modifier="blaine" created="201102111106" modified="201102111310">
<pre>You've clicked on an example link! Click close to close this tiddler.</pre>
</div>
<div title="Limitations" modifier="SDM" created="201209241532" book_key="">
<pre>* [[Humility]]

[Pro 16:9 NASB] - The mind of man plans his way, But the LORD directs his steps.

[Pro 27:15-16 NASB] - A constant dripping on a day of steady rain And a contentious woman are alike; He who would restrain her restrains the wind, And grasps oil with his right hand.

[Pro 30:4 NASB] - Who has ascended into heaven and descended? Who has gathered the wind in His fists? Who has wrapped the waters in His garment? Who has established all the ends of the earth? What is His name or His son's name? Surely you know!
</pre>
</div>
<div title="Line Break Formatting" creator="matt" modifier="psd" created="201102111431" modified="201102151519" tags="formatting">
<pre>Line breaks can be forced explicitly:
{{{
Some text with a&lt;br&gt;line break in the middle
}}}
Displays as:
Some text with a&lt;br&gt;line break in the middle
</pre>
</div>
<div title="LineBreakHack" modifier="SDM" created="201012202219" modified="201211212004" tags="macro excludeLists" book_key="">
<pre>/***
|''Name''|LineBreakHack|
|''Description''|formatter modifying TiddlyWiki's handling of line breaks, before and after headings, lists and quots|
|''Author:''|Piesch Mario|
|''Version''|0.2.1|
|''Status''|@@beta@@|
|''Source''|http://apm-plugins.tiddlyspot.com/#LineBreakHack|
|''License''|[[Creative Commons Attribution-ShareAlike 3.0 License|http://creativecommons.org/licenses/by-sa/3.0/]]|

!Description

This formatter modifies the way line breaks in ~TiddlyWiki markup are rendered;
A linebreak at the end of the line and all following empty lines are replaced by: one {{{&lt;br&gt;}}}
One linebreak in front of a heading will be removed.


!!Examples
{{{
&lt;&lt;&lt;
!Heading 1 at the beginning
Some distance also in editmode possible. As many lines as you wish.


!!Heading 2

Some text

Some more text&lt;br&gt;
Break the line with {{{&lt;br&gt;}}} &lt;br&gt;
forced linebreak and &quot;new Line&quot; produce an empty line
&lt;&lt;&lt;

&lt;&lt;&lt;
# numbered list

# one empty line &lt;br&gt; a line after a &lt; br&gt;
## doesn't break the list


# two empty lines do &lt;br&gt;&lt;br&gt;&lt;br&gt;
# br in front: does never break the list
&lt;&lt;&lt;

&lt;&lt;&lt;
&gt;Quote by Line

&gt;one empty line


&gt;two empty lines
&lt;&lt;&lt;
}}}
&lt;&lt;&lt;
!Heading 1 at the beginning
Some distance also in editmode possible. As many lines as you wish.


!!Heading 2

Some text

Some more text&lt;br&gt;
Break the line with {{{&lt;br&gt;}}} &lt;br&gt;
forced linebreak and &quot;new Line&quot; produce an empty line
&lt;&lt;&lt;

&lt;&lt;&lt;
# numbered list

# one empty line &lt;br&gt;a line after a &lt; br&gt;
## doesn't break the list


# two empty lines do &lt;br&gt;&lt;br&gt;&lt;br&gt;
# br in front: does never break the list
&lt;&lt;&lt;

&lt;&lt;&lt;
&gt;Quote by Line

&gt;one empty line


&gt;two empty lines
&lt;&lt;&lt;
!Revision History

!!V0.2.1 (2010-02-24)
*Little changes in the description.

!!V0.2 (2010-01-01)
* removes all linebreaks after headings
* deals with lists
* changes blockqoute and linequote

!!V0.1 (2009-12-20)
* initial release


!Code
***/
//{{{
(function(formatters) { //# set up alias

    // modify line-break formatter to find more than one \n
    var lineBreak = formatters[formatters.findByField(&quot;name&quot;, &quot;lineBreak&quot;)];
    lineBreak.match = &quot;\\n+|&lt;br ?/?&gt;&quot;;
//  lineBreak.match = &quot;\\n{1,2}|&lt;br ?/?&gt;&quot;;


    //remove one line break before heading.
    var heading = formatters[formatters.findByField(&quot;name&quot;, &quot;heading&quot;)];
        merge( heading, {termRegExp: /(\n+)/mg});

        heading.match = &quot;^\n?!{1,6}&quot;;
        heading.handler = function(w) {
            if (w.matchText[0]=='\n') w.matchLength = w.matchLength - 1;
            w.subWikifyTerm(createTiddlyElement(w.output,&quot;h&quot; + w.matchLength), this.termRegExp);
        };

    for (var i=0; i&lt;formatters.length; i++) {
        if (formatters[i].name == &quot;list&quot;) {
            merge( formatters[i], {termRegExp: /(\n{1,2})/mg});
        }

        if (formatters[i].name == &quot;quoteByBlock&quot;) {
            merge( formatters[i], {termRegExp: /(^&lt;&lt;&lt;(\n{1,2}|$))/mg});
        }

        if (formatters[i].name == &quot;quoteByLine&quot;) {
            merge( formatters[i], {termRegExp: /(\n{1,2})/mg});
            break;
        } // if ..
    } // for ..


})(config.formatters); //# end of alias
//}}}</pre>
</div>
<div title="Link Formatting" creator="psd" modifier="psd" created="201102161121" modified="201102161121" tags="formatting">
<pre>!Wiki Links
Any words or phrases that are CamelCase or compound words - in which the elements are joined without spaces - will result in them becoming links to tiddlers with that name.

For example,
{{{
WikiWord
}}}
Displays as:
WikiWord

To stop this happening the words must be escaped:
{{{
~WikiWord
}}}
Displays as:
~WikiWord

Alternatively, a tiddler can be linked to using square brackets to encompass the whole tiddler title:
{{{
[[tiddler name]]
}}}
!Pretty Links
Optionally, custom text can be added, separated by a pipe character (|)
{{{
[[alternative link text|tiddler name]]
}}}
Displays as:
[[link to our WikiWord tiddler|WikiWord]]
!External Links
Writing the URL in the text results in a link to that external site:
{{{
http://osmosoft.com
}}}
Displays as:
http://osmosoft.com
Similar to pretty links alternative text can be used to link to external sites:
{{{
[[Visit the Osmosoft site|http://osmosoft.com]]
}}}
Displays as:
[[Visit the Osmosoft site|http://osmosoft.com]]
!Links to Other Spaces
Link to a space by preceding it with {{{@}}}:
{{{
@about
}}}
Displays as:
@about

Suppress space linking with {{{~}}}:
{{{
~@about
}}}
~@about
Link to a tiddler within another space:
{{{
TiddlyWiki@glossary
[[TiddlySpace API]]@glossary
[[Information about the HTTP interface|TiddlySpace API]]@glossary
}}}
Displays as:
TiddlyWiki@glossary
[[TiddlySpace API]]@glossary
[[Information about the HTTP interface|TiddlySpace API]]@glossary
</pre>
</div>
<div title="LinkToFolders" creator="psd" modifier="psd" created="201102111106" modified="201102211414" tags="features">
<pre>[[Link Formatting]] allows for links that open local or network folders. Depending on your browser and operating system, the folders are opened in Windows Explorer, the OS X Finder, or the browser itself.

Edit this tiddler to see [[this link to a Windows network share|file://///server/share/folder/path/name]], [[this link to a Windows drive-mapped folder|file:///c:/folder/path/name]] and [[this link to a Unix-style folder|file:///folder/path/name]].</pre>
</div>
<div title="List Formatting" creator="matt" modifier="psd" created="201102111432" modified="201102151519" tags="formatting">
<pre>!Ordered Lists
Lists can be ordered with numbers and letters:
{{{
#List item one
##List item two
###List item three
}}}
Displays as:
#List item one
##List item two
###List item three
!Unordered Lists
Lists can be unordered:
{{{
*Unordered List Level 1
**Unordered List Level 2
***Unordered List Level 3
}}}
Displays as:
*Unordered List Level 1
**Unordered List Level 2
***Unordered List Level 3
!Definition Lists
Definition lists can also be created:
{{{
;Title 1
:Definition of title 1
;Title 2
:Definition of title 2
}}}
Displays as:
;Title 1
:Definition of title 1
;Title 2
:Definition of title 2

See also [[Tagging Macro]]</pre>
</div>
<div title="Living-Animal" modifier="SDM" created="201210212124" modified="201210212127" tags="Living-Animal" book_key="">
<pre>!!!! Tiddlers tagged with //Living-Animal//
&lt;&lt;matchTags %0 &quot;\n&quot; Living-Animal &gt;&gt; </pre>
</div>
<div title="Living-Plant" modifier="SDM" created="201012302104" modified="201211250025" tags="Living-Plant" book_key="">
<pre>|[[Fruit]] |[[Harvest]], [[Seed]], //flower, blossom, fruitlessness//  |
|Leaf |//wither//  |
|[[Branch]] |[[Broken]], [[Pruning]], //grafting//  |
|Trunk |//stump//  |
|[[Root]] |  |
|[[Water]] |  |
|Earth |[[Land]]  |
|[[Seed]] |  |

!!!! Tiddlers tagged with //Living-Plant//
&lt;&lt;matchTags %0 &quot;\n&quot; Living-Plant &gt;&gt; </pre>
</div>
<div title="LoadTiddlersPlugin" modifier="SDM" created="201211260216" tags="systemConfig macro systemConfigDisable" book_key="">
<pre>/***
|Name|LoadTiddlersPlugin|
|Source|http://www.TiddlyTools.com/#LoadTiddlersPlugin|
|Documentation|http://www.TiddlyTools.com/#LoadTiddlersPluginInfo|
|Version|3.9.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Description|macro for automated updates or one-click installations of tiddlers from remote sources|
!!!!!Documentation
&gt;see [[LoadTiddlersPluginInfo]]
!!!!!Configuration
&lt;&lt;&lt;
&lt;&lt;option chkLoadTiddlersShowReport&gt;&gt;after loading tiddlers, automatically display [[ImportedTiddlers]] (if created)
__password-protected server settings //(optional, if needed)//:__
&gt;username: &lt;&lt;option txtRemoteUsername&gt;&gt; password: &lt;&lt;option txtRemotePassword&gt;&gt;
&gt;{{{usage: &lt;&lt;option txtRemoteUsername&gt;&gt; &lt;&lt;option txtRemotePassword&gt;&gt;}}}
&gt;''note: these settings are also used by [[ExternalTiddlersPlugin]] and [[ImportTiddlersPlugin]]''
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2010.08.11 3.9.0 added 'autosave' optional param
|please see [[LoadTiddlersPluginInfo]] for additional revision details|
2005.07.20 1.0.0 Initial Release
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.LoadTiddlersPlugin= {major: 3, minor: 9, revision: 0, date: new Date(2010,8,11)};

if (config.options.chkLoadTiddlersShowReport===undefined)
    config.options.chkLoadTiddlersShowReport=true;

config.macros.loadTiddlers = {
    label: '',
    tip: &quot;add/update tiddlers from '%0'&quot;,
    lockedTag: 'noReload',  // if existing tiddler has this tag value, don't overwrite it, even if inbound tiddler is newer
    askMsg: 'Please enter a local path/filename or a remote URL',
    openMsg: 'Opening %0',
    openErrMsg: 'Could not open %0 - error=%1',
    readMsg: 'Read %0 bytes from %1',
    foundMsg: 'Found %0 tiddlers in %1',
    nochangeMsg: &quot;'%0' is up-to-date... skipped.&quot;,
    lockedMsg: &quot;'%0' is tagged '%1'... skipped.&quot;,
    skippedMsg: 'skipped (cancelled by user)',
    loadedMsg: 'Loaded %0 of %1 tiddlers from %2',
    reportTitle: 'ImportedTiddlers',
    warning: &quot;Warning!!  Processing '%0' as a systemConfig (plugin) tiddler may produce unexpected results! Press OK to proceed.&quot;,
    autosaveMsg: 'Save current document?  Press OK to proceed.',
    handler: function(place,macroName,params) {
        var label=(params[0] &amp;&amp; params[0].substr(0,6)=='label:')?params.shift().substr(6):this.label;
        var tip=(params[0] &amp;&amp; params[0].substr(0,7)=='prompt:')?params.shift().substr(7):this.tip;
        var filter='updates';
        if (params[0] &amp;&amp; (params[0]=='all' || params[0]=='new' || params[0]=='changes' || params[0]=='updates'
            || params[0].substr(0,8)=='tiddler:' || params[0].substr(0,4)=='tag:'))
            filter=params.shift();
        var src=params.shift(); if (!src || !src.length) return; // filename is required
        var quiet=(params[0]=='quiet'); if (quiet) params.shift();
        var ask=(params[0]=='confirm'); if (ask) params.shift();
        var force=(params[0]=='force'); if (force) params.shift();
        var init=(params[0]=='init'); if (init) params.shift();
        var nodirty=(params[0]=='nodirty'); if (nodirty) params.shift();
        var norefresh=(params[0]=='norefresh'); if (norefresh) params.shift();
        var noreport=(params[0]=='noreport'); if (noreport) params.shift();
        var autosave=(params[0]=='autosave'); if (autosave) params.shift();
        this.newTags=[]; if (params[0]) this.newTags=params; // any remaining params are used as 'autotags'
        var flags={quiet:quiet, ask:ask, filter:filter, force:force, init:init,
            nodirty:nodirty, norefresh:norefresh, noreport:noreport, autosave:autosave};
        if (label.trim().length) { // CLICKABLE LINK
            createTiddlyButton(place,
                label.format([src.replace(/%20/g,' ')]),
                tip.format([src.replace(/%20/g,' ')]),
                function() {
                    var cml=config.macros.loadTiddlers;
                    cml.loadFile(src,cml.doImport,flags);
                    return false;
                })
        }
        else // IMMEDIATE IMPORT
            this.loadFile(src,this.doImport,flags);
    },
    loadFile: function(src,callback,params) {
        var quiet=params.quiet;
        if (src=='ask') src=prompt(this.askMsg);
        if (src==undefined || !src.length) return null; // filename is required
        if (!quiet) clearMessage();
        if (!quiet) displayMessage(this.openMsg.format([src.replace(/%20/g,' ')]));
        // if working locally and src is not a URL, read from local filesystem
        if (document.location.protocol=='file:' &amp;&amp; src.substr(0,5)!='http:' &amp;&amp; src.substr(0,5)!='file:') {
            var txt=loadFile(src);
            if (!txt) { // file didn't load, might be relative path.. try fixup
                var pathPrefix=document.location.href;  // get current document path and trim off filename
                var slashpos=pathPrefix.lastIndexOf('/'); if (slashpos==-1) slashpos=pathPrefix.lastIndexOf('\\');
                if (slashpos!=-1 &amp;&amp; slashpos!=pathPrefix.length-1) pathPrefix=pathPrefix.substr(0,slashpos+1);
                src=pathPrefix+src;
                if (pathPrefix.substr(0,5)!='http:') src=getLocalPath(src);
                var txt=loadFile(src);
            }
            if (!txt) { // file still didn't load, report error
                if (!quiet) displayMessage(this.openErrMsg.format([src.replace(/%20/g,' '),'(unknown)']));
            } else {
                if (!quiet) displayMessage(this.readMsg.format([txt.length,src.replace(/%20/g,' ')]));
                if (version.major+version.minor*.1+version.revision*.01!=2.52)
                    txt=convertUTF8ToUnicode(txt);
                if (callback) callback(true,params,txt,src,null);
            }
        } else { // use XMLHttpRequest
            doHttp('GET',src,null,null,config.options.txtRemoteUsername,config.options.txtRemotePassword,callback,params,null);
        }
    },
    readTiddlersFromHTML: function(html) {
        // for TW2.2+
        if (TiddlyWiki.prototype.importTiddlyWiki!=undefined) {
            var remoteStore=new TiddlyWiki();
            remoteStore.importTiddlyWiki(html);
            return remoteStore.getTiddlers('title');
        }
    },
    readTiddlersFromCSV: function(CSV) {
        var remoteStore=new TiddlyWiki();
        // GET NAMES
        var lines=CSV.replace(/\r/g,'').split('\n');
        var names=lines.shift().replace(/&quot;/g,'').split(',');
        CSV=lines.join('\n');
        // ENCODE commas and newlines within quoted values
        var comma='!~comma~!'; var commaRE=new RegExp(comma,'g');
        var newline='!~newline~!'; var newlineRE=new RegExp(newline,'g');
        CSV=CSV.replace(/&quot;([^&quot;]*?)&quot;/g,
            function(x){ return x.replace(/\,/g,comma).replace(/\n/g,newline); });
        // PARSE lines
        var lines=CSV.split('\n');
        for (var i=0; i&lt;lines.length; i++) { if (!lines[i].length) continue;
            var values=lines[i].split(',');
            // DECODE commas, newlines, and doubled-quotes, and remove enclosing quotes (if any)
            for (var v=0; v&lt;values.length; v++)
                values[v]=values[v].replace(commaRE,',').replace(newlineRE,'\n')
                    .replace(/^&quot;|&quot;$/g,'').replace(/&quot;&quot;/g,'&quot;');
            // EXTRACT tiddler values
            var title=''; var text=''; var tags=[]; var fields={};
            var created=null; var when=new Date(); var who=config.options.txtUserName;
            for (var v=0; v&lt;values.length; v++) { var val=values[v];
                if (names[v]) switch(names[v].toLowerCase()) {
                    case 'title':   title=val.replace(/\[\]\|/g,'_'); break;
                    case 'created': created=new Date(val); break;
                    case 'modified':when=new Date(val); break;
                    case 'modifier':who=val; break;
                    case 'text':    text=val; break;
                    case 'tags':    tags=val.readBracketedList(); break;
                    default:    fields[names[v].toLowerCase()]=val; break;
                }
            }
            // CREATE tiddler in temporary store
            if (title.length)
                remoteStore.saveTiddler(title,title,text,who,when,tags,fields,true,created||when);
        }
        return remoteStore.getTiddlers('title');
    },
    createTiddlerFromFile: function(src,txt) {
        var t=new Tiddler();
        var pos=src.lastIndexOf(&quot;/&quot;); if (pos==-1) pos=src.lastIndexOf(&quot;\\&quot;);
        t.title=pos==-1?src:src.substr(pos+1);
        t.text=txt;
        t.created=t.modified=new Date();
        t.modifier=config.options.txtUserName;
        if (src.substr(src.length-3,3)=='.js') t.tags=['systemConfig'];
        return [t];
    },
    doImport: function(status,params,html,src,xhr) {
        var cml=config.macros.loadTiddlers; // abbrev
        src=src.split('?')[0]; // strip off &quot;?nocache=...&quot;
        if (!status) {
            displayMessage(cml.openErrMsg.format([src.replace(/%20/g,' '),xhr.status]));
            return false;
        }
        var quiet=params.quiet;
        var ask=params.ask;
        var filter=params.filter;
        var force=params.force;
        var init=params.init;
        var nodirty=params.nodirty;
        var norefresh=params.norefresh;
        var noreport=params.noreport;
        var autosave=params.autosave;
        var tiddlers = cml.readTiddlersFromHTML(html);
        if (!tiddlers||!tiddlers.length) tiddlers=cml.readTiddlersFromCSV(html);
        if (!tiddlers||!tiddlers.length) tiddlers=cml.createTiddlerFromFile(src,html);
        var count=tiddlers?tiddlers.length:0;
        if (!quiet) displayMessage(cml.foundMsg.format([count,src.replace(/%20/g,' ')]));
        var wasDirty=store.isDirty();
        store.suspendNotifications();
        var count=0;
        if (tiddlers) for (var t=0;t&lt;tiddlers.length;t++) {
            var inbound = tiddlers[t];
            var theExisting = store.getTiddler(inbound.title);
            if (inbound.title==cml.reportTitle)
                continue; // skip 'ImportedTiddlers' history from the other document...
            if (theExisting &amp;&amp; theExisting.tags.contains(cml.lockedTag)) {
                if (!quiet) displayMessage(cml.lockedMsg.format([theExisting.title,cml.lockedTag]));
                continue; // skip existing tiddler if tagged with 'noReload'
            }
            // apply the all/new/changes/updates filter (if any)
            if (filter &amp;&amp; filter!='all') {
                if ((filter=='new') &amp;&amp; theExisting) // skip existing tiddlers
                    continue;
                if ((filter=='changes') &amp;&amp; !theExisting) // skip new tiddlers
                    continue;
                if ((filter.substr(0,4)=='tag:') &amp;&amp; inbound.tags.indexOf(filter.substr(4))==-1) // must match specific tag value
                    continue;
                if ((filter.substr(0,8)=='tiddler:') &amp;&amp; inbound.title!=filter.substr(8)) // must match specific tiddler name
                    continue;
                if (!force &amp;&amp; store.tiddlerExists(inbound.title) &amp;&amp; ((theExisting.modified.getTime()-inbound.modified.getTime())&gt;=0)) {
                    var msg=cml.nochangeMsg;
                    if (!quiet&amp;&amp;msg.length) displayMessage(msg.format([inbound.title]));
                    continue;
                }
            }
            // get confirmation if required
            var msg=(theExisting?'Update':'Add')+&quot; tiddler '&quot;+inbound.title+&quot;'\n&quot;
                +'from '+src.replace(/%20/g,' ')+'\n\nOK to proceed?';
            if (ask &amp;&amp; !confirm(msg))
                { tiddlers[t].status=cml.skippedMsg; continue; }
            // DO IT!
            var tags=new Array().concat(inbound.tags,cml.newTags);
                    store.saveTiddler(inbound.title, inbound.title, inbound.text, inbound.modifier,
                inbound.modified, tags, inbound.fields, true, inbound.created);
            // force creation date to imported value - needed for TW2.1.3 or earlier
                    store.fetchTiddler(inbound.title).created = inbound.created;
            tiddlers[t].status=theExisting?'updated':'added'
            if (init &amp;&amp; tags.contains('systemConfig') &amp;&amp; !tags.contains('systemConfigDisable')) {
                var ok=true;
                if (ask||!quiet) ok=confirm(cml.warning.format([inbound.title]))
                if (ok) { // run the plugin
                    try { window.eval(inbound.text); tiddlers[t].status+=' (plugin initialized)'; }
                    catch(ex) { displayMessage(config.messages.pluginError.format([exceptionText(ex)])); }
                }
            }
            count++;
        }
        store.resumeNotifications();
        if (count) {
            // set/clear 'unsaved changes' flag, refresh page display, and generate a report
            store.setDirty(wasDirty||!nodirty);
            if (!norefresh) {
                story.forEachTiddler(function(t,e){
                    if(!story.isDirty(t))story.refreshTiddler(t,null,true)
                });
                store.notifyAll();
            }
            if (!noreport) cml.report(src,tiddlers,count,quiet);
        }
        if (!quiet||count) // force msg if tiddlers were loaded
            displayMessage(cml.loadedMsg.format([count,tiddlers.length,src.replace(/%20/g,' ')]));
        if (count &amp;&amp; autosave &amp;&amp; (!ask||confirm(cml.autosaveMsg))) saveChanges();
    },
    showReport: true,
    report: function(src,tiddlers,count,quiet) {
        var cml=config.macros.loadTiddlers; // abbrev
        // format the new report content
        var newText = 'On '+(new Date()).toLocaleString()+', ';
        newText += config.options.txtUserName+' loaded '+count+' tiddlers ';
        newText += 'from\n[['+src+'|'+src+']]:\n';
        newText += '&lt;&lt;&lt;\n';
        for (var t=0; t&lt;tiddlers.length; t++)
            if (tiddlers[t].status)
                newText += '#[['+tiddlers[t].title+']] - '+tiddlers[t].status+'\n';
        newText += '&lt;&lt;&lt;\n';
        var title=cml.reportTitle;
        var currText='';
        var t=store.getTiddler(title);
        if (t) currText=(t.text.length?'\n----\n':'')+t.text;
        store.saveTiddler(title, title, newText+currText,
            config.options.txtUserName, new Date(), t?t.tags:null, t?t.fields:null);
        if (!quiet) {
            if (config.options.chkLoadTiddlersShowReport)
                story.displayTiddler(null,title);
            story.refreshTiddler(title,null,true);
        }
    }
}
//}}}</pre>
</div>
<div title="LordsSupper" modifier="SDM" created="201004150416" modified="201212190125" book_key="">
<pre>[[Food]], [[Covenant]], Meals with Jesus.
* @@color:brown;the Lord's Supper (&lt;&lt;Bbl Mt 26:26 &gt;&gt;-29 ; &lt;&lt;Bbl Mk 14:22 &gt;&gt;-25 ; &lt;&lt;Bbl Lk 22:15 &gt;&gt;-20 ; &lt;&lt;Bbl 1Cor 11:23 &gt;&gt;-26 )@@
* Called the Eucharist because this term is found in all the Synoptics (Sec 2:17) and &lt;&lt;Bbl 1Cor 11:24 &gt;&gt; (among other places) for &quot;giving thanks.&quot;  Lane on &lt;&lt;Bbl Mk 14:22 &gt;&gt;-26 , and Geldenhuys on p. 560, go over the details of the Passover liturgy (but I often wonder if these are reliable; were they perhaps practiced on a sectarian basis?).
!!! The Cup
[[Cup]], [[Blood]]
!!! The Bread
Jesus' body was broken on the cross.  You cannot share bread without breaking it, and Jesus knew that in order for Him to be shared (&lt;&lt;Bbl Jn 16:7 &gt;&gt;) He would have to be [[Broken]].
//communion, supper, incarnation//
!!! Practical Ministry
* Communion must be given to the home-bound.</pre>
</div>
<div title="Love" modifier="SDM" created="201004120330" modified="201212050347" book_key="">
<pre>* &lt;&lt;Bbl Mt 24:12 &gt;&gt;; &lt;&lt;Bbl 1Cor 8:1 &gt;&gt;, chap.13; &lt;&lt;Bbl Eph 3:19 &gt;&gt;; &lt;&lt;Bbl 1Thes 3:12 &gt;&gt;, &lt;&lt;Bbl 1Thes 4:9 &gt;&gt;; &lt;&lt;Bbl 1Jn 3:1 &gt;&gt;, &lt;&lt;Bbl 1Jn 4:7 &gt;&gt; - 5.3.
* as an emotion:    &lt;&lt;Bbl Mk 10:21 &gt;&gt;
* and wisdom:   &lt;&lt;Bbl Php 1:9 &gt;&gt;; &lt;&lt;Bbl Col 3:14 &gt;&gt;
* God's, in us: &lt;&lt;Bbl Rom 5:5 &gt;&gt;
* [[GoldenRule]]
!!! {{anti{hatred}}}
*  &lt;&lt;Bbl 2Sam 13:15 &gt;&gt; Amnon towards Tamar</pre>
</div>
<div title="Lowliness" modifier="SDM" created="201009300252" modified="201210091517" book_key="">
<pre>* [[Humility]], [[Broken]]
* [[Attitude]]
* &lt;&lt;Bbl Dt 7:7 &gt;&gt; //...not because you were numerous...//
* &lt;&lt;Bbl 1Cor 1:26 &gt;&gt;-29 //...not many wise, not many noble ...//</pre>
</div>
<div title="Luke-01-01-note" modifier="SDM" created="201010310500" modified="201303102050" tags="Comment" book_key="160001a">
<pre>!!!! General Notes
* Even in his choice of O.T. quotes, Luke the physician often refers to healing, by several different terms.
* Bob Summers counts seven instances in Luke where Jesus prays.  
* Also twenty-five hopeless situations, making it in his eyes the gospel of hope.  Two early instances are 1:7 (Elizabeth's barreness) and 1:34 (a promise that seems impossible).
* [[Expectancy]] in Luke has an early crescendo as Zachariah speaks with an angel in the most Holy Place -- the crowd outside, waiting, and he rendered speechless.  This is within the immediate local context of Simeon's life promise, and the immanent arrival of Elijah in the person of John
* Some themes are preludes to Luke's sequel: &lt;&lt;Bbl Acts 5:41 &gt;&gt;, &lt;&lt;Bbl Acts 8:3 &gt;&gt;,
----
In the opening passages, Luke alludes to or draws from Abraham, Jacob, the Passover (2:41), the Law of Moses, Elijah, King David's throne, Isaiah and Malachi.  
&lt;&lt;Bbl Lk 1:1 abbr &gt;&gt;-4   Inasmuch as ...  the opening sentence, indeed the NAS' first words, indicate Luke's elevated style.  Just look at the verb tenses!
1:2 just as  --   exactly as.
1:16    Quotes Malachi.  This is an early piece of what will become's Luke's enormous theme for the early writing of the Gospel.
1:17	Early news that John the Baptizer will in fact be the representative of Elijah.
1:18-20 Zacharias seeks a sign and receives one, albeit one that seems to carry a reproof.  Vs.45 may have the implication that Mary believed without such queries.  Note she says //How can this be//, while Zecarias says //How can I be sure//.
1:25    OT phraseology.</pre>
</div>
<div title="Luke-01-26-note" modifier="SDM" created="201303102050" tags="Comment" book_key="160001m">
<pre>&lt;&lt;Bbl Lk 1:26 abbr &gt;&gt;    A new chronology for the world  --  based on the John the Baptist's birth.
1:34    Luke's narrative does not record the conversation with full precision.  We infer that the angel has told Mary she will expeience the miracle of a conception without a man.
1:37    &lt;&lt;Bbl Gn 18:14 &gt;&gt;
&lt;&lt;Bbl Lk 1:46 abbr &gt;&gt;-55 -- The Magnificat, a NT sequel to Hannah's song in &lt;&lt;Bbl 1Sam 2:1 &gt;&gt;-10. The verbs are in aorist past; this is the Hebrew idiomatic &quot;prophetic perfect.&quot;
{{holyquote{
His mercy is for generations of generations on those who fear him. //1:50//
}}}
1:59    Naming him after his father probably seemed appropriate, since the man's faculties had disappeared when the son was conceived.
1:62    //They made signs// -- but Zacharias was not deaf.  Possibly this should be read as //they gestured to//?
1:63	Why were they astonished?  Either the name of John continues to seem strange to them, or the momentary order of events is not quite straightforward and they are reacting to his regaining the ability to speak. 
1:69-77 Three covenants are noted here (Davidic, Abrahamic, New).</pre>
</div>
<div title="Luke-02-01-note" modifier="SDM" created="201301131943" modified="201303102007" tags="Comment" book_key="160002a">
<pre>2:19    Also vs 51.  Compare with Jacob, &lt;&lt;Bbl Gn 37:11 &gt;&gt;.
&lt;&lt;Bbl Lk 2:29 abbr &gt;&gt;    This is often construed to mean that God had spoken to him; I don't see where it necessarily follows.  Compare &lt;&lt;Bbl Gn 46:30 &gt;&gt;.
&lt;&lt;Bbl Gn 2:46 abbr &gt;&gt; Your Father  --  My Father  --    an assertion of His own Deity.
2:49     -- Why was it so hard to figure out where I must be? --

3:1-2   This is reminiscent of the formulas that open Jeremiah, Ezekiel, etc.  Surprising that Luke, a gentile, should use them.
3:10-14 Close to &lt;&lt;Bbl Zech 8:16 &gt;&gt;-17 .  Also, the queries are echoed by the Philippian jailor later.
3:16-17    Following 3:15 as it does, John's sense of the dramatic is manifest.
** Don Richardson says that John refers to two baptisms, one for the saved and another for the lost.
** Strong parallel images:  //Spirit// or wind as a threshing fan, and fire
3:18    John preached the good news, which is important to note.  But in the context of vss 18-22, this might not pre-date the Lord's own preaching.
3:36    Cainan is not in the list of Gn 36 (?)</pre>
</div>
<div title="Luke-04-01-note" modifier="SDM" created="201211160232" tags="Comment" book_key="160004a">
<pre>Chapter 4   After the tempting, the receptions given Jesus first by two synagogues, then in Peter's home, are recorded.  Unbelief, hostility were at the first; amazement and attention, yet without understanding, at the second; understanding and love at the third.  But the last verse of the chapter records His persistance within the synagogues.
4:4-12  Common in the three temptations is the proposal to be God  --  or rather, to demonstrate His Godhood (as Wuest points out, Satan does not express doubt about that issue).  Jesus always answers the answer of a righteous man.
4:4 see &lt;&lt;Bbl Mt 4:4 &gt;&gt;
&lt;&lt;Bbl Lk 4:6 abbr &gt;&gt; &lt;&lt;Bbl Mt 28:18 &gt;&gt; uses the same Greek phrase, all authority , for what Jesus has been given.
Dave Davidson and the Reconstructionists propose that Satan was lying, since &quot;The earth is the Lord's and the fulness thereof.&quot;  But I wonder, knowing of course that God is over all, if authority was not passed from man to the devil after the Fall.  And Jesus did not deny Satan's statement.
    According to Darnell, handed to me  can be rendered, betrayed over to me.
4:19    Jesus stops in the middle of a sentence.
4:24    Compare &lt;&lt;Bbl Jn 1:11 &gt;&gt;.
&lt;&lt;Bbl Lk 4:26 abbr &gt;&gt;-27     Note Jesus is referring very deliberately to gentiles.
4:28-29 The crucifixion processional, but premature.
4:35    without doing him any harm   --  as a modern physician would say, no side effects.

5:6-7   New wine in old vessels.
5:8 see &lt;&lt;Bbl Mt 8:34 &gt;&gt;
&lt;&lt;Bbl Mt 5:10 abbr &gt;&gt;    Not the image of fly-fishing or tournament bass fishing, but of fishing with nets.  Note that that Peter, James and John were originally a business concern (the term koinonia is used).
5:11    everything,  including the miraculous catch.  Sometimes we leave God's wonders to follow God Himself.  His ways, not His acts &lt;&lt;Bbl 5:14  A testimony of God's rightousness, power and mercy.
5:15-17 //hear Him and to be healed// foreshadows the two-fold character of the Lord's ministry that is emphasized in chaps 9, 10.
5:18-19 The paralytic brought in through the roof
* Men having faith, compassion, strength, unity, creativity, faithfulness  --  a lack of any one of these qualities would have kept the paralytic from healing.  One wonders, did they look back on this and say //We really didn't need to do that//?
* Vulnerability for the man in need.
* And what shall we say of the host of this event?
* The converse of a prisoner breaking out though a wall -- this man finds freedom by breaking in.
* Potential rich picture of Christ in me.  I am the house, and the guys on the roof relate to my soul life.  In dealing with my need, God may dislodge my roof.
5:20    Forgiveness is the man's first need.
5:23    The answer being that as far as humans are concerned, they are equally difficult.
5:24    This announces that Jesus came to do more than heal physically.
5:32    And the class of sinners includes everyone.

6:1 I imagine the sense of freedom, of true sabbath, that must have filled the disciples as they walked with the Lord.
6:2 It's hard to imagine the disciples' action as a violation (but then, even gathering manna on the Sabbath was a sin).  Either everyone fasted, or perhaps the Pharisees saw this as a sort of harvest work ??
6:9 In other words, is the law of the Sabbath inconsistant with the goodness of God?
6:10    By doing no action, and only speaking the word, Jesus emphasizes the sin of his sabbatarian accusers.
6:22    spurn your name as evil   --  compare &lt;&lt;Bbl Ps 102:8 &gt;&gt;.
&lt;&lt;Bbl Lk 6:23 abbr &gt;&gt;    These instructions followed in &lt;&lt;Bbl Acts 5:41 &gt;&gt;.
&lt;&lt;Bbl Lk 6:26 abbr &gt;&gt;    Does &lt;&lt;Bbl Pr 27:21 &gt;&gt; apply?
6:31    He authors the idea that one man's beneficent action initiates an improvement for the world.
6:35    you will be sons of the Most High  --   you will partake of God's character.  Compare &lt;&lt;Bbl Mt 5:45 &gt;&gt;.
&lt;&lt;Bbl Lk 6:37 abbr &gt;&gt;-38     Compare &lt;&lt;Bbl Mt 7:1 &gt;&gt;-2 .  By your standard of measure   --  this is one of C.S. Lewis' themes, and Chesterton's.
6:38    Compare with &lt;&lt;Bbl Ruth 3:16 &gt;&gt;; but it seems more likely that, rather than a direct allusion to Ruth, Jesus is drawing on a Hebrew idiom:  &lt;&lt;Bbl Ps 79:12 &gt;&gt;; &lt;&lt;Bbl Is 65:6 &gt;&gt;-7 ; &lt;&lt;Bbl Jer 32:18 &gt;&gt;.  The idiom may have the image of using one's garment to carry grain, etc.
6:40    As in &lt;&lt;Bbl 1Jn 3:2 &gt;&gt;.</pre>
</div>
<div title="Luke-06-46-note" modifier="SDM" created="201012302017" modified="201208081851" tags="Comment" book_key="160006e">
<pre>Chapter 7  Here is the end of the nationalistic hope (vss 18-23 are pivotal) and the vindication of the repentant sinful and poor.
7:1-10
* &lt;&lt;Bbl Mt 8:5 &gt;&gt;-13 //A man's reputation precedes him// -- this proverb was true for both the centurion and the Christ.
* The centurion declares that he is part of a chain of command; his authority proceeds from a higher source and exerts itself downward in the form of spoken commands: &quot;Come, Go, Do this.&quot;  In effect, the centurion is saying that if he had to run around doing it all himself, and in the process entering places unworthy of him, it would be no kind of authority.  Thus his request for Christ to merely say the word.
* This and &lt;&lt;Bbl Lk 7:1 &gt;&gt;-10  are the only places where Jesus is recorded as being amazed.
* There's a rich contrast between the centurion and the harlot in vss 37-38.  The one deals in authority, the other in intimacy; in worship they are peers.
7:18-23 //You, John, have ears to hear and eyes to see (it was you who testified about me at the river); or are you so sold on Jewish state sovereignty that you cannot see My power?  Base your report on the revelation I can grant.  As I have done for the physically blind, I can do for you in your spirit.  Be like Joshua and Caleb.//
7:30    Their past actions gave them something to prove.  But God's purpose was for their righteousness in Christ, and repentance is crucial to this.  A case study follows with the harlot and the Pharisee.
7:38    The material accessories of her sin, the very physical members, are turned to worship.  There is no self-consciousness.
7:35    The verb for justify is //edikaio//, and the same verb is used in v29.  Here, however, it is passive (also in &lt;&lt;Bbl Rom 3:4 &gt;&gt;), giving us a parallel of:
{{{
              wisdom           children
             God's justice     the people and tax-gatherers
}}}
    This verse is found in &lt;&lt;Bbl Mt 11:19 &gt;&gt;, but without the other use of the verb.

8:3 First instance in the NT of itinerent team with mention of financial support.  It's also a prelude to the Book of Acts (also Luke), the early church in general.  Who knows what petty squabbles arose each day? but who can describe the joy of the women who were buying bread for the Messiah?
8:4-15  The Lord is so generous with His explanation of this parable and I suppose it's encouraged us a lot as to all His others.
    The parable teaches God's soveriegnty, as a soil is passive.  Since it's a matter, apparently, of random chance where the seeds land, this soveriegnty is implied.  But over all is the fact that the sower is intelligently invested in the work; he has prepared the soil that is good.  At the same time, and with no conflict, the parable teaches man's responsibility.  Each of the soils presents a lesson on how to live and receive God's grace.  (And how God readied my heart, gave me a craving for Scripture!  I weep over this in joy and wonder.)  Intense multiplication is the final result.
    By comparing vss 12 and 15 we see that if your heart is ill prepared, satanic interference is likely.  Thus the devil can be resisted.  'Retain the Seed' would be a good theme for a Kenitra Camp.
8:16-18 Follows from vs 10; a comment on the in-depth teaching just vouchsafed to the disciples.  Thus 18b can be applied to Judas.
8:17    Could we read the last words as  -- see by means of the light -- ??   Thus the latter part of vs 16 would be in reference.  Jesus would be stating his apostolic purposes for the disciples.
8:29    Just as Jesus had been driven by the Spirit.  Same verb??
8:47    she had not escaped notice !   See &lt;&lt;Bbl Heb 4:13 &gt;&gt;
&lt;&lt;Bbl Lk 8:49 abbr &gt;&gt;-50     Like the woman, Jairus doesn't escape notice.  Did the Lord overhear the arriving news, or did Jairus relate it to him?
    Luke is interested in whether there was enough of Jesus' power to go around.  Thus his appreciation of the Spirit's work in &lt;&lt;Bbl Acts 8:52 &gt;&gt;-53   see &lt;&lt;Bbl 1Thes 4:13 &gt;&gt;, &lt;&lt;Bbl 1Cor 15:18 &gt;&gt;-19 .  Also &lt;&lt;Bbl Mt 9:23 &gt;&gt;, &lt;&lt;Bbl Mk 5:38 &gt;&gt; fill out the picture.  The parents themselves would probably have had too genuine a grief to join in the ridicule.  </pre>
</div>
<div title="Luke-09-01-note" modifier="SDM" created="201011212234" modified="201301070212" tags="Comment" book_key="160009a">
<pre>9:1  Twelve are sent out, which can be likened to the tribes of Israel; compare the seventy in 10:1, corresponding to the nations.
    A parallel construction is found which continues through vss 2, 6 and 10:9.  The first aspect is proclaiming the Kingdom of God, which is described also in power to cast out demons (&quot;Jesus is Lord!&quot;) and to preach the gospel.  The second aspect is healing, which in vs 2 seems to have as its purpose the confirmation of the preaching, but otherwise stands on its own as wonderful.  Note also 5:15-17, &lt;&lt;Bbl Mt 9:35 &gt;&gt;.
&lt;&lt;Bbl Lk 9:28 abbr &gt;&gt;    Clearly, by its introduction, this verse fulfills the preceding.
9:30    Once upon a mountain (&lt;&lt;Bbl Ex 33:22 &gt;&gt;), Moses needed to be hidden in the cleft of the rock.  Not now.  And Eric Gross adds his insight that now Moses was standing in the land of promise, despite God's refusal so long ago.
9:31    KJV  -- decease, --  which may explain its euphemistic value.
9:41-42 Divided or single heart.
9:45-46 Note the qualities absent: wisdom, understanding, courage, peacableness, unity, humility.
&lt;&lt;Bbl Lk 9:48 abbr &gt;&gt;    //In Your name// -- see vs 50.
9:49-50 John gives some hint of his interest in abiding and obeying, authority and purity.  But to Jesus, //in Your name// apparently indicates the other fellow is for Him.   Authority and purity are found in His name, and an attitude of immediate suspicion should be avoided.  This is a key to unity.  John is admonished to lighten up again in vss 54-56.
    Vs 50 is  -- the test by which others are to be tried.  In 11:23 is a test by which one tries oneself (unk.) --   Note also &lt;&lt;Bbl Php 1:17 &gt;&gt;-18 .
    //In Your name// ties this in with the story of vss 46-48.
9:51-56 Note the ironies:  the Samaritans refuse to give a service related to their salvation, and the disciples need rebuke because they would see their Master vindicated on the spot instead of enduring humiliation, a humiliation which only hints at what is to come.  These ironies underscore Jesus' solitude.  No one understands.
&lt;&lt;Bbl Lk 9:57 abbr &gt;&gt;-58    Maybe Jesus is saying, //Would you care to have Me over to your home, as did Zaccheus, as did Levi?  Let Me follow YOU a bit.//
9:59,61 The word first , appearing in vss. 59 and 61, is crucial.  As Bonhoeffer says, first permit me  is the man's essential statement.
9:59    Barclay tells of a brilliant young Arab man offered a scholarship at a prestigious British university.  He replied, &quot;I'll take it after I've buried my father.&quot;  At that time his father was about forty, in good health.  Besides filial obligation, the security of an inheritance might be at stake.
9:62    An interesting comparison with &lt;&lt;Bbl 1Kngs 19:19 &gt;&gt;-21 .
</pre>
</div>
<div title="Luke-10-01-note" modifier="SDM" created="201301070208" book_key="160010a">
<pre>10:1    Gn. 10 lists an additional two nations, added as an update by the translators of that work.
    The number of cities is not specified.  If some of the pairs went together it could have been less than thirty-five; or more, if they all went out in separate pairs and itinerated.
10:2    Compare this with the parables about workers.  God can obtain laborers by any means He chooses, and in any number.  Note too that it is His harvest , and so incumbant upon Him to see it ultimately gathered in.  And that they themselves are answer to this prayer they are to pray.
&lt;&lt;Bbl Lk 10:3 abbr &gt;&gt;    What a sense of adventure they must have felt.  Good that they were going in pairs, to encourage each other.
    To what degree do these commands of Christ apply to us, as His messengers?  Could they have been largely specific to this mission?  Vs. 4 seems especially specific.
10:4    They were missionaries with specific destinations, acting as forerunners for Jesus Himself.  Greet no one along the way   --  there's an O.T. prophet given this injunction, and the disciples probably took it very seriously.  It implies singleness of purpose.  Greetings could be time-consuming.  Also, in line with the rest of the verse, to greet a friend could contain the hope of a bit of earthly provision.
10:5-6  We can bless indiscriminately; for just as &quot;a curse without a cause does not alight,&quot; so neither does this blessing.  Therefore it's impossible to overstep in this area.  David has a greeting of peace for Nabal, &lt;&lt;Bbl 1Sam 25:6 &gt;&gt;.
    (Laying on of hands, however, has some warnings, because that has to do with granting specific authority.)
10:7    laborer  makes sense only if we refer to vs 2.
    worthy of his wages   --  meaning that the hospitality you recieve is actually from God.  So one should not worry about recompense to the hosts, and one should not be finicky (see &quot;lickerish&quot; in Weekley's etymological dictionary).
10:8    Instructions which parallel v5, with the same wording.
    The import of vss 7-8 seems to be, receive with complete freedom whatever hospitality is given, and on those terms in which it is given.
10:11-16    see &lt;&lt;Bbl Mt 16:19 &gt;&gt;.
&lt;&lt;Bbl Lk 10:19 abbr &gt;&gt;    Barefoot, no less (vs. 4).  If not for &lt;&lt;Bbl Mk 16:18 &gt;&gt;, it would perhaps be possible to take this promise figuratively as referring to the demons, which would fit the context fully.  There seems to be some connection between Satan and snakes which is more than poetically metaphorical (see [[Satan]]).
10:20   See &lt;&lt;Bbl Ex 33:14 &gt;&gt;-17  for a powerful comparison.
10:29-37    Instead of responding ot the question,  -- Who is the proper recipient of my love? -- , Jesus addresses the issue of compassion, love's substance.  If you have real love, who could fall outside its tender scope?  Love is patient, kind, merciful, impartial, generous, unselfish  --  and often not found in the professionally religious.  Jesus is not content to give a description of the rescued but focuses on the rescuer.
10:30   left for dead.  Street smarts - maim, brutalize, incapacitate, but don't kill.  If you do, law enforcement is required to kick in, if only because now it's going to appear in the stats...)  The passers-by weren't required to care.  Adam says the '3 men are in a boat' joke was std formula. </pre>
</div>
<div title="Luke-11-01-note" modifier="SDM" created="201011221951" modified="201211200122" tags="Comment" book_key="160011a">
<pre>&lt;&lt;Bbl Lk 11:5 &gt;&gt;-10  In a wonderful sermon (12/4/88) Bob Summers points out that vs. 7 has a picture of our security in God.  He evinces all the drama of this parable and reminds us that God, after all, is a knocker and a seeker and an asker.
11:15-18    Satan is not strong enough to act with as much subtlety as is proposed by the Pharisees.  His small-time strategems are not equal what vs 15 theorizes to be the case.
11:19   Tim says, and the commentators agree, that your sons  here means the disciples of the Pharisees.  Geldenhuys (Luke, pg. 329f.) gives a good explanation.  However, I always read it to mean that the generation of their children would include believers operating in Spirit-filled ministry.
11:20   Finger of God  occurs only one other time in Scripture, &lt;&lt;Bbl Ex 8:19 &gt;&gt; (though &lt;&lt;Bbl Ps 8:3 &gt;&gt; has some relevance).  Tim points out that there is much to think about here.
11:21-23    Utterly serious confidence in the war against Satan.
11:24   Perhaps a description of ordinary jewish demonology which after all did not change a man's heart.
11:34-36    Parallel in &lt;&lt;Bbl Mt 6:22 &gt;&gt;-23 ; see also &lt;&lt;Bbl Pr 20:27 &gt;&gt;.
&lt;&lt;Bbl Lk 11:47 abbr &gt;&gt;   So the very act they use to rectify their fathers' deeds only reveals their solidarity.
11:48   Precise language for a notary.
11:51   The reference to Zechariah is from &lt;&lt;Bbl 2Chr 24:21 &gt;&gt;.  The Chronicles once stood at the end of the O.T., so Jesus was using the canonical order of the Scriptures to refer to all the murders of all the prophets.

12:1-12 Strong words of comfort to those crushed under religious oppression.  Vs. 1 cements this passage to 11:37-54.
12:2-3  see &lt;&lt;Bbl 2Sam 12:12 &gt;&gt;.
&lt;&lt;Bbl Lk 12:11 abbr &gt;&gt;   See &lt;&lt;Bbl Mt 10:17 &gt;&gt;-18 .
&lt;&lt;Bbl Lk 12:14 abbr &gt;&gt;-15    The Holy God cannot judge between greedy people.  Faced with a Solomonic problem, the Lord issues a super-Solomonic solution.  Both brothers must receive this word.
12:16-21    Vs. 19 introduces the first and only problem.  Cf. &lt;&lt;Bbl James 4:13 &gt;&gt;-16 , which has a different moral.
12:18   Compare &lt;&lt;Bbl Ez 16:49 &gt;&gt;.
&lt;&lt;Bbl Lk 12:20 abbr &gt;&gt;    Compare &lt;&lt;Bbl Is 10:3 &gt;&gt;; &lt;&lt;Bbl Ecc 2:18 &gt;&gt;.
&lt;&lt;Bbl Lk 12:37 abbr &gt;&gt;    This presents the idea that Jesus will serve at the marriage feast of the Lamb!  Is this found anywhere else?  This is before last Passover.
12:51-53    Where the sword cuts, it cuts the elect to life.</pre>
</div>
<div title="Luke-13-01-note" modifier="SDM" created="201211200121" modified="201211200122" tags="Comment" book_key="160013a">
<pre>13:2-5  There is no way to compare our sins with those of our neighbor.
13:6-9  see &lt;&lt;Bbl Is 64:8 &gt;&gt;
&lt;&lt;Bbl Lk 13:10 abbr &gt;&gt;-11     Note the sick people sought him even on the Sabbath.  No doubt this was close to the root of the Pharisees' objections.  All sorts of restless yearnings were fouling up the system.
13:13-14    As Darnell says, when the bent woman stood up straight, the straight people got all bent out of shape.
13:15   the Lord   --  interesting (and unusual ?? ) reference in a dialogue like this.

14  First the natural event of the feast; then the declaration; then the parable.
14:4    As teachers and leaders, their inability to discern, answer and guide was embarrassing them publicly.  Cf. &lt;&lt;Bbl Jn 7:26 &gt;&gt;.
&lt;&lt;Bbl Jn 14:1 abbr &gt;&gt;-6  A continuation of 13:10-17, with the same denouement of humiliation for the opponents of Jesus.
14:7-11 see &lt;&lt;Bbl Pr 25:6 &gt;&gt;-7 .
&lt;&lt;Bbl Lk 14:18 abbr &gt;&gt;-19    These people can attend to their worldly interests because they do not fit the description of vss 13 and 21:  the man who goes out and looks is neither lame nor blind, and the man who has bought oxen and needs to try them is neither poor nor crippled.
14:24   God rejects man only after man has rejected God.  And who feels the loss the greatest?
14:23   A man of no mild hospitality.  As Elisha told the widow, &quot;Do not collect a few!&quot;
</pre>
</div>
<div title="Luke-14-25-note" modifier="SDM" created="201011221957" modified="201211110231" tags="Comment" book_key="160014a">
<pre>14:25  The setting is paramount; at this moment they are literally following Him.
14:26-32    Both these parables portray prudence, but they have opposite outcomes.  One shows perhaps the reward of full commitment, the other the cost of full surrender.  Are they paradoxical to each other?  Or is the failure of the tower-builder a foregone conclusion?
14:26   Wuest adds, in the event that they become hindrances to his love for Me.  Compare &lt;&lt;Bbl Dt 13:6 &gt;&gt;-11.
&lt;&lt;Bbl Lk 14:27 abbr &gt;&gt;-30    As He speaks this, Jesus is even now counting the cost of his own cross.  Later, in the garden, He is to finish his reckoning.  Or, He is saying:  I have what is required for this.
    Could this not be applied to God's undertaking of salvation?  It seems unnecessary for Jesus to mention ridicule; but that is reminiscent of Moses' prayers, calling upon God to not destroy His people in the wilderness, lest the nations mock.  And Christ himself on the cross.
14:32   See &lt;&lt;Bbl Is 27:4 &gt;&gt;-5 .  Recalls the Gibeonites.  He says:  I am not asking for terms of peace.
14:34-35    Contrary to all those sermonic inventories of the uses of salt, this parable asserts that it's valuable for only one aspect: its taste.  (Of course it's usually &lt;&lt;Bbl Mt 5:13 &gt;&gt; that elicits such lists; this might be a good example of the importance of context.)</pre>
</div>
<div title="Luke-15-01-note" modifier="SDM" created="201012140413" modified="201211110228" tags="Comment" book_key="160015a">
<pre>15:4-7  One of the special things about sheep in this passage is that each sheep is worth the same as the others.  How this grated on the Pharisees, who dealt in superiority.  Like a coin in the story that follows, a sheep is truly valuable.
15:11-32    We learn that sin leads to painful solitude and famine.  The contrast between fellowship and solitude is pursued in its eternal aspects in the story of Lazarus and the rich man.  The travail of the soul from sin, through Judgment, and into repentance is closely traced.
    The pilgrim's progress roughly traces Jesus' statement of &lt;&lt;Bbl Jn 4:13 &gt;&gt;-14 .  &quot;Shall thirst again&quot; is shown in the lad's destitution.  &quot;Shall never thirst again&quot; is shown in his resolve to present himself as a servant, who after all do not lack food.  &quot;Shall become in him a fountain&quot; is shown in his restitution to son-hood.
15:12   Assuming the brothers were getting equal shares, he literally divided it.  Perhaps certain OT laws weren't applied at that time.
15:13   Can be likened to the Fall.
!!! &lt;&lt;Bbl Lk 15:28 &gt;&gt;  -- Parable of the Lonely Father
* Read this as following the parables that precede.  It is an illustration of value that provokes seeking.  The journey of the son becomes of less interest in itself, less of a clinical study; it is provided so the art of the story-teller can persuade us that the father would always seek a rediscovery of his son.
* One son in a distant field, the other in a local field.  The father alone in the house.
* ''The younger son's return:''  its presentation story:
## Is he unworthy, in his own sight, to be treated as a son?
## Or, is this more about how he thinks his father looks at things, and he is giving this as a kind of cover?
*He is giving his father an opportunity to save face.  Turns out his father doesn't have any interest in that at all.
* //Fatted// -- the irreplaceable King James.  The older son sees that fatted calf and thinks:  &quot;That calf belongs to me, and it was fatted on my resources.&quot;
* ''Positions of a son:''
## Presumptuous -- consummate my claim now
## Dutiful -- consummate my claim now (masked)
## Needy --  I have no claim
## Filled and content
* 15:16 Disillusioned youth!  They weren't giving him anything.
* 15:17-19  At his own expense, he seeks to repair the breach.  His confession is so forthright, so thoughtless of his own pride.  In rehearsing his words, he strengthens not only his eloquence, but his resolve.
    He  -- hit bottom, --  in the parlance of Al Anon.
* 15:21 Servants are NOT given sandals. The robe and all simply mean he is being not received as a servant, but claimed as a son. His mean-spirited little maneuvering has been totally outflanked. His sense of pamperedness at this moment is beyond anything he had procured for himself in Vegas.  Undoubtedly he is astounded and must regroup before going through his speech.
* 15:24, 30, 32   son of mine. . .son of yours. . .brother of yours. . .
    Vss 24 and 32 allude to the earlier stories about sheep and coins.
15:25-26    He may have guessed.
15:28   The younger son is never entreated.
15:29   His misunderstanding of both heart-service and reward have resulted in a long-time discontentment.
    you never gave me  --   this echoes vs. 16.  The older son didn't ask, he had a slave mentality.  The father was taking from the older son's substance to throw the party, but they were still the father's to give out of a motive of pure grace.
15:31   That's literally true, see vs. 12.</pre>
</div>
<div title="Luke-16-01-note" modifier="SDM" created="201012140413" modified="201206181949" tags="Comment" book_key="160016a">
<pre>16:8   Try &lt;&lt;Bbl Jer 4:22 &gt;&gt;.  I wish this parable made sense to me.
16:19   See Wycliffe Ency., &quot;Bosom of Abraham&quot;

17:3-5  Matthew inserts the query from Peter about how many times forgiveness should be granted.  Vs. 5 follows naturally from the rest!
17:6    Our faith is not like a mustard seed in that it is small; that is a false view.  Great faith does great things, whereas the disciples were reproved for the littleness of their faith.  Rather our faith has a capacity for growth; &lt;&lt;Bbl Mt 13:31 &gt;&gt;-32  completes the teaching.  See also &lt;&lt;Bbl 2Thes 1:3 &gt;&gt;.
&lt;&lt;Bbl Lk 17:11 abbr &gt;&gt;-19    This story is formed like a parable; it graphically pictures the alienation of sin, the ingratitude of most people who receive from God, and the blessedness of a few.
17:21   Compare &lt;&lt;Bbl Dt 30:11 &gt;&gt;-14 ; &lt;&lt;Bbl Rom 10:8 &gt;&gt;.

&lt;&lt;Bbl Lk 18:3 abbr &gt;&gt;    Compare &lt;&lt;Bbl Ps 55:17 &gt;&gt;.
&lt;&lt;Bbl Lk 18:9 abbr &gt;&gt;    Compare &lt;&lt;Bbl Ez 33:13 &gt;&gt;.
&lt;&lt;Bbl Lk 18:11 abbr &gt;&gt;   praying thus to himself   --  as David Ravenhill points out, in more than one sense.  He goes on to rebuke our attempts to continually get glory for ourselves, and says that he even senses it in some as they &quot;give their testimony.&quot;  (We go on about the things we had to give up; Paul dismisses them as dung.)
18:34   A highly emphatic statement  --  the same proposition is stated three times.
18:35-43    The story of Bartimaeus is paralleled in &lt;&lt;Bbl Mk 10:46 &gt;&gt;-52 .  This account indicates that this was a reverent procession.  Perhaps the Teacher was speaking as they walked.

19:7    they all   --  this struck everybody, both high and low, as scandalous.
19:8    Wuest renders the word if  as since .
19:12   I recently heard that to receive a kingdom  means to gain the right of rule over the local territory.  The immediate precedent was Herod the Great, who had done this thing some decades earlier.
19:14   A subplot, which is resolved in vs 27.
19:10   see &lt;&lt;Bbl Mt 18:11 &gt;&gt;; &lt;&lt;Bbl Ez 34:16 &gt;&gt;</pre>
</div>
<div title="Luke-19-39-note" modifier="SDM" created="201011212237" modified="201212211903" tags="Comment" book_key="160019e">
<pre>20:5   See John's statement concerning the Christ, 3:16.  To answer &quot;heaven&quot; would have itself answered the question of vs 2.
20:20   This was a constant tactic, seen in 23:2.
20:25   We try to make this reply our answer to the question of vs 22  --  but it was calculated by the Lord to answer that question with some ambiguity, as the next verse shows.
20:41-44    Is Christ thus abjuring the title?  Or provoking His listeners to thought?

&lt;&lt;Bbl Lk 21:1 abbr &gt;&gt;-4    //Tuppence!// (Is there a connection perhaps in ancient translations?)  It is dependency that God loves.  We usually read this to show Jesus wanted to reinforce the principle of &lt;&lt;Bbl 2Cor 8:12 &gt;&gt;.  We may overlook that He was revealing His knowledge of the heart.
21:14-15    Prepare not to prepare!  And this was Jesus' own tactic.  </pre>
</div>
<div title="Luke-22-01-note" modifier="SDM" created="201011212231" modified="201301141609" tags="Comment" book_key="160022a">
<pre>22:20  To say someone's blood was poured out meant that someone had died by violence (&lt;&lt;Bbl Mt 23:35 &gt;&gt;, Gk. verb).
22:28   Samuel was among those stood by God in His trials, and Moses was.  Have you known rejection for the sake of God?
22:31   see &lt;&lt;Bbl 1Pt 5:10 &gt;&gt;.
&lt;&lt;Bbl Lk 22:32 abbr &gt;&gt;   See &lt;&lt;Bbl 2Cor 1:4 &gt;&gt;.
&lt;&lt;Bbl Lk 22:33 abbr &gt;&gt;   He was not ready; but later, he would do all of that.

22:43   //an angel came...//
** Mysterious.  See [[Christ-DualNature]].
** In fact, vss 43-44 are &quot;not in the earliest manuscripts&quot;.
22:44   //great drops of blood// -- forewarning the Christ of the crown of thorns.
22:46   The answer to Christ's question is in vs 45: from sorrow.  But what does that mean?  Was it a temptation to be avoided through prayer?

23:8    Satan's puppet and prot'g -- , showing Satan's character.  But what greater tests the Lord had already withstood or refused; how petty this Herod.
23:12   The basis of friendship between the sinners was found in sin.
23:22   see &lt;&lt;Bbl 1Sam 20:32 &gt;&gt;
&lt;&lt;Bbl Lk 23:24 abbr &gt;&gt;   see &lt;&lt;Bbl Acts 3:17 &gt;&gt;
&lt;&lt;Bbl Lk 23:27 abbr &gt;&gt;   Were these followers, or mourners who followed all such processions?
{{hilite{
23.42 He said to Jesus, &quot;Lord, remember me when you come into your Kingdom.&quot;
}}}
## God's provision of forgiveness by grace, no recourse to worldly dignity.
## Total disregard of this world's opinions.
## Awareness of the spiritual Kingdom and victory.
## Total disregard for the immediate circumstance.

24:11   At this point, these three women are the sole repository on earth of the good news that Christ is raised from the dead.  We sense God's delight in unveiling the central fact of saving faith, as of a father who has arranged an Easter-egg hunt.
24:12   Peter didn't share the unbelief of the others.  But neither can it rightly be said that he believed.  What, then?  He willingly suspended his disbelief.  That term is not taken from theology but from my high-school English class, where I learned that we practice the willing suspension of disbelief whenever we read a fiction story.
24:25,27,44-45  Following the resurrection, Christ was in a preaching mood.  The Scriptures is His theme.
24:13-32    A rich picture of God's counsel and comfort.
24:30   We could call this &quot;the First Supper.&quot;  It comes after the &quot;Last Supper.&quot;  </pre>
</div>
<div title="Lust" modifier="SDM" created="201105091754" modified="201211281929" book_key="">
<pre>* Gene Getz says the momentary lust of the eyes is not tantamount to adultery; rather the sin of following it, investing in it.  He says Jimmy Carter didn't help when he said &quot;I commit adultery with my eyes every day.&quot;
* @@color:indigo;Natural human desire becomes an evil desire when the desire has the objective of self-interest.@@ // -- Harry Schaumburg, p. 63//
* //sexual addiction//
* Samson
* David with Bathsheba
* [[Coveting]]
* &lt;&lt;Bbl Ex 20:17 &gt;&gt;; &lt;&lt;Bbl Job 31:1 &gt;&gt;
* &lt;&lt;Bbl Mt 5:27 &gt;&gt;-30
* &lt;&lt;Bbl James 4:1 &gt;&gt;-4
* [[Sin]]
* [[Sex]]
* {{anti{[[Purity]]}}}</pre>
</div>
<div title="MacrosContent" creator="colmbritton" modifier="jermolene" created="201102111446" modified="201112161637">
<pre>[[allTags|allTags macro]]
[[closeAll|closeAll macro]]
[[list|list macro]]
[[newJournal|newJournal macro]]
[[newTiddler|newTiddler macro]]
[[permaview|permaview macro]]
[[saveChanges|saveChanges macro]]
[[search|search macro]]
[[slider|slider macro]]
[[tabs|tabs macro]]
[[tag|tag macro]]
[[tagging|tagging macro]]
[[tags|tags macro]]
[[tiddler|tiddler macro]]
[[timeline|timeline macro]]
[[today|today macro]]
[[version|version macro]]
[[view|view macro]]</pre>
</div>
<div title="MainMenu" creator="jermolene" modifier="SDM" created="201004142051" modified="201304251908" tags="menu excludeLists" book_key="" changecount="1">
<pre>{{{ }}}
Bible as [[local wiki|./Bbl/bible_txt.htm]]
Bible as [[local html|./Bbl/index.htm]]
[[Blue Letter Bible|http://www.blueletterbible.org/]]
{{{ }}}
{{outline{
!!! Syntax

{{small{
{{hilite{
{{{ {{hilite{... }}}
}}}
{{fyi{
{{{ {{fyi{... }}}
}}}
{{holyquote{
{{{ {{holyquote{... }}}
}}}
}}}
''Scripture:''
{{small{
{{{ &lt;&lt;Bbl Lk 7:1 &gt;&gt; }}}
{{{ &lt;&lt;Bbl Lk 7:1 abbr &gt;&gt; }}}
}}}
''Note:''
{{small{
{{{&lt;&lt;Bbl Lk 7:1 &quot;&quot; note &gt;&gt;}}}
}}}
''Reference:''
{{small{
{{{ {{{rf} {{{rf big} }}}
}}}
}}}
!!! Other Resources
* [[Dave Gifford|http://www.giffmex.org/nsdb.html]]
* [[Scott Wiki|./scott_wiki.htm]]
* [[Plan Wiki|./planning_wiki.htm]]
* [[Code Wiki|./computer_wiki.htm]]
* [[Meta Wiki|./meta_wiki.htm]]
* [[Shared Wiki|./shared_wiki.htm]]

----
{{tiny{
&lt;&lt;version&gt;&gt; 
Updated
&lt;script&gt;return document.lastModified.toString();&lt;/script&gt;}}}</pre>
</div>
<div title="MainMenu shadows" creator="matt" modifier="matt" created="201102111611" modified="201102151511" tags="shadow">
<pre>This tiddler contains a list of the tiddlers that appear in the MainMenu.  In the default TiddlySpace theme the MainMenu appears in the horizontal bar at the top of the page and in the default TiddlyWiki theme the MainMenu is on the left.</pre>
</div>
<div title="Man" modifier="SDM" created="201004120330" modified="201211190422" book_key="">
<pre>* made in God's image
* made of [[dust|Land]] + [[Spirit]]:   &lt;&lt;Bbl Job 19:25 &gt;&gt;  (Vine's, under &quot;Kinsman (OT)&quot;, has a corrective note; see my own notes).
* &quot;Cease from&quot;:   &lt;&lt;Bbl Is 2:22 &gt;&gt;, &lt;&lt;Bbl Is 31:3 &gt;&gt;, &lt;&lt;Bbl Is 51:12 &gt;&gt;, &lt;&lt;Bbl Jer 17:5 &gt;&gt;, &lt;&lt;Bbl Mk 7:7 &gt;&gt;, &lt;&lt;Bbl 2Chr 32:8 &gt;&gt;, &lt;&lt;Bbl Hos 5:11 &gt;&gt;, &lt;&lt;Bbl Ps 9:20 &gt;&gt;, &lt;&lt;Bbl Ps 136:3 &gt;&gt;-4 , &lt;&lt;Bbl Jn 5:41 &gt;&gt;-44 ; &lt;&lt;Bbl Jn 12:42 &gt;&gt;-43
* mortal:   &lt;&lt;Bbl 1Pt 1:24 &gt;&gt;, &lt;&lt;Bbl Ps 82:6 &gt;&gt;-7
* weak:     &lt;&lt;Bbl Ps 9:20 &gt;&gt;
* glorious:         &lt;&lt;Bbl Ps 82:6 &gt;&gt;-7 , &lt;&lt;Bbl Ps 115:16 &gt;&gt;. [[Value]].
* Animals, men to be treated as &lt;&lt;Bbl 2Sam 23:7 &gt;&gt;; &lt;&lt;Bbl Ps 32:9 &gt;&gt;;  &lt;&lt;Bbl 2Pt 2:12 &gt;&gt;
* @@color:indigo;There are two great days in a person's life -- the day we are born and the day we discover why.@@ // -- William Barclay //
* see study in files, also old subject index notebook.  &lt;&lt;Bbl Ex 20:25 &gt;&gt;-26 ; &lt;&lt;Bbl Pr 20:27 &gt;&gt;</pre>
</div>
<div title="ManuallyInstallIngPlugins" creator="psd" modifier="psd" created="201102111106" modified="201102161204">
<pre>In some situations it can be useful to use the clipboard insead of InstallingPlugins using ImportTiddlers.

# Open a new browser window and navigate to the TiddlyWiki site containing the macro you want
# Double click the tiddler, or click the {{{source}}} button (on other sites it will sometimes be a {{{view}}} or {{{edit}}} button)
# The entire text of the tiddler should be selected; if not select it manually with ~Control-A or ~Command-A
# Copy the entire text of the tiddler to the clipboard
# Open your TiddlyWiki file in a new browser window
# Click {{{new tiddler}}} to create a new blank tiddler
## Paste the contents of the clipboard into it's body
## Set the title as appropriate
## Add the tag {{{systemConfig}}}
# Click {{{done}}} on the tiddler
# SaveChanges
# Reload your TiddlyWiki in the browser
The plugin should now be available for use.</pre>
</div>
<div title="Mark-01-01-note" modifier="SDM" created="201010310459" modified="201212071341" tags="Comment" book_key="120001a">
<pre>Mark was not one of the apostles.  But he was (we infer) a witness to our Lord's last earthly day on earth (&lt;&lt;Bbl Mk 14:51&gt;&gt;-52).
----
&lt;&lt;Bbl Mk 1:3 &gt;&gt;   In the wilderness  appears John, next verse.
1:10    Here is that word so characteristic of Mark, &quot;immediately.&quot;  Note also the recurrent use of the journalistic present.
1:31    Service resulting from gratitude.
1:33    A dramatic image.
1:38    Perhaps it is enough that vss. 36-37 indicate that everyone is seeking God.
1:41    The J.B. Phillips says, &quot;I want to.&quot;
1:44    see Lev 14.  Wuest capitalizes Word.
1:45    What if the man had followed the Lord's instruction?  The possible implication is that Jesus would have had to avoid the towns; and also, that the priests would have had a chance to consider the role as well as the advent of Messiah.  Another implication is that Mark wants to say it was not our Lord's intention to bypass those priests, much less to circumnavigate the Law.
----
2:13    By the KJV, Jesus might be imagined as operating a seaside resort.
2:15    Apparently some from the scribes and Pharisees are following Him; but they are about to depart.
2:21    i.e., a patch of unwashed cloth.
** Alistair Begg points out that it is the Pharisaical mindset and theology that is the //old wineskin// and //shrunk cloth//.  He is explaining that His truth and the standing views are not reconcilable.
** This could be well presented in preaching.  On a Sunday, have some one stitch the cloths together.  This visibly on stage during song worship.  Then at start of sermon, put it in to soak.  At the end, wring out cloth; explain the illustration; hang cloth up to dry.  The related sermon comes a week later -- demonstrate the tearing.  (Test all this out in advance, of course&gt;)
** We even expect our thread to be pre-shrunk; I think the term is //sized.//
2:23    Gleaning on the Sabbath
** The disciples are unmistakably free from sin.  The Pharisees have construed as applicable the law against reaping.  But Dt 23 distinguishes between hand=gathering and //putting in the sickle//, so they are wrong to do this (A. Begg).
** Jesus vindicates them by alluding to David in &lt;&lt;Bbl 1Sam 21:1&gt;&gt;ff.  See &lt;&lt;Bbl 1Sam 21:1 &quot;&quot; note&gt;&gt;.  [[Sabbath|Rest]] is a creation reality, not a Jewish distinctive.  And it is for man's benefit, not his rule-binding.  The punitive consequences of gathering manna in the wilderness were only to get God's people trained to accept the idea of rest.
** Already the disciples perceive a loosing of the Pharisaical interpretations, or perhaps even the revelation described in &lt;&lt;Bbl Jn 1:17 &gt;&gt;.
** Maybe in enjoying the sabbath rest of knowing Jesus, they even forgot it was Saturday morning.
2:28    &lt;&lt;Bbl Mt 12:1 &gt;&gt;-14  teaches on the Sabbath.

&lt;&lt;Bbl Mk 3:6 abbr &gt;&gt;  Now the Pharisees are defiling the Sabbath by plotting murder!
** note the &quot;strange bedfellows&quot; aspect.  We see this again at the end with Pilate and Herod, who become friends.
3:12    Wuest says, charged under penalty .
3:16-17 Why does Mark translate Kephas directly, but transliterate Boanerges?  Melisa suggests that Peter was a common Greek name already (we use Rock or Rocky); certainly the name Peter was famous as the Gospel was written, so this may provide the explanation.
3:25    Is house here a physical building (He was a carpenter) or a household ??
3:31    This is the mission from vs. 21.

4:1 This is the situation anticipated in 3:9.
4:10    During His ministry,  alone  was for Jesus a relative statement.
4:21-23 These verse can almost be applied to the explanations given of parables: 4:10,4:34.
4:32    Quoting &lt;&lt;Bbl Ez 17:23 &gt;&gt;.
&lt;&lt;Bbl Mk 4:33 abbr &gt;&gt;-34  Able might as well be said unable!
4:37    This could be applied as a picture of being overcome by sin.
[[Mark-05-01-note]]</pre>
</div>
<div title="Mark-05-01-note" modifier="SDM" created="201201130317" modified="201201130323" tags="Comment" book_key="">
<pre>&lt;&lt;Bbl Mk 5:4 &gt;&gt;  Sporting attempts to do so had long ago ceased.
5:6-8   For He had been saying   --  hard to guess the sequence.
5:10,17,18  The region  figures in these verses.
5:19-20 The structure equates the Lord  with Jesus .
5:24    Wuests emphasizes that the pressing was &quot;almost to the point of suffocation.&quot;
5:31    God distributes common grace and election grace.  He knows who has true faith.
5:40    Six witnesses.
5:43    Lest she be mistaken for a spirit or too-wondrous-to-feed miracle.

6:1-6   [&lt;&lt;Bbl Mt 13:54 &gt;&gt;-58 ]  The reaction of Gennesaret, vss. 53-56, stands in contrast.  The only difference between these Israelites and those of other areas is their mundane knowledge of Jesus.  When it says they were amazed, we see that it is the amazement not of belief but of unbelief.  As for Jesus, He too is amazed; the only other time He is recorded as such is &lt;&lt;Bbl Lk 7:1 &gt;&gt;-10 , the story of the centurion and his servant.
6:3 Jesus did work as a carpenter.  So the scars recieved at His Passion were not the first He had ever known.
    This supports the possibility that he supported his own family financially, possibly after Joseph's death.
6:13    Wuest says they were massaging many with oil.  Is this the only reference besides &lt;&lt;Bbl James 5:14 &gt;&gt; ??

6:26    The others seated with him wanted John dead; Herodias probably counted on their support.  Darius, Pilate, Zedekiah (&lt;&lt;Bbl Jer 38:5 &gt;&gt;)  --  these are the men who &quot;Like a polluted well or a trampled spring, give way before evil.&quot;
6:34    A teacher is a shepherd, a pastor.  He is motivated by compassion.
6:31    The disciples were in need of rest after the tours.  Higher altitudes afforded cooler temperatures.  Of the many people coming and going,  some may presumably have followed the disciples back from their cities of ministry.
6:37    Perhaps the disciples' reply is sarcastic.  Or could this refer to the money-box tended by Judas Iscariot?
6:41    This miracle seems typical of Elisha.  Like the miracle at Cana, it doesn't seems to fit directly into the death-to-resurrection theme.
6:45-46 The limitations of His earthly ministry, thus the need for His departure and the gift of the Holy Spirit.
6:52    Wuest calls it a &quot;settled state of callousness.&quot;
6:53-56 Unlike Nazareth, vss. 1-6.

[[Mark-07-01-note]]</pre>
</div>
<div title="Mark-07-01-note" modifier="SDM" created="201201130316" modified="201304270445" tags="Comment" book_key="" changecount="1">
<pre>7:1-2  Apparently the observation had been made in Jerusalem; the delay implies that this is a more formal inquiry.
7:9-13  He reproves a dichotomy of spirit and world.  This is the error of ministers who neglect their family; they confuse a command with a calling.  Jesus could have been quoting &lt;&lt;Bbl Pr 28:24 &gt;&gt;.
&lt;&lt;Bbl Mk 7:15 abbr &gt;&gt;    Adam ate, and was not defiled.  The world is not dirty.
7:28    //even the dogs// -- see &lt;&lt;Bbl Mt 15:26 &quot;&quot; note &gt;&gt;-27 .
&lt;&lt;Bbl Mk 8:4 abbr &gt;&gt;     No food ... no infrastructure, even.
8:11-12 Perhaps the sin of the Pharisees here was that they wanted to be the vindicating authority of the Christ, and He would not permit this.
8:17    see 6:52
8:19-20 Historical and material evidence does not persuade the hardened heart.
{{holyquote{
Mark 8:29-31:  He said to them, &quot;But who do you say that I am?&quot; Peter answered, &quot;You are the Christ.&quot;  He commanded them that they should tell no one about him.  He began to teach them that the Son of Man must suffer many things, and be rejected by the elders, the chief priests, and the scribes, and be killed, and after three days rise again.
}}}
&lt;&lt;Bbl Mk 8:29 abbr &gt;&gt;-31 This is the narrative centerpiece of Mark's account.  Vss 27 (preceding) and 32 (following) deal with misconceptions about Jesus.
8:32    Peter perceives the threat to his own security immediately.  No wonder God hasn't let me in on the entire plan for my life.
8:37    This is the origin of the old saw about bargaining with the devil.
8:38    A mirror opposition of setting and act is presented in one verse.

9:4 Wuest calls it a &quot;protracted conversation.&quot;
9:10-13 Note a parallel structure; Jesus interjects a comment about His own Passion that reflects the wonderings of the disciples.
9:10    Undoubtedly they thought of the political resurrection of Israel'what else?  Note the NAS marginal note.
9:13    OT reference ??
9:19    Addressing possibly both the disciples and the multitude.  &lt;&lt;Bbl Num 14:27 &gt;&gt;.
&lt;&lt;Bbl Mk 9:24 abbr &gt;&gt;    His faith consists of believing Jesus can give him faith  --  and certainly He does!
    Note how many virtues can be substituted in for the word faith.
9:32    He percieves their fear perfectly (and is tempted Himself).
9:49-50 &quot;For everyone will taste the extremes of Judgment.  But what if someone fails to take heed?  Be aware of Judgment.&quot;

10:13   Wuest says the reproofs were made &quot;unjustly and without effect.&quot;
10:20   The man understood that the law does not produce life!  Or Jesus chooses not to reprove his self-deception.
10:21   Wuest translates it, &quot;He fell in love with him&quot;; humanity includes emotional love.  Note that this young man recieved the same offer given to all the disciples.
10:30   Eternal life   --  the topic raised by the young ruler.
10:35   A request made without spiritual knowledge or desire (perhaps not without faith).
10:42-43    Perhaps nations would be better than Gentiles  here ??   A study of the verbs here might reveal much.
10:46-52    The story of Bartimaeus is paralleled in &lt;&lt;Bbl Lk 18:35 &gt;&gt;-43 .

&lt;&lt;Bbl Mk 11:7 abbr &gt;&gt;    &lt;&lt;Bbl Zech 9:9 &gt;&gt;.
&lt;&lt;Bbl Mk 11:14 abbr &gt;&gt;   Tony Okeke says the taproot was at that moment severed.
11:25   &lt;&lt;Bbl Mt 5:23 &gt;&gt;-24 .

&lt;&lt;Bbl Mk 12:7 abbr &gt;&gt;    The vineyard is itself the inheritance.  These rebels, in their plan to kill the Son, failed to account for the living Father.
12:9    The last words foreshadow the opening of the Kingdom.
12:25   Like angels in heaven   --  that is, in this detail.  Perhaps a misapplication of this verse has given us the image of God's people treading clouds up above.
12:26   Jesus' argument is explained by W.L. Lane's commentary on Mark, p. 429f.  He states that &lt;&lt;Bbl Ex 3:6 &gt;&gt; does evoke the doctrine of the resurrection, inasmuch as if the promises made to the patriarchs by an eternal Saviour and Protector end at death they are made useless.  Here Jesus answers from the Pentateuch, with the word even  emphasizing Moses' authority.
12:28   There is a spiritual recognition one of the other.  This scribe is not testing him.
12:34   See &lt;&lt;Bbl Mt 22:46 &gt;&gt;.
&lt;&lt;Bbl Mt 12:35 abbr &gt;&gt;-37    Jesus is teaching about the Eternity of the Christ, and of His Dual Nature.  Is there any other place where He could be said almost to be teasing His listeners  --  offering no answer to the questions He presents, except His own Person?  Maybe 10:18.
12:44   See &lt;&lt;Bbl 2Cor 8:12 &gt;&gt;.

&lt;&lt;Bbl Mk 13:9 abbr &gt;&gt;    Wuests says, &quot;But as for you, be constantly taking heed to yourselves.&quot;  Seek first His Kingdom and His righteousness.
13:14   The parenthetical statement obviously should not be in red.

&lt;&lt;Bbl Mk 14:10 abbr &gt;&gt;-11    Steve Brown doesn't believe that Judas thought Jesus would die through his action.
14:11   i.e., for secrecy  --  vs. 1.
14:13   Disciples  does not denote that they were from the Twelve.
14:22   The breaking of the bread holds a symbolism of his broken body.  8:6 also portrays Him breaking bread; indeed, at this Last Supper He fed the multitudes for all ages future and past.
14:24   In terms of vicarious sacrifice, 10:45 is recalled, as well as &lt;&lt;Bbl Is 53:12 &gt;&gt;  (poured ).
    The redness of the wine and Jesus' own words indicate a violent death.  According to Lane, this was the third cup of the liturgy (this indicated, I believe, its place after the meal), signifying redemption.  The next cup to follow would signify consummation  --
14:25    --  and it is this cup which Christ postpones.  The postponement also &quot;was to declare that his decision to submit to the will of God in vicarious suffering was irrevocable.&quot;
    The four cups are based on a four-fold promise of &lt;&lt;Bbl Ex 6:6 &gt;&gt;-7 .  See the LordsSupper.
14:31   They all said it, yet Peter is singled out.
14:35   The hour toward which all eternity and all creation had pointed.
14:36   &lt;&lt;Bbl Rom 8:15 &gt;&gt;; &lt;&lt;Bbl Gal 4:6 &gt;&gt;.  The theme of the cup as a symbol of Judgment begins in the Psalms and proceeds throughout the prophets.  See Cup.
14:38   A condition for the fulfillment of:  Lord, lead me not into temptation.

15:27   The thieves are a deliberate adornment, the Romans' window-decking.
15:29   They mock Him with a prophecy that is at that moment being fulfilled!
&lt;&lt;Bbl Mk 15:32 abbr &gt;&gt;   But even their wildest satire cannot hint at the scope of God's plan.
15:36   The final craving for a sign, and the final denial.
15:39   As a loud testimony?
15:43   Could Judas have attended any of the &quot;trial&quot;?
15:51   They do not recognize true salvation, neither of the others nor of Himself.

&lt;&lt;Bbl Mk 16:20 abbr &gt;&gt;   &lt;&lt;Bbl Rev 14:6 &gt;&gt;.  </pre>
</div>
<div title="MarkupPreHead" creator="psd" modifier="psd" created="201102111102" modified="201102151018" tags="excludeLists">
<pre>&lt;!--{{{--&gt;
&lt;link rel=&quot;shortcut icon&quot; href=&quot;/recipes/tiddlywiki-com_public/tiddlers/favicon.ico&quot; /&gt;
&lt;link href=&quot;/index.xml&quot; rel=&quot;alternate&quot;
	type=&quot;application/rss+xml&quot; title=&quot;tiddlywiki.com's RSS feed&quot; /&gt;
&lt;!--}}}--&gt;</pre>
</div>
<div title="Marriage" modifier="SDM" created="201004120330" modified="201212011631" book_key="">
<pre>* &lt;&lt;Bbl Pr 5:18 &gt;&gt;, &lt;&lt;Bbl Pr 31:10 &gt;&gt;; &lt;&lt;Bbl 1Cor 7:2 &gt;&gt;; &lt;&lt;Bbl Eph 5:22 &gt;&gt;-33 ; &lt;&lt;Bbl 1Tim 4:3 &gt;&gt;-5 ; &lt;&lt;Bbl 1Thes 4:4 &gt;&gt;
* &lt;&lt;Bbl 1Pt 3:1 &gt;&gt;-7
* [[Covenant]]
* [[Gender]]
!!! Comfort
* Isaac was [[Comfort]]ed.
* &lt;&lt;Bbl Gn 2:24 &gt;&gt;  //not good for man to be alone//
* &lt;&lt;Bbl Eccl 4:11 &gt;&gt; //if two lie down together, they will keep warm//
!!! Wedding
* Remarkable essay discovered on the Net ~2007 about the [[Wedding]]
* David Davidson gave the minimal definition of a marriage:  public statement and consummation.\
* Fraser points out the J.P. license and &lt;&lt;Bbl 1Pt 2:13 &gt;&gt;.
!!! [[Authority]] of [[Husband]]
* &lt;&lt;Bbl Gn 3:15 &gt;&gt; is about emotion rather than hierarchy; and it can be taken as //descriptive, not directive//.  Claudia Doncov pointed out how the man can be simultaneously the threat-giver and the protector -- for example, driving recklessly to impress his girlfriend.
* Melisa points out how Lewis mistreats this topic in __Mere Christianity__.  Lewis seems possibly to have wanted to hide the fact of Bible guidance, taking refuge in effete personal reasoning.
!!! Guarding
* [[ImmoralityAvoid]]
* [[Immorality]]
* [[Divorce]]
* [[Celibacy]]</pre>
</div>
<div title="MartinsPluginsServer" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="systemServer">
<pre>|''URL:''|http://www.martinswiki.com/ |
|''Description:''|Martin Buddens's Plugins |
|''Author:''|MartinBudden |</pre>
</div>
<div title="MatchTagsPlugin" modifier="SDM" created="200802290709" tags="systemConfig excludeLists">
<pre>/***
|Name|MatchTagsPlugin|
|Source|http://www.TiddlyTools.com/#MatchTagsPlugin|
|Documentation|http://www.TiddlyTools.com/#MatchTagsPluginInfo|
|Version|2.0.0|
|Author|Eric Shulman - ELS Design Studios|
|License|http://www.TiddlyTools.com/#LegalStatements &lt;br&gt;and [[Creative Commons Attribution-ShareAlike 2.5 License|http://creativecommons.org/licenses/by-sa/2.5/]]|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides||
|Description|'tag matching' with full boolean expressions (AND, OR, NOT, and nested parentheses)|
!!!!!Documentation
&gt; see [[MatchTagsPluginInfo]]
!!!!!Revisions
&lt;&lt;&lt;
2008.09.04 [2.0.0] added &quot;report&quot; and &quot;panel&quot; options to generate formatted results and store in a tiddler.  Also, added config.macros.matchTags.formatList(place,fmt,sep) API to return formatted output for use with other plugins/scripts
| please see [[MatchTagsPluginInfo]] for additional revision details |
2008.02.28 [1.0.0] initial release
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.MatchTagsPlugin= {major: 2, minor: 0, revision: 0, date: new Date(2008,9,4)};

// store.getMatchingTiddlers() processes boolean expressions for tag matching
//    sortfield (optional) sets sort order for tiddlers - default=title
//    tiddlers (optional) use alternative set of tiddlers (instead of current store)
TiddlyWiki.prototype.getMatchingTiddlers = function(tagexpr,sortfield,tiddlers) {

    var debug=config.options.chkDebug; // abbreviation
    var cmm=config.macros.matchTags; // abbreviation
    var r=[]; // results are an array of tiddlers
    var tids=tiddlers||store.getTiddlers(sortfield||&quot;title&quot;);
    if (tiddlers &amp;&amp; sortfield) store.sortTiddlers(tids,sortfield);
    if (debug) displayMessage(cmm.msg1.format([tids.length]));

    // try simple lookup to quickly find single tags or tags that
    // contain boolean operators as literals, e.g. &quot;foo and bar&quot;
    for (var t=0; t&lt;tids.length; t++)
        if (tids[t].isTagged(tagexpr)) r.pushUnique(tids[t]);
    if (r.length) {
        if (debug) displayMessage(cmm.msg4.format([r.length,tagexpr]));
        return r;
    }

    // convert expression into javascript code with regexp tests,
    // so that &quot;tag1 AND ( tag2 OR NOT tag3 )&quot; becomes
    // &quot;/\~tag1\~/.test(...) &amp;&amp; ( /\~tag2\~/.test(...) || ! /\~tag3\~/.test(...) )&quot;

    // normalize whitespace, tokenize operators, delimit with &quot;~&quot;
    var c=tagexpr.trim(); // remove leading/trailing spaces
    c = c.replace(/\s+/ig,&quot; &quot;); // reduce multiple spaces to single spaces
    c = c.replace(/\(\s?/ig,&quot;~(~&quot;); // open parens
    c = c.replace(/\s?\)/ig,&quot;~)~&quot;); // close parens
    c = c.replace(/(\s|~)?&amp;&amp;(\s|~)?/ig,&quot;~&amp;&amp;~&quot;); // &amp;&amp;
    c = c.replace(/(\s|~)AND(\s|~)/ig,&quot;~&amp;&amp;~&quot;); // AND
    c = c.replace(/(\s|~)?\|\|(\s|~)?/ig,&quot;~||~&quot;); // ||
    c = c.replace(/(\s|~)OR(\s|~)/ig,&quot;~||~&quot;); // OR
    c = c.replace(/(\s|~)?!(\s|~)?/ig,&quot;~!~&quot;); // !
    c = c.replace(/(^|~|\s)NOT(\s|~)/ig,&quot;~!~&quot;); // NOT
    c = c.replace(/(^|~|\s)NOT~\(/ig,&quot;~!~(&quot;); // NOT(
    // change tag terms to regexp tests
    var terms=c.split(&quot;~&quot;); for (var i=0; i&lt;terms.length; i++) { var t=terms[i];
        if (/(&amp;&amp;)|(\|\|)|[!\(\)]/.test(t) || t==&quot;&quot;) continue; // skip operators/parens/spaces
        if (t==config.macros.matchTags.untaggedKeyword)
            terms[i]=&quot;tiddlertags=='~~'&quot;; // 'untagged' tiddlers
        else
            terms[i]=&quot;/\\~&quot;+t+&quot;\\~/.test(tiddlertags)&quot;;
    }
    c=terms.join(&quot; &quot;);
    if (debug) { displayMessage(cmm.msg2.format([tagexpr])); displayMessage(cmm.msg3.format([c])); }

    // scan tiddlers for matches
    for (var t=0; t&lt;tids.length; t++) {
        // assemble tags from tiddler into string &quot;~tag1~tag2~tag3~&quot;
        var tiddlertags = &quot;~&quot;+tids[t].tags.join(&quot;~&quot;)+&quot;~&quot;;
        try { if(eval(c)) r.push(tids[t]); } // test tags
        catch(e) { // error in test
            displayMessage(cmm.msg2.format([tagexpr]));
            displayMessage(cmm.msg3.format([c]));
            displayMessage(e.toString());
            break; // skip remaining tiddlers
        }
    }
    if (debug) displayMessage(cmm.msg4.format([r.length,tagexpr]));
    return r;
}
//}}}
//{{{
config.macros.matchTags = {
    msg1: &quot;scanning %0 input tiddlers&quot;,
    msg2: &quot;looking for '%0'&quot;,
    msg3: &quot;using expression: '%0'&quot;,
    msg4: &quot;found %0 tiddlers matching '%1'&quot;,
    noMatch: &quot;no matching tiddlers&quot;,
    untaggedKeyword: &quot;-&quot;,



    untaggedLabel: &quot;no tags&quot;,
    untaggedPrompt: &quot;show tiddlers with no tags&quot;,
    defTiddler: &quot;MatchingTiddlers&quot;,
    defFormat: &quot;%0&quot;,
    defSeparator: &quot;\n&quot;,
    reportHeading: &quot;Found %0 tiddlers tagged with: '{{{%1}}}'\n----\n&quot;,
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var mode=params[0]?params[0].toLowerCase():'';
        if (mode==&quot;inline&quot;)
            params.shift();
        if (mode==&quot;report&quot; || mode==&quot;panel&quot;) {
            params.shift();
            var target=params.shift()||this.defTiddler;
        }
        if (mode==&quot;popup&quot;) {
            params.shift();
            if (params[0]&amp;&amp;params[0].substr(0,6)==&quot;label:&quot;) var label=params.shift().substr(6);
            if (params[0]&amp;&amp;params[0].substr(0,7)==&quot;prompt:&quot;) var prompt=params.shift().substr(7);
        } else {
            var fmt=(params.shift()||this.defFormat).unescapeLineBreaks();
            var sep=(params.shift()||this.defSeparator).unescapeLineBreaks();
        }
        var sortBy=&quot;+title&quot;;
        if (params[0]&amp;&amp;params[0].substr(0,5)==&quot;sort:&quot;) sortBy=params.shift().substr(5);
        var expr = params.join(&quot; &quot;);
        if (mode!=&quot;panel&quot; &amp;&amp; (!expr||!expr.trim().length)) return;
        if (expr==this.untaggedKeyword)
            { var label=this.untaggedLabel; var prompt=this.untaggedPrompt };
        switch (mode) {
            case &quot;popup&quot;: this.createPopup(place,label,expr,prompt,sortBy); break;
            case &quot;panel&quot;: this.createPanel(place,expr,fmt,sep,sortBy,target); break;
            case &quot;report&quot;: this.createReport(target,expr,fmt,sep,sortBy); break;
            case &quot;inline&quot;: default: this.createInline(place,expr,fmt,sep,sortBy); break;
        }
    },
    formatList: function(tids,fmt,sep) {
        var out=[];
        for (var t=0; t&lt;tids.length; t++) {
            var title=&quot;[[&quot;+tids[t].title+&quot;]]&quot;;
            var who=tids[t].modifier;
            var when=tids[t].modified.toLocaleString();
            var text=tids[t].text;
            var first=tids[t].text.split(&quot;\n&quot;)[0];
            var desc=store.getTiddlerSlice(tids[t].title,&quot;description&quot;);
            desc=desc||store.getTiddlerSlice(tids[t].title,&quot;Description&quot;);
            desc=desc||store.getTiddlerText(tids[t].title+&quot;##description&quot;);
            desc=desc||store.getTiddlerText(tids[t].title+&quot;##Description&quot;);
            out.push(fmt.format([title,who,when,text,first,desc]));
        }
        return out.join(sep);
    },
    createInline: function(place,expr,fmt,sep,sortBy) {
        wikify(this.formatList(store.sortTiddlers(store.getMatchingTiddlers(expr),sortBy),fmt,sep),place);
    },
    createPopup: function(place,label,expr,prompt,sortBy) {
        var btn=createTiddlyButton(place,
            (label||expr).format([expr]),
            (prompt||config.views.wikified.tag.tooltip).format([expr]),
            function(ev){ return config.macros.matchTags.showPopup(this,ev||window.event); });
        btn.setAttribute(&quot;sortBy&quot;,sortBy);
        btn.setAttribute(&quot;expr&quot;,expr);
    },
    showPopup: function(here,ev) {
        var p=Popup.create(here); if (!p) return false;
        var tids=store.getMatchingTiddlers(here.getAttribute(&quot;expr&quot;));
        store.sortTiddlers(tids,here.getAttribute(&quot;sortBy&quot;));
        var list=[]; for (var t=0; t&lt;tids.length; t++) list.push(tids[t].title);
        if (!list.length) createTiddlyText(p,this.noMatch);
        else {
            var b=createTiddlyButton(createTiddlyElement(p,&quot;li&quot;),
                config.views.wikified.tag.openAllText,
                config.views.wikified.tag.openAllTooltip,
                function() {
                    var list=this.getAttribute(&quot;list&quot;).readBracketedList();
                    story.displayTiddlers(null,tids);
                });
            b.setAttribute(&quot;list&quot;,&quot;[[&quot;+list.join(&quot;]] [[&quot;)+&quot;]]&quot;);
            createTiddlyElement(p,&quot;hr&quot;);
        }
        var out=this.formatList(tids,&quot; &amp;nbsp;%0&amp;nbsp; &quot;,&quot;\n&quot;); wikify(out,p);
        Popup.show(p,false);
        ev.cancelBubble=true;
        if(ev.stopPropagation) ev.stopPropagation();
        return false;
    },
    createReport: function(target,expr,fmt,sep,sortBy) {
        var tids=store.sortTiddlers(store.getMatchingTiddlers(expr),sortBy);
        if (!tids.length) { displayMessage('no matches for: '+expr); return false; }
        var msg=config.messages.overwriteWarning.format([target]);
        if (store.tiddlerExists(target) &amp;&amp; !confirm(msg)) return false;
        var out=this.reportHeading.format([tids.length,expr])
        out+=this.formatList(tids,fmt,sep);
        store.saveTiddler(target,target,out,config.options.txtUserName,new Date(),[],{});
        story.closeTiddler(target); story.displayTiddler(null,target);
    },
    createPanel: function(place,expr,fmt,sep,sortBy,tid) {
        var html=&quot;&lt;form style='display:inline'&gt;&lt;!-- \
            --&gt;&lt;input type='text'    name='expr' style='width:55%' title='tag expression'&gt;&lt;!-- \
            --&gt;&lt;input type='text'    name='fmt'  style='width:10%' title='list item format'&gt;&lt;!-- \
            --&gt;&lt;input type='text'    name='sep'  style='width:5%'  title='list item separator'&gt;&lt;!-- \
            --&gt;&lt;input type='text'    name='tid'  style='width:20%' title='target tiddler title'&gt;&lt;!-- \
            --&gt;&lt;input type='button'  name='go'   style='width:8%'  value='go' onclick=\&quot; \
                var expr=this.form.expr.value; \
                if (!expr.length) { alert('Enter a boolean tag expression'); return false; } \
                var fmt=this.form.fmt.value; \
                if (!fmt.length) { alert('Enter the list item output format'); return false; } \
                var sep=this.form.sep.value.unescapeLineBreaks(); \
                var tid=this.form.tid.value; \
                if (!tid.length) { alert('Enter a target tiddler title'); return false; } \
                config.macros.matchTags.createReport(tid,expr,fmt,sep,'title'); \
                return false;\&quot;&gt; \
            &lt;/form&gt;&quot;;
        var s=createTiddlyElement(place,&quot;span&quot;); s.innerHTML=html;
        var f=s.getElementsByTagName(&quot;form&quot;)[0];
        f.expr.value=expr; f.fmt.value=fmt; f.sep.value=sep.escapeLineBreaks(); f.tid.value=tid;
    }
};
//}}}
//{{{
// SHADOW TIDDLER for displaying default panel input form
config.shadowTiddlers.MatchTags=&quot;{{smallform{&lt;&lt;matchTags panel&gt;&gt;}}}&quot;;
//}}}
//{{{
// TWEAK core filterTiddlers() for enhanced boolean matching in [tag[...]] syntax:
// use getMatchingTiddlers instead getTaggedTiddlers
var fn=TiddlyWiki.prototype.filterTiddlers;
fn=fn.toString().replace(/getTaggedTiddlers/g,&quot;getMatchingTiddlers&quot;);
eval(&quot;TiddlyWiki.prototype.filterTiddlers=&quot;+fn);
//}}}
//{{{
// REDEFINE core handler for enhanced boolean matching in tag:&quot;...&quot; paramifier
// use filterTiddlers() instead of getTaggedTiddlers() to get list of tiddlers.
config.paramifiers.tag = {
    onstart: function(v) {
        var tagged = store.filterTiddlers(&quot;[tag[&quot;+v+&quot;]]&quot;);
        story.displayTiddlers(null,tagged,null,false,null);
    }
};
//}}}</pre>
</div>
<div title="MatchTagsPluginInfo" modifier="SDM" created="200802290757" modified="201303022113" tags="howto excludeLists" book_key="">
<pre>/***
|Name|MatchTagsPluginInfo|
|Source|http://www.TiddlyTools.com/#MatchTagsPlugin|
|Documentation|http://www.TiddlyTools.com/#MatchTagsPluginInfo|
|Version|2.0.6|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|documentation|
|Description|documentation for MatchTagsPlugin|
!!!!!Usage
&lt;&lt;&lt;
This plugin extends the {{{[tag[tagname]]}}} macro parameter syntax used by the TiddlyWiki core {{{&lt;&lt;list&gt;&gt;}}} macro so that, instead of a simple tagname value, you can specify a complex combination of tagname values using a //boolean expression// containing AND, OR, and NOT operators, enclosed in nested parentheses if needed.
{{{
&lt;&lt;list filter &quot;[tag[expression]]&quot;&gt;&gt;
}}}
In addition, the plugin defines a new macro, {{{&lt;&lt;matchTags ...&gt;&gt;}}} that can be used instead of the core {{{&lt;&lt;list&gt;&gt;}}} macro to output a list of matching tiddlers //using a custom 'item format' and 'separator'//.  You can also use this macro to create a command link that displays the matching tiddlers within a popup list, similar to the standard {{{&lt;&lt;tag tagName&gt;&gt;}}} macro, but matching a combination of tag values rather than a single tag value.
{{{
&lt;&lt;matchTags inline &quot;format&quot; &quot;separator&quot; sort:fieldname tag expression&gt;&gt;
&lt;&lt;matchTags popup &quot;label:...&quot; &quot;prompt:...&quot; sort:fieldname tag expression&gt;&gt;
&lt;&lt;matchTags report TiddlerName &quot;format&quot; &quot;separator&quot; sort:fieldname tag expression&gt;&gt;
&lt;&lt;matchTags panel  Tiddlername &quot;format&quot; &quot;separator&quot; sort:fieldname tag expression&gt;&gt;
}}}
where:
* ''inline'', ''report'', ''panel'', and ''popup''&lt;br&gt;are keywords that indicate the type of output that the macro should produce:
** ''inline'' //(default)// - displays a list of matching tiddlers embedded directly in tiddler content
** ''popup'' - embeds a command button that, when clicked, lists matching tiddlers in a ~TiddlyWiki popup display
** ''report'' - generates a list of matching tiddler in a separate [[MatchingTiddlers]] report tiddler
** ''panel'' - displays an interactive form for generating a [[MatchingTiddlers]] report
* ''format''&lt;br&gt;defines the wiki-syntax for rendering list items.  The following //substitution markers// can be used to insert tiddler-specific information for each matched tiddler:
** {{{%0}}} - title
** {{{%1}}} - modifier (author)
** {{{%2}}} - modified (date of last change)
** {{{%3}}} - text (all tiddler content)
** {{{%4}}} - firstline (tiddler content up to the first newline)
** {{{%5}}} - description (tiddler slice or section content named &quot;description&quot; or &quot;Description&quot;)
** {{{%6}}} - tags (space-separated, bracketed list)
* ''separator''&lt;br&gt;defines the wiki-syntax to use //between// each matching title (e.g., &quot;, &quot; creates a comma-separated list, while &quot;\n&quot; displays one tiddler per line).
* ''sort:fieldname'' (optional)&lt;br&gt;specifies the sort order for the resulting list of tiddlers.  You can specify any tiddler field name (standard or custom-defined).  Standard tiddler fieldnames include: //title, created, modified, modifier//.  If not specified, tiddlers are sorted by title.  You can prefix the fieldname with &quot;+&quot; or &quot;-&quot; to indicate ascending or descending order, respectively.
* ''tag expression''&lt;br&gt;the remaining parameter(s) are joined together to define the boolean expression to be matched.
When using the ''popup'' option, there are two additional (and optional) parameters you can specify:
* ''&quot;label:...&quot;''(optional)&lt;br&gt; indicates the text for the popup command link.  The default is to display the specified tag expression itself.
* ''&quot;prompt:...&quot;'' (optional)&lt;br&gt;indicates the mouseover 'tooltip' for the popup command link.
* note: you can apply custom CSS styles (e.g., font size) to the popup by adding a rule for &quot;.matchTags .popup&quot; to your [[StyleSheet]].
When using the ''report'' or ''panel'' option, an additional parameter may be provided:
* ''~TiddlerName''&lt;br&gt;specifies the target tiddler into which the output will be generated (default: [[MatchingTiddlers]])
Notes:
*A tag expression can use any combination of text operators: ''AND'', ''OR'', ''NOT'' (or their equivalent javascript operators: ''&amp;&amp;'', ''||'', ''!''), contained in nested parentheses as needed.
*Operators should be delimited by spaces or parentheses.
*Before matching, leading/trailing spaces are automatically trimmed and multiple spaces are reduced to single spaces.
*Tag values containing embedded spaces do //not// have to be enclosed in {{{[[...]]}}}.
*Tag values that contain boolean operators as ''literal text'' (e.g., {{{&quot;foo and bar&quot;}}} or {{{&quot;foo &amp;&amp; bar&quot;}}} cannot be used within a compound boolean expression, but //can// be matched if specified by themselves, without any other tag values or operators.
*To match tiddlers that are untagged, use &quot;-&quot; as a special tag value within the expression.
*You can match &quot;wildcard&quot; tags  by using //regular expression// (i.e., &quot;text pattern&quot;) syntax within a tag value, e.g. {{{[Tt]agvalue.*}}}
&lt;&lt;&lt;
!!!!!Examples:
&lt;&lt;&lt;
display a popup list:
{{{
&lt;&lt;matchTags popup sample OR (settings AND systemConfig)&gt;&gt;
}}}
&gt;&lt;&lt;matchTags popup sample OR (settings AND systemConfig)&gt;&gt;
display a popup list with custom label:
{{{
&lt;&lt;matchTags popup &quot;label:samples and settings&quot; sample OR (settings AND systemConfig)&gt;&gt;
}}}
&gt;&lt;&lt;matchTags popup &quot;label:samples and settings&quot; sample OR (settings AND systemConfig)&gt;&gt;
display a popup list of untagged tiddlers:
{{{
&lt;&lt;matchTags popup -&gt;&gt;
}}}
&gt;&lt;&lt;matchTags popup -&gt;&gt;
generate a report using interactive form control panel
{{{
&lt;&lt;matchTags panel &quot;MatchingTiddlers&quot; &quot;[[%0]]&quot; &quot;\n&quot; sample OR (settings AND systemConfig)&gt;&gt;
}}}
&gt;{{smallform{&lt;&lt;matchTags panel &quot;MatchingTiddlers&quot; &quot;[[%0]]&quot; &quot;\n&quot; sample OR (settings AND systemConfig)&gt;&gt;}}}
comma-separated list:
{{{
&lt;&lt;matchTags &quot;[[%0]]&quot; &quot;, &quot; sample OR (settings AND systemConfig)&gt;&gt;
}}}
&gt;&lt;&lt;matchTags &quot;[[%0]]&quot; &quot;, &quot; sample OR (settings AND systemConfig)&gt;&gt;
numbered list (sorted by modification date, most recent first):
{{{
&lt;&lt;matchTags &quot;#[[%0]] (%2)&lt;br&gt;^^%5^^&quot; &quot;\n&quot; sort:-modified sample OR (settings AND systemConfig)&gt;&gt;
}}}
&gt;&lt;&lt;matchTags &quot;#[[%0]] (%2)&lt;br&gt;^^%5^^&quot; &quot;\n&quot; sort:-modified sample OR (settings AND systemConfig)&gt;&gt;
bullet-item list (using the TiddlyWiki core {{{&lt;&lt;list filter ...&gt;&gt;}}} macro):
//(Note: when using the core {{{&lt;&lt;list&gt;&gt;}}} macro, you should always enclose the entire tag filter parameter within quotes)//
{{{
&lt;&lt;list filter &quot;[tag[sample OR (settings AND systemConfig)]]&quot;&gt;&gt;
}}}
&gt;&lt;&lt;list filter &quot;[tag[sample OR (settings AND systemConfig)]]&quot;&gt;&gt;
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2011.10.28 2.0.6 added .matchTags CSS class to popups to enable custom styling via StyleSheet
2011.01.22 2.0.5 fix core tweak for TW262+: adjust code in config.filters['tag'] instead of filterTiddlers()
2010.08.11 2.0.4 in getMatchingTiddlers(), fixed sorting for descending order (e.g, &quot;-created&quot;)
2010.03.02 2.0.3 added %6 format (tags)
2010.03.01 2.0.2 in formatList(), don't automatically put '[[' and ']]' around title (%0) in formatted output
2009.08.29 2.0.1 added support for {{{config.macros.matchTags.defTags}}} to auto-tag [[MatchingTiddlers]] output
2008.09.04 2.0.0 added &quot;report&quot; and &quot;panel&quot; options to generate formatted results and store in a tiddler.  Also, added config.macros.matchTags.formatList(place,fmt,sep) API to return formatted output for use with other plugins/scripts
2008.09.01 1.9.2 fixed return value from popup button handler so IE doesn't attempt to leave the page
2008.08.31 1.9.1 improved expression conversion handling to permit use of regular expressions for &quot;wildcard&quot; matching within tag values
2008.06.12 1.9.0 added support for formatted output of: title, who, when, text, firstline, description (slice or section)
2008.06.05 1.8.0 in getMatchingTiddlers(), added optional sortfield and tiddlers params to support use of alternative set of tiddlers instead of using current store content (provides filtering support for ImportTiddlersPlugin)
2008.06.04 1.7.1 in getMatchingTiddlers(), reworked conversion of expression for more robust parsing of whitespace, parentheses and javascript operators and allow use of &quot;-&quot; (untagged) //within// expressions
2008.05.19 1.7.0 in getMatchingTiddlers(), use reverseLookup() instead of forEachTiddler() to permit access to tiddlers included via [[IncludePlugin|http://tiddlywiki.abego-software.de/#IncludePlugin]]
2008.05.17 1.6.0 in getMatchingTiddlers(), rewrote expression conversion to handle tags with spaces tag values that are substrings of other tag values.
2008.05.16 1.5.0 added special case using &quot;-&quot; to find UNTAGGED tiddlers
2008.05.15 1.4.0 added &quot;popup&quot; output option
2008.05.14 1.3.4 instead of hijacking getTaggedTiddlers(), added tweak of filterTiddlers() prototype to replace getTaggedTiddlers() with getMatchingTiddler() so that core use of getTaggedTiddlers() does not perform boolean processing of tiddler titles such as [[To Be or not To Be]].  Also, improved &quot;filter error&quot; messages in getMatchingTiddlers() to report tag expression in addition to actual eval error.
2008.04.25 1.3.3 in getTaggedTiddlers(), fixed handling for &quot;not&quot; embedded within a tag
2008.04.21 1.3.2 in getTaggedTiddlers(), fixed handling for initial &quot;NOT&quot; and &quot;NOT(expr)&quot; syntax
2008.04.20 1.3.1 in getTaggedTiddlers(), corrected check for boolean expression to avoid excess processing of tags containing spaces.  Also, improved handling for non-existing tags that contain text of existing tags
2008.04.19 1.3.0 in filterTiddlers(), use getTaggedTiddlers() instead of matchTags(), and then hijack getTaggedTiddlers() to add matchTags() handling
2008.04.19 [*.*.*] plugin size reduction: moved documentation to [[MatchTagsPluginInfo]]
2008.03.25 1.2.0 added optional &quot;sort:fieldname&quot; parameter
2008.03.20 1.1.2 in handler(), replace 'encodeTiddlyLink' with explicit [[...]] brackets to ensure that one-word tiddler titles are properly rendered as TiddlyLinks
2008.02.29 1.1.1 in matchTags(), added handling to skip remaining tiddlers if expression has an error
2008.02.29 1.1.0 refactored to define store.matchTags() and extend store.filterTiddlers()
2008.02.28 1.0.0 initial release
&lt;&lt;&lt;</pre>
</div>
<div title="MatchTagsTest" modifier="SDM" created="201012230553" modified="201211212005" tags="macro howto excludeLists" book_key="">
<pre>{{{&lt;&lt;matchTags panel 'TestMatchTags2' 'label:buzza' 'attitude' &gt;&gt;}}}

&lt;&lt;matchTags panel  TestMatchTags2 '%0' '\n'  'attitude'&gt;&gt;


sort:fieldname</pre>
</div>
<div title="Mathematics" creator="jermolene" modifier="jermolene" created="201111141221" modified="201111141228" tags="niche">
<pre>There are several ways to incorporate mathematical formulae into TiddlyWiki, both of which let you to type ordinary LaTeX into a tiddler:
1. Use the [[jsMath|http://www.math.union.edu/~dpvc/jsMath/]] library via Bob McElrath's [[TiddlyJsMath|http://bob.mcelrath.org/tiddlyjsmath.html]] plugin
2. Use the [[MathJax|http://www.mathjax.org/]] library via [[PluginMathJax|http://math-template.tiddlyspace.com/#%5B%5BPluginMathJax%20v1.3%5D%5D]]

An alternative is to use a service like [[CodeCogs|http://www.codecogs.com/latex/eqneditor.php]] that enables you to generate images of equations from LaTeX source that can be manually inserted into TiddlyWiki. Some examples of this technique are http://twmath.tiddlyspot.com/ and http://twequation.tiddlyspot.com/
</pre>
</div>
<div title="Matthew-01-01-note" modifier="SDM" created="201009300224" modified="201301141605" tags="Comment" book_key="140001a">
<pre>I am told that with the Sadducees, Jesus only quoted from the Pentateuch.
----
1:16    The virgin birth requires a change of wording.
----
2:1-2   see &lt;&lt;Bbl Is 60:3 &gt;&gt;.  It is not that the wise men understand scripture better than the scribes and priests; it's that the latter don't care!  This apparently comes as a surprise to the wise men.
2:11    Few seem to notice that they fell down.  Note, this was not a ceremonial act.  Note also, no gift is recorded as given to Mary.
    It may be good to consider two gifts:  incense/spice and gold (Adam S. thinks it is; Frankincense &lt;&lt;Bbl Lv 2:1&gt;&gt;-2, Myrhh &lt;&lt;Bbl Ex 30:22&gt;&gt;).  Priest and King respectively.
2:16    Herod fulfills the vision of the dragon's attempt to murder the seed in Isaiah and revelation.  Barclay estimates 20-30 children.
2:18    see &lt;&lt;Bbl Gn 35:19 &gt;&gt;.  This does not seem to be a specific prophecy of Jeremiah ??
2:20    see &lt;&lt;Bbl Ex 4:19 &gt;&gt;
&lt;&lt;Bbl Mt 2:23 abbr &gt;&gt;    This makes five dreams!
    Nazareth is not mentioned in the canonical prophecies.
----
3:3 see &lt;&lt;Bbl Ps 68:4 &gt;&gt;
&lt;&lt;Bbl Mt 3:4 abbr &gt;&gt; see &lt;&lt;Bbl 2Kings 1:8 &gt;&gt;, Elijah the Tishbite's garment.  John is the last of the O.T. prophets, and his ministry of baptism should be regarded in the tradition of prophetic signs.
3:14    John wishes to be baptized according to vs. 11.
3:11    See &lt;&lt; Luke 3:16 &quot;&quot; note &gt;&gt;.  (Matthew leaves out the fire.)
3:15    Geerhardus Vos says Jesus is being baptized as the new Israel presented to God.
3:16    see &lt;&lt;Bbl Jn 1:32 &gt;&gt;-34.

&lt;&lt;Bbl Mt 4:1 abbr &gt;&gt;-11  see &lt;&lt;Bbl Php 2:7 &gt;&gt;
&lt;&lt;Bbl Mt 4:4 abbr &gt;&gt; see &lt;&lt;Bbl Dt 8:3 &gt;&gt;, &lt;&lt;Bbl Job 23:12 &gt;&gt;, &lt;&lt;Bbl Lk 4:4 &gt;&gt;
&lt;&lt;Bbl Mt 4:7 abbr &gt;&gt; Wuest says all-out test
&lt;&lt;Bbl Mt 4:11 abbr &gt;&gt;  //angels ministered to Him// -- See [[Christ-DualNature]].
4:19    This should not evoke an image of fly-fishing but of the sort of thing Peter and his companions did all day long  --  grueling, dangerous, crucially necessary.
    Once it hits the deck, a fish will flop around until it dies.  </pre>
</div>
<div title="Matthew-04-23-note" modifier="SDM" created="201208112132" modified="201208112159" tags="Comment" book_key="140004c">
<pre>{{annotation{
@@color:navy;The Sermon on the Mount is not, as many people fondly imagine nowadays, the fulfillment or essence of the Gospel, but it is the fulfillment of the Law.@@ // -- A.R. Vidler, Quoted in F.F. Bruce, Romans, p. 55//
}}}
&lt;&lt;Bbl Mt 5:3 abbr &gt;&gt;-12  Note the different verb tenses.
5:3 see &lt;&lt;Bbl 1Kings 10:5 &gt;&gt;
Mt    see &lt;&lt;Bbl Is 61:2 &gt;&gt;; &lt;&lt;Bbl Zech 12:10 &gt;&gt; - 13:1.
&lt;&lt;Bbl Mt 5:5 abbr &gt;&gt; see &lt;&lt;Bbl Ps 37:9 &gt;&gt;
&lt;&lt;Bbl Mt 5:6 abbr &gt;&gt; see &lt;&lt;Bbl Ps 63:1 &gt;&gt;-5    -- who understand their utter lack of and need for righteousness.
5:7 see &lt;&lt;Bbl Pr 11:17 &gt;&gt;
&lt;&lt;Bbl Mt 5:8 abbr &gt;&gt; see &lt;&lt;Bbl Ps 24:3 &gt;&gt;, &lt;&lt;Bbl Ps 51:10 &gt;&gt;; &lt;&lt;Bbl Heb 11:27 &gt;&gt;, &lt;&lt;Bbl Heb 12:14 &gt;&gt;.
&lt;&lt;Bbl Mt 5:10 abbr &gt;&gt;-16     Best to read these as related in a paragraph.
5:10    see &lt;&lt;Bbl 1Pt 3:14 &gt;&gt;
&lt;&lt;Bbl Mt 5:11 abbr &gt;&gt;    see &lt;&lt;Bbl 1Pt 2:12 &gt;&gt;.
&lt;&lt;Bbl Mt 5:12 abbr &gt;&gt;    Every believer has a prophetic ministry.
5:13    salt   --  a covenant people.  Could trampled under foot  refer to the tribulations of the Jews?
5:25    a parallelism with the two preceding verses.
5:14-16 We make sure there is a light only where there would otherwise be darkness.
5:16    An old note, probably from Wuest, inserts //and they may glorify your Father.//
    See &lt;&lt;Bbl 1Pt 2:11 &gt;&gt;
&lt;&lt;Bbl Mt 5:19 abbr &gt;&gt; //annul// means to deprive of authority.
5:20    Only understood with the preceding 5:19.
As Christ reviews the more subtle aspects of sin, it is in the context of the Pharisees.  Everyone present can recall just having seen one of these religious authorities call someone a fool, leer at a woman; and chapter six re-emphasizes this targeted denunciation.
5:21    court   --  the local assembly.
5:22    see &lt;&lt;Bbl 1Jn 3:15 &gt;&gt;.   Supreme Court   --  the Sanhedrin.
5:23    see &lt;&lt;Bbl Mk 11:25 &gt;&gt;
&lt;&lt;Bbl Mt 5:23 abbr &gt;&gt;-24     A violation of this is among those temptations that Christ has overcome in His own conduct.
5:28    Interesting to a definition of adultery, the word here for woman does not denote a married woman.  [[Lust]]
5:30    see &lt;&lt;Bbl Ecc 4:6 &gt;&gt;  (pretty interesting, heh?)
The teaching on divorce should not be separated from adultery; I think it's not a heading of its own.
5:32    In the case of her unchastity, it could not be said that he makes her commit adultery.
5:38    &lt;&lt;Bbl Lv 24:17 &gt;&gt;-21 :  lex talionis, which I suppose translates to the &quot;law of the claw.&quot;  The original law was intended to limit retribution, but by now had been reinterpreted to condone retribution.  Jesus, however, declares that we must renounce a sense of personal rights.  Retribution (but not self-defense) is disallowed.
5:43    The provision for hating your enemy is NOT found in the Law!
5:45    see &lt;&lt;Bbl Ps 136:25 &gt;&gt;, &lt;&lt;Bbl Ps 145:9 &gt;&gt;; &lt;&lt;Bbl Lk 6:35 &gt;&gt;
&lt;&lt;Bbl Mt 5:46 abbr &gt;&gt;    This is the term agape.
5:48    Wuest translates perfect  as &quot;complete in character.&quot;  You are to fulfill the purposes for which you were created.  Cf &lt;&lt;Bbl Mt 19:21 &gt;&gt;
{{annotation{
//Their own reward// means the reward taht fits their value system.  They want no other reward, are not conscious of the value of another kind of reward.  They seek what they crave by nature.
}}}
&lt;&lt;Bbl Mt 6:3 abbr &gt;&gt; Perhaps this does not so much imply a negligence of personal remuneration as a trust in God to keep true records without any help. But &quot;love does not seek its own.&quot;
6:9 Mike Reed says that the placement of the model prayer in the center of sermon discourse indicates its importance as central.  At least I think this is what is meant by the term writtin nearby, &quot;semitic inclusion.&quot;
6:20-21  -- where your treasure is, there will your heart be also.    This seems to state the idea that money can be person's god  --  that materialism can be religious in the theological sense.  Cf &lt;&lt;Bbl Col 3:1 &gt;&gt;; &lt;&lt;Bbl Jms 5:2 &gt;&gt;-3 .
&lt;&lt;Bbl Mt 6:22 abbr &gt;&gt;-23     clear, bad   --  the KJV says single and not single.  Cf &lt;&lt;Bbl Ps 86:11 &gt;&gt;; &lt;&lt;Bbl Pr 20:27 &gt;&gt;; &lt;&lt;Bbl Lk 10:41 &gt;&gt;
&lt;&lt;Bbl Mt 6:24 abbr &gt;&gt;    mammon   --  Wuest translates this, a passion for accumulating wealth.
6:25    If you worry about the things of the world, you are serving the world and the flesh.  This is an antidote not only for worry, but also discontent.
6:26    see 12:12
6:33    see &lt;&lt;Bbl Pr 3:1 &gt;&gt;-2
&lt;&lt;Bbl Mt 6:34 abbr &gt;&gt;    &quot;If you can make it through the next twenty-four hours with me, that will be an accomplishment enough.&quot;  </pre>
</div>
<div title="Matthew-07-01-note" modifier="SDM" created="201201011941" modified="201211220503" tags="Comment" book_key="140007a">
<pre>7:1    Judging in the wholesome sense is a prime responsibility of God's child; so this must be read as against judging //falsely.//
7:2 See &lt;&lt;Bbl Lk 6:37 &gt;&gt;-38 .
7:2 If we judge rightly, we also will receive right judgment.
7:5 The //hypocrite// seeks to aid his brother while he is in no better condition -- rather, much worse.  But the warning isn't to make us withhold aid, for who wouldn't want help with a speck in one's eye.  The idea of //felt need// seems important.  We feel it when we have a speck in the eye; but this hypocrite doesn't feel the problem of his own problem.
7:6 Inverted parallelism.
7:9    My friend's puzzle is this:  //I come from an abusive family.  It doesn't seem to me that I got good gifts from my messed-up parents, so how can I expect differently from God?
More +++
 Furthermore, why would Jesus think I should expect differently -- am I not meeting His expectations?  While we're on it, doesn't He know there are such messed up families out there?//
* Rationally, this doesn't seem to stand up.  In literal terms, did you ask for a piece of bread and were you then given a rock?  No.  But the abused sees it that way.  //Well, it wasn't enough.//
* Rationally, I think we can say Jesus didn't deny there are very abusive families.  He says //you, being evil//; and we can imagine a very evil person indeed who is nonetheless capable of giving out some food on request.  Again, the abused seems immune to this reasoning.
* This is an argument from the general.
===

&lt;&lt;Bbl Mt 7:13 abbr &gt;&gt; -- see [[Road]]
7:22    Using the Lord's name in vain?
7:24    see &lt;&lt;Bbl Pr 10:8 &gt;&gt;; &lt;&lt;Bbl 1Cor 3:11 &gt;&gt;
&lt;&lt;Bbl Mt 7:27 abbr &gt;&gt;    Rain: roof.  Wind: walls.  floods: foundation.  Testing in every aspect.</pre>
</div>
<div title="Matthew-07-28-note" modifier="SDM" created="201010310457" modified="201211211715" tags="Comment" book_key="140007g">
<pre>8:11   Why from east and west, and not north and south?  Because only the wasteland and the sea are found elsewhere.
8:13    //done to you// includes the promise of vs. 11.
8:15    How Jesus obtains service without compulsion.  Wuest says she served them a meal.
8:20    see 1Chrn 17:5; &lt;&lt;Bbl 2Sam 15:13 &gt;&gt;-21
&lt;&lt;Bbl Mt 8:21 abbr &gt;&gt;    See &lt;&lt;Bbl Lk 9:59 &quot;&quot; note &gt;&gt;
&lt;&lt;Bbl Mt 8:25 abbr &gt;&gt;    With God aboard, how likely were they to perish?
8:26-27 The weather was calmed, but were the men?  Jesus presumably returned to His sleep.
8:34    I always had assumed that the Gadarenes hated God.  A comparison with &lt;&lt;Bbl Lk 5:8 &gt;&gt; shows this may not be so.  When Christ is reviled, it could be the early sign of God-given fear.
----
9:2-6   Kingdom proclamation ''and'' healing power.
9:6 see vs. 8
9:8 see vs. 6  --  authority from God to heal and to forgive sins, the same authority that is now ours.
9:10    Description of a healthy church.
9:13    How could he have come to call the righteous, since there were none?  But He alone sees the irony, that the true word is self-righteous.
9:16-17 see &lt;&lt;Bbl Job 32:19 &gt;&gt;; &lt;&lt;Bbl 2Cor 5:17 &gt;&gt;.  A wineskin is made of leather, for which something dies.
9:34    see &lt;&lt;Bbl Mt 12:24 &gt;&gt;.
&lt;&lt;Bbl Mt 9:36 abbr &gt;&gt;    The words used to describe the sheep are shepherding terms; harrassed refers to wolves.
----
10:7-10 Supernatural proclamation, power, provision.
10:14-15    What power and responsibility of Judgment.
10:20   See &lt;&lt;Bbl Jn 16:13 &gt;&gt;.
----
[[Matthew-14-01-note]] (NOTE -- not sure why this is here, might want to check John 14:1.)
10:24   see &lt;&lt;Bbl 1Jn 3:2 &gt;&gt;.
&lt;&lt;Bbl Mt 10:25 abbr &gt;&gt;   insert exactly .
10:41   see &lt;&lt;Bbl Ez 14:10 &gt;&gt;.
----
11:11   see &lt;&lt;Bbl Jn 3:29 &gt;&gt;.
&lt;&lt;Bbl Mt 11:17 abbr &gt;&gt;   see &lt;&lt;Bbl Ecc 3:4 &gt;&gt;.
&lt;&lt;Bbl Mt 11:18 abbr &gt;&gt;   Effectiveness without fatal fatigue.  A yoke's purpose is not to be heavy but to be effective.   What shall we do with those who are heavy-laden but not yet weary?
11:24   see &lt;&lt;Bbl Mt 12:38 &gt;&gt;-42 .
----
12:4    see &lt;&lt;Bbl 1Sam 21:6 &gt;&gt;
&lt;&lt;Bbl Mt 12:5 abbr &gt;&gt;-7  F.F. Bruce exposits this powerfully in The Hard Sayings.
[[Matthew-12-09-note]]</pre>
</div>
<div title="Matthew-12-09-note" modifier="SDM" created="201201041735" modified="201208061419" tags="Comment" book_key="140012b">
<pre>12:12  see 6:26
12:24   see 9:32-34
12:29   see &lt;&lt;Bbl 2Sam 22:18 &gt;&gt;; &lt;&lt;Bbl Ps 35:10 &gt;&gt;; &lt;&lt;Bbl Ps 76:5 &gt;&gt;
&lt;&lt;Bbl Mt 12:32 abbr &gt;&gt;   Interesting that here Jesus used the term Son of Man.  Since He is a Man, there will always be the possibility that &quot;they know not what they do.&quot;
12:36   Compare &lt;&lt;Bbl Lv 6:8 &gt;&gt;-9 .
&lt;&lt;Bbl Mt 12:38 abbr &gt;&gt;-45    They ask for incontrovertible evidence; Jesus declares that it is abundantly available, but that they should not look to Him to test Him, but to their own sinful state.  Like an adulterous woman, they compare the true husband to a usurper and say &quot;There is nothing preferable about you.&quot;
12:39-42    see 11:21-24; &lt;&lt;Bbl Ez 16:51 &gt;&gt;-52
12:42   Jesus is greater than Solomon, meaning He is wiser than Solomon.
&lt;&lt;Bbl Mt 12:45 abbr &gt;&gt;   It could be stated that the Jewish people have been a lot worse off since Christ.
12:53   Jesus could have summoned the host not as an act retaliation but simple self-defense.  As a Man, to seek safety would have been lawful and justified, and as God He could have had it.  But the situation was unique, as was His understanding of it.
----
13:3-23 Malcolm Smith and others point out that we should title this, &quot;the Parable of the Soils.&quot;
13:5    They appear briefly to even have an advantage.
13:20   see &lt;&lt;Bbl Job 8:16 &gt;&gt;-17
&lt;&lt;Bbl Mt 13:22 abbr &gt;&gt;   see &lt;&lt;Bbl Jer 4:3 &gt;&gt;
&lt;&lt;Bbl Mt 13:44 abbr &gt;&gt;-46
* You might think of it as the mineral rights.
* How did the man go about his negotiating?  Did he don a smug assurance, wink reassuringly at his friends?  No, he kept his poker face in place; //Bad, bad, says the buyer,// for he was already in the position of giving //all he had.//
* Jesus makes us consider the misfortune of everyone who missed out.  They were looking the wrong features.  [[Invisible-Visible]], [[Wisdom]]
* What if Jesus is the purchaser and the hidden treasure is His church?   (So claimed the eccentric pianist in Victoria.)
* See &lt;&lt;Bbl Ps 119:162 &gt;&gt;.  He has &quot;put all his eggs in one basket,&quot; made a full commitment by selling everything else.
13:52   see  &lt;&lt;Bbl Pr 8:21 &gt;&gt;
&lt;&lt;Bbl Mt 13:53 abbr &gt;&gt;-58    &lt;&lt;Bbl Lk 4:16 &gt;&gt;-30  enlarges the account.
13:55   No, actually  --  He is not the carpenter's son.  It's the old joke where a man asks, &quot;Does your son bite?&quot;
13:56   see vs. 52
13:58   They know Him &quot;after the flesh.&quot;  But even in the face of rejection, the grace of God provides some attesting signs.  They get more than the Pharisees do.  </pre>
</div>
<div title="Matthew-14-14-note" modifier="SDM" created="201010310458" modified="201211201334" tags="Comment" book_key="140014b">
<pre>14:2   Herod seems a bit jumpy.   &quot;Each man easily believes what he most greatly fears or desires&quot;  --  La Fontaine.
14:6    Wuest calls it a rapid, leaping, lewd dance.
14:8    see 27:20
14:9    see &lt;&lt;Bbl Dan.6 &gt;&gt;  Without a doubt the events of these preceding verses has got Jesus considering His own mission; there are some strong parallels, starting with Herod's superstitious fears in vs 1.   See 17:12.
14:16   A command begets responsibility, a responsibility begets faith.
    Note the first statement made by the Lord.  He will never send us away; &quot;He has given us all things pertaining to life and godliness,&quot; and no circumstance shall &quot;separate us from the love of Christ.&quot;
14:18   Always the command of the Lord concerning our meager resources.
14:19   It has been pointed out that Jesus did not feed the multitude.  The text says He blessed the food.  The disciples fed the multitude.
14:22   He literally compels them to get into the boat.  He makes Himself absent, so that He can show Himself to them when they never could have imagined His appearing.
14:24-32    Three times wind is mentioned.
14:25   3:00 - 6:00 in the morning.
14:27   It is I   --  [ego emi]
14:28   Why does God sometimes let us test Him?
{{hilite{
It was not Peter's faith holding him up.  When he sank, Jesus was simply confirming that Peter had no power on his own.
}}}
After all, points out Fount Schultz, Peter was doing nothing supernatural.  He was really just trying to determine if it was the Lord or not, and came upon an excellent method.
14:32   One must wonder if Jesus hauled Peter in bodily.
14:33   //Church//.  Cf 9:10; 15:36, could these preach?</pre>
</div>
<div title="Matthew-15-01-note" modifier="SDM" created="201211201333" modified="201212051312" tags="Comment" book_key="140015a">
<pre>&lt;&lt;Bbl Mt 15:1 abbr &gt;&gt;-9  This puts in a direct form the parable of the two sons, see 21:28-31.
15:8-9  Jesus announces the fulfillment of &lt;&lt;Bbl Is 29:13 &gt;&gt;; vs. 14, &quot;I will deal wonderously with thus people, etc.&quot; is also fulfilled.
15:23-24    They wanted her sent away, wish granted or not, so she wouldn't continue bothering them.  Note repeated habitual past verbs (exegete this to make sure).  Jesus repeats the verb send  in his reply, which is possibly an aside to the disciples.
15:24-26    As H.C. Kee sees it, this is an &quot;inner struggle of Jesus when confronted with the request to extend His mission beyond the Jewish limits in which He had begun it (source unknown).&quot;  This can probably be rejected as a liberal viewpoint.  Questions and struggles Jesus had, but it seems best to assume He knew what He was about in this situation.  He wanted to see the woman's heart, and his disciples -- .
15:25   She goes  -- straight to the top, --  as we must always do when in need.  She bypassed the disciples.
15:26-27    Jesus presents a picture, and the woman enlarges it, turning it with great wit to her own advantage.
* The dogs are gleaning; and foreigners had gleaning rights in Israel.  She puts herself in Ruth's place as a humble gleaner.
* Jesus challenges her like this:  Do you dare to claim a place with God's covenant people in sharing God's goodness?  She answers, Are You trying to tell me YOU don't have enough love and enough power to meet my need?
* And the benefit lapdogs gain is not the food itself but a place in the household.  They are engaged in table-covenant.  This woman said straight out,  -- I know, I'm looking for covenant privileges.  And I know there's enough of the Bread of Life that I can have some crumbs.
* Note her humility: for the soul that knows its need, any small piece of God's goodness is infinitely good.
&lt;&lt;Bbl Mt 15:28 abbr &gt;&gt;   [[Faith]] honors Christ.
15:32   This is God's reaction when He sees His people hungry in the wilderness.
15:33   see &lt;&lt;Bbl Num 11:22 &gt;&gt;-23
&lt;&lt;Bbl Mt 15:34 abbr &gt;&gt;-37    Why didn't He make it become a lot of little loaves?  But he broke it, and kept breaking it; and later they collected the [[Broken]] pieces.
15:36   Church.
----
16:14   Concerning Jeremiah, I have a reference to 2 Maccabees 2:4ff.
16:18   See F.F. Bruce, The Books and the Parchments, p.242.
16:19   see &lt;&lt;Bbl Jn 20:23 &gt;&gt;
&lt;&lt;Bbl Jn 16:21 abbr &gt;&gt;   began to show   --  from the Scriptures, of course.
16:24   Follows from the preceding verse.  Cf &lt;&lt;Bbl Jn 10:17 &gt;&gt;
&lt;&lt;Bbl Jn 16:28 abbr &gt;&gt;   Seen by some as fulfilled in 17:2
----
17:1-5  Several similarities to Moses on the mountain in &lt;&lt;Bbl Ex 17:10 &gt;&gt;  see &lt;&lt;Bbl Mal 4:5 &gt;&gt;
{{hilite{
&lt;&lt;Bbl Mt 17:6 abbr &gt;&gt; Behold, a voice came out of the cloud, saying, &quot;This is my beloved Son, in whom I am well pleased. Listen to him.&quot;
}}}
&lt;&lt;Bbl Mt 17:15 abbr &gt;&gt;   [[Satan]] as a murderer.

17:20   //nothing will be impossible to you//, see &lt;&lt;Bbl Gn 11:6 &gt;&gt;.    [[Virtue]]
17:24   A note in this NASB says it was a temple tax.
17:26   see &lt;&lt;Bbl Gal 4:7 &gt;&gt;
&lt;&lt;Bbl Mt 17:27 abbr &gt;&gt;   see &lt;&lt;Bbl 1Pt 2:13 &gt;&gt;</pre>
</div>
<div title="Matthew-18-01-note" modifier="SDM" created="201210142010" modified="201211191605" tags="Comment" book_key="140018a">
<pre>18:3   are converted   --  Wuest translates this, &quot;reverse your present trend of thought.&quot;
18:11   see &lt;&lt;Bbl Ez 34:16 &gt;&gt;
&lt;&lt;Bbl Mt 18:15 abbr &gt;&gt;-16    The first step, one-to-one, speaks of reconciliation.  The second doesn't, and I think that reflects our tendencies.  //...every matter may be established by the testimony of two or three...// -- I've always read this as building evidence for a prosecution.  Why not read it as giving the errant brother a consensus view -- a concerted testimony of what the problem is?
18:17   a person to whom love is required, but not friendship.  Cf &lt;&lt;Bbl 1Cor 5:11 &gt;&gt;.  See Peterson's __Message__, which says ~ //it's back to square one with giving the Gospel to that person.//
    We read this to prohibit talking as a group to a person about his general character fault, but that is perhaps not what's in view.  It says //against you.//  One can propose that a group intervention for hurtful behavior against the community is okay.  This is important because it means the community can find a consensus and then act on it; you don't have to each individually confront, then discover the consensus and act as a group.  Maybe abusive behaviors can be addressed more directly than our usual reading seems to allow.
&lt;&lt;Bbl Mt 18:27 abbr &gt;&gt;   The slave promises restitution, but the master seems uninterested in this promise and forgives him the debt.  Note three steps of pardon.  The second step is release from the penalties described in vs. 25, analogous to the punishment for sin, whereas the third step would be release from the power of sin.
18:29   see &lt;&lt;Bbl Pr 28:3 &gt;&gt;19:3  See exegesis at [[Divorce]].
    See &lt;&lt;Bbl Pr 12:6 &gt;&gt;, which readily describes Jesus' encounters with the Pharisees.  Could some feminists be accused of these abuses?</pre>
</div>
<div title="Matthew-19-01-note" modifier="SDM" created="201210142027" modified="201212231623" tags="Comment" book_key="140019a">
<pre>&lt;&lt;Bbl Mt 19:10 abbr &gt;&gt;   God's standard reveals sin, and sin engenders despair.  Cf vs. 25
19:12   see &lt;&lt;Bbl Is 56:3 &gt;&gt;-5 .  This verse used to justify a celibate priesthood.
19:13   see &lt;&lt;Bbl Mt 20:20 abbr &gt;&gt;-31
19:16-21
{{holyquote{
ÃÂ¢ÃÂÃÂWhy do you call me good? No one is good but one, that is, God.&quot; }}}
* Jesus very deliberately presents the challenge of relationship with a personal God.
## First, instead of the &quot;good thing&quot; inquired for, Jesus states that &quot;there is only One who is good.&quot;
## Second, Jesus answers according to the young man's folly, telling him to &quot;keep the commandments&quot;  --  which He says will lead to life, as if there really were good things apart from the One who is good.  Then He even answers the question, which ones?, with commandments pertaining to earthly relationships.  None of the first four commandments are included!  &lt;&lt;Bbl Lv 19:18 &gt;&gt; is inserted, loving thy neighbor  --  a law Jesus refers to often, but this time away from its complementary command of loving the Lord.
## Third, He closes with (a) the one earthly Acts over which the man is stumbling, and (b) the command to be in relationship.  But in stumbling over (a), the young man has not even a hope or glimpse of (b).
* The young man arrives with a superficial awareness of his soul's dearth. He leaves with a supernatural awareness-- yet one that is grounded in a natural context.
19:24  ref. Quran 7:40 for the phrase.
19:25   They are more used to hearing about the damnation of the poor.
----
&lt;&lt;Bbl Mt 20:1 abbr &gt;&gt;-16 One of those businesses whose only purpose is to give people a blessing.
    The life of Christ is our sufficient reward.  The Levites, &lt;&lt;Bbl 2Kngs 5:26 &gt;&gt;.
    &quot;God's love cannot be portioned out in quantities nicely adjusted to the merits of individuals  -- &quot;   --  T.W. Manson, quoted by F.F. Bruce, Message of the NT, p. 30.
20:22   Later the mother learns what is the meaning of this cup.  She is present at the crucifixion, &lt;&lt;Bbl Mt 27:56 abbr &gt;&gt;, where she does indeed see two men placed the the right and to the left of Jesus.
    This incident seems significant with the preceding parable, see vss. 2, 12-15.  We all have an equal privilege  --  that of drinking from the cup.
&lt;&lt;Bbl Mt 20:27 abbr &gt;&gt;-28    see &lt;&lt;Bbl 1Cor 4:9 &gt;&gt;-13 .  How easily He could have come rather to be served!  And how quickly we forget that He did not!  </pre>
</div>
<div title="Matthew-20-29-note" modifier="SDM" created="201011281425" modified="201211191606" tags="Comment" book_key="140020w">
<pre>&lt;&lt;Bbl Mt 20:31 abbr &gt;&gt; see &lt;&lt;Bbl Mt 19:13 abbr &gt;&gt;
21:12   There was no guarantee that your own choice of a sheep or dove would pass the standards of the Pharisees; much easier to buy the animal (at an exorbitant price, of course).  Likewise, the coinage in common use was unacceptable for offering.
21:25   source  = authority.
21:26   see vs. 46
21:28   see 15:1-3
21:30   regretted it and went   --  the first item alone would not constitute repentance.  Sam Hoerster defines repentance as realizing God's will and doing it.
21:34-36    see &lt;&lt;Bbl Jer 7:25 &gt;&gt;
&lt;&lt;Bbl Mt 21:41 abbr &gt;&gt;    They  are the chief priests and elders, see vss. 23, 45.
21:46   see vs. 26.
----
22:7    Jerusalem
22:21   render   --  my old notes make this to read, &quot;give back&quot;.   Mike Birch comments that while Caesar's image is on the coin, &quot;in the image of God He made [us].&quot;
22:23   I would rather diagram this:
        A   who say there is no resurrection
        B   &quot;Moses said...&quot;
        C   the ostensible question
        C'  the answer
        B'  &quot;which was spoken to you by God&quot;
        A'  the true answer:  &quot;regarding the resurrection from the dead&quot;
22:41-46    [Sec 198:  &lt;&lt;Bbl Mk 12:35 &gt;&gt;-37 , &lt;&lt;Bbl Lk 20:41 &gt;&gt;-11 ]
    As the Harmony points out, &quot;by a single rhetorical question He (Jesus) proved from OT Scripture that the Messiah must be both God and man ('Lord' and 'Son').&quot;
    In &lt;&lt;Bbl Jn 1:30 &gt;&gt;, the Baptist aptly provides the answer left implied by Jesus.
22:46   This verse seems pivotal:  Jesus from this point attacks the Pharisees more directly.
----
23:8-10 A vague evocation of the One-In-Three of God.
23:15   &lt;&lt;Bbl Mal 2:8 &gt;&gt;.  The Pharisees are spreading the Law without the Grace, thus people are farther from the Lord than they were before being found by these wicked men.
23:16-23    This might be compared to the writings of scripture and the reference system by which we locate particular passages.  Which is more important?  By which does God speak?
23:17,19    Fools   --  &quot;impious godless men,&quot; according to Wuest.  &quot;You cannot serve God and mammon.&quot;   Compare &lt;&lt;Bbl Heb 6:17 &gt;&gt;, swearing by the greater.
23:27   see &lt;&lt;Bbl Ez 13:10 &gt;&gt;
&lt;&lt;Bbl Mt 23:32 abbr &gt;&gt;-36     There are O.T. verses which speak of the measure of a sin being fulfilled; &lt;&lt;Bbl Gn 15:16 &gt;&gt;.
&lt;&lt;Bbl Mt 23:34 abbr &gt;&gt;    The Christians.
23:35   There seems to be a reference to vss. 16-22 preceding.
23:37   God gathers.  This verse can be given a personal application.   See &lt;&lt;Bbl Ps 17:8 &gt;&gt;,&lt;&lt;Bbl Ps 91:4 &gt;&gt;.
&lt;&lt;Bbl Mt 23:38 abbr &gt;&gt;    desolate   --  Wuest says, &quot;abandoned to its own resources.&quot;
----
24:45   see &lt;&lt;Bbl Jn 21:15 &gt;&gt;-17
&lt;&lt;Bbl Mt 24:49 abbr &gt;&gt;   drink with drunkards    --  this is against God's will.
24:51   see &lt;&lt;Bbl Heb 4:12 &gt;&gt;, the sword of the Spirit.
----
25:15   see &lt;&lt;Bbl 2Cor 8:12 &gt;&gt;
&lt;&lt;Bbl Mt 25:30 abbr &gt;&gt;   see &lt;&lt;Bbl Ex 31:6 &gt;&gt;.  Contrary to the egalitarian philosophy, disproportions in this world are going to grow instead of diminish.
25:31-33    see &lt;&lt;Bbl Ez 34:16 &gt;&gt;-17
&lt;&lt;Bbl Mt 25:40 abbr &gt;&gt;    see &lt;&lt;Bbl Pr 14:31 &gt;&gt;, &lt;&lt;Bbl Pr 19:17 &gt;&gt;
&lt;&lt;Bbl Mt 25:41 abbr &gt;&gt;   see &lt;&lt;Bbl 2Pt 2:4 &gt;&gt; </pre>
</div>
<div title="Matthew-26-10-note" modifier="SDM" created="201009302050" modified="201212231612" tags="Christ Faith Comment" book_key="140026b">
<pre>26:26 -- the Mediator

26:11   see &lt;&lt;Bbl Dt 15:11 &gt;&gt;
&lt;&lt;Bbl Mt 26:23 abbr &gt;&gt;    the term itself, betrayal, implies intimacy.  Cf 26:49:  kissing is the gesture we associate with intimacy, but for Jews, I suppose this verse would be far more significant.
26:27   all of you   --  as if to stress the inclusion of Judas.
26:28   K.J.V. uses the term &quot;new testament&quot;.  (Oddly, this suddenly reminds me of taking communion at the Sargeant's home.  Thank you, God for deliverence.)
    Poured out  refers idiomatically to violent death; compare the same verb in 23:35.
26:29   see 27:34
26:35   All the disciples agreed that none among them would deny Christ.  But the Lord singles out Peter.  All the more interesting, then, he made it further than anyone.  He was willing to swing a sword and to enter the enemy's courtyard.
26:36   I have read that //Gethsemane// means wine press.  Our Lord was pressed and poured out, with //sweat like blood.//
26:51   //Lead us not into temptation// -- Peter is in the heat of trial.
26:52   Jesus calms another storm.
26:53   Possibly 432,000 angels.  But the demonstration of God's strength at this hour requires a taking up of weakness.
uncertain -- Maria Trapp translated this as //The ghost is willing, but the meat is soft.//
26:63   Jesus heeds the law of &lt;&lt;Bbl Lv 5:1 &gt;&gt;.
&lt;&lt;Bbl Mt 26:65 abbr &gt;&gt;    see &lt;&lt;Bbl Ps 35:21 &gt;&gt;
&lt;&lt;Bbl Mt 26:73 abbr &gt;&gt;-74     the way you talk   --  suddenly it becomes important for Peter to curse.

27:4    Judas shows more of his character by going to the priests with a confession of sin.    I wonder what is behind the priests' response?
27:9    This statement, which Matthew ascribes to Jeremiah, is actually Zach 11:12.
27:25   see &lt;&lt;Bbl Ez 18:13 &gt;&gt;
&lt;&lt;Bbl Mt 27:29 abbr &gt;&gt;    //thorns// -- an injury made possible through original trespass, &lt;&lt;Bbl Gn 3:18 &gt;&gt;.
&lt;&lt;Bbl Mt 27:34 abbr &gt;&gt;    see 26:29
27:45   see &lt;&lt;Bbl Is 54:8 &gt;&gt;; &lt;&lt;Bbl Ex 15:26 &gt;&gt;.  Three hours, three days.
27:51-54    Indeed, no one in Jerusalem doubts that His death is significant.  What is going on in God's heart at this point?
27:51   In a poetic sense, it seems the Lord is rending His clothing in the form of the Temple veil.  I have always heard that God indicates in this that the Holy of Holies is now open to all.  I've never been satisfied with this and now (2/91) it seems possible to me that perhaps He was just revealing the inadaquacy of, first, the old covenant, and second, the Pharisaic accretions.
27:56   see &lt;&lt;Bbl Mt 20:20 abbr &gt;&gt;
27:66   see &lt;&lt;Bbl Dan 6:17 &gt;&gt;

&lt;&lt;Bbl Mt 28:18 abbr &gt;&gt;-20     The Great Commission begins with a statement of Christ's omnipotence and ends with His omnipresence.  Note four all s  --  all authority, all nations, all things He commanded us, and all the days.  These are all the same root word in the Greek.  All authority  is the same basic phrase found in &lt;&lt;Bbl Lk 4:6 &gt;&gt;.  Christ rejected Satan's offer and secured the offer of the Father.
    The structure of I, you, you, I  is also found in a strikingly similar commission, &lt;&lt;Bbl Jud 1:9 &gt;&gt;</pre>
</div>
<div title="Maturity" modifier="SDM" created="201211230315" book_key="">
<pre>!! Immaturity
* Many young believers are remarkably superstitious -- especially those in charismatic churches.</pre>
</div>
<div title="MediaWikiTableFormatterPlugin" modifier="SDM" created="201012221745" modified="201112121549" tags="systemConfig excludeLists" book_key="">
<pre>/***
|''Name''|MediaWikiTableFormatterPlugin|
|''Description''|Allows MediaWiki style tables in TiddlyWiki|
|''Author''|Martin Budden (mjbudden (at) gmail (dot) com)|
|''Contributors''|FND|
|''Version''|0.1.2|
|''Status''|stable|
|''Source''|http://devpad.tiddlyspot.com/#MediaWikiTableFormatterPlugin|
|''CodeRepository''|http://svn.tiddlywiki.org/Trunk/contributors/MartinBudden/formatters/MediaWikiTableFormatterPlugin.js|
|''License''|[[Creative Commons Attribution-ShareAlike 3.0 License|http://creativecommons.org/licenses/by-sa/3.0/]]|
|''~CoreVersion:''|2.1.0|
!Description
Enables [[MediaWiki|http://www.mediawiki.org]]'s table markup in TiddlyWiki, allowing for multi-line contents within table cells.
(Note that all TiddlyWiki markup still applies.)
!Usage
Detailed documentation available at [[MediaWiki.org|http://www.mediawiki.org/wiki/Help:Tables]].
!!Examples
{{{
{|
! Heading 1
! Heading 2
! Heading 3
|-
| row 1, column 1
| row 1, column 2
| row 1, column 3
|-
| row 2, column 1
| row 2, column 2
| row 2, column 3
|}
}}}
{|
! Heading 1
! Heading 2
! Heading 3
|-
| row 1, column 1
| row 1, column 2
| row 1, column 3
|-
| row 2, column 1
| row 2, column 2
| row 2, column 3
|}
!Revision History
!!v0.1 (2008-10-31)
* initial release
!!v0.1.2 (2008-11-05)
* removed unnecessary code
!Code
***/
//{{{
if(!version.extensions.MediaWikiTableFormatterPlugin) { //# ensure that the plugin is only installed once
version.extensions.MediaWikiTableFormatterPlugin = {installed:true};

if(version.major &lt; 2 || (version.major == 2 &amp;&amp; version.minor &lt; 1)) {
    alertAndThrow('MediaWikiTableFormatterPlugin requires TiddlyWiki 2.1 or later.');
}

config.formatters.push({
    name: 'enhancedTable',
    match: '^\\{\\|',
    handler: function(w) {
        var pair = MediaWikiTemplate.findTableBracePair(w.source,w.matchStart);
        if(pair.start==w.matchStart) {
            w.nextMatch = w.matchStart;
            var table = MediaWikiTemplate.createElement(w.output,'table');
            var tbody = MediaWikiTemplate.createElement(table,'tbody'); // required for IE
            var mwt = new MediaWikiTemplate();
            mwt.wikifyTable(tbody,w,pair);
        }
    }
});


MediaWikiTemplate = function()
{
    this.stack = [];
    this.error = false;
    this.tiddler = null;
};

MediaWikiTemplate.createElement = function(parent,element)
{
    return parent.appendChild(document.createElement(element));
}

MediaWikiTemplate.setAttributesFromParams = function(e,p)
{
    var re = /\s*(.*?)=(?:(?:&quot;(.*?)&quot;)|(?:'(.*?)')|((?:\w|%|#)*))/mg;
    var match = re.exec(p);
    while(match) {
        var s = match[1].unDash();
        if(s == 'bgcolor') {
            s = 'backgroundColor';
        }
        try {
            if(match[2]) {
                e.setAttribute(s,match[2]);
            } else if(match[3]) {
                e.setAttribute(s,match[3]);
            } else {
                e.setAttribute(s,match[4]);
            }
        }
        catch(ex) {}
        match = re.exec(p);
    }
};

MediaWikiTemplate.findRawDelimiter = function(delimiter,text,start)
//# find a delimiter that is not enclosed by [[..]]
{
    var d = text.indexOf(delimiter,start);
    if(d==-1)
        return -1;
    var b = {start:-1,end:-1};
    var bs = text.indexOf('[[',start);
    if(bs==-1 || bs &gt;d)
        return d;
    var s1 = -1;
    if(bs!=-1 &amp;&amp; bs &lt;d) {
        var be = text.indexOf(']]',bs);
        if(be!=-1) {
            b.start = bs;
            b.end = be;
        }
    }
    if(b.start!=-1 &amp;&amp; d&gt;b.start)
        s1 = b.end+2;
    return s1==-1 ? d : MediaWikiTemplate.findRawDelimiter(delimiter,text,s1);
};

MediaWikiTemplate.findTableBracePair = function(text,start)
{
    var ret = {start:-1,end:-1};
    var s = text.indexOf('{|',start);
    if(s==-1)
        return ret;
    var e = text.indexOf('\n|}',s+2);
    if(e==-1)
        return ret;
    e++;
    var s2 = text.indexOf('{|',s+2);
    if(s2==-1 || s2 &gt; e)
        return {start:s,end:e};
    var tp = MediaWikiTemplate.findTableBracePair(text,s+2);
    while(tp.end!=-1 &amp;&amp; e&gt;tp.start &amp;&amp; e&lt;=tp.end) {
        //# intervening table brace pair, so skip over
        e = tp.end+2;
        tp = MediaWikiTemplate.findTableBracePair(text,e);
        e = text.indexOf('\n|}',e);
        if(e==-1)
            return ret;
        e++;
    }
    return {start:s,end:e};
};

MediaWikiTemplate.prototype.wikifyTable = function(table,w,pair)
{
    function lineEnd(w) {
        var r = w.source.indexOf('\n',w.nextMatch);
        while(r!=-1) {
            var n = w.source.substr(r+1,1);
            if(n=='|' || n=='!' || (n=='{' &amp;&amp; w.source.substr(r+2,1)=='|'))
                break;
            r = w.source.indexOf('\n',r+1);
        }
        return r;
    }
    function subWikifyText(e,w,text) {
            var oldSource = w.source; var oldMatch = w.nextMatch;
            w.source = text; w.nextMatch = 0;
            w.subWikifyUnterm(e);
            w.source = oldSource; w.nextMatch = oldMatch;
    }
    //# skip over {|
    w.nextMatch += 2;
    var i = lineEnd(w);
    if(i&gt;w.nextMatch) {
        MediaWikiTemplate.setAttributesFromParams(table.parentNode,w.source.substring(w.nextMatch,i));
        w.nextMatch = i;
    }
    w.nextMatch++;
    if(w.source.substr(w.nextMatch,2)=='|+') {
        var caption = MediaWikiTemplate.createElement(table,'caption');
        w.nextMatch += 2;
        i = lineEnd(w);
        var d = MediaWikiTemplate.findRawDelimiter('|',w.source,w.nextMatch);
        if(d!=-1 &amp;&amp; d&lt;i) {
            MediaWikiTemplate.setAttributesFromParams(caption,w.source.substring(w.nextMatch,d));
            w.nextMatch = d+1;
        }
        w.subWikifyTerm(caption,/(\n)/mg);
    }
    var tr = MediaWikiTemplate.createElement(table,'tr');
    if(w.source.substr(w.nextMatch,2)=='|-') {
        w.nextMatch += 2;
        i = lineEnd(w);
        if(i&gt;w.nextMatch) {
            MediaWikiTemplate.setAttributesFromParams(tr,w.source.substring(w.nextMatch,i));
            w.nextMatch = i;
        }
        w.nextMatch++;
    }
    var x = w.source.substr(w.nextMatch,2);
    while(x!='|}') {
        if(x=='{|') {
            //# nested table
            var pair2 = MediaWikiTemplate.findTableBracePair(w.source,w.nextMatch);
            if(pair2.start==w.nextMatch) {
                var table2 = MediaWikiTemplate.createElement(cell,'table');
                this.wikifyTable(table2,w,pair2);
            }
        } else if(x=='|-') {
            //# new row
            tr = MediaWikiTemplate.createElement(table,'tr');
            w.nextMatch += 2;
            i = lineEnd(w);
            if(i==-1)
                break;
            if(i&gt;w.nextMatch) {
                MediaWikiTemplate.setAttributesFromParams(tr,w.source.substring(w.nextMatch,i));
                w.nextMatch = i;
            }
            w.nextMatch++;
        } else if(x.substr(0,1)=='!') {
            //# header cell
            w.nextMatch++;
            i = lineEnd(w);
            if(i==-1)
                break;
            var cell = MediaWikiTemplate.createElement(tr,'th');
            var c = w.source.indexOf('!!',w.nextMatch);
            while(c!=-1 &amp;&amp; c&lt;i) {
                d = MediaWikiTemplate.findRawDelimiter('|',w.source,w.nextMatch);
                if(d!=-1 &amp;&amp; d&lt;c) {
                    MediaWikiTemplate.setAttributesFromParams(cell,w.source.substring(w.nextMatch,d));
                    w.nextMatch = d+1;
                }
                while(w.source.substr(w.nextMatch,1)==' ') {
                    w.nextMatch++;
                }
                w.subWikifyTerm(cell,/(\!\!)/mg);
                cell = MediaWikiTemplate.createElement(tr,'th');
                c = w.source.indexOf('!!',w.nextMatch);
            }
            d = MediaWikiTemplate.findRawDelimiter('|',w.source,w.nextMatch);
            if(d!=-1 &amp;&amp; d&lt;i) {
                MediaWikiTemplate.setAttributesFromParams(cell,w.source.substring(w.nextMatch,d));
                w.nextMatch = d+1;
            }
            while(w.source.substr(w.nextMatch,1)==' ') {
                w.nextMatch++;
            }
            subWikifyText(cell,w,w.source.substring(w.nextMatch,i));
            w.nextMatch = i+1;
        } else if(x.substr(0,1)=='|') {
            //# cell
            w.nextMatch++;
            i = lineEnd(w);
            if(i==-1)
                break;
            cell = MediaWikiTemplate.createElement(tr,'td');
            c = w.source.indexOf('||',w.nextMatch);
            while(c!=-1 &amp;&amp; c&lt;i) {
                d = MediaWikiTemplate.findRawDelimiter('|',w.source,w.nextMatch);
                if(d!=-1 &amp;&amp; d&lt;c) {
                    MediaWikiTemplate.setAttributesFromParams(cell,w.source.substring(w.nextMatch,d));
                    w.nextMatch = d+1;
                }
                while(w.source.substr(w.nextMatch,1)==' ') {
                    w.nextMatch++;
                }
                w.subWikifyTerm(cell,/(\|\|)/mg);
                cell = MediaWikiTemplate.createElement(tr,'td');
                c = w.source.indexOf('||',w.nextMatch);
            }
            d = MediaWikiTemplate.findRawDelimiter('|',w.source,w.nextMatch);
            if(d!=-1 &amp;&amp; d&lt;i) {
                MediaWikiTemplate.setAttributesFromParams(cell,w.source.substring(w.nextMatch,d));
                w.nextMatch = d+1;
            }
            while(w.source.substr(w.nextMatch,1)==' ') {
                w.nextMatch++;
            }
            subWikifyText(cell,w,w.source.substring(w.nextMatch,i));
            w.nextMatch = i+1;
        }
        x = w.source.substr(w.nextMatch,2);
    }
    w.nextMatch = pair.end + 3;
    return;
};

} //# end of 'install only once'
//}}}</pre>
</div>
<div title="Mediator" modifier="SDM" created="201004120330">
<pre>* &lt;&lt;Bbl Is 26:13 &gt;&gt;, &lt;&lt;Bbl Is 39:16 &gt;&gt;, &lt;&lt;Bbl Jer 30:21 &gt;&gt;, &lt;&lt;Bbl Job 33:23 &gt;&gt;-24 , &lt;&lt;Bbl Act 4:12 &gt;&gt;, &lt;&lt;Bbl 1Tim 2:5 &gt;&gt;-6
* [[Priest]]</pre>
</div>
<div title="Melchizedek" modifier="SDM" created="201004120330" modified="201012102322">
<pre>* &lt;&lt;Bbl Gn 14:18 &gt;&gt;-20
* &lt;&lt;Bbl Ps 110:4 &gt;&gt;
* &lt;&lt;Bbl Heb 5:6 &gt;&gt;-11 , &lt;&lt;Bbl Heb 6:20 0 &gt;&gt;, &lt;&lt;Bbl Heb 7:1&gt;&gt;-22 0
These present a very full type of Christ as our High [[Priest]].</pre>
</div>
<div title="Mephibosheth" modifier="SDM" created="201011031349" modified="201212241357" book_key="">
<pre>* see &lt;&lt;Bbl 1Sam 2:8 &gt;&gt;.
* His life is found in five passages: &lt;&lt;Bbl 2Sam 4:4 &gt;&gt;, &lt;&lt;Bbl 2Sam 9:1 &gt;&gt;-13 , &lt;&lt;Bbl 2Sam 16:1 &gt;&gt;-4 , &lt;&lt;Bbl 2Sam 19:24 &gt;&gt;-30 , &lt;&lt;Bbl 2Sam 21:7 &gt;&gt;.
 * Is it true that a Queen of England, after hearing this story, commanded that it be preached to all men entering the armed services.
* Mephibosheth was:the fallen (lame) son of a fallen king  --  even as we are in relation to Adam, born to rule everything, but now in everything unable to rule.
* He was not trying to seek royal favor  --  rather hiding as an enemy, who must be actively sought out if fellowship is to be achieved, just as &lt;&lt;Bbl Romans.5 &gt;&gt;.</pre>
</div>
<div title="Mercy" modifier="SDM" created="201012110220" modified="201207031202" book_key="">
<pre>* &lt;&lt;Bbl James 2:13 &gt;&gt;</pre>
</div>
<div title="MicroContent" creator="psd" modifier="jermolene" created="201102111106" modified="201111261322" tags="concepts">
<pre>MicroContent and MicroCopy being fashionable words for self-contained fragments of content that are smaller than an entire pages.

Usually MicroContent is presented through some kind of aggregation that reduces the perceptual shock and resource cost of context switching (eg the way that blogs aggregating several entries onto a page, or Flickr presents a bunch of photos in an album). TiddlyWiki aggregates MicroContent items called [[tiddlers|Tiddler]] into pages that are loaded in one gulp and progressively displayed as the user clicks hypertext links to read them.
</pre>
</div>
<div title="MinorChanges" creator="psd" modifier="blaine" created="201102111106" modified="201102111310">
<pre>Sometimes it's useful to stop a minor change to a tiddler from causing it to rise to the top of the timeline. This can be done by pressing the Shift key while clicking the 'done' toolbar button, or with the ~Shift-Control-Enter key. This behaviour can be switched to become the default with one of the AdvancedOptions.</pre>
</div>
<div title="MinorProphets-note" modifier="SDM" created="201010310436" modified="201303022014" tags="Comment" book_key="707001a">
<pre>!! Hosea
* Sowing and reaping is a main theme.
* It's misguided, foolish and destructive to use Hosea's actions as a rule-book for recovering a broken marriage.  They are not normative, but provocative and thus prophetic.

1:4 Jezreel   --  &quot;God sows.&quot;
1:8 Fertility resumes after weaning, the natural biological order.
1:10    This passage is interpreted by the Spirit in Peter to include the Gentiles; &lt;&lt;Bbl 1Pt 2:9 &gt;&gt;-10 .  Paul also cits it, &lt;&lt;Bbl Rom 9:25 &gt;&gt;-26 .

&lt;&lt;Bbl Hosea 2:1 abbr &gt;&gt;  Errant chapter division; this verse concludes the promise of hope.
2:7 Compare 1Chrn 12:8.

4:6 &lt;&lt;Bbl Pr 5:23 &gt;&gt;

&lt;&lt;Bbl Hosea 6:2 abbr &gt;&gt; The closing phrase resounds of &lt;&lt;Bbl Rom 6:10 &gt;&gt;.
&lt;&lt;Bbl Hosea 6:3 abbr &gt;&gt;-4    The consistency of God is contrasted with the inconsistency of man.
6:3 see &lt;&lt;Bbl Mic 5:2 &gt;&gt;, &lt;&lt;Bbl Jms 5:7 &gt;&gt;.

&lt;&lt;Bbl Hosea 7:7 abbr &gt;&gt;  &lt;&lt;Bbl Pr 28:2 &gt;&gt;.
&lt;&lt;Bbl Hosea 7:8 abbr &gt;&gt; ie, half cooked, like a pancake?
7:16    A decietful bow   --  see &lt;&lt;Bbl Ps 78:57 &gt;&gt;.

&lt;&lt;Bbl Hosea 9:3 abbr &gt;&gt;  Daniel was the exception.

!! Joel
&lt;&lt;Bbl Joel 2:28 &gt;&gt;-29 A comprehensive catalog:  male, female, young, old, high, low.
!! Amos
* &lt;&lt;Bbl Amos 1:2 &gt;&gt; - 2:3   The cities surrounding Jerusalem are systematically reviewed, in the sort of pattern one uses for loosening lug nuts on a wheel.
* 1:9,11    God hates one who &quot;sows strife among brethren.&quot;

* 2:4-8 As seems common, Israel is judged for a profusion of idolatrous sins that appear to far supersede Judah's.

* 3:5-6 I believe the Roman Catholic Bible translates this, &quot;Is the Pope Catholic?&quot;

* 4:6-11    see &lt;&lt;Bbl Is 9:13 &gt;&gt;
* &lt;&lt;Bbl Amos 4:11 false &gt;&gt;   see Zach 3:2
* 5:13  Amos is evidently not prudent, since he is not keeping silent.  See &lt;&lt;Bbl 1Cor 4:10 &gt;&gt;, &lt;&lt;Bbl Amos59:15 &gt;&gt;, &lt;&lt;Bbl Pr 27:12 &gt;&gt;

!! Obadiah
!! [[Jonah]]
!! Micah
* &lt;&lt;Bbl Micah 5:2 &gt;&gt;    see &lt;&lt;Bbl Hos 6:3 &gt;&gt;
!! Nahum
!! Habakkuk
* &lt;&lt;Bbl Hab 1:7 &gt;&gt;  see &lt;&lt;Bbl Dan 7:4 &gt;&gt;-6
* &lt;&lt;Bbl Heb 2:4 abbr &gt;&gt;    Cited in &lt;&lt;Bbl Rom 1:17 &gt;&gt;; &lt;&lt;Bbl Gal 3:11 &gt;&gt;; &lt;&lt;Bbl Heb 10:38 &gt;&gt;
* &lt;&lt;Bbl Heb 2:19 abbr &gt;&gt;   no breath -- or spirit.  19b and 20 form a complete contrast.
!! Zephaniah
!! Haggai
* &lt;&lt;Bbl Haggai 1:4 &gt;&gt;   &quot;Throughout the monarchy period, an entailment of construction on even a modest scale was the securing of hardwoods from outside sources'.  As part of Cyrus' decree to permit the Jews to return to their native land, the Persian granted a sum of money with which they were to secure timber and rebuild their temple (&lt;&lt;Bbl Ezra 3:7 &gt;&gt; Esdras 4:48, 5:54).  It is suspected, however, that when the timber arrived in Israel, it was squandered instead for use on private dwellings.  Later, Nehemiah requested Artaxerxes for letters to secure timber for the reconstruction of the city wall (&lt;&lt;Bbl Neh 2:4 &gt;&gt;-8 ).&quot;   --  Barry Beitzel, Moody Atlas of Bible Lands, p. 54.
!! Zechariah
* &lt;&lt;Bbl Zech 3:2 &gt;&gt; see &lt;&lt;Bbl Amos 4:11 &gt;&gt;
* 12:10-13:1 -- &lt;&lt;Bbl Mt 5:4 &gt;&gt; //comfort//
* 13:6  Possibly the spirit of false prophecy requires self-mutilation.  Zechariah is saying that the repentant false prophet will be ashamed of this and give another explanation.
!! Malachi
* 2:16  this verse has differing translations in the NIV.
* &lt;&lt;Bbl Mal 3:17 &gt;&gt; see &lt;&lt;Bbl Ps 103:13 &gt;&gt;</pre>
</div>
<div title="Miracle" modifier="SDM" created="201010252052">
<pre>See Wuest, &quot;Wonder&quot;.  &lt;&lt;Bbl Ex 34:10 &gt;&gt;; &lt;&lt;Bbl Jn 3:2 &gt;&gt;-3 , &lt;&lt;Bbl Jn 2:18 &gt;&gt;, &lt;&lt;Bbl Jn 4:17 &gt;&gt;-19 , &lt;&lt;Bbl Jn 10:37 &gt;&gt;-38 , &lt;&lt;Bbl Jn 14:11 &gt;&gt;, &lt;&lt;Bbl Jn 4:48 &gt;&gt;, &lt;&lt;Bbl Jn 6:26 &gt;&gt;-36 , &lt;&lt;Bbl Jn 7:3 &gt;&gt;-5 , &lt;&lt;Bbl Jn 20:29 &gt;&gt;; &lt;&lt;Bbl Mt 16:1 &gt;&gt;; &lt;&lt;Bbl Mt 24:24 &gt;&gt;.</pre>
</div>
<div title="MissingTiddlers" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="features">
<pre>The 'Missing' option on the MoreTab shows you the names of tiddlers that you've referred to but not gone ahead to define. It can be useful during writing sessions to keep track of things you need to come back and fill out.</pre>
</div>
<div title="Mistreatment" modifier="SDM" created="201202040012" modified="201206181754" book_key="">
<pre>* //abuse, mocking, insults, reproaches//
* [[Suffering]]
* [[Shame]]
* &lt;&lt;Bbl Ps 69:9 &gt;&gt; also covered in &lt;&lt;Bbl Rom 15:3 &gt;&gt;
* &lt;&lt;Bbl Lk 6:28 &gt;&gt; //bless those who curse you, pray for those who mistreat you//</pre>
</div>
<div title="MobileDevices" creator="jermolene" modifier="jermolene" created="201103221319" modified="201110311131">
<pre>TiddlyWiki sites on the Internet work well on the iPhone, iPad and Android devices but the browsers on those devices do not allow documents to be saved.

To work around this limitation, you can use these apps:

* [[AndTidWiki|https://market.android.com/details?id=de.mgsimon.android.andtidwiki]] for Android Devices
* [[TWMobile|http://itunes.apple.com/gb/app/twmobile/id381945222?mt=8]] for iPad
* [[TWEdit|http://itunes.apple.com/gb/app/twedit/id409607956?mt=8]] for iPhone, iPad and iPod Touch
* [[tiddlyNotes|http://itunes.apple.com/us/app/tiddlynotes-lite/id465933435?mt=8]] for iPhone, iPad and iPod Touch

Note that these applications are produced by independent third parties, and are not associated with tiddlywiki.com or UnaMesa.
</pre>
</div>
<div title="Mocking" modifier="SDM" created="201004120330" modified="201209241505" book_key="">
<pre>* &lt;&lt;Bbl Lk 8:53 &gt;&gt;
* &lt;&lt;Bbl 2Pt 3:3 &gt;&gt;-4 ; &lt;&lt;Bbl 2Chr 32:19 &gt;&gt;; &lt;&lt;Bbl Gal 6:7 &gt;&gt;.

Pr. 15:12      A mocker resents correction; he will not consult the wise.

Pr. 19:29     Penalties are prepared for mockers, and beatings for the backs of fools.

Pr. 21:24     The proud and arrogant man  &quot;Mocker&quot; is his name;
                he behaves with overweening pride.

Pr. 22:10     Drive out the mocker, and out goes strife; quarrels and insults are ended.

Proverbs 9:
7      Whoever corrects a mocker invites insult; whoever rebukes a wicked man incurs abuse.
8      Do not rebuke a mocker or he will hate you; rebuke a wise man and he will love you.
9      Instruct a wise man and he will be wiser still; teach a righteous man and he will add to his learning.

Proverbs 14:
6      The mocker seeks wisdom and finds none, but knowledge comes easily to the discerning.
7      Stay away from a foolish man, for you will not find knowledge on his lips.
8      The wisdom of the prudent is to give thought to their ways, but the folly of fools is deception.
9      Fools mock at making amends for sin, but goodwill is found among the upright.</pre>
</div>
<div title="MonkeyPirateTWServer" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="systemServer">
<pre>|''URL:''|http://mptw.tiddlyspot.com/|
|''Description:''|a tiddlywiki distribution and plugins|
|''Author:''|SimonBaird|</pre>
</div>
<div title="MoreTab" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="features">
<pre>The functions of 'Timeline' and 'All' tabs have been around since the FirstVersion of TiddlyWiki. The purpose of the 'More' tab is to bring together some other, more specialised lists of tiddlers that can be useful during writing sessions. Currently, it offers lists of OrphanTiddlers and MissingTiddlers.</pre>
</div>
<div title="Moses" modifier="SDM" created="201011260133" modified="201305051924" book_key="" changecount="1">
<pre>* [[Humility]] -- &lt;Bbl Num 12:3 &gt;&gt;, &lt;&lt;Bbl Ex 32:20 &gt;&gt;.  These statements make the portrayal by Charlton Heston absurd.
* Moses had two acts of sinful control.  The first one sent him into the wilderness.  The second one kept him from the Promised Land. </pre>
</div>
<div title="Murder" modifier="SDM" created="201209241459" book_key="">
<pre>* &lt;&lt;Bbl Jer 2:32 &gt;&gt; -- homicide, not justifiable
* [[Death]]</pre>
</div>
<div title="Music" modifier="SDM" created="201004120330">
<pre>In &lt;&lt;Bbl Dan 3:4 &gt;&gt;-7 , music is Nabuchednezzer's approximation of the final trumpet of God's Judgment.  &lt;&lt;Bbl Ps 137:4 &gt;&gt;-6 ; &lt;&lt;Bbl Is 5:12 &gt;&gt;; &lt;&lt;Bbl Amos 6:5 &gt;&gt;</pre>
</div>
<div title="Mystery" modifier="SDM" created="201004120330" modified="201010272122">
<pre>* &lt;&lt;Bbl Dt 29:29 &gt;&gt;
* [[One-In-Three]]</pre>
</div>
<div title="Name" modifier="SDM" created="201004120330" modified="201201201928" book_key="">
<pre>!!! Name of God
* See Keil &amp; Delitzsch, vol. 1, pp. 74-76.  I'm interested when a reference to God's existence is also possibly an allusion to His name, i.e., &lt;&lt;Bbl Heb 11:6 &gt;&gt;.
* &lt;&lt;Bbl Ps 35:3 &gt;&gt;, a transliteration of the name, Jesus (Wycl. Bible Ency., &quot;Joshua&quot;);  &lt;&lt;Bbl Ex 3:13 &gt;&gt;-15 ; &lt;&lt;Bbl Gn 4:1 &gt;&gt;; &lt;&lt;Bbl Mic 4:5 &gt;&gt; a strong tower:    &lt;&lt;Bbl Pr 18:10 &gt;&gt;
* denial of:        &lt;&lt;Bbl Jer 5:12 &gt;&gt;, &quot;He is not, Not He&quot;
* &lt;&lt;Bbl Rev 3:12 &gt;&gt;
!!! taking God's Name in vain
* Do not refer to the Lord without a wholesome spirit of reverence.
* My favorite is //Jeez Louise.//
* [[Individual]].
* A name evokes an enduring characteristic.
* Vine's (under Lord, Lordship) points out that the disciples or Paul never called Him simply &quot;Jesus.&quot;
* &lt;&lt;Bbl Is 43:1 &gt;&gt;
----
* &lt;&lt;Bbl Rev 2:17 &gt;&gt;, &lt;&lt;Bbl Rev 3:5 &gt;&gt;
* other references:  &lt;&lt;Bbl Jud 13:18 &gt;&gt;; &lt;&lt;Bbl Is 52:6 &gt;&gt;; &lt;&lt;Bbl Is 56:5 &gt;&gt;; &lt;&lt;Bbl Zph 2:15 &gt;&gt;; &lt;&lt;Bbl Ez 20:44 &gt;&gt;</pre>
</div>
<div title="Nations" modifier="SDM" created="201004120330" modified="201012061728">
<pre>&lt;&lt;Bbl Jn 10:16 &gt;&gt;, &lt;&lt;Bbl Jn 11:52 &gt;&gt;.
&lt;&lt;Bbl Jn 16:20 abbr &gt;&gt;
&lt;&lt;Bbl Ps 126:5 abbr &gt;&gt;-6  -- image of sheaves, [[Harvest]]
//Peoples, gentiles//</pre>
</div>
<div title="Need" modifier="SDM" created="201010252046" modified="201304262149" book_key="" changecount="2">
<pre>* We are never turned away from the [[Grace]] and [[Provision]] of God because of neediness.
* Need must be determined individually!  It is not just an algorithmic review of Maslow's pyramid.  
* Need must be determined spiritually!  A life of faith looks like Maslow's pyramid turned upside down.  //Seek first the Kingdom of God, and all these things...//
* Lame, blind, etc.: &lt;&lt;Bbl Is 29:18 &gt;&gt;-19, &lt;&lt;Bbl Is 35:5 &gt;&gt;-6; &lt;&lt;Bbl Mic 4:6 &gt;&gt;-8, &lt;&lt;Bbl Zph 3:19 &gt;&gt;, &lt;&lt;Bbl Mt 11:5 &gt;&gt;, &lt;&lt;Bbl Mt 18:8 &gt;&gt;, &lt;&lt;Bbl Lk 5:17 &gt;&gt;ff, &lt;&lt;Bbl Lk 14:12 &gt;&gt;ff
* [[Broken]], [[Prison]], [[Trial]]
* [[Exigency]]
* //divine disappointments//
* &lt;&lt; Bbl Pro 13:25 &gt;&gt; (NASB) The righteous has enough to satisfy his appetite, But the stomach of the wicked is in need.
* &lt;&lt; Bbl Pro 31:9 &gt;&gt; (NASB) Open your mouth, judge righteously, And defend the rights of the afflicted and needy.</pre>
</div>
<div title="Nehemiah-01-01-note" modifier="SDM" created="201010310423" modified="201211121652" tags="Comment" book_key="585001a">
<pre>Examining the book in relation to one's self:
* The walls represent the saving and preserving grace of God; outside lies the world which is arrayed against the soul (&lt;&lt;Bbl 1Pt 2:11 &gt;&gt;).
* The gates are the centers of counsel, discernment, and encouragement.
* The temple is the heart; therein is found the activity of God and the activity of Satan (6:10; 13:4-9).
* Nehemiah himself works like the Holy Spirit in the midst of the city, and perhaps Ezra is like an embodied written Bible (this stretches too far into allegory, but maybe with the proper disclaimer it could fly).

2:13    The Dragon's Gate  probably referred to a serpentine course (W.E. Vine).
2:17    Nehemiah's natural gift of leadership causes him to gloss over many details of his organization  --  for example, how did he go about calling such a crucial meeting?  And how did he set the divisions of work?

&lt;&lt;Bbl Neh 5:7 abbr &gt;&gt; A beautiful comment on Nehemiah's discretion  --  he consulted within himself.

6:18    This relationship results in the sorry situation of 13:4.

8:1-3,5-8,12,14 The theme of explanation and understanding is foremost.

9:25    see &lt;&lt;Bbl Dt 6:11 &gt;&gt;

&lt;&lt;Bbl Neh 10:30 abbr &gt;&gt;-39     A list of specific commitments that are later broken.  See 13:11 for a reproof.  Nehemiah is always interested in specific commitment and accountability.

13:4    The relationship is explained in 6:14.
13:13   -- deacon role -- humble service directly for the &quot;house of God.&quot; (or v1?)</pre>
</div>
<div title="NestedSlidersPlugin" modifier="SDM" created="200512161202" modified="201112151711" tags="systemConfig excludeLists" book_key="">
<pre>/***
|Name|NestedSlidersPlugin|
|Source|http://www.TiddlyTools.com/#NestedSlidersPlugin|
|Documentation|http://www.TiddlyTools.com/#NestedSlidersPluginInfo|
|Version|2.4.9|
|Author|Eric Shulman - ELS Design Studios|
|License|http://www.TiddlyTools.com/#LegalStatements &lt;br&gt;and [[Creative Commons Attribution-ShareAlike 2.5 License|http://creativecommons.org/licenses/by-sa/2.5/]]|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides||
|Options|##Configuration|
|Description|show content in nest-able sliding/floating panels, without creating separate tiddlers for each panel's content|
!!!!!Documentation
&gt;see [[NestedSlidersPluginInfo]]
!!!!!Configuration
&lt;&lt;&lt;
&lt;&lt;option chkFloatingSlidersAnimate&gt;&gt; allow floating sliders to animate when opening/closing
&gt;Note: This setting can cause 'clipping' problems in some versions of InternetExplorer.
&gt;In addition, for floating slider animation to occur you must also allow animation in general (see [[AdvancedOptions]]).
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2008.11.15 - 2.4.9 in adjustNestedSlider(), don't make adjustments if panel is marked as 'undocked' (CSS class).  In onClickNestedSlider(), SHIFT-CLICK docks panel (see [[MoveablePanelPlugin]])
|please see [[NestedSlidersPluginInfo]] for additional revision details|
2005.11.03 - 1.0.0 initial public release.  Thanks to RodneyGomes, GeoffSlocock, and PaulPetterson for suggestions and experiments.
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.NestedSlidersPlugin= {major: 2, minor: 4, revision: 9, date: new Date(2008,11,15)};

// options for deferred rendering of sliders that are not initially displayed
if (config.options.chkFloatingSlidersAnimate===undefined)
    config.options.chkFloatingSlidersAnimate=false; // avoid clipping problems in IE

// default styles for 'floating' class
setStylesheet(&quot;.floatingPanel { position:absolute; z-index:10; padding:0.5em; margin:0em; \
    background-color:#eee; color:#000; border:1px solid #000; text-align:left; }&quot;,&quot;floatingPanelStylesheet&quot;);

// if removeCookie() function is not defined by TW core, define it here.
if (window.removeCookie===undefined) {
    window.removeCookie=function(name) {
        document.cookie = name+'=; expires=Thu, 01-Jan-1970 00:00:01 UTC; path=/;';
    }
}

config.formatters.push( {
    name: &quot;nestedSliders&quot;,
    match: &quot;\\n?\\+{3}&quot;,
    terminator: &quot;\\s*\\={3}\\n?&quot;,
    lookahead: &quot;\\n?\\+{3}(\\+)?(\\([^\\)]*\\))?(\\!*)?(\\^(?:[^\\^\\*\\@\\[\\&gt;]*\\^)?)?(\\*)?(\\@)?(?:\\{\\{([\\w]+[\\s\\w]*)\\{)?(\\[[^\\]]*\\])?(\\[[^\\]]*\\])?(?:\\}{3})?(\\#[^:]*\\:)?(\\&gt;)?(\\.\\.\\.)?\\s*&quot;,
    handler: function(w)
        {
            lookaheadRegExp = new RegExp(this.lookahead,&quot;mg&quot;);
            lookaheadRegExp.lastIndex = w.matchStart;
            var lookaheadMatch = lookaheadRegExp.exec(w.source)
            if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart)
            {
                var defopen=lookaheadMatch[1];
                var cookiename=lookaheadMatch[2];
                var header=lookaheadMatch[3];
                var panelwidth=lookaheadMatch[4];
                var transient=lookaheadMatch[5];
                var hover=lookaheadMatch[6];
                var buttonClass=lookaheadMatch[7];
                var label=lookaheadMatch[8];
                var openlabel=lookaheadMatch[9];
                var panelID=lookaheadMatch[10];
                var blockquote=lookaheadMatch[11];
                var deferred=lookaheadMatch[12];

                // location for rendering button and panel
                var place=w.output;

                // default to closed, no cookie, no accesskey, no alternate text/tip
                var show=&quot;none&quot;; var cookie=&quot;&quot;; var key=&quot;&quot;;
                var closedtext=&quot;&gt;&quot;; var closedtip=&quot;&quot;;
                var openedtext=&quot;&lt;&quot;; var openedtip=&quot;&quot;;

                // extra &quot;+&quot;, default to open
                if (defopen) show=&quot;block&quot;;

                // cookie, use saved open/closed state
                if (cookiename) {
                    cookie=cookiename.trim().slice(1,-1);
                    cookie=&quot;chkSlider&quot;+cookie;
                    if (config.options[cookie]==undefined)
                        { config.options[cookie] = (show==&quot;block&quot;) }
                    show=config.options[cookie]?&quot;block&quot;:&quot;none&quot;;
                }

                // parse label/tooltip/accesskey: [label=X|tooltip]
                if (label) {
                    var parts=label.trim().slice(1,-1).split(&quot;|&quot;);
                    closedtext=parts.shift();
                    if (closedtext.substr(closedtext.length-2,1)==&quot;=&quot;)
                        { key=closedtext.substr(closedtext.length-1,1); closedtext=closedtext.slice(0,-2); }
                    openedtext=closedtext;
                    if (parts.length) closedtip=openedtip=parts.join(&quot;|&quot;);
                    else { closedtip=&quot;show &quot;+closedtext; openedtip=&quot;hide &quot;+closedtext; }
                }

                // parse alternate label/tooltip: [label|tooltip]
                if (openlabel) {
                    var parts=openlabel.trim().slice(1,-1).split(&quot;|&quot;);
                    openedtext=parts.shift();
                    if (parts.length) openedtip=parts.join(&quot;|&quot;);
                    else openedtip=&quot;hide &quot;+openedtext;
                }

                var title=show=='block'?openedtext:closedtext;
                var tooltip=show=='block'?openedtip:closedtip;

                // create the button
                if (header) { // use &quot;Hn&quot; header format instead of button/link
                    var lvl=(header.length&gt;5)?5:header.length;
                    var btn = createTiddlyElement(createTiddlyElement(place,&quot;h&quot;+lvl,null,null,null),&quot;a&quot;,null,buttonClass,title);
                    btn.onclick=onClickNestedSlider;
                    btn.setAttribute(&quot;href&quot;,&quot;javascript:;&quot;);
                    btn.setAttribute(&quot;title&quot;,tooltip);
                }
                else
                    var btn = createTiddlyButton(place,title,tooltip,onClickNestedSlider,buttonClass);
                btn.innerHTML=title; // enables use of HTML entities in label

                // set extra button attributes
                btn.setAttribute(&quot;closedtext&quot;,closedtext);
                btn.setAttribute(&quot;closedtip&quot;,closedtip);
                btn.setAttribute(&quot;openedtext&quot;,openedtext);
                btn.setAttribute(&quot;openedtip&quot;,openedtip);
                btn.sliderCookie = cookie; // save the cookiename (if any) in the button object
                btn.defOpen=defopen!=null; // save default open/closed state (boolean)
                btn.keyparam=key; // save the access key letter (&quot;&quot; if none)
                if (key.length) {
                    btn.setAttribute(&quot;accessKey&quot;,key); // init access key
                    btn.onfocus=function(){this.setAttribute(&quot;accessKey&quot;,this.keyparam);}; // **reclaim** access key on focus
                }
                btn.setAttribute(&quot;hover&quot;,hover?&quot;true&quot;:&quot;false&quot;);
                btn.onmouseover=function(ev) {
                    // optional 'open on hover' handling
                    if (this.getAttribute(&quot;hover&quot;)==&quot;true&quot; &amp;&amp; this.sliderPanel.style.display=='none') {
                        document.onclick.call(document,ev); // close transients
                        onClickNestedSlider(ev); // open this slider
                    }
                    // mouseover on button aligns floater position with button
                    if (window.adjustSliderPos) window.adjustSliderPos(this.parentNode,this,this.sliderPanel);
                }

                // create slider panel
                var panelClass=panelwidth?&quot;floatingPanel&quot;:&quot;sliderPanel&quot;;
                if (panelID) panelID=panelID.slice(1,-1); // trim off delimiters
                var panel=createTiddlyElement(place,&quot;div&quot;,panelID,panelClass,null);
                panel.button = btn; // so the slider panel know which button it belongs to
                btn.sliderPanel=panel; // so the button knows which slider panel it belongs to
                panel.defaultPanelWidth=(panelwidth &amp;&amp; panelwidth.length&gt;2)?panelwidth.slice(1,-1):&quot;&quot;;
                panel.setAttribute(&quot;transient&quot;,transient==&quot;*&quot;?&quot;true&quot;:&quot;false&quot;);
                panel.style.display = show;
                panel.style.width=panel.defaultPanelWidth;
                panel.onmouseover=function(event) // mouseover on panel aligns floater position with button
                    { if (window.adjustSliderPos) window.adjustSliderPos(this.parentNode,this.button,this); }

                // render slider (or defer until shown)
                w.nextMatch = lookaheadMatch.index + lookaheadMatch[0].length;
                if ((show==&quot;block&quot;)||!deferred) {
                    // render now if panel is supposed to be shown or NOT deferred rendering
                    w.subWikify(blockquote?createTiddlyElement(panel,&quot;blockquote&quot;):panel,this.terminator);
                    // align floater position with button
                    if (window.adjustSliderPos) window.adjustSliderPos(place,btn,panel);
                }
                else {
                    var src = w.source.substr(w.nextMatch);
                    var endpos=findMatchingDelimiter(src,&quot;+++&quot;,&quot;===&quot;);
                    panel.setAttribute(&quot;raw&quot;,src.substr(0,endpos));
                    panel.setAttribute(&quot;blockquote&quot;,blockquote?&quot;true&quot;:&quot;false&quot;);
                    panel.setAttribute(&quot;rendered&quot;,&quot;false&quot;);
                    w.nextMatch += endpos+3;
                    if (w.source.substr(w.nextMatch,1)==&quot;\n&quot;) w.nextMatch++;
                }
            }
        }
    }
)

function findMatchingDelimiter(src,starttext,endtext) {
    var startpos = 0;
    var endpos = src.indexOf(endtext);
    // check for nested delimiters
    while (src.substring(startpos,endpos-1).indexOf(starttext)!=-1) {
        // count number of nested 'starts'
        var startcount=0;
        var temp = src.substring(startpos,endpos-1);
        var pos=temp.indexOf(starttext);
        while (pos!=-1)  { startcount++; pos=temp.indexOf(starttext,pos+starttext.length); }
        // set up to check for additional 'starts' after adjusting endpos
        startpos=endpos+endtext.length;
        // find endpos for corresponding number of matching 'ends'
        while (startcount &amp;&amp; endpos!=-1) {
            endpos = src.indexOf(endtext,endpos+endtext.length);
            startcount--;
        }
    }
    return (endpos==-1)?src.length:endpos;
}
//}}}
//{{{
window.onClickNestedSlider=function(e)
{
    if (!e) var e = window.event;
    var theTarget = resolveTarget(e);
    while (theTarget &amp;&amp; theTarget.sliderPanel==undefined) theTarget=theTarget.parentNode;
    if (!theTarget) return false;
    var theSlider = theTarget.sliderPanel;
    var isOpen = theSlider.style.display!=&quot;none&quot;;

    // if SHIFT-CLICK, dock panel first (see [[MoveablePanelPlugin]])
    if (e.shiftKey &amp;&amp; config.macros.moveablePanel) config.macros.moveablePanel.dock(theSlider,e);

    // toggle label
    theTarget.innerHTML=isOpen?theTarget.getAttribute(&quot;closedText&quot;):theTarget.getAttribute(&quot;openedText&quot;);
    // toggle tooltip
    theTarget.setAttribute(&quot;title&quot;,isOpen?theTarget.getAttribute(&quot;closedTip&quot;):theTarget.getAttribute(&quot;openedTip&quot;));

    // deferred rendering (if needed)
    if (theSlider.getAttribute(&quot;rendered&quot;)==&quot;false&quot;) {
        var place=theSlider;
        if (theSlider.getAttribute(&quot;blockquote&quot;)==&quot;true&quot;)
            place=createTiddlyElement(place,&quot;blockquote&quot;);
        wikify(theSlider.getAttribute(&quot;raw&quot;),place);
        theSlider.setAttribute(&quot;rendered&quot;,&quot;true&quot;);
    }

    // show/hide the slider
    if(config.options.chkAnimate &amp;&amp; (!hasClass(theSlider,'floatingPanel') || config.options.chkFloatingSlidersAnimate))
        anim.startAnimating(new Slider(theSlider,!isOpen,e.shiftKey || e.altKey,&quot;none&quot;));
    else
        theSlider.style.display = isOpen ? &quot;none&quot; : &quot;block&quot;;

    // reset to default width (might have been changed via plugin code)
    theSlider.style.width=theSlider.defaultPanelWidth;

    // align floater panel position with target button
    if (!isOpen &amp;&amp; window.adjustSliderPos) window.adjustSliderPos(theSlider.parentNode,theTarget,theSlider);

    // if showing panel, set focus to first 'focus-able' element in panel
    if (theSlider.style.display!=&quot;none&quot;) {
        var ctrls=theSlider.getElementsByTagName(&quot;*&quot;);
        for (var c=0; c&lt;ctrls.length; c++) {
            var t=ctrls[c].tagName.toLowerCase();
            if ((t==&quot;input&quot; &amp;&amp; ctrls[c].type!=&quot;hidden&quot;) || t==&quot;textarea&quot; || t==&quot;select&quot;)
                { try{ ctrls[c].focus(); } catch(err){;} break; }
        }
    }
    var cookie=theTarget.sliderCookie;
    if (cookie &amp;&amp; cookie.length) {
        config.options[cookie]=!isOpen;
        if (config.options[cookie]!=theTarget.defOpen) window.saveOptionCookie(cookie);
        else window.removeCookie(cookie); // remove cookie if slider is in default display state
    }

    // prevent SHIFT-CLICK from being processed by browser (opens blank window... yuck!)
    // prevent clicks *within* a slider button from being processed by browser
    // but allow plain click to bubble up to page background (to close transients, if any)
    if (e.shiftKey || theTarget!=resolveTarget(e))
        { e.cancelBubble=true; if (e.stopPropagation) e.stopPropagation(); }
    Popup.remove(); // close open popup (if any)
    return false;
}
//}}}
//{{{
// click in document background closes transient panels
document.nestedSliders_savedOnClick=document.onclick;
document.onclick=function(ev) { if (!ev) var ev=window.event; var target=resolveTarget(ev);

    if (document.nestedSliders_savedOnClick)
        var retval=document.nestedSliders_savedOnClick.apply(this,arguments);
    // if click was inside a popup... leave transient panels alone
    var p=target; while (p) if (hasClass(p,&quot;popup&quot;)) break; else p=p.parentNode;
    if (p) return retval;
    // if click was inside transient panel (or something contained by a transient panel), leave it alone
    var p=target; while (p) {
        if ((hasClass(p,&quot;floatingPanel&quot;)||hasClass(p,&quot;sliderPanel&quot;))&amp;&amp;p.getAttribute(&quot;transient&quot;)==&quot;true&quot;) break;
        p=p.parentNode;
    }
    if (p) return retval;
    // otherwise, find and close all transient panels...
    var all=document.all?document.all:document.getElementsByTagName(&quot;DIV&quot;);
    for (var i=0; i&lt;all.length; i++) {
         // if it is not a transient panel, or the click was on the button that opened this panel, don't close it.
        if (all[i].getAttribute(&quot;transient&quot;)!=&quot;true&quot; || all[i].button==target) continue;
        // otherwise, if the panel is currently visible, close it by clicking it's button
        if (all[i].style.display!=&quot;none&quot;) window.onClickNestedSlider({target:all[i].button})
        if (!hasClass(all[i],&quot;floatingPanel&quot;)&amp;&amp;!hasClass(all[i],&quot;sliderPanel&quot;)) all[i].style.display=&quot;none&quot;;
    }
    return retval;
};
//}}}
//{{{
// adjust floating panel position based on button position
if (window.adjustSliderPos==undefined) window.adjustSliderPos=function(place,btn,panel) {
    if (hasClass(panel,&quot;floatingPanel&quot;) &amp;&amp; !hasClass(panel,&quot;undocked&quot;)) {
        // see [[MoveablePanelPlugin]] for use of 'undocked'
        var rightEdge=document.body.offsetWidth-1;
        var panelWidth=panel.offsetWidth;
        var left=0;
        var top=btn.offsetHeight;
        if (place.style.position==&quot;relative&quot; &amp;&amp; findPosX(btn)+panelWidth&gt;rightEdge) {
            left-=findPosX(btn)+panelWidth-rightEdge; // shift panel relative to button
            if (findPosX(btn)+left&lt;0) left=-findPosX(btn); // stay within left edge
        }
        if (place.style.position!=&quot;relative&quot;) {
            var left=findPosX(btn);
            var top=findPosY(btn)+btn.offsetHeight;
            var p=place; while (p &amp;&amp; !hasClass(p,'floatingPanel')) p=p.parentNode;
            if (p) { left-=findPosX(p); top-=findPosY(p); }
            if (left+panelWidth&gt;rightEdge) left=rightEdge-panelWidth;
            if (left&lt;0) left=0;
        }
        panel.style.left=left+&quot;px&quot;; panel.style.top=top+&quot;px&quot;;
    }
}
//}}}
//{{{
// TW2.1 and earlier:
// hijack Slider stop handler so overflow is visible after animation has completed
Slider.prototype.coreStop = Slider.prototype.stop;
Slider.prototype.stop = function()
    { this.coreStop.apply(this,arguments); this.element.style.overflow = &quot;visible&quot;; }

// TW2.2+
// hijack Morpher stop handler so sliderPanel/floatingPanel overflow is visible after animation has completed
if (version.major+.1*version.minor+.01*version.revision&gt;=2.2) {
    Morpher.prototype.coreStop = Morpher.prototype.stop;
    Morpher.prototype.stop = function() {
        this.coreStop.apply(this,arguments);
        var e=this.element;
        if (hasClass(e,&quot;sliderPanel&quot;)||hasClass(e,&quot;floatingPanel&quot;)) {
            // adjust panel overflow and position after animation
            e.style.overflow = &quot;visible&quot;;
            if (window.adjustSliderPos) window.adjustSliderPos(e.parentNode,e.button,e);
        }
    };
}
//}}}</pre>
</div>
<div title="NestedStyleSheets" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="features">
<pre>Within a CustomStyleSheet, you can include the text of another tiddler by including it in double square brackets. For example, if the tiddler MyFavouriteColour contains {{{#ff763e}}}, and the StyleSheet tiddler contained:

{{{
#mainMenu {background-color:[[MyFavouriteColour]];}
}}}

Then, the effect is that each CSS declaration will be set to {{{background-color: #ff763e;}}}.

In practice, for small bits of text like a colour, it makes sense to use TiddlerSlicing format to reference a chunk of text within a tiddler. See ColorPalette and StyleSheetColors for an example.

Of course, you can use this mechanism to redirect any part of a stylesheet, not just colours. And you can nest references for more complex effects.</pre>
</div>
<div title="NestedTemplates" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="features">
<pre>A PageTemplate, ViewTemplate or EditTemplate can include the text of another tiddler by including it in double square brackets. For example:

{{{
&lt;div&gt;
[[MyHeader]]
&lt;/div&gt;
}}}

You can also use TiddlerSlicing format to include a smaller chunk of the text of a tiddler.</pre>
</div>
<div title="New Menu TODO" modifier="SDM" created="201211051356" book_key="">
<pre>!! Book Tiddlers
{{{
{{threecolumns{
{{medium{ ''Genesis'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Genesis.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Genesis' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabGenesis]] }}}
}}}
}}}
!!! Book Collection Tabs
{{{
Histories
Poetry
Prophets
Letters
Paul


@@display:block;height:32em;overflow:auto;{{ floatright tiny { [[tabTorah]] }}}
{{big{ ''The TORAH'' }}}
&lt;&lt;tabs &quot;Genesis&quot;
&quot;Genesis&quot; &quot;&quot; tabGenesis
&quot;Exodus&quot; &quot;&quot; tabExodus
&quot;Leviticus&quot; &quot;&quot; tabLeviticus
&quot;Numbers&quot; &quot;&quot; tabNumbers
&quot;Deuteronomy&quot; &quot;&quot; tabDeuteronomy
&gt;&gt;
}}}</pre>
</div>
<div title="NewHerePlugin" modifier="MPTW" created="201106271022" modified="201111130925" tags="systemConfig excludeLists">
<pre>/***
|Name:|NewHerePlugin|
|Description:|Creates the new here and new journal macros|
|Version:|3.0a|
|Date:|27-Jun-2011|
|Source:|http://mptw.tiddlyspot.com/#NewHerePlugin|
|Author:|Simon Baird &lt;simon.baird@gmail.com&gt;|
|License|http://mptw.tiddlyspot.com/#TheBSDLicense|
***/
//{{{
merge(config.macros, {
  newHere: {
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
      wikify(&quot;&lt;&lt;newTiddler &quot;+paramString+&quot; tag:[[&quot;+tiddler.title+&quot;]]&gt;&gt;&quot;,place,null,tiddler);
    }
  },
  newJournalHere: {
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
      wikify(&quot;&lt;&lt;newJournal &quot;+paramString+&quot; tag:[[&quot;+tiddler.title+&quot;]]&gt;&gt;&quot;,place,null,tiddler);
    }
  }
});

//}}}

</pre>
</div>
<div title="NewMeansNewPlugin" modifier="MPTW" created="201106271023" modified="201111130925" tags="systemConfig excludeLists">
<pre>/***
|Name:|NewMeansNewPlugin|
|Description:|If 'New Tiddler' already exists then create 'New Tiddler (1)' and so on|
|Version:|1.1.1a|
|Date:|27-Jun-2011|
|Source:|http://mptw.tiddlyspot.com/empty.html#NewMeansNewPlugin|
|Author:|Simon Baird &lt;simon.baird@gmail.com&gt;|
|License|http://mptw.tiddlyspot.com/#TheBSDLicense|
!!Note: I think this should be in the core
***/
//{{{

// change this or set config.newMeansNewForJournalsToo it in MptwUuserConfigPlugin
if (config.newMeansNewForJournalsToo == undefined) config.newMeansNewForJournalsToo = true;

String.prototype.getNextFreeName = function() {
  numberRegExp = / \(([0-9]+)\)$/;
  var match = numberRegExp.exec(this);
  if (match) {
  var num = parseInt(match[1]) + 1;
    return this.replace(numberRegExp,&quot; (&quot;+num+&quot;)&quot;);
  }
  else {
    return this + &quot; (1)&quot;;
  }
}

config.macros.newTiddler.checkForUnsaved = function(newName) {
  var r = false;
  story.forEachTiddler(function(title,element) {
    if (title == newName)
      r = true;
  });
  return r;
}

config.macros.newTiddler.getName = function(newName) {
  while (store.getTiddler(newName) || config.macros.newTiddler.checkForUnsaved(newName))
    newName = newName.getNextFreeName();
  return newName;
}


config.macros.newTiddler.onClickNewTiddler = function()
{
  var title = this.getAttribute(&quot;newTitle&quot;);
  if(this.getAttribute(&quot;isJournal&quot;) == &quot;true&quot;) {
    title = new Date().formatString(title.trim());
  }

  // ---- these three lines should be the only difference between this and the core onClickNewTiddler
  if (config.newMeansNewForJournalsToo || this.getAttribute(&quot;isJournal&quot;) != &quot;true&quot;)
    title = config.macros.newTiddler.getName(title);

  var params = this.getAttribute(&quot;params&quot;);
  var tags = params ? params.split(&quot;|&quot;) : [];
  var focus = this.getAttribute(&quot;newFocus&quot;);
  var template = this.getAttribute(&quot;newTemplate&quot;);
  var customFields = this.getAttribute(&quot;customFields&quot;);
  if(!customFields &amp;&amp; !store.isShadowTiddler(title))
    customFields = String.encodeHashMap(config.defaultCustomFields);
  story.displayTiddler(null,title,template,false,null,null);
  var tiddlerElem = story.getTiddler(title);
  if(customFields)
    story.addCustomFields(tiddlerElem,customFields);
  var text = this.getAttribute(&quot;newText&quot;);
  if(typeof text == &quot;string&quot;)
    story.getTiddlerField(title,&quot;text&quot;).value = text.format([title]);
  for(var t=0;t&lt;tags.length;t++)
    story.setTiddlerTag(title,tags[t],+1);
  story.focusTiddler(title,focus);
  return false;
};

//}}}

</pre>
</div>
<div title="NoCaseListPlugin" modifier="SDM" created="201012202033" tags="systemConfig excludeLists">
<pre>/***
|''Name:''|NoCaseListPlugin|
|''Description:''|Adds a new command ''noCase'' to the core list macro|
|''Author:''|Mario Pietsch|
|''Version:''|0.2.0|
|''Date:''|2010.07.28|
|''Status:''|''beta''|
|''Source:''|http://apm-plugins.tiddlyspot.com/#NoCaseListPlugin|
|''License''|[[MIT License]]|
|''CoreVersion:''|2.5.0|
|''Requires:''||
|''Documentation:''|this file|
|''Keywords:''|list, sort, not case sensitive, filter|

!Description
This plugin performs a alphabetical sort for tiddlers, but it is not case sensitive. That means ab = AB = aB = Ab! And it does some little filtering using the RegExp syntax.
The RegExp Syntax can be a little bit tricky to read and configure. But the best description I have found is at [[regular-expressions.info]]. This plugin is aware of 'excludeLists', and does not display them.

!Example
{{{
&lt;&lt;list noCase title '[m]'&gt;&gt;
}}}
&lt;&lt;list noCase title '[m]'&gt;&gt;

!Default Format
{{{
&lt;&lt;list noCase&gt;&gt;
}}}

!Other Possibilities
&lt;&lt;&lt;
!!!Reverse order
{{{
&lt;&lt;list noCase -title &gt;&gt;
}}}

!!!Some basic filtering
*Every tiddler title, that starts with a number from 0 to 9.
**Alphabetically sorted
{{{
&lt;&lt;list noCase -title '[0-9]'&gt;&gt;
}}}

*Every tiddler title, that starts with an ''&quot;a&quot;'' or ''&quot;b&quot;'' or ''&quot;c&quot;''.
{{{
&lt;&lt;list noCase title '[abc]'&gt;&gt;
}}}

*Every tiddler title, that starts with exactly ''abc''.
{{{
&lt;&lt;list noCase title 'abc'&gt;&gt;
}}}

I think this is enough power, for the beginning. See [[XCaseListPlugin|http://apm-plugins.tiddlyspot.com/#XCaseListPlugin]] for more.
&lt;&lt;&lt;
!History
V 0.2.0 - 2010.07.28
*sorting can be done by custom field now

V 0.1.2 - 2010.03.04
*Fixed the source links

V 0.1.1 - 2010.02.24
*some minimum changes
*some more docu

V 0.1.0 - 2010.02.19
*Initial release

!Code
***/

/*{{{*/

if(!version.extensions.NoCaseListPlugin) { //# ensure that the plugin is only installed once
version.extensions.NoCaseListPlugin = { installed: true };

config.macros.list.noCase = {};
config.macros.list.noCase.handler = function(params)
{

var defaultField = &quot;+title&quot;;
var lookupField  = &quot;tags&quot;;
var lookupValue  = &quot;excludeLists&quot;;
var lookupMatch  = false;
var results      = [];
var match        = null;

var sortField = params[1] || defaultField;

// get the sorting order
var asc = 1;
switch (sortField.substr(0, 1)) {
    case &quot;-&quot;:
        asc = -1;
    case &quot;+&quot;:
        sortField = sortField.substr(1);
        break;
    default:;
}

// define regExp and add ^ .. start of string
var regSnip = params[2] || '.'
var regExp = new RegExp('^' + regSnip, 'im');

store.forEachTiddler(
    function (title, tiddler) {
        var f = !lookupMatch;
        for (var lookup = 0; lookup &lt; tiddler[lookupField].length; lookup++) {
            if (tiddler[lookupField][lookup] == lookupValue) {
                f = lookupMatch;
            }
        }
        if (f) {
            // check if tiddler sortField matches regExp
//          match = tiddler[sortField].match(regExp);
            match = tiddler.title.match(regExp);
            if (match) results.push(tiddler);
        }
    }
);

// check, if sortField is a custom field
// sort and return the results.

//console.log('isStandard: ', TiddlyWiki.isStandardField(sortField), sortField, results);

if (TiddlyWiki.isStandardField(sortField)) {
    results.sort(function (a,b) {
        return a[sortField].toLowerCase() &lt; b[sortField].toLowerCase() ? -asc : a[sortField].toLowerCase() == b[sortField].toLowerCase() ? 0 : asc;});
}
else {
    results.sort(function (a, b) {
        return a.fields[sortField].toLowerCase() &lt; b.fields[sortField].toLowerCase() ? - asc : a.fields[sortField].toLowerCase() == b.fields[sortField].toLowerCase() ? 0 : + asc;});
}

return results;
} // handler

} //# end of &quot;install only once&quot;

/*}}}*/</pre>
</div>
<div title="Nobility" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Is 32:8 &gt;&gt;; &lt;&lt;Bbl Jn 18:37 &gt;&gt;</pre>
</div>
<div title="Nostalgia" modifier="SDM" created="201208081539" book_key="">
<pre>* [[Satan]] wants to dupe me into a false sense of nostalgia.  Maybe I'm actually doing as well as I ever have, or better.  </pre>
</div>
<div title="Num-01-01-note" modifier="SDM" created="201010271656" modified="201208061505" tags="Comment" book_key="460001a">
<pre>1:53   Holiness keeps away the wrath of God.

5:8-10  Who is the his   ??

8:5-22  Their consecration has nothing to do with personal volition or emotion.

9:10    on a distant journey   --  though not solicited in the query, God says this doesn't obstruct the observance of the Passover.  This is important in the priesthood of the believer and decentralization of the Church, and throughout the generations mentioned here there would be many Passovers observed from the ends of the earth.
9:17-23 We can pretty well figure that when the ark was moving, the children were wishing for rest, and that when it was at rest, the children were feeling restless.   But still, in this they were faithful.

10:35-36    God is declaring that there are seasons of activity and rest.

11:1    Apparently we should take warning, and avoid being like those who complain of adversity in the hearing of the Lord.   See vs. 20.  Note that the outskirts of the camp were consumed; apparently it's somewhat safer in the middle.
11:4    Why weren't they eating from the livestock ??
11:10   Moses' displeasure is apparently misplaced.  Instead of being displeased along with the Lord, he is displeased with or toward the Lord.
11:16   whom you know to be the elders .  Leaders make themselves known.  Selections in church leadership should be very natural.
11:22   see &lt;&lt;Bbl Mt 15:33 &gt;&gt;
&lt;&lt;Bbl Num 11:29 abbr &gt;&gt;    Misplaced jealousy.

14, 15  The lessons of these two chapters somewhat echo the lessons Moses had to learn considering his credentials for service.  However, the order is reversed;  first, a refusal to accept God's credentials, and second, a presumptuous attempt to Acts on their own.
14:12   Moses' reply to this reveals his self-sacrificial pastoring heart for the people.  Dispossess  is quite a word; they are to be dispossessed not from the land  --  for it is not theirs  --  but from the promise of the land.  See &lt;&lt;Bbl Mt 21:40 &gt;&gt;-43
&lt;&lt;Bbl Num 14:17 abbr &gt;&gt; O Lord, this is but an opportunity to show how powerful You truly are!  Moses knew &quot;what kind of spirit he was of (&lt;&lt;Bbl Lk 9:55 &gt;&gt;)&quot;.
14:24   I wonder why Joshua's name is not included here.
14:28   Perhaps this is the only instance where God answers a request for death.
14:29   Numbered   --  emphasizing the waste of the struggle so far.

15:2    After the events of chapter 14, immediately this restatement of the promise.

16:3    They are correct in the preamble, but fail to recognize that the leadership is ordained by God and actually a humble work of service.  Probably their false idea of leadership comes from the way they would behave if they were in that position.
16:13   with milk and honey   --  here referring to Egypt!   Lord it over us  shows the same false idea that Korah espouses.
16:21   A second time this Judgment is proposed.
16:22   This title also in 27:16.
16:26   see &lt;&lt;Bbl Gn 19:15 &gt;&gt;-17
&lt;&lt;Bbl Num 16:38 abbr &gt;&gt;-40     What a symbol of the wrath of God upon those who make false offerings.
16:45   The third proposal.

17:8    We are priests, and we bear fruit miraculously.

18:32   This was the sin of Eli's sons.  </pre>
</div>
<div title="Num-20-01-note" modifier="SDM" created="201208061504" modified="201211162105" tags="Comment" book_key="">
<pre>20:9 -- Christ the [[Rock]]

&lt;&lt;Bbl Num 21:4&gt;&gt;-9
{{hilite{
Moses prayed for the people. Yahweh said to Moses, &quot;Make a fiery serpent, and set it on a standard: and it shall happen, that everyone who is bitten, when he sees it, shall live.&quot;
}}}
* Fulfilled in Christ, &lt;&lt;Bbl Jn 3:14&gt;&gt;.  The Gospel is summarized in this episode.
* God uses the very image of the snake to provide a remedy, which underscores His sovereignty over any difficult circumstance we face.  When we consider the serpent is a symbol of [[Satan]], the significance increases.
* The snake is made of bronze or brass, a base material (unlike the gold of the Tabernacle). God is reproving the wicked, using a base material to reprove a base nature.  See [[Discipline]].  He is also proving that he can work through any medium and assert virtue merely by his choice.
* &lt;&lt;Bbl Ex 15:26&gt;&gt;  //none of the diseases of the Egyptians//
* Imagine the committed rebel who must //force// himself to look to Moses.
* This is the last complaining in Numbers.  Perhaps the old generation is being supplanted by the new, and the new has a capacity for faith.  If so, this plague certainly accelerated the process.
22:22   Most likely, as a satan.
22:29   A specific irony here, in that the words Balaam speaks could easily be from the Lord to him  --  with the difference that a drawn sword is present!
23:9    An apt description of us.
23:22   This might mean that as horns are to a wild ox, so the Lord is to Israel ??
23:23   We find that odd agreement between God's expressed will and the world of occult signs, as seen in the wise men seeking the King of the Jews, or the medium bringing up Samuel.
23:24-25    It may be that Balak interrupts the discourse at this verse!

24:11   A common statement of the world.

25:8    See &lt;&lt;Bbl Pr 7:23 &gt;&gt;.
    &quot;But we love each other&quot; becomes hyperbolically irrelevant as well as irreverent.
25:16-18    When another person has been an agent of temptation for us, especially as those young in the way, hostility is one way to conclude the relationship.  It's better than continuing in sin.  When it's someone close, like a parent, it does make difficulties.

27:16   This title also in 16:22.

30:15   The possibility of guilt seems odd in this last verse.  Maybe it means, if he annuls the vow more than a day after hearing of it.
    I wonder if this didn't become a part of the wedding ceremony</pre>
</div>
<div title="Numerology" modifier="SDM" created="201004120330" modified="201210071808" book_key="">
<pre>!! Three
* days in the tomb: &lt;&lt;Bbl Jer 6:2 &gt;&gt;.  Jonah.   Days of darkness over Egypt, hours of darkness over Israel (or the world?) at Christ's passion.
!! Four
* the world.  Four corners, four winds (Mike Reed)
!! Six
* man.
** &lt;&lt;Bbl Rev 13:18 &gt;&gt;.
** Sixth day of creation.
** &lt;&lt;Bbl Ex 24:16 &gt;&gt; -- the cloud covering the mountain
!! Seven
* perfection.
** Sabbath.  God's rest in creation
** &lt;&lt;Bbl Ex 24:16 &gt;&gt;, God calls Moses up.
** Hebrew term for [[Vow]]
** 77 -- &lt;&lt;Bbl Gn 4:24 &gt;&gt;, &lt;&lt;Bbl Mt 18:22 &gt;&gt;.  These respectively reflect an oath, and a commitment, faithfulness and perseverance
** &lt;&lt;Bbl 2Chron 36:21 &gt;&gt; //sabbath rest ... until the seventy years were completed//
** Spirits -- &lt;&lt;Bbl Is 11:2 &gt;&gt;; &lt;&lt;Bbl Rev 3:2 &gt;&gt;
!! Ten
the digits; power, resources, tithe.
!! Thirteen
rebellion.
!! Twelve
foundations and government.  &lt;&lt;Bbl Mt 19:28 &gt;&gt;.
!! Forty
* Keil and Delitzsch, vol 1, p. 75.  Days on Mt Sinai, years in wilderness, Christ's temptation.  &lt;&lt;Bbl Dt 8:9 &gt;&gt;-11
* Limit on lashes for punishment
!! Seventy
&lt;&lt;Bbl Ex 24:9 &gt;&gt;; &lt;&lt;Bbl Num 11:24 &gt;&gt;-25 ; &lt;&lt;Bbl Lk 10:1 &gt;&gt;</pre>
</div>
<div title="Obedience" modifier="SDM" created="201004120330" modified="201301070115" book_key="">
<pre>!!! Toward God
* Inseparable from [[Faith]].
* May be dictated by [[Scruples]].
* [[Service]] -- &lt;&lt;Bbl Ps 32:9 &gt;&gt;, &lt;&lt;Bbl Dan 3:12 &gt;&gt;; &lt;&lt;Bbl 2Cor 1:22 &gt;&gt;.
* [[John-02-01-note]] on John 2:7-8
* &lt;&lt;Bbl Heb 4:7 &gt;&gt;-11
* &lt;&lt;Bbl Pr 28:14 &gt;&gt;
* [[Humility]], [[Disciple]]
* [[Decision]]
* @@color:brown;The best measure of a spiritual life is not its ecstasies but its obedience.@@ // -- Oswald Chambers//
* @@color:indigo;God's will hath no 'why'.@@ // -- from Maria Von Trapp's autobiography -- the Mother Superior's ring?//
!!! Toward earthly [[Authority]]
* &lt;&lt;Bbl Est 2:20 &gt;&gt;, &lt;&lt;Bbl Ecc 8:1 &gt;&gt;-9 ; &lt;&lt;Bbl Pr 24:21 &gt;&gt;; &lt;&lt;Bbl Pr 22:11 &gt;&gt;
* justifiable disobedience to:      &lt;&lt;Bbl Dan 6:10 &gt;&gt;-12 </pre>
</div>
<div title="Occult" modifier="SDM" created="201004120330" modified="201209021814" book_key="">
<pre>&lt;&lt;Bbl Is 8:19 &gt;&gt;, &lt;&lt;Bbl Is 19:3 &gt;&gt;, &lt;&lt;Bbl Is 65:4 &gt;&gt;, &lt;&lt;Bbl Ez 13:18 &gt;&gt;-21 , &lt;&lt;Bbl Ez 21:23 &gt;&gt;
&lt;&lt;Bbl Ps 16:5 &quot;&quot; note &gt;&gt; (this ref may be misplaced)
</pre>
</div>
<div title="Oil" modifier="SDM" created="201012240537">
<pre>* [[Anointing]]
* [[Food]]
* &lt;&lt;Bbl Ps 133:2 &gt;&gt;
| Oil |comes from the olive tree |necessary for cooking |
| [[Favor]] |comes from the Lord |necessary for life |</pre>
</div>
<div title="One-In-Three" modifier="SDM" created="201004120330" modified="201211150214" book_key="">
<pre>* [[Family]], [[God]]
{{medium{
* [[Father-Son]]
* [[Spirit-Son]]
* [[Father-Spirit-Son]]
}}}
* At work in our redemption:  Edwards, p 34
* Statement of Faith:  @@color:darkgreen;eternally existing in a loving ''unity of three'' equally divine Persons: the Father, the Son and the Holy Spirit@@.
* [[Mystery]]
* The term //Trinity//:  There is no proof text, no lexicon entry.  Why not drop it?  Why bother with trying to defend it, for example for Muslims?
* //One// should have the emphasis.  ~Three-In-One is not so suitable.
* &lt;&lt;Bbl Dt 6:4 &gt;&gt;  One,  not of singularity but of [[Unity]].  Same as &lt;&lt;Bbl Gn 2:22 &gt;&gt;-24 :  Elohim,  plural of El,  with a singular verb!   ONE God, &lt;&lt;Bbl Gal 3:20 &gt;&gt;, &lt;&lt;Bbl Jn 10:30 &gt;&gt;
* The MCV model is intriguingly similar.
!!! Father
* &lt;&lt;Bbl Mk 13:2 &gt;&gt;
!!! Father and Spirit
* &lt;&lt;Bbl Gn 1:1 &gt;&gt;-2
* &lt;&lt;Bbl Acts 9:31 &gt;&gt;
* &lt;&lt;Bbl Rom 8:11 &gt;&gt;
* &lt;&lt;Bbl 1Cor 2:10-11 &gt;&gt;
!!! Spirit
* [[SpiritOfChrist]]
* &lt;&lt;Bbl Jn 4:24 &gt;&gt;
* &lt;&lt;Bbl Acts 5:1 &gt;&gt;-4
* &lt;&lt;Bbl Rom 1:4 &gt;&gt;
* &lt;&lt;Bbl 2Cor 3:17 &gt;&gt;
!!! Son
* &lt;&lt;Bbl Ps 2:12 &gt;&gt;
* &lt;&lt;Bbl Pr 30:4 &gt;&gt;
* &lt;&lt;Bbl Dan 3:25 &gt;&gt;
* &lt;&lt;Bbl Dan 7:13 &gt;&gt;
* &lt;&lt;Bbl Col 1:15 &gt;&gt;
* &lt;&lt;Bbl Col 2:9 &gt;&gt;</pre>
</div>
<div title="OneAnother" modifier="SDM" created="201109271638">
<pre>* Rom 12.  //alalan// = one another.   8 occuranaces.  Gene Getz' study.
* Body is exclusively Paul's metaphor
* You can't say to me, 'I don't need you.'
* [[Fellowship]]</pre>
</div>
<div title="OpenSourceLicense" creator="psd" modifier="jermolene" created="201102111106" modified="201110201351" tags="concepts">
<pre>TiddlyWiki is published under a BSD OpenSourceLicense that gives you the freedom to use it pretty much however you want, including for commercial purposes, as long as you keep the copyright notice. (You can see the full license text by doing a 'view source' in your browser).
</pre>
</div>
<div title="Openness" modifier="SDM" created="201004120330" modified="201211161327" book_key="">
<pre>* &lt;&lt;Bbl Is 45:19 &gt;&gt;, &lt;&lt;Bbl Is 48:16 &gt;&gt;, &lt;&lt;Bbl Mk 14:49 &gt;&gt;, &lt;&lt;Bbl Jn 18:20 &gt;&gt;.  See {{anti{[[Secrecy]]}}}.
* [[Integrity]], //transparency, transparent.//</pre>
</div>
<div title="Opera" creator="psd" modifier="jermolene" created="201102111106" modified="201111031802" tags="browsers">
<pre>~TiddlyWiki works with all recent versions of Opera, and can save changes using the TiddlySaver Java applet. If you're experiencing problems, make sure you've followed the appropriate [[downloading guidelines|Downloading]].</pre>
</div>
<div title="OrphanTiddlers" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="features">
<pre>The 'Orphans' option on the MoreTab shows you the names of tiddlers that aren't linked to from any other tiddlers - in other words, tiddlers that there is no way for readers to find other than searching for them.</pre>
</div>
<div title="Osmosoft" creator="psd" modifier="jermolene" created="201102111106" modified="201110201351">
<pre>Osmosoft Limited was founded by JeremyRuston in 2005, and acquired by [[BT|http://btplc.com]] in 2007.

Osmosoft is now a small team within [[BT|http://www.btplc.com/]] that focuses on showing the value of open source working methods. It does this through working with the community on the ongoing development of TiddlyWiki, TiddlyWeb and TiddlySpace, and applying them to solve problems within BT.

See http://www.osmosoft.com/ for more details.
</pre>
</div>
<div title="PageTemplate" modifier="SDM" created="200903121719" modified="201211291827" tags="template excludeLists" book_key="">
<pre>&lt;!--{{{--&gt;
&lt;div class='header'  macro='gradient vert [[ColorPalette::PrimaryLight]] [[ColorPalette::PrimaryMid]]'&gt;
&lt;div class='headerShadow'&gt;
&lt;span class='siteTitle' refresh='content' tiddler='SiteTitle'&gt;&lt;/span&gt;
&lt;span class='siteSubtitle' refresh='content' tiddler='SiteSubtitle'&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;div class='headerForeground'&gt;
&lt;span class='siteTitle' refresh='content' tiddler='SiteTitle'&gt;&lt;/span&gt;
&lt;span class='siteSubtitle' refresh='content' tiddler='SiteSubtitle'&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id='commandBox' class='commandBox' refresh='content' force='true' tiddler='StoryMenuTop'&gt;&lt;/div&gt;
&lt;div id='searchBox' class='searchBox' refresh='content' force='true' tiddler='SiteNavInline'&gt;&lt;/div&gt;
&lt;span class='buttonMenu' refresh='content' tiddler='ButtonMenu'&gt;&lt;/span&gt;
&lt;div id='breadCrumbs' class='breadCrumbs' style='font-size:80%;padding:0 1em;'&gt;&lt;/div&gt;
&lt;div id='mainMenu' refresh='content' force='true' tiddler='MainMenu'&gt;&lt;/div&gt;
&lt;div id='sidebar'&gt;
&lt;div id='sidebarOptions' refresh='content' tiddler='SideBarOptions'&gt;&lt;/div&gt;
&lt;div id='sidebarTabs' refresh='content' force='true' tiddler='SideBarTabs'&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id='displayArea'&gt;
&lt;div id='messageArea' ondblclick='clearMessage()'&gt;&lt;/div&gt;
&lt;div id='tiddlerDisplay'&gt;&lt;/div&gt;
&lt;div style=&quot;position:fixed;z-index:1001;bottom:.3em;right:.3em;cursor:pointer;font-size:9pt;&quot;&gt;
    &lt;a href=&quot;javascript:window.scrollTo(0,0)&quot; title=&quot;scroll to top of page&quot;&gt;&amp;#x25b2;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;!--}}}--&gt;</pre>
</div>
<div title="PageTemplate shadows" creator="matt" modifier="matt" created="201102111612" modified="201102151511" tags="shadow">
<pre>This tiddler contains the mark up to display the page. You can change the mark up to create a custom view of the page.

By default it contains the following markup:

{{{
&lt;!--{{{--&gt;
&lt;div class='header'&gt;
	&lt;div id='sidebarSearch'&gt;
		&lt;span macro='search'&gt;&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class='headerForeground'&gt;
		&lt;span class='siteTitle' refresh='content' tiddler='SiteTitle'&gt;&lt;/span&gt;
		&lt;span class='siteSubtitle' refresh='content' tiddler='SiteSubtitle'&gt;&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class='clearFloat'&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id='menuBar'&gt;
	&lt;div id='mainMenu' refresh='content' tiddler='MainMenu'&gt;&lt;/div&gt;
	&lt;div id='sidebarOptions' refresh='content' tiddler='SideBarOptions'&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id='displayArea'&gt;
	&lt;div id='messageArea'&gt;&lt;/div&gt;
	&lt;div id='tiddlerDisplay'&gt;&lt;/div&gt;
	&lt;div id='sidebarTabs' refresh='content' force='true' tiddler='SideBarTabs'&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;!--}}}--&gt;
}}}</pre>
</div>
<div title="PaletteViewMacro" modifier="SDM" created="201112082253" tags="systemConfig excludeLists" book_key="">
<pre>/***
|''Name''|PaletteViewMacro|
|''Version''|0.2|
|''Author''|FND|
|''Source''|[[FND's DevPad|http://devpad.tiddlyspot.com/#PaletteViewMacro]]|
|''License''|[[Creative Commons Attribution-ShareAlike 3.0 License|http://creativecommons.org/licenses/by-sa/3.0/]]|
|''~CoreVersion''|2.1|
|''Type''|macro|
|''Requires''|N/A|
|''Overrides''|N/A|
|''Description''|Displays color palettes.|
!Notes
There is also [[ViewPalettePlugin|http://simon.tiddlyspot.com/#ViewPalettePlugin]], which currently does not work with TiddlyWiki v2.2 though.
!Usage
{{{
&lt;&lt;paletteView [tiddler name]&gt;&gt;
}}}
!!Example
&lt;&lt;paletteView [[ColorPalette]]&gt;&gt;
!Revision History
!!v0.1 (2007-11-18)
* initial release
!!v0.2 (2007-11-20)
* limited processing to slices containing [[actual color values|http://www.w3.org/TR/CSS21/syndata.html#color-units]]
* changed fallback value to the tiddler the macro is called from (instead of using [[ColorPalette]])
!To Do
* selection list for all available palettes (tag-based)
* parameter for custom table class
* customizable column order
* documentation (e.g. using from within [[ViewTemplate]])
!Code
***/
//{{{
config.macros.paletteView = {};

config.macros.paletteView.handler = function(place, macroName, params, wikifier, paramString, tiddler) {
    var title = params[0] || tiddler.title;
    //var palettes = store.getTaggedTiddlers(params[0]); // DEBUG: yet to be implemented
    var colors = store.calcAllSlices(title);
    var labels = [];
    for(var c in colors) {
        if(this.isColor(colors[c])) {
            labels.push(c);
        }
    }
    if(labels.length &gt; 0) {
        var output = &quot;|!Sample|!Value|!Name|h\n&quot;;
        for(var i = 0; i &lt; labels.length; i++) {
            output += &quot;|padding:0 4em;background-color:&quot; + colors[labels[i]] + &quot;;&amp;nbsp;|&quot;
                + &quot;{{{&quot; + colors[labels[i]] + &quot;}}}|&quot;
                + &quot;[[&quot; + labels[i] + &quot;|&quot; + title + &quot;]]|\n&quot;;
        }
        wikify(output, place);
    }
};

config.macros.paletteView.isColor = function(s) {
    var colors = [&quot;Black&quot;, &quot;Green&quot;, &quot;Silver&quot;, &quot;Lime&quot;, &quot;Gray&quot;, &quot;Olive&quot;, &quot;White&quot;, &quot;Yellow&quot;,
        &quot;Maroon&quot;, &quot;Navy&quot;, &quot;Red&quot;, &quot;Blue&quot;, &quot;Purple&quot;, &quot;Teal&quot;, &quot;Fuchsia&quot;, &quot;Aqua&quot;, &quot;Orange&quot;];
    var match = s.match(/^#[0-9A-F]{3}$|^#[0-9A-F]{6}$|^RGB\([\d,\s]{5,}\)$/i);
    if(match) return true;
    if(colors.contains(s)) return true;
    return false;
};
//}}}</pre>
</div>
<div title="Parables" modifier="SDM" created="201004120330">
<pre>&quot;I like reading the parables because, h-yuk, they don't seem to apply to me.&quot;  &lt;&lt;Bbl Ez 17:2 &gt;&gt;, &lt;&lt;Bbl Ez 20:49 &gt;&gt;, &lt;&lt;Bbl Mt 13:13 &gt;&gt;</pre>
</div>
<div title="Parallelism" modifier="SDM" created="201004120330" modified="201211160321" book_key="">
<pre>* An aspect of //form criticism.//
* Keil and Delitzch, pp 7 ff, provide an analysis.
* Tyndale commentary on __Job__ as well.
* Robert Lowth in the 18th century, catagorized parallel structure into three types synonymous, antithetic, and synthetic.  (An application of Hegel?)  The effect was &quot;to encourage too narrow a conception of the phenomenon.  Nor is it any advantage to complete the scheme ... The variety of possible relations between the stichoi (verse-halves) is endless.&quot;   --  Karl Budde, c. 1902 (James L. Kugel, The Idea of Biblical Parallelism)
* Several examples of the Hebrew thought that may be inferred:
** A is so, and what's more, B is so
** Not only A, but B
** Not A, not even B
** Not A, and certainly not B
** Just as A, so B
** You know A, now understand B
* Matthew 7:6 seems to offer an example an inverted parallelism:  dogs tear to pieces, and swine trample.  (Note this is similar to [[Chiasmus]], but there is no central thought.)</pre>
</div>
<div title="ParameterParser" creator="psd" modifier="colmbritton" created="201102111106" modified="201102211431" tags="features">
<pre>The ParameterParser is used in several places in TiddlyWiki:
* to process the StartupParameters after the '#' in a TiddlyWiki URL
* to process the DefaultTiddlers list
* to process the parameters to Macros
* to process tag lists when editing a tiddler
It supports a list of parameters each of the form &quot;name:value&quot;. For example:
{{{
name:John   location:&quot;Isle of Wight&quot;   [[dietary needs]]:none   really:'yes, really'
}}}
Names and values that need to contain spaces may be quoted with single- or double-quotes or double-square brackets. The parser is generally tolerant of additional spaces.

When processing macro parameters, names and values may also be quoted with double-braces which causes them to be evaluated as a [[JavaScript|http://en.wikipedia.org/wiki/JavaScript]] expression. For example:
{{{
title:{{window.title}}
}}}

The ParameterParser will cope with either the name or the value being omitted, and will substitute a specified default. This is how the StartupParameters work; the default parameter name is specified as 'open'.</pre>
</div>
<div title="Partiality" modifier="SDM" created="201012140337">
<pre>Partiality  (God's impartiality)
* [[Priest]]
* [[Selection]]
* &lt;&lt;Bbl Ex 23:2 &gt;&gt;-3 , &lt;&lt;Bbl Lv 19:15 &gt;&gt;, &lt;&lt;Bbl Dt 1:17 &gt;&gt;, &lt;&lt;Bbl Dt 10:17 &gt;&gt;, &lt;&lt;Bbl Mal 2:9 &gt;&gt;, &lt;&lt;Bbl Mt 22:16 &gt;&gt;; &lt;&lt;Bbl Act 10:34 &gt;&gt;-35  (respecter of persons  --  KJV), &lt;&lt;Bbl 1Cor 10:17 &gt;&gt;; &lt;&lt;Bbl Col 3:25 &gt;&gt;, &lt;&lt;Bbl 1Tim 5:21 &gt;&gt;, &lt;&lt;Bbl Jms 2:1 &gt;&gt;-9 .</pre>
</div>
<div title="Passivity" modifier="SDM" created="201108091348" modified="201302221427" book_key="">
<pre>* @@color: indigo;Half  measures availed us nothing.@@ // -- AA preamble//
* My two garden hoses provide an illustration of passivity.  The hose that kinks doesn't carry water; it is stressed, pressurized in back, and vacuous in front.  So a passive man is ineffective for God.  (Take photos of hoses.)
* &lt;&lt;Bbl Pro 25:26 &gt;&gt; //a polluted well or a trampled spring//
* &lt;&lt;Bbl Pro 24:11 &gt;&gt; //staggering to slaughter, oh hold them back//
* &lt;&lt;Bbl Pro 31:9 &gt;&gt; //Open your mouth, judge righteously, And defend the rights of the afflicted and needy.//
* David in his children's crises
* Samuel, ditto
* Oddly, //passion// and //passivity// come from the same root verb.  It means //to suffer.//  Oddly, //suffer// can mean to experience unhappiness as well as (in an obsolete sense) to permit.
* The //man-cave//, misused</pre>
</div>
<div title="Patience" modifier="SDM" created="201004120330" modified="201011031337">
<pre>&lt;&lt;Bbl Ecc 7:8 &gt;&gt;, Rom 15:5
[[Fruit]], [[Faithfulness]]</pre>
</div>
<div title="Paul" modifier="SDM" created="201012110205" modified="201211121711" book_key="">
<pre>Prophecies he would preach to the highest leadership: &lt;&lt;Bbl Acts 9:15 &gt;&gt;, 23.11, 27.24, the belt of binding. At the end of Acts they all protested his going to Jerusalem, but there is no implication Paul was disobeying God. </pre>
</div>
<div title="Peace" modifier="SDM" created="201004120330" modified="201211230324" book_key="">
<pre>* &lt;&lt;Bbl Ps 4:8 &gt;&gt;; &lt;&lt;Bbl Pr 14:30 &gt;&gt;, &lt;&lt;Bbl Pr 16:7 &gt;&gt;; &lt;&lt;Bbl Pr 17:14&gt;&gt;; &lt;&lt;Bbl Is 26:3 &gt;&gt; and v. 12, &lt;&lt;Bbl Is 32:17 &gt;&gt;-18 , &lt;&lt;Bbl Is 54:10 &gt;&gt;; &lt;&lt;Bbl Mt 10:13 &gt;&gt;; &lt;&lt;Bbl Lk 10:5 &gt;&gt;-6 ; &lt;&lt;Bbl Jn 14:27 &gt;&gt;; &lt;&lt;Bbl Jud 6:24 &gt;&gt;
* &lt;&lt;Bbl 2Thes 3:16 &gt;&gt;
* Christ as our peace:      &lt;&lt;Bbl Is 53:5 &gt;&gt;; &lt;&lt;Bbl Mic 5:5 &gt;&gt;; &lt;&lt;Bbl Rom 5:1 &gt;&gt;; &lt;&lt;Bbl Eph 2:14 &gt;&gt;-18 ; &lt;&lt;Bbl Col 1:20 &gt;&gt;
* God's covenant with Phineas:  &lt;&lt;Bbl Num 25:11 &gt;&gt;-12; see also &lt;&lt;Bbl Pr 28:4 &gt;&gt;; &lt;&lt;Bbl 1Sam 7:13 &gt;&gt;-14 ; &lt;&lt;Bbl Ps 125:4 &gt;&gt;-5 ; &lt;&lt;Bbl Pr 28:4 &gt;&gt;, &lt;&lt;Bbl Pr 29:27 &gt;&gt;; &lt;&lt;Bbl 2Kin 9:22 &gt;&gt;; &lt;&lt;Bbl Dt 23:6 &gt;&gt;
* False, worldly:       &lt;&lt;Bbl Dt 29:19 &gt;&gt;; &lt;&lt;Bbl 2Sam 20:9 &gt;&gt;-10  (&quot;Shalom&quot;); &lt;&lt;Bbl Is 48:22 &gt;&gt;; &lt;&lt;Bbl Jer 6:14 &gt;&gt;, &lt;&lt;Bbl Jer 8:11 &gt;&gt;; &lt;&lt;Bbl Ez 13:10 &gt;&gt;
* exhortations to:          &lt;&lt;Bbl Mk 9:50 &gt;&gt;; &lt;&lt;Bbl Rom 12:18 &gt;&gt;; &lt;&lt;Bbl Php 4:6 &gt;&gt;-9
* and righteousness:    &lt;&lt;Bbl Ps 72:7 &gt;&gt;
* [[Order]]</pre>
</div>
<div title="PeachTWServer" creator="psd" modifier="colmbritton" created="201102111106" modified="201102161207" tags="systemServer">
<pre>|''URL:''|http://bradleymeck.tiddlyspot.com/|
|''Description:''|Resources that are Ripe for the Picking|
|''Author:''|~BradleyMeck|</pre>
</div>
<div title="Perfection" modifier="SDM" created="201004120330" modified="201010221519">
<pre>The perfection of the saints is implied in the original commissioning and cleansing.
&lt;&lt;Bbl Ex 32:12 abbr &gt;&gt;; &lt;&lt;Bbl Num 14:13 &gt;&gt;-17 ; &lt;&lt;Bbl Lk 14:28 &gt;&gt;-20 ; &lt;&lt;Bbl Php 1:6 &gt;&gt;; &lt;&lt;Bbl 1Pt 5:10 &gt;&gt;; &lt;&lt;Bbl Jer 15:10 &gt;&gt;, &lt;&lt;Bbl Jer 20:8 &gt;&gt;; &lt;&lt;Bbl Dan 3:24 &gt;&gt;-25 ; &lt;&lt;Bbl Mt 5:10 &gt;&gt;-16 ; &lt;&lt;Bbl Jn 15:18 &gt;&gt;-23 , &lt;&lt;Bbl Jn 16:2 &gt;&gt;; &lt;&lt;Bbl Act 4:13 &gt;&gt;, &lt;&lt;Bbl Act 5:40 &gt;&gt;; &lt;&lt;Bbl Rom 8:18 &gt;&gt;; &lt;&lt;Bbl 2Cor 4:17 &gt;&gt;-18 ; &lt;&lt;Bbl 2Tim 3:12 &gt;&gt;; &lt;&lt;Bbl 1Pt 2:19 &gt;&gt;-20 , &lt;&lt;Bbl 1Pt 3:17 &gt;&gt;, &lt;&lt;Bbl 1Pt 4:12 &gt;&gt;; &lt;&lt;Bbl 1Jn 3:12 &gt;&gt;-13 ; &lt;&lt;Bbl Rev 2:10 &gt;&gt;.
* [[Suffering]]</pre>
</div>
<div title="PeriodicTable" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="formatting">
<pre>|Standard Periodic Table (ref. Wikipedia)|c
|| !1 | !2 |!| !3 | !4 | !5 | !6 | !7 | !8 | !9 | !10 | !11 | !12 | !13 | !14 | !15 | !16 | !17 | !18 |
|!1|bgcolor(#a0ffa0): @@color(red):H@@ |&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;||bgcolor(#c0ffff): @@color(red):He@@ |
|!2|bgcolor(#ff6666): Li |bgcolor(#ffdead): Be |&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;||bgcolor(#cccc99): B |bgcolor(#a0ffa0): C |bgcolor(#a0ffa0): @@color(red):N@@ |bgcolor(#a0ffa0): @@color(red):O@@ |bgcolor(#ffff99): @@color(red):F@@ |bgcolor(#c0ffff): @@color(red):Ne@@ |
|!3|bgcolor(#ff6666): Na |bgcolor(#ffdead): Mg |&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;|&gt;||bgcolor(#cccccc): Al |bgcolor(#cccc99): Si |bgcolor(#a0ffa0): P |bgcolor(#a0ffa0): S |bgcolor(#ffff99): @@color(red):Cl@@ |bgcolor(#c0ffff): @@color(red):Ar@@ |
|!4|bgcolor(#ff6666): K |bgcolor(#ffdead): Ca ||bgcolor(#ffc0c0): Sc |bgcolor(#ffc0c0): Ti |bgcolor(#ffc0c0): V |bgcolor(#ffc0c0): Cr |bgcolor(#ffc0c0): Mn |bgcolor(#ffc0c0): Fe |bgcolor(#ffc0c0): Co |bgcolor(#ffc0c0): Ni |bgcolor(#ffc0c0): Cu |bgcolor(#ffc0c0): Zn |bgcolor(#cccccc): Ga |bgcolor(#cccc99): Ge |bgcolor(#cccc99): As |bgcolor(#a0ffa0): Se |bgcolor(#ffff99): @@color(green):Br@@ |bgcolor(#c0ffff): @@color(red):Kr@@ |
|!5|bgcolor(#ff6666): Rb |bgcolor(#ffdead): Sr ||bgcolor(#ffc0c0): Y |bgcolor(#ffc0c0): Zr |bgcolor(#ffc0c0): Nb |bgcolor(#ffc0c0): Mo |bgcolor(#ffc0c0): Tc |bgcolor(#ffc0c0): Ru |bgcolor(#ffc0c0): Rh |bgcolor(#ffc0c0): Pd |bgcolor(#ffc0c0): Ag |bgcolor(#ffc0c0): Cd |bgcolor(#cccccc): In |bgcolor(#cccccc): Sn |bgcolor(#cccc99): Sb |bgcolor(#cccc99): Te |bgcolor(#ffff99): I |bgcolor(#c0ffff): @@color(red):Xe@@ |
|!6|bgcolor(#ff6666): Cs |bgcolor(#ffdead): Ba |bgcolor(#ffbfff):^^*1^^|bgcolor(#ffc0c0): Lu |bgcolor(#ffc0c0): Hf |bgcolor(#ffc0c0): Ta |bgcolor(#ffc0c0): W |bgcolor(#ffc0c0): Re |bgcolor(#ffc0c0): Os |bgcolor(#ffc0c0): Ir |bgcolor(#ffc0c0): Pt |bgcolor(#ffc0c0): Au |bgcolor(#ffc0c0): @@color(green):Hg@@ |bgcolor(#cccccc): Tl |bgcolor(#cccccc): Pb |bgcolor(#cccccc): Bi |bgcolor(#cccc99): Po |bgcolor(#ffff99): At |bgcolor(#c0ffff): @@color(red):Rn@@ |
|!7|bgcolor(#ff6666): Fr |bgcolor(#ffdead): Ra |bgcolor(#ff99cc):^^*2^^|bgcolor(#ffc0c0): Lr |bgcolor(#ffc0c0): Rf |bgcolor(#ffc0c0): Db |bgcolor(#ffc0c0): Sq |bgcolor(#ffc0c0): Bh |bgcolor(#ffc0c0): Hs |bgcolor(#ffc0c0): Mt |bgcolor(#ffc0c0): Ds |bgcolor(#ffc0c0): Rg |bgcolor(#ffc0c0): @@color(green):Uub@@ |bgcolor(#cccccc): Uut |bgcolor(#cccccc): Uuq |bgcolor(#cccccc): Uup |bgcolor(#cccccc): Uuh |bgcolor(#fcfecc): @@color(#cccccc):Uus@@ |bgcolor(#ecfefc): @@color(#cccccc):Uuo@@ |

| !Lanthanides^^*1^^|bgcolor(#ffbfff): La |bgcolor(#ffbfff): Ce |bgcolor(#ffbfff): Pr |bgcolor(#ffbfff): Nd |bgcolor(#ffbfff): Pm |bgcolor(#ffbfff): Sm |bgcolor(#ffbfff): Eu |bgcolor(#ffbfff): Gd |bgcolor(#ffbfff): Tb |bgcolor(#ffbfff): Dy |bgcolor(#ffbfff): Ho |bgcolor(#ffbfff): Er |bgcolor(#ffbfff): Tm |bgcolor(#ffbfff): Yb |
| !Actinides^^*2^^|bgcolor(#ff99cc): Ac |bgcolor(#ff99cc): Th |bgcolor(#ff99cc): Pa |bgcolor(#ff99cc): U |bgcolor(#ff99cc): Np |bgcolor(#ff99cc): Pu |bgcolor(#ff99cc): Am |bgcolor(#ff99cc): Cm |bgcolor(#ff99cc): Bk |bgcolor(#ff99cc): Cf |bgcolor(#ff99cc): Es |bgcolor(#ff99cc): Fm |bgcolor(#ff99cc): Md |bgcolor(#ff99cc): No |

*Chemical Series of the Periodic Table
**@@bgcolor(#ff6666): Alkali metals@@
**@@bgcolor(#ffdead): Alkaline earth metals@@
**@@bgcolor(#ffbfff): Lanthanides@@
**@@bgcolor(#ff99cc): Actinides@@
**@@bgcolor(#ffc0c0): Transition metals@@
**@@bgcolor(#cccccc): Poor metals@@
**@@bgcolor(#cccc99): Metalloids@@
**@@bgcolor(#a0ffa0): Nonmetals@@
**@@bgcolor(#ffff99): Halogens@@
**@@bgcolor(#c0ffff): Noble gases@@

*State at standard temperature and pressure
**those in @@color(red):red@@ are gases
**those in @@color(green):green@@ are liquids
**those in black are solids</pre>
</div>
<div title="PermaView" creator="psd" modifier="jermolene" created="201102111106" modified="201110201351" tags="features">
<pre>PermaView is a button in the right-hand sidebar that sets the browser address bar to a URL embodying all the currently open tiddlers in the order that they are currently shown. To use it, arrange the open tiddlers that you want, click the permaview button, copy the URL from the browser address bar, and then paste it into an email, web page or whatever.

On some browsers, PermaView can be unreliable if any of the tiddler titles include characters that have special meanings in URLs (like &quot;+&quot; and &quot;\&quot;) or are outside the basic ANSI character set.
</pre>
</div>
<div title="PermalinkCommand" creator="psd" modifier="psd" created="201102111106" modified="201102211407" tags="commands">
<pre>Changes the browser address bar to a permalink to the current tiddler. It is used with the ToolbarMacro like this:
{{{
&lt;&lt;toolbar permalink&gt;&gt;
}}}

On some browsers, the PermalinkCommand can be unreliable if the tiddler title includes characters that have special meanings in ~URLs (like &quot;+&quot; and &quot;\&quot;) or are outside the basic ANSI character set.</pre>
</div>
<div title="Persecution" modifier="SDM" created="201111280018" modified="201211230414" book_key="">
<pre>* &lt;&lt;Bbl 2Tim 1:8 &gt;&gt;
* &lt;&lt;Bbl 1Peter 4:14 &gt;&gt; //If you are insulted for the name of Christ, you are blessed; because __the Spirit of glory and of God rests on you__. On their part He is blasphemed, but on your part He is glorified.//
* &lt;&lt;Bbl Philip 1:29&gt;&gt; // it has been granted to you on behalf of Christ, not only to believe in him, but also to suffer on his behalf//
* [[Suffering]]</pre>
</div>
<div title="Perseverance" modifier="SDM" created="201010131755" modified="201211250633" book_key="">
<pre>There are scriptures that tend to comfort us, and others that tend to admonish us.  &lt;&lt;Bbl Mt 10:22 &gt;&gt;, &lt;&lt;Bbl Phi 3:12 &gt;&gt;-16 , &lt;&lt;Bbl Heb 10:39 &gt;&gt;, &lt;&lt;Bbl Heb 12:1 &gt;&gt;-3 , &lt;&lt;Bbl Gal 6:9 &gt;&gt;; &lt;&lt;Bbl Ps 138:8 &gt;&gt;.
* &lt;&lt;Bbl Rom 11:20 &gt;&gt;-21 ; &lt;&lt;Bbl 1Cor 15:2 &gt;&gt;; &lt;&lt;Bbl 2Tim 2:12 &gt;&gt;; &lt;&lt;Bbl Heb 3:12 &gt;&gt;-14
* &lt;&lt;Bbl 1Cor 5:5 &gt;&gt;
* &lt;&lt;Bbl Heb 4:14&gt;&gt;  //Hang on!//
* &lt;&lt;Bbl James 1:12&gt;&gt; //Blessed is the man who endures temptation...// [[Testing]]
* &lt;&lt;Bbl 1Jn 20:11 &gt;&gt; //the net was not torn//
* //No one will snatch them out of My hand.//
* [[Security]]
* [[Commitment]], [[Faithfulness]]
{{{
                Suffering
                    |
                    V
 Vision ----&gt;  Perseverance ----&gt; Glory
                    |
                    V
                Character
}}}</pre>
</div>
<div title="PersistentOptions" creator="psd" modifier="blaine" created="201102111106" modified="201102111310">
<pre>TiddlyWiki now has the ability to save options in the TiddlyWiki document itself (in addition to the ability to save options in cookies). Persistent options are stored in the [[SystemSettings]] tiddler. Persistent options are sometimes called &quot;baked&quot; options, since the value of the cookie is &quot;baked&quot; into the TiddlyWiki.

As an example, let's look at the {{{chkAnimate}}} option; this is currently stored as a cookie. You can get its value to be persistent by adding it to the [[SystemSettings]] tiddler. If there is no SystemSettings tiddler, you need to create it. Then add, for example:
&lt;&lt;&lt;
chkAnimate: true
&lt;&lt;&lt;
This has two effects, it makes the {{{chkAnimate}}} option persistent, and it gives the option a value (in this case {{{true}}}, it could equally well have been {{{false}}}).

The option can still be changed in the normal way (by ticking the box in the options panel); it can also be changed by editing the value in the [[SystemSettings]] tiddler. If the option is removed from the [[SystemSettings]] tiddler, then its value will be retained, but it will stored in a cookie.

!!Under the hood
The &quot;source&quot; of an option is controlled by the {{{config.optionsSource[optionName]}}} variable. This can take one of two values:
# {{{null}}} - the option is stored in a cookie, this is the ''default''.
# {{{setting}}} - the option is stored in the [[SystemSettings]] tiddler.
The {{{config.optionsSource[]}}} variable is controlled by the values in the [[SystemSettings]] tiddler. If the option exists in [[SystemSettings]], then {{{config.optionsSource[optionName]}}} is set to {{{setting}}}, and the option is persisted.
</pre>
</div>
<div title="PersonalRelations" modifier="SDM" created="201203122242" modified="201209241529" book_key="">
<pre>* [[Fellowship]]
* [[OneAnother]]
* &lt;&lt;Bbl 2Cor 5:11&gt;&gt;-21 //...no man after the flesh ...//
* [[Friend]]</pre>
</div>
<div title="Peter" modifier="SDM" created="201202122120" book_key="">
<pre>*  //Peter's Path// -- a path of discipleship, an apprenticeship in how to love and serve.
*  How dramatic it must have been to hear his Master's voice in Paul, as he was being rebuked for withholding fellowship from the gentile believers.  </pre>
</div>
<div title="Philemon-01-01-note" modifier="SDM" created="201010310247" modified="201211200332" tags="Comment" book_key="345001a">
<pre>* Paul chooses to //commend// rather than //command//.
* Here's a fun thought:  What if Paul didn't tell Onesimus that Philemon was his good friend?  He may have handed Onesimus a sealed letter, a letter that argued for reinstatement in terms more dear than Onesimus would have guessed.</pre>
</div>
<div title="Philip-01-01-note" modifier="SDM" created="201010310310" modified="201211230343" tags="Comment" book_key="270001a">
<pre>&lt;&lt;Bbl Php 1:6 &gt;&gt;  The verb tenses might be interesting here ??
1:10    under the earth   --  i.e., buried.
1:12    see &lt;&lt;Bbl Rom 8:28 &gt;&gt;
&lt;&lt;Bbl Php 1:14 abbr &gt;&gt;    Incarceration is a form of martyrdom and often helps a cause or movement.
1:15    Perhaps Paul uses preaching  here to refer even to defamation of the gospel.  Hard to imagine that he refers to subversion of the gospel through deceit.
1:23    Depart   is a term used also by Paul in &lt;&lt;Bbl 2Tim 4:6 &gt;&gt;.
1:27    Taken in context, //whether absent// suggests that Paul may be looking on from Heaven.

&lt;&lt;Bbl Php 2:5 abbr &gt;&gt;-8   see &lt;&lt;Bbl 1Cor 9:19 &gt;&gt;-23
&lt;&lt;Bbl Php 2:7 abbr &gt;&gt;
    see [[Christ]] &gt; Kenosis
    see [[Cup]].

3:5 Hebrew born of Hebrews   --  F.F. Bruce (Romans, p. 76) says Paul probably means that Aramaic is his mother-tongue.
3:11    see &lt;&lt;Bbl Heb 11:35 &gt;&gt;
&lt;&lt;Bbl Php 3:15 abbr &gt;&gt;    This is, if you have this attitude, you will be complete in character?  Is this &quot;perfect&quot; different from that of vs. 12 ??
3:17-19 There is a possibility (the NIV brings it out) that the gifts can be grouped.
3:21    He has [[Virtue]] to subject  all things to Himself; but as for us, He has power to conform  us to Himself.  [[SanctifiedProgressive]]

4:19    [[Water]]</pre>
</div>
<div title="PlainText" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="formatting">
<pre>Sometimes text can inadvertently match TiddlyWiki formatting instructions - particularly program code, or text pasted from elsewhere. In these situations you can either use MonospacedText or you can accomplish the same thing without the monospaced effect like this:
{{{
This is AnotherLink, this is a copyright symbol &amp;copy; and this site is called &lt;&lt;tiddler SiteTitle&gt;&gt;
&lt;nowiki&gt;This is AnotherLink, this is a copyright symbol &amp;copy; and this site is called &lt;&lt;tiddler SiteTitle&gt;&gt;&lt;/nowiki&gt;
&quot;&quot;&quot;This is AnotherLink, this is a copyright symbol &amp;copy; and this site is called &lt;&lt;tiddler SiteTitle&gt;&gt;&quot;&quot;&quot;
}}}
Which displays as:
This is AnotherLink, this is a copyright symbol &amp;copy; and this site is called &lt;&lt;tiddler SiteTitle&gt;&gt;
&lt;nowiki&gt;This is AnotherLink, this is a copyright symbol &amp;copy; and this site is called &lt;&lt;tiddler SiteTitle&gt;&gt;&lt;/nowiki&gt;
&quot;&quot;&quot;This is AnotherLink, this is a copyright symbol &amp;copy; and this site is called &lt;&lt;tiddler SiteTitle&gt;&gt;&quot;&quot;&quot;</pre>
</div>
<div title="PluginFormat" creator="psd" modifier="blaine" created="201102111106" modified="201102111310">
<pre>It is recommended that [[Plugins]]  start with some standard information in TiddlerSlicing format. For example, see the ExamplePlugin:
{{{
|''Name:''|ExamplePlugin|
|''Description:''|To demonstrate how to write TiddlyWiki plugins|
|''Version:''|2.0.2|
|''Date:''|Jul 12, 2006|
|''Source:''|http://www.tiddlywiki.com/#ExamplePlugin|
|''Author:''|JeremyRuston (jeremy (at) osmosoft (dot) com)|
|''License:''|[[BSD open source license]]|
|''~CoreVersion:''|2.1.0|
|''Browser:''|Firefox 1.0.4+; Firefox 1.5; InternetExplorer 6.0|
}}}
At the moment, only ~CoreVersion affects how [[Plugins]] are processed: if the ~CoreVersion is specified for a plugin, TiddlyWiki will only execute the plugin if the core code version matches or exceeds the version specified. For example, if you specify a ~CoreVersion of 2.2, version 2.1.x of TiddlyWiki will refuse to execute the plugin.

To indicate an error, plugins should just {{{throw}}} an exception. The text of the exception will be displayed in the PluginManager.</pre>
</div>
<div title="PluginFormatting" creator="psd" modifier="colmbritton" created="201102111106" modified="201102211429" tags="formatting">
<pre>To make plugins, stylesheets and templates easier to read, you can use special alternative formatting for monospaced blocks.

In [[JavaScript|http://en.wikipedia.org/wiki/JavaScript]] code:
{{{
//{{{
var id = document.getElementById(&quot;mainMenu&quot;);
//}}}
}}}
In HTML templates:
{{{
&lt;!--{{{--&gt;
&lt;div id=&quot;MainMenu&quot;&gt;
&lt;/div&gt;
&lt;!--}}}--&gt;
}}}
In CSS stylesheets
{{{
/*{{{*/
div {color: #ff0000;}
/*}}}*/
}}}
It will be displayed as:
//{{{
var id = document.getElementById(&quot;mainMenu&quot;);
//}}}

&lt;!--{{{--&gt;
&lt;div id=&quot;MainMenu&quot;&gt;
&lt;/div&gt;
&lt;!--}}}--&gt;

/*{{{*/
div {color: #ff0000;}
/*}}}*/</pre>
</div>
<div title="PluginManager shadows" creator="matt" modifier="matt" created="201102111613" modified="201102151511" tags="shadow">
<pre>This tiddler contains the command to display the plugin manager:
{{{
&lt;&lt;plugins&gt;&gt;
}}}</pre>
</div>
<div title="PluginOptions" modifier="SDM" created="201012221540" modified="201211212015" tags="excludeLists" book_key="">
<pre>!![[Plugin-defined options|PluginManager]]
&gt;@@text-align:left;&lt;&lt;tabs ''
[[AdvancedOptionsPlugin ]] [[view options for AdvancedOptionsPlugin]] [[AdvancedOptionsPlugin##Configuration]]
 [[BreadcrumbsPlugin ]] [[view options for BreadcrumbsPlugin]] [[BreadcrumbsPlugin##Configuration]]
 [[CookieManagerPlugin ]] [[view options for CookieManagerPlugin]] [[CookieManagerPlugin##Configuration]]
 [[CopyTiddlerPlugin ]] [[view options for CopyTiddlerPlugin]] [[CopyTiddlerPlugin##Configuration]]
 [[FileDropPluginConfig ]] [[view options for FileDropPluginConfig]] [[FileDropPluginConfig##Configuration]]
 [[GotoPlugin ]] [[view options for GotoPlugin]] [[GotoPlugin##Configuration]]
 [[NestedSlidersPlugin ]] [[view options for NestedSlidersPlugin]] [[NestedSlidersPlugin##Configuration]]
 [[RelatedTiddlersPlugin ]] [[view options for RelatedTiddlersPlugin]] [[RelatedTiddlersPlugin##Configuration]]
 [[SearchOptionsPlugin ]] [[view options for SearchOptionsPlugin]] [[SearchOptionsPlugin##Configuration]]
 [[SinglePageModePlugin ]] [[view options for SinglePageModePlugin]] [[SinglePageModePlugin##Configuration]]
 [[SnapshotPlugin ]] [[view options for SnapshotPlugin]] [[SnapshotPlugin##Configuration]]
 [[StickyPopupPlugin ]] [[view options for StickyPopupPlugin]] [[StickyPopupPlugin##Configuration]]
 [[StorySaverPlugin ]] [[view options for StorySaverPlugin]] [[StorySaverPlugin##Configuration]]
 [[TextAreaPlugin ]] [[view options for TextAreaPlugin]] [[TextAreaPlugin##Configuration]]
&gt;&gt;@@</pre>
</div>
<div title="Plugins" creator="psd" modifier="jermolene" created="201102111106" modified="201111031825" tags="community concepts gettingstarted">
<pre>~TiddlyWiki can be extended by [[installing plugins|InstallingPlugins]] that implement a wide variety of features (including [[Macros]], [[themes|http://tiddlythemes.com/]] or tweaks).

Community member Dave Gifford oversees an extensive catalogue of available plugins at [[TiddlyVault|http://tiddlyvault.tiddlyspot.com/]], and Eric Shulman maintains his own impressive collection of plugins at [[TiddlyTools|http://www.tiddlytools.com]]. More recently, Saq Imtiaz has built a service which lists plugins from all around the web in a single place, at [[plugins.tiddlywiki.org|http://plugins.tiddlywiki.org/]]

When you've chosen the plugin you'd like to import, follow the directions in ImportTiddlers (just make sure to tag the plugin {{{systemConfig}}}).

See http://tiddlywikidev.tiddlyspace.com/ for information on writing plugins for TiddlyWiki.
</pre>
</div>
<div title="PopupPreviewPlugin" modifier="SDM" created="201303030110" tags="systemConfig systemConfigDisable" book_key="">
<pre>/***
|Name|PopupPreviewPlugin|
|Source|http://www.TiddlyTools.com/#PopupPreviewPlugin|
|Version|1.2.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Requires|StickyPopupPlugin (optional, recommended)|
|Description|popup a formatted preview of a linked tiddler's content|
This plugin adds a custom 'shift-click' or mouseover handler to all tiddler links (or images with tiddler links) to display a popup with a fully-formatted preview of the linked tiddler's content.
!!!!!Usage
&lt;&lt;&lt;
SHIFT-click to display a popup containing the fully-formatted content of the linked tiddler, in a fixed size, scrolling area.  Click anywhere to dismiss the popup.  Clicking on the link will open the tiddler in the normal manner.  If the linked tiddler contains a section named &quot;preview&quot;, the popup displays that section content rather than the entire tiddler.  You can hide the &quot;preview&quot; section by enclosing it within comment markers ({{{/%...%/}}}) or a CSS wrapper ({{{@@display:none;...@@}}} or &lt;html&gt;&lt;nowiki&gt;&lt;code&gt;{{hidden{...}}}&lt;/code&gt;&lt;/html&gt;) so that you can display alternative &quot;summary&quot; content in the popup preview while still showing the entire content when viewing the tiddler directly.
&lt;&lt;&lt;
!!!!!Configuration
&lt;&lt;&lt;
&lt;&lt;option chkPopupPreviews&gt;&gt; enable popup previews (shift-click)
{{{usage: &lt;&lt;option chkPopupPreviews&gt;&gt;}}}
&lt;&lt;option chkPopupPreviewMouseover&gt;&gt; show previews on mouseover (no click needed)
{{{usage: &lt;&lt;option chkPopupPreviewMouseover&gt;&gt;}}}
width of popup: &lt;&lt;option txtPopupPreviewWidth&gt;&gt; height of popup: &lt;&lt;option txtPopupPreviewHeight&gt;&gt;
//(width and height may be specified using any valid CSS units, e.g., &quot;px&quot;, &quot;em&quot;, &quot;in&quot;, &quot;cm&quot;, &quot;%&quot;)//
{{{usage: &lt;&lt;option txtPopupPreviewWidth&gt;&gt; &lt;&lt;option txtPopupPreviewHeight&gt;&gt;}}}
preview section name: &lt;&lt;option txtPopupPreviewSection&gt;&gt;
{{{usage: &lt;&lt;option txtPopupPreviewSection&gt;&gt;}}}
&lt;&lt;&lt;
!!!!!Preview
&lt;&lt;&lt;
The contents of this section are displayed when SHIFT-clicking on a link to [[PopupPreviewPlugin]].  This section can be hidden using comment markers or a CSS wrapper so that alternative, &quot;summary&quot; content can be displayed in the popup.
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2012.05.23 1.2.0 added chkPopupPreviewSection (for showing summary content in popup)
2011.09.22 1.1.1 fixed default setting for chkPopupPreviewMouseover
2009.09.22 1.1.0 added chkPopupPreviewMouseover option
2007.11.19 1.0.0 fixed handling for imageLinks ('tiddlylink' attrib is on the *parentNode* of target image element)
2007.11.10 0.5.0 alpha development - use with care
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.PopupPreviewPlugin= {major: 1, minor: 2, revision: 0, date: new Date(2012,5,23)};

var co=config.options; // abbrev
if (co.chkPopupPreviews===undefined) co.chkPopupPreviews=true;
if (co.txtPopupPreviewWidth==undefined) co.txtPopupPreviewWidth=&quot;50%&quot;;
if (co.txtPopupPreviewHeight==undefined) co.txtPopupPreviewHeight=&quot;10em&quot;;
if (co.chkPopupPreviewMouseover===undefined) co.chkPopupPreviewMouseover=false;
if (co.txtPopupPreviewSection===undefined) co.txtPopupPreviewSection=&quot;Preview&quot;;


if (window.popupPreview_createTiddlyLink===undefined) { // only once
window.popupPreview_createTiddlyLink=window.createTiddlyLink;
window.createTiddlyLink=function()
{
	var btn=this.popupPreview_createTiddlyLink.apply(this,arguments);
	var handler=config.options.chkPopupPreviewMouseover?'onmouseover':'onclick';
	btn.savedHandler=btn[handler];
	btn[handler]=function(e) {
		var co=config.options; // abbrev
		if (!e) var e=window.event; var theTarget=resolveTarget(e);
		if (!e.shiftKey&amp;&amp;!co.chkPopupPreviewMouseover || !co.chkPopupPreviews) 
			return this.savedHandler?this.savedHandler.apply(this,arguments):false;
		else { // show tiddler preview if enabled and SHIFT is pressed
			var tid=theTarget.getAttribute(&quot;tiddlylink&quot;);
			if (!tid) tid=theTarget.parentNode.getAttribute(&quot;tiddlylink&quot;); // for &quot;imageLink&quot;
			var text=store.getTiddlerText(tid+&quot;##&quot;+co.txtPopupPreviewSection,store.getTiddlerText(tid));
			if (text &amp;&amp; text.length) {
				var popup = Popup.create(this,null,&quot;sticky popup&quot;);
				popup.style.width=co.txtPopupPreviewWidth;
				popup.style.padding=&quot;.5em&quot;;
				var msg=&quot;%0 %1&quot;.format([tid,config.views.wikified.shadowModifier]);
				var tiddler=store.getTiddler(tid); if (tiddler) msg=tiddler.getSubtitle();
				wikify(&quot;@@display:block;font-size:80%;line-height:110%;&quot;+msg+&quot;@@&quot;,popup);
				var div=createTiddlyElement(popup,&quot;DIV&quot;,null,&quot;popupPreview viewer&quot;);
				div.style.overflow=&quot;auto&quot;; 
				div.style.whiteSpace=&quot;normal&quot;;
				div.style[config.browser.isIE?'height':'maxHeight']=co.txtPopupPreviewHeight;
				wikify(text,div);
				Popup.show('bottom','left');
			}
			e.cancelBubble=true; if (e.stopPropagation) e.stopPropagation(); return false;
		}
	}
	return btn;
}
}
//}}}</pre>
</div>
<div title="Poverty" modifier="SDM" created="201004120330" modified="201211161340" book_key="">
<pre>* {{anti{[[Wealth]]}}}
* [[Debt]]
* [[Famine]]
* &lt;&lt;Bbl Dt 15:4 &gt;&gt;-11 , &lt;&lt;Bbl Pr 21:13 &gt;&gt;, &lt;&lt;Bbl Pr 29:7 &gt;&gt;, &lt;&lt;Bbl Is 1:17 &gt;&gt;; &lt;&lt;Bbl Ez 16:49 &gt;&gt;, &lt;&lt;Bbl Mt 26:11 &gt;&gt;, &lt;&lt;Bbl Mk 14:7 &gt;&gt;, &lt;&lt;Bbl Jn 12:8 &gt;&gt;; &lt;&lt;Bbl Jms 2:1 &gt;&gt;-6 .</pre>
</div>
<div title="Power" modifier="SDM" created="201004120330" modified="201010252109">
<pre>* &lt;&lt;Bbl Jud 11:24 &gt;&gt;
* [[Virtue]]
* [[Anointing]]
* @@color:brown;When a man wants the things God wants, for the same reasons God wants them, he cannot be stopped.@@ // -- Dave Davidson//</pre>
</div>
<div title="Prayer" modifier="SDM" created="201004120330" modified="201211200126" book_key="">
<pre>* and [[Faith]]:           &lt;&lt;Bbl Heb 11:6 &gt;&gt;
* of Ahimelech, for leaders:  &lt;&lt;Bbl 1Sam 22:1 &gt;&gt;
* of Jabez:             &lt;&lt;Bbl 1Chr 4:10 &gt;&gt;
* effectuality of:          &lt;&lt;Bbl Is 64:4 &gt;&gt;; &lt;&lt;Bbl Lk 11:1 &gt;&gt;-10
* guidance through:     &lt;&lt;Bbl Jer 31:9 &gt;&gt;
* healing through:          &lt;&lt;Bbl Jms 5:13 &gt;&gt;-18
* concerning the future:    &lt;&lt;Bbl Dan 2:18 &gt;&gt;
* concerning enemies:   &lt;&lt;Bbl 1Sam 8:21 &gt;&gt;, also the king who spreads a letter before God
* as incense:       &lt;&lt;Bbl Rev 5:8 &gt;&gt;, &lt;&lt;Bbl Rev 8:3 &gt;&gt;-4
* Prayer may go unanswered.  Perhaps God wants to reveal more about my sin.  Perhaps I lack faith, or insight into God's best will.  How does one search into these powerful and subtle issues?
* ACTS = Adoration, Confession, Thanksgiving, Supplication.
* PAS -- Protect him, arrest him, save him!</pre>
</div>
<div title="Preaching" modifier="SDM" created="201004120330" modified="201211250030" book_key="">
<pre>&lt;&lt;Bbl Gal 3:1 &gt;&gt;, possibly ??
* Proverbs:  //Apples of gold, settings of silver.//  The doctrine is the gold; the effective preaching is the silver setting.
* [[Gospel]]</pre>
</div>
<div title="Presence" modifier="SDM" created="201010252104">
<pre>Preferred over His power.
&lt;&lt;Bbl Ex 33:14 abbr &gt;&gt;-23 ; &lt;&lt;Bbl Josh 1:9 &gt;&gt;; &lt;&lt;Bbl Ps 16:11 &gt;&gt;, &lt;&lt;Bbl Ps 31:20 &gt;&gt;, &lt;&lt;Bbl Ps 46:10 &gt;&gt;; &lt;&lt;Bbl Mt 28:20 &gt;&gt;; &lt;&lt;Bbl Lk 10:20 &gt;&gt;, &lt;&lt;Bbl Lk 17:11 &gt;&gt;-19 ; &lt;&lt;Bbl Act 3:19 &gt;&gt;</pre>
</div>
<div title="PrettyDatesPlugin" modifier="MPTW" created="201106271024" modified="201111130925" tags="systemConfig excludeLists">
<pre>/***
|Name:|PrettyDatesPlugin|
|Description:|Provides a new date format ('pppp') that displays times such as '2 days ago'|
|Version:|1.0a|
|Date:|27-Jun-2011|
|Source:|http://mptw.tiddlyspot.com/#PrettyDatesPlugin|
|Author:|Simon Baird &lt;simon.baird@gmail.com&gt;|
|License:|http://mptw.tiddlyspot.com/#TheBSDLicense|
!!Notes
* If you want to you can rename this plugin. :) Some suggestions: LastUpdatedPlugin, RelativeDatesPlugin, SmartDatesPlugin, SexyDatesPlugin.
* Inspired by http://ejohn.org/files/pretty.js
***/
//{{{
Date.prototype.prettyDate = function() {
  var diff = (((new Date()).getTime() - this.getTime()) / 1000);
  var day_diff = Math.floor(diff / 86400);

  if (isNaN(day_diff))      return &quot;&quot;;
  else if (diff &lt; 0)        return &quot;in the future&quot;;
  else if (diff &lt; 60)       return &quot;just now&quot;;
  else if (diff &lt; 120)      return &quot;1 minute ago&quot;;
  else if (diff &lt; 3600)     return Math.floor(diff/60) + &quot; minutes ago&quot;;
  else if (diff &lt; 7200)     return &quot;1 hour ago&quot;;
  else if (diff &lt; 86400)    return Math.floor(diff/3600) + &quot; hours ago&quot;;
  else if (day_diff == 1)   return &quot;Yesterday&quot;;
  else if (day_diff &lt; 7)    return day_diff + &quot; days ago&quot;;
  else if (day_diff &lt; 14)   return  &quot;a week ago&quot;;
  else if (day_diff &lt; 31)   return Math.ceil(day_diff/7) + &quot; weeks ago&quot;;
  else if (day_diff &lt; 62)   return &quot;a month ago&quot;;
  else if (day_diff &lt; 365)  return &quot;about &quot; + Math.ceil(day_diff/31) + &quot; months ago&quot;;
  else if (day_diff &lt; 730)  return &quot;a year ago&quot;;
  else                      return Math.ceil(day_diff/365) + &quot; years ago&quot;;
}

Date.prototype.formatString_orig_mptw = Date.prototype.formatString;

Date.prototype.formatString = function(template) {
  return this.formatString_orig_mptw(template).replace(/pppp/,this.prettyDate());
}

// for MPTW. otherwise edit your ViewTemplate as required.
// config.mptwDateFormat = 'pppp (DD/MM/YY)';
config.mptwDateFormat = 'pppp';

//}}}

</pre>
</div>
<div title="Pride" modifier="SDM" created="201004120330" modified="201211160313" book_key="">
<pre>&lt;&lt;Bbl Gn 16:4 &gt;&gt; (the natural, first birth); &lt;&lt;Bbl Dt 8:11 &gt;&gt;-18 ; &lt;&lt;Bbl Is 10:12 &gt;&gt;-15 , &lt;&lt;Bbl Is 65:5 &gt;&gt; (&quot;holier than thou&quot;), 23:9, 47:10 (witchcraft), 50:11, &lt;&lt;Bbl Jer 13:17 &gt;&gt;, &lt;&lt;Bbl Jer 48:7 &gt;&gt;, &lt;&lt;Bbl Ps 73:6 &gt;&gt;; &lt;&lt;Bbl Pr 16:18 &gt;&gt;, &lt;&lt;Bbl Dan 4:30 &gt;&gt;, &lt;&lt;Bbl Dan 8:9 &gt;&gt;-11 , &lt;&lt;Bbl Zph 2:15 &gt;&gt; (&quot;I am&quot;)
* [[Horse]]
* [[Humility]]
* [[Complacency]]
* [[Attitude]]</pre>
</div>
<div title="Priest" modifier="SDM" created="201004120330">
<pre>* A [[Mediator]] who arranges a meeting between God and man.
## Represents God and man to each other ([[Mediation]], or we might say evangelism for the NT believer (&lt;&lt;Bbl 2Cor 5:18 &gt;&gt;)
## Teaches God's ways (&lt;&lt;Bbl Mal 2:7 &gt;&gt;, &lt;&lt;Bbl Dan 11:1 &gt;&gt;, &lt;&lt;Bbl Dan 12:1 &gt;&gt;)
## Offers [[Atonement]] through [[Sacrifice]]
* &lt;&lt;Bbl 1Kng 8:38 &gt;&gt;; &lt;&lt;Bbl Ez 44:18 &gt;&gt;
* &lt;&lt;Bbl Heb 5:1&gt;&gt;
* [[Melchizedek]]
!!! Priesthood of the believer
* &lt;&lt;Bbl Ex 19:5 &gt;&gt;; &lt;&lt;Bbl Jer 31:31 &gt;&gt;-34 ; &lt;&lt;Bbl 1Pt 2:5 &gt;&gt;; &lt;&lt;Bbl Rev 1:6 &gt;&gt;.
* Martin Luther's view on this was not what we might assume, for he seems to have wanted to reform the priesthood rather than abolishing it.
* In Luther's time, the Pope could be served communion only by a cardinal, who knelt while proffering the host on a golden wand.  And the Pope was seated while all others knelt in the mass.  Luther declared that the Pope should receive communion kneeling, &quot;like any other stinking sinner.&quot;</pre>
</div>
<div title="PrinceTiddlyWikiExtensionsServer" creator="psd" modifier="colmbritton" created="201102111106" modified="201102161208" tags="systemServer">
<pre>|''URL:''|http://ptw.sourceforge.net/ptwe.html|
|''Description:''|~BramChen's Extensions for TiddlyWiki|
|''Author:''|~BramChen|</pre>
</div>
<div title="Principalities" modifier="SDM" created="201004120330" modified="201208270232" book_key="">
<pre>* The term is used both of earthly and spiritual [[Authority]].  In fact I suspect you could substitute in modern terms like regimes, administrations, jurisdictions, empires, presidencies, monarchies, bureaucracies.  (So does Lewis, in The Screwtape Letters.)
* &lt;&lt;Bbl 1Sam 5:1 &gt;&gt;-5 ; &lt;&lt;Bbl 2Sam 5:21 &gt;&gt;
* earthly, Christians subject to:   &lt;&lt;Bbl Tit 3:1 &gt;&gt;, &lt;&lt;Bbl Rom 13:1 &gt;&gt;-7 ; &lt;&lt;Bbl Heb 13:17 &gt;&gt;
* angelic and demonic:          &lt;&lt;Bbl Eph 3:10 &gt;&gt;, &lt;&lt;Bbl Eph 6:12 &gt;&gt;; &lt;&lt;Bbl Rom 8:38 &gt;&gt;
* created by Christ:        &lt;&lt;Bbl Col 1:16 &gt;&gt;
* Christ is Head:           &lt;&lt;Bbl Col 2:10 &gt;&gt;-15 ; &lt;&lt;Bbl Eph 1:10 &gt;&gt;; &lt;&lt;Bbl 1Cor 15:24 &gt;&gt;</pre>
</div>
<div title="Prison" modifier="SDM" created="201010251536" modified="201211250303" book_key="">
<pre>* Prison Ministry -- &lt;&lt;Bbl Heb 13:3 &gt;&gt;
* //to proclaim liberty to the captives//
* {{anti{[[Freedom]], [[Deliverance]]}}}</pre>
</div>
<div title="Procrastination" modifier="SDM" created="201301070058" modified="201301071258" book_key="">
<pre>* Procrastination is the uneasy shirking of today's duty.  Fatigue and lateness may reduce your options; procrastination is a choice.
* Procrastination works in a cycle with [[Fear]].
* &lt;&lt;Bbl Pr 27:1 &gt;&gt;
* &lt;&lt;Bbl Ps 119:60 &gt;&gt;
* {{anti{[[Diligence]]}}}
!!! Putting off God
* {{anti{[[Obedience]]}}}
* &lt;&lt;Bbl Acts 24:25 &gt;&gt; Felix
* //Famous last words// by Jars of Clay
* &lt;&lt;Bbl Lk 9:57-62 &gt;&gt;</pre>
</div>
<div title="Procreation" modifier="SDM" created="201211141944" modified="201211250031" book_key="">
<pre>* //sex//
* [[Fruit]]
* [[Seed]]
!! picturing [[Sin]]
* James 1:15</pre>
</div>
<div title="Prophecy" modifier="SDM" created="201004120330">
<pre>* &lt;&lt;Bbl 1Sam 3:19 &gt;&gt;-20 ; &lt;&lt;Bbl Ezr 6:14 &gt;&gt;; &lt;&lt;Bbl Ps 82:1 &gt;&gt;; &lt;&lt;Bbl Ez 33:33 &gt;&gt;
* multiple fulfillments:  &lt;&lt;Bbl Jer 31:15 &gt;&gt; (&lt;&lt;Bbl Mt 2:17 &gt;&gt;-18 )
* [[Christ]] as Prophet --  &lt;&lt;Bbl 1Peter 1:10 &gt;&gt;-11 , &lt;&lt;Bbl Heb 1:2 &gt;&gt;
* False Prophecy -- &lt;&lt;Bbl Mic 3:5 &gt;&gt;, Zch 13:3-5
* //Prophet//</pre>
</div>
<div title="Proverbs-01-01-note" modifier="SDM" created="201010191834" modified="201211230135" tags="Comment" book_key="670001a">
<pre>!!General Notes
* This wisdom is designed to instruct future kings  --  and so we are.
* In many ways the book is almost identical to Egyptian writings known as [Sbyoet ?]  (unlike these, it has no addressee, because it is for the entire covenant community).  This may be attributed to Solomon's attempts to emulate Egypt's government.  According to Bruce Waltke, his brightest minds were trained there.  (For more of Waltke's insights, see Revelation and Understanding.)
* Chapters 1-9 seem to be a cohesive unit.
----
1:2 know   --  Waltke prefers &quot;attain&quot;, so as to avoid the materialistic error.
1:6 riddles   --  wisdom has a way of concealing itself from the arrogant.
1:23    see Jol 2:28
1:32-33 see 8:35-36, &lt;&lt;Bbl Jn 3:36 &gt;&gt;

&lt;&lt;Bbl Pr 2:1&gt;&gt;-6  He takes his own words as inspired of God.

6:30-31 see 28:21; 30:9; &lt;&lt;Bbl 1Cor 6:18 &gt;&gt;.  All the substance finds an echo in vs 32 himself.  Steal food, repay in food; steal the things of body and soul, pay accordingly.

7:6 The writer takes the part of an observer.
7:12    Street-walking hasn't changed  --  dress, demeanor, deportment, deployment.
7:23    Records the return of the husband, fulfilling the warning of 6:34.

8:1-4   see &lt;&lt;Bbl Jn 18:20 &gt;&gt;-21 .  The universality of God's good news.
8:22-31 Not to be confused with Jesus.  He is present in the Godhead, the creator Lord.
8:30    Waltke translates:  &quot;A darling child at His side, filled with wonder and delight.&quot;
8:35-36 see 1:32-33, &lt;&lt;Bbl Jn 3:36 &gt;&gt;

&lt;&lt;Bbl Pr 9:2 abbr &gt;&gt;-6   see &lt;&lt;Bbl Lk 14:16&gt;&gt;-24
9:17    //Stolen water is sweet; food eaten in secret is delicious!// -- Cognitive dissonance</pre>
</div>
<div title="Proverbs-10-01-note" modifier="SDM" created="201211230134" modified="201211230136" tags="Comment" book_key="">
<pre>&lt;&lt;Bbl Pr 10:19 abbr &gt;&gt;   The fallen nature.

11:14   The Bible is a multitude of counselors.
11:30   We usually read this backward (the Open Bible does) to mean that in order to be wise, we should go out and &quot;win souls.&quot;


13:22   see &lt;&lt;Bbl Josh 24:13 &gt;&gt;

&lt;&lt;Bbl Pr 14:4 abbr &gt;&gt; Life's a trade-off.  Investment has a return.
&lt;&lt;Bbl Pr 14:30 abbr &gt;&gt;  The life of the body is a heart at peace, but envy rots the bones.

15:14   The uses of singular, plural inform us that fools are more common than wise men.

16:26   [[Future]]-orientation.


17:3    God always reveals the most basic motivations within us.  In the furnace the weightiest element goes to the very bottom and there becomes pure.  Hell is pure, and heaven is pure.  God is the weightiest element in the life of the godly man.  Thus circumstances, heat, and pressure tend to reveal God in his life.

&lt;&lt;Bbl Pr 18:8 abbr &gt;&gt;    //The words of a whisperer// -- Like the Inuit method of hunting a polar bear.  //They wind it and they bind it, to bring down the polar bear.//

19:23   This verse describes Ruth's life.
19:27   This verse describes Solomon's own end.</pre>
</div>
<div title="Proverbs-20-01-note" modifier="SDM" created="201201041950" modified="201302221427" tags="Comment" book_key="670020a">
<pre>20:27  see &lt;&lt;Bbl Mt 6:22 &gt;&gt;

&lt;&lt;Bbl Pr 21:9 abbr &gt;&gt;, &lt;&lt;Bbl Mt 25:24 &gt;&gt; (or possibly &lt;&lt;Bbl Pr 25:24 &gt;&gt;?)  The man-cave taken to a desperate extreme.

22:14   see &lt;&lt;Bbl Ecc 7:26 &gt;&gt;
&lt;&lt;Bbl Pr 22:18 abbr &gt;&gt;i.e., memorize

&lt;&lt;Bbl Pr 24:22 &gt;&gt; The end of Solomon's own writing.
24:27   see &lt;&lt;Bbl Jn 4:10 &gt;&gt;

&lt;&lt;Bbl Pr 25:2 abbr &gt;&gt;    The vocation of science.
25:7    see &lt;&lt;Bbl Lk 14:7 &gt;&gt;-11 .
&lt;&lt;Bbl Pr 25:12 abbr &gt;&gt;   Two pieces that form a harmonious pair.
25:26    //polluted well// -- Imagine a good ol' boy saying //__Wa-a-ll__, that's jus' how Jimmy behaves...//

26:7    The negative converse of &lt;&lt;Bbl Eccl 12:11&gt;&gt;
&lt;&lt;Bbl Pr 26:11 &gt;&gt; //a dog returns to its vomit// is a meaningful picture:
** We typically choose to sin in familiar ways.
** We may perversely retain this familiarity; for example, repenting to some degree of sin but also subconsciously tracking a source for sin's accessory material.
** Our sin is attractive to us but often revolting to others; furthermore, sin that we would find revolting in others is attractive because it is ours.
{{hilite{
&lt;&lt;Bbl Pr 27:9 &gt;&gt; Perfume and incense bring joy to the heart; so does earnest counsel from a man's friend.
}}}
27:17   //Iron sharpens iron//, and the subtle corollary -- what doesn't sharpen iron makes it dull.  &lt;&lt;Bbl 1Cor 15:23 &gt;&gt;

&lt;&lt;Bbl Pr 28:21 abbr &gt;&gt;   see &lt;&lt;Bbl Pr 6:30&gt;&gt;-31

&lt;&lt;Bbl Pr 30:9 abbr &gt;&gt;    see &lt;&lt;Bbl Pr 6:30&gt;&gt;-31

{{hilite{
&lt;&lt;Bbl Pr 31:4 abbr &gt;&gt;-7  It is not for kings, Lemuel; it is not for kings to drink wine; nor for princes to say, 'Where is strong drink?' 31.5 lest they drink, and forget the law, and pervert the justice due to anyone who is afflicted.
}}}
31:10-31    This is the only passage in the book set up as an acrostic.

27:14  -- //loud greeting// -- my grandma Omi at breakfast</pre>
</div>
<div title="Provision" modifier="SDM" created="201011280509" modified="201212211934" book_key="">
<pre>* Provision is one of Christ's great works, along with [[Healing]]. Provision is only recognized in the face of [[Need]]; otherwise it is mere availability.
!! Spiritual
* [[Security]]
* [[Holiness]]
* [[Virtue]]
!! Natural
* [[Health]]
* [[Abundance]]
* [[Favor]]

* &lt;&lt;Bbl Ex 4:17 &gt;&gt; -- Moses is not permitted, by God's provision to neglect God's empowerment.
* [[Faith]] as a result
* List every need met by the Lord as recorded in the Bible.
[Pro 30:7-9] - &quot;Two things I ask of you, O Lord; do not refuse me before I die:  Keep falsehood and lies far from me; give me neither poverty nor riches, but give me only my daily bread.  Otherwise, I may have too much and disown you and say, 'Who is the Lord?'  Or I may become poor and steal, and so dishonor the name of my God.</pre>
</div>
<div title="Pruning" modifier="SDM" created="201004120330" modified="201201130313" tags="Living-Plant" book_key="">
<pre>* I learned about pruning trees while working on the golf course of the Victoria Country Club.
** From early on a [[Tree]] must be pruned.
** Winter is best, since the sap has slowed down.
** Pruning gives shape and symmetry.  A tree that has been well tended is beautiful from any direction.
** It gives unified growth (&lt;&lt;Bbl Lk 10:41 &gt;&gt;-42 , &lt;&lt;Bbl Ps 86:11 &gt;&gt;).  It removes perversities and any growth that tends downward instead of upward.
** It is good to remember that growth occurs at the top of the tree, rather than in the trunk.
** If a tree has been allowed to grow untended, it will look naked and perhaps dead after a thorough pruning.
** Branches must be removed cleanly, lest rot set in, and it is sometimes wise to seal the open places.
** A tree will be ruined by dishonest &quot;tree surgeons&quot; who lop off healthy branches indiscriminately before leaving town.
* &lt;&lt;Bbl Is 5:6 abbr &gt;&gt; speaks of God not pruning his vineyard  --  an image of Judgment.
* [[Purity]]
* //You are clean (pruned) because of the word I have spoken to you.//</pre>
</div>
<div title="Psalms-001-01-note" modifier="SDM" created="201010242357" modified="201212211834" tags="my_life Comment" book_key="640001a">
<pre>[[Ps-1-1]]
{{{
     Psalms 1 - 41       (Book I)
     Psalms 42 - 72      (Book II)
     Psalms 73 - 89      (Book III)
     Psalms 90 - 106     (Book IV)
     Psalms 107 - 150    (Book V)
}}}
&lt;&lt;Bbl Ps 1:1 &quot;&quot; note &gt;&gt;  A chiastic structure leads from where the righteous man is not to be found, where he is to be found, and what sort of plant he is like; then to what sort of plant the wicked man is like and where he is not to be found.  The final verse reviews everything.

2:1-6   This passage follows in two parts, each of which ends in a quoted statement.
2:1 see &lt;&lt;Bbl Is 17:12 &gt;&gt;-14
&lt;&lt;Bbl Psalms 2:2 abbr &gt;&gt;   One doesn't go elsewhere for refuge, but to Him.

3:2 see 109:31
3:5 See &lt;&lt;Bbl Ps 4:8 &gt;&gt;.
4:8 See &lt;&lt;Bbl Ps 3:5 &quot;&quot; note &gt;&gt;
4:23-31 They do not pray for protection.
    Throughout Acts, filled with the Holy Spirit means that they're made bold to witness.  Thus filled, they welcome danger and adversity.

7:3-5   Read &quot;Jesus&quot; for &quot;I,&quot; and &quot;Satan&quot; for &quot;enemy.&quot;
7:12-13 This seems to read more naturally if God is not in reference, but rather the wicked man who, in the following verses, is full of mischief and violence.

16:5    Parallels cup with lot (or destiny).  Note that inheritance and cup  seem to refer to the innermost and outermost realms of personal life, and they both have to do with sustenance.  Our word for lot, meaning a tract of land, is related to allotment and lottery.  The AS root //hlot// refers to divination.  Thus to &quot;cast one's lot&quot;.

17:13   Note difference between KJV and some other versions.


</pre>
</div>
<div title="Psalms-020-01-note" modifier="SDM" created="201212101502" modified="201301091622" tags="Comment" book_key="640023a">
<pre>&lt;&lt;Bbl Psalms 20:1 abbr &gt;&gt; - victory and blessing

22:14-15    The great contrast is life in moisture versus death in dessication.  Christ, in being poured out, was poured out completely.  In the first verse everything is draining out; in the second nothing is left.

&lt;&lt;Bbl Psalms 23:1 abbr &gt;&gt; -- Trust
''Chiastic structure:''
{{{
&gt; Yahweh
  &gt;  belonging
    &gt;  benefits
      &gt;  benefits - particular
        &gt;  guidance
          &gt;  obedience
            &gt;  adversity, danger
   This makes a profound study with 1 Peter 1.
}}}
23:3    I used to think that His Name's sake  was the writer's motive for walking the paths; rather it's God's motive for leading him.

32:9    This verse is fulfilled with startling clarity in the life of Samson, &lt;&lt;Bbl Jud 16:19 &gt;&gt;-21 .</pre>
</div>
<div title="Psalms-042-01-note" modifier="SDM" created="201209021821" tags="Comment" book_key="">
<pre>&lt;&lt;Bbl Psalms 45:1 abbr &gt;&gt;-2   The Septuagent apparently reveals that the Jews had in mind a picture of God anointing God.

73:15   Apparently the fear of relating one's distress to others, lest it discourage them.  Tim, however, says it means to speak like the wicked.

[[Psalms-074-01-note-special]]

78:57   This phrase also in &lt;&lt;Bbl Hos 7:16 &gt;&gt;.  The bow reveals an internal flaw when tested.  The design is good; the material is what is bad.  All of this clearly pictures the sinful nature.  Such a bow would, in happy accord with the origin of the Greek word for sin, &quot;fall short of the mark.&quot;

90:12   Thomas a K'mpis:  &quot;Blessed is the man who hourly keeps the day of his death in mind, and daily prepares for his death.&quot;

91:4ab  Jimmy Darnell says a mother hen's wings entirely conceal the chicks.  &lt;&lt;Bbl Mt 23:37 &gt;&gt;.
&lt;&lt;Bbl Psalms 91:5 abbr &gt;&gt;  Warfare conducted by day, for fear of the terror mentioned here.

</pre>
</div>
<div title="Psalms-074-01-note" modifier="SDM" created="201112171731" modified="201211221618" tags="howto Comment" book_key="640074a">
<pre>{{annotation{
!!! Note about Usage
Perfectly fine to devote a tiddler titled {{{ -note }}} for a particular phrase.  No need to integrate it with a larger note set if that is unhelpful or inconvenient.
}}}
!!!! Chiastic structure
* ^^1^^ God, why have you rejected us forever? Why does your anger smolder against the sheep of your pasture?
** ^^2^^ __Remember__ your congregation, which you purchased of old, which you have redeemed to be the tribe of your inheritance; Mount Zion, in which you have lived.  Lift up your feet to the perpetual ruins, all the evil that the enemy has done in the sanctuary.
*** ^^4^^ Your adversaries have roared in the midst of your assembly. They have set up their standards as signs.  They behaved like men wielding axes, cutting through a thicket of trees.  Now they __break all its carved work down__ with hatchet and hammers.  They have burned your sanctuary to the ground. They have profaned the dwelling place of your Name.  They said in their heart, &quot;We will crush them completely.&quot; They have burned up all the places in the land where God was worshiped.
**** ^^9^^ We see __no miraculous signs__. There is no longer any prophet, neither is there among us anyone who knows how long.
***** ^^10^^ How long, God, shall the adversary reproach? Shall the enemy blaspheme your name forever?
****** ^^11^^ ''Why do you draw back your hand, even your right hand? ''
***** Take it out of your pocket and consume them!
**** ^^12^^ Yet God is my King of old, __working salvation in the midst of the earth__.  You divided the sea by your strength. You broke the heads of the sea monsters in the waters.  You broke the heads of Leviathan in pieces. You gave him as food to people and desert creatures.  You opened up spring and stream. You dried up mighty rivers.
*** ^^16^^ The day is yours, the night is also yours. You have __prepared the light and the sun__.  You have set all the boundaries of the earth. You have made summer and winter.
** ^^18^^ __Remember__ this, that the enemy has mocked you, Yahweh. Foolish people have blasphemed your name.  Don't deliver the soul of your dove to wild beasts. Don't forget the life of your poor forever.   Honor your covenant, for haunts of violence fill the dark places of the earth.  Don't let the oppressed return ashamed. Let the poor and needy praise your name.
* ^^22^^ Arise, God! Plead your own cause. __Remember__ how the foolish man mocks you all day.  Don't forget the voice of your adversaries. The tumult of those who rise up against you ascends continually. </pre>
</div>
<div title="Psalms-107-01-note" modifier="SDM" created="201209021819" tags="Comment" book_key="">
<pre>103:13 see &lt;&lt;Bbl Mal 3:17 &gt;&gt;

&lt;&lt;Bbl Psalms 119:17 abbr &gt;&gt;    And so, in Christ, He has done.
119:133 Freedom from the power of sin.

    He that keepeth Israel  --   Read this as a testimony of the life of Jacob (Israel), especially &lt;&lt;Bbl Gn 28:10 &gt;&gt;-22   see &lt;&lt;Bbl Is 26:13 &gt;&gt;

&lt;&lt;Bbl Psalms 126:5 abbr &gt;&gt;-6 , anguish followed by joy -- &lt;&lt;Bbl Jn 16:20 &gt;&gt;

&lt;&lt;Bbl Psalms 127:2 abbr &gt;&gt; Workaholics take note.

133 -- the great psalm about [[Unity]].

137

137:4   see &lt;&lt;Bbl Rom 6:2 &gt;&gt;.  &quot;Required reading&quot; for music ministers.

139

139:13-15   see &lt;&lt;Bbl Job 10:10 &gt;&gt;-11 ; &lt;&lt;Bbl Ecc 5:11 &gt;&gt;

&lt;&lt;Bbl Ecc 145:1 abbr &gt;&gt;-2  George Murray calls this a justified unending encore.  </pre>
</div>
<div title="PublicationsAndArticles" creator="blaine" modifier="jermolene" created="201102111259" modified="201110201351" tags="community help">
<pre>~TiddlyWiki has appeared in a number of publications and articles:
* A [[book about TiddlyWiki|http://www.flickr.com/photos/philhawksworth/1933329531/]] published in Taiwain
* A [[guide|http://www.broowaha.com/articles/7671/a-personal-knowledgebase-solution-tiddlywiki-and-dropbox]] on using ~TiddlyWiki with ~DropBox.
* [[Wikify Yourself|http://eriwen.com/tools/wikify-yourself/]] - Why every programmer should have a Tiddlywiki
* Mike Mahemoff has created a [[screencast|http://softwareas.com/tiddlywiki-screencast-forum-in-15-minutes]] showing how to create a multi-user forum with ~TiddlyWiki in 15 minutes.
* Pao-hsu Shih, a professor at Taipai University in Taiwan, has written an [[Introduction to TiddlyWiki|http://www.wunan.com.tw/bookdetail.asp?no=8852]] in Chinese
* Dmitri Popov discusses ~TiddlyWiki in [[Writer for Writers and Advanced Users|http://www.lulu.com/content/221513]]
* Jeremy Wagstaff's [[The Power of Tiddly|http://www.loosewireblog.com/2007/11/the-power-of-ti.html]]
* Eric Shulman talking about TiddlyWiki at TiddlyWest, a meeting of TiddlyWiki enthusiasts in San Francisco in 2008:
** http://blip.tv/play/gtQ9vexsAg
** http://blip.tv/play/gtQ9ve0NAg
** http://blip.tv/play/gtQ9ve0vAg
</pre>
</div>
<div title="Purity" modifier="SDM" created="201201130314" modified="201201301617" book_key="">
<pre>* [[Refining]]
* &lt;&lt;Bbl 1Thes 4:3 &gt;&gt;-5 -- see [[Vessel]].  Also note [[Honor]]
* &lt;&lt;Bbl 1Pt 1:13 &gt;&gt;ff
!!! Before outside world
* [[ImmoralityAvoid]]</pre>
</div>
<div title="Questions" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Gn 3:9 &gt;&gt;       &quot;Where are you?&quot;
4:6-9       &quot;Why are you angry'Where is your brother?&quot;
16:8        &quot;Hagar, where have you come from and where  -- ?&quot;
1Kng 19:9,13    &quot;What are you doing here, Elijah?&quot;
2Kng 5:25       &quot;Where have you been, Gehazi?&quot;
&lt;&lt;Bbl Pr 18:13 abbr &gt;&gt;
&lt;&lt;Bbl Is 6:8 abbr &gt;&gt;      &quot;Whom shall I send?&quot;
&lt;&lt;Bbl Jon 4:4 abbr &gt;&gt;      &quot;Do you have good reason to be angry?&quot;
&lt;&lt;Bbl Jn 1:38 abbr &gt;&gt;     &quot;What do you seek?&quot;
6:5-6       &quot;Where are we to buy bread -- ?&quot;  And this He was saying to test him; for He Himself knew --
{          }        &quot;Simon, do the sons of the king pay taxes?&quot;
21:5        &quot;Children, you do not have any fish, do you?&quot;
21:15-17    &quot;Simon, son of John, do you love me?&quot;
18:4-7      &quot;Whom do you seek?&quot;
20:15       &quot;Woman, why are you weeping?  Whom do you seek?&quot;
&lt;&lt;Bbl Lk 24:17 abbr &gt;&gt;        &quot;What are these words that you are exchanging  -- ?&quot;
Questions, as answered by Jesus
&lt;&lt;Bbl Mt 9:1 abbr &gt;&gt;-2 , &lt;&lt;Bbl Mt 15:2 &gt;&gt;-9 , &lt;&lt;Bbl Mt 16:1 &gt;&gt;-4 , &lt;&lt;Bbl Mt 19:16 &gt;&gt;-17 ; &lt;&lt;Bbl Mk 2:4 &gt;&gt;-5 , &lt;&lt;Bbl Mk 10:17 &gt;&gt;-18 ; &lt;&lt;Bbl Lk 5:20 &gt;&gt;, &lt;&lt;Bbl Lk 9:54 &gt;&gt;-56 , &lt;&lt;Bbl Lk 12:13 &gt;&gt;-15 , &lt;&lt;Bbl Lk 18:18 &gt;&gt;-19 , &lt;&lt;Bbl Lk 20:22 &gt;&gt;-23 ; &lt;&lt;Bbl Jn 1:48 &gt;&gt;-51 , &lt;&lt;Bbl Jn 4:9 &gt;&gt;-10 , &lt;&lt;Bbl Jn 7:15 &gt;&gt;-19 , &lt;&lt;Bbl Jn 12:21 &gt;&gt;-26 </pre>
</div>
<div title="QuickEditPlugin" modifier="ELSDesignStudios" created="200801120132" modified="201102141416" tags="systemConfig excludeLists macro">
<pre>/***
|Name|QuickEditPlugin|
|Source|http://www.TiddlyTools.com/#QuickEditPlugin|
|Documentation|http://www.TiddlyTools.com/#QuickEditPackage|
|Version|2.4.4|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements &lt;br&gt;and [[Creative Commons Attribution-ShareAlike 3.0 License|http://creativecommons.org/licenses/by-sa/3.0/]]|
|~CoreVersion|2.1|
|Type|plugin|
|Description|Support functions for [[QuickEditPackage]]: utility functions, toolbar commands, stylesheets|
!!!!!Documentation
&gt;see [[QuickEditPackage]] for details
!!!!!Revisions
&lt;&lt;&lt;
2011.02.14 2.4.4 fix OSX error: use picker.file.path
2009.06.11 2.4.3 added keyup() function to abbreviate listbox handling for CR and ESC
2009.05.07 2.4.2 added processed() function to abbreviate event handler code
2008.09.07 2.4.1 added removeCookie() function for compatibility with [[CookieManagerPlugin]]
2008.05.17 2.4.0 copied code from StickyPopupPlugin to remove dependency
2008.05.12 2.3.0 added &quot;toggleQuickEdit&quot; command handler (replaces inline script command)
2008.01.11 2.2.0 converted from inline script
2007.03.29 1.0.0 initial release (as inline script)
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.QuickEditPlugin= {major: 2, minor: 4, revision: 4, date: new Date(2011,2,14)};

// SET STYLESHEET
setStylesheet(&quot;\
.quickEdit a { border:2px outset ButtonFace; padding:0px 3px !important; \
    border-radius:2px; \
    -moz-appearance:button !important; -webkit-appearance:push-button !important; \
    background-color:ButtonFace; color:ButtonText !important;  \
    line-height:200%; font-weight:normal; } \
.quickEdit a:hover { border: 2px inset ButtonFace; background-color:ButtonFace; }\
&quot;, &quot;quickEditStyles&quot;);

// REMOVE COOKIE
if (window.removeCookie===undefined) {
    window.removeCookie=function(name) {
        document.cookie = name+'=; expires=Thu, 01-Jan-1970 00:00:01 UTC; path=/;';
    }
}

// UTILITY FUNCTIONS
config.quickEdit = {
    processed: function(ev) { ev=ev||window.event;
        ev.cancelBubble=true;
        if(ev.stopPropagation) ev.stopPropagation();
        return false;
    },
    keyup: function(ev){ var k=(ev||window.event).keyCode;
        if (k==13) this.onclick();
        if (k==27) Popup.remove();
    },
    getField: function(where) {
        var here=story.findContainingTiddler(where); if (!here) return null;
        var e=story.getTiddlerField(here.getAttribute(&quot;tiddler&quot;),&quot;text&quot;);
        if (e&amp;&amp;e.getAttribute(&quot;edit&quot;)==&quot;text&quot;) return e;
        return null;
    },
    setSelection: function(where,newtext) {
        var e=this.getField(where); if (!e) return false;
        e.focus(); replaceSelection(e,newtext);
        return false;
    },
    wrapSelection: function(where,before,after) {
        var e=this.getField(where); if (!e) return false;
        e.focus(); replaceSelection(e,before+config.quickEdit.getSelection(e)+after);
        return false;
    },
    getSelection: function(e) {
        var seltext=&quot;&quot;;
        if (e&amp;&amp;e.setSelectionRange)
            seltext=e.value.substr(e.selectionStart,e.selectionEnd-e.selectionStart);
        else if (document.selection) {
            var range = document.selection.createRange();
            if (range.parentElement()==e) seltext=range.text
        }
        return seltext;
    },
    promptForFilename: function(msg,path,file) {
        if(window.Components) { // moz
            try {
                netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');
                var nsIFilePicker = window.Components.interfaces.nsIFilePicker;
                var picker = Components.classes['@mozilla.org/filepicker;1'].createInstance(nsIFilePicker);
                picker.init(window, msg, nsIFilePicker.modeOpen);
                var thispath = Components.classes['@mozilla.org/file/local;1'].createInstance(Components.interfaces.nsILocalFile);
                thispath.initWithPath(path);
                picker.displayDirectory=thispath;
                picker.defaultExtension='jpg';
                picker.defaultString=file;
                picker.appendFilters(nsIFilePicker.filterAll|nsIFilePicker.filterImages);
                if (picker.show()!=nsIFilePicker.returnCancel)
                    var result=&quot;file:///&quot;+picker.file.path.replace(/\\/g,'/');
            }
            catch(e) { alert('error during local file access: '+e.toString()) }
        }
        else { // IE
            try { // XP only
                var s = new ActiveXObject('UserAccounts.CommonDialog');
                s.Filter='All files|*.*|JPG files|*.jpg|GIF files|*.gif|PNG files|*.png|';
                s.FilterIndex=1; // default to JPG
                s.InitialDir=path;
                s.FileName=file;
                if (s.showOpen()) var result=s.FileName;
            }
            catch(e) { var result=prompt(msg,path+file); } // fallback for non-XP IE
        }
        return result;
    }
}
//}}}

//{{{
if (config.options.chkShowQuickEdit===undefined) config.options.chkShowQuickEdit=false;
config.commands.toggleQuickEdit = {
    hideReadOnly: true,
    getText: function() { return config.options.chkShowQuickEdit?'\u221Aquickedit':'quickedit'; },

    tooltip: 'show QuickEdit toolbar buttons',
    handler: function(event,src,title) {
        var opt='chkShowQuickEdit';
        config.options[opt]=!config.options[opt];
        config.macros.option.propagateOption(opt,&quot;checked&quot;, config.options[opt],&quot;input&quot;);
        if (config.options[opt]) saveOptionCookie(opt); else removeCookie(opt);
        src.innerHTML=config.commands.toggleQuickEdit.getText();
        story.forEachTiddler(function(t,e){if (story.isDirty(t)) refreshElements(e);});
        return false;
    }
};
//}}}

// // COPIED FROM [[StickyPopupPlugin]] TO ELIMINATE PLUGIN DEPENDENCY
//{{{
if (config.options.chkStickyPopups==undefined) config.options.chkStickyPopups=false;
Popup.stickyPopup_onDocumentClick = function(ev)
{
    // if click is in a sticky popup, ignore it so popup will remain visible
    var e = ev ? ev : window.event; var target = resolveTarget(e);
    var p=target; while (p) {
        if (hasClass(p,&quot;popup&quot;) &amp;&amp; (hasClass(p,&quot;sticky&quot;)||config.options.chkStickyPopups)) break;
        else p=p.parentNode;
    }
    if (!p) // not in sticky popup (or sticky popups disabled)... use normal click handling
        Popup.onDocumentClick(ev);
    return true;
};
try{removeEvent(document,&quot;click&quot;,Popup.onDocumentClick);}catch(e){};
try{addEvent(document,&quot;click&quot;,Popup.stickyPopup_onDocumentClick);}catch(e){};
//}}}</pre>
</div>
<div title="QuickEditToolbar" modifier="SDM" created="200703300455" modified="201211220315" tags="excludeLists macro" book_key="">
<pre>/%
|Name|QuickEditToolbar|
|Source|http://www.TiddlyTools.com/#QuickEditToolbar|
|Version|2.4.4|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.2|
|Type|transclusion|
|Requires|QuickEditPlugin|
|Optional|QuickEdit_*|
|Description|format/insert TiddlyWiki content using toolbar buttons|

Usage:
* install [[QuickEditPlugin]] (runtime support functions)

* add the toolbar to [[EditTemplate]]:
    &lt;div macro='tiddler QuickEditToolbar with: show'&gt;&lt;/div&gt;

* 'show' (optional) forces the toolbar to always be displayed or,
  omit keyword and use &lt;&lt;option chkShowQuickEdit&gt;&gt; setting

* selected QuickEdit buttons can also be added individually to the
  regular tiddler toolbar by adding references directly in [[EditTemplate]]:
    &lt;span class='toolbar' macro='tiddler QuickEdit_...'&gt;&lt;/span&gt;

* see [[QuickEditPackage]] for additional installation options

%/{{hidden fine center quickEdit{
&lt;&lt;tiddler {{ // show/hide toolbar
    var here=story.findContainingTiddler(place); if (here) var tid=here.getAttribute('tiddler');
    var show='$1'!='$'+'1'||config.options.chkShowQuickEdit||tid=='QuickEditToolbar';
    place.style.display=show?'block':'none';
'';}}&gt;&gt;/%

TOOLBAR DEFINITION - add, remove, or re-order items as desired:
= = = = = = = = = =
%/&lt;&lt;tiddler QuickEdit_format&gt;&gt;/%
%/&lt;&lt;tiddler QuickEdit_align&gt;&gt;/%
%/&lt;&lt;tiddler QuickEdit_color&gt;&gt;/%
%/&lt;&lt;tiddler QuickEdit_font&gt;&gt;/%
%/&lt;&lt;tiddler QuickEdit_custom&gt;&gt;/%
%/ &amp;nbsp;/% (SPACER)
%/&lt;&lt;tiddler QuickEdit_replace&gt;&gt;/%
%/&lt;&lt;tiddler QuickEdit_split&gt;&gt;/%
%/&lt;&lt;tiddler QuickEdit_sort&gt;&gt;/%
%/&lt;&lt;tiddler QuickEdit_convert&gt;&gt;/%
%/ &amp;nbsp;/% (SPACER)
%/&lt;&lt;tiddler QuickEdit_link&gt;&gt;/%
%/&lt;&lt;tiddler QuickEdit_insert&gt;&gt;/%
%/&lt;&lt;tiddler QuickEdit_macro&gt;&gt;/%
%/&lt;&lt;tiddler QuickEdit_image&gt;&gt;/%
%/}}}</pre>
</div>
<div title="QuickEdit_align" modifier="ELSDesignStudios" created="200803310414" modified="200906112024" tags="excludeLists macro">
<pre>/%
|Name|QuickEdit_align|
|Source|http://www.TiddlyTools.com/#QuickEdit_align|
|Version|2.4.3|
|Author|Eric Shulman|
|License|see http://www.TiddlyTools.com/#QuickEditPlugin|
|Type|html|
|Requires|QuickEditPlugin|
|Description|quickedit - text alignment|

Usage: see  http://www.TiddlyTools.com/#QuickEditToolbar

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;align text&quot;
onclick=&quot;var p=Popup.create(this); if (!p) return false; p.className+=' sticky smallform';
    var s=createTiddlyElement(p,'select'); s.button=this;
    s.options[0]=new Option('select text alignment...','');
    s.options[s.length]=new Option('left','left');
    s.options[s.length-1].title='{{left{...}}}';
    s.options[s.length]=new Option('center','center');
    s.options[s.length-1].title='{{center{...}}}';
    s.options[s.length]=new Option('right','right');
    s.options[s.length-1].title='{{right{...}}}';
    s.options[s.length]=new Option('justify','justify');
    s.options[s.length-1].title='{{justify{...}}}';
    s.options[s.length]=new Option('float left','floatleft');
    s.options[s.length-1].title='{{floatleft{...}}}';
    s.options[s.length]=new Option('float right','floatright');
    s.options[s.length-1].title='{{floatright{...}}}';
    s.size=s.length;
    s.onclick=function(){ if (!this.value.length) return;
        config.quickEdit.wrapSelection(this.button,'{{'+this.value+'{','}}}');
        Popup.remove(); return false;
    };
    s.onkeyup=config.quickEdit.keyup;
    Popup.show();
    s.focus();
    return config.quickEdit.processed(event);&quot;
&gt;align&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickEdit_color" modifier="ELSDesignStudios" created="200801161202" modified="200906112023" tags="excludeLists macro">
<pre>/%
|Name|QuickEdit_color|
|Source|http://www.TiddlyTools.com/#QuickEdit_color|
|Version|2.4.3|
|Author|Eric Shulman|
|License|see http://www.TiddlyTools.com/#QuickEditPlugin|
|Type|html|
|Requires|QuickEditPlugin|
|Description|quickedit - text/background color|

Usage: see  http://www.TiddlyTools.com/#QuickEditToolbar

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;text/background color - @@color:#RGB;background-color:#RGB;...@@&quot;
onclick=&quot;var p=Popup.create(this,null,'popup sticky smallform'); if (!p) return false;
    p.style.padding='2px';
    function hex(d) { return '0123456789ABCDEF'.substr(d,1); }
    var fg=createTiddlyElement(p,'select'); fg.button=this;
    fg.style.width='12em';
    fg.options[0]=new Option('text color...','');
    fg.options[1]=new Option('\xa0 or enter a value','_ask');
    fg.options[2]=new Option('\xa0 or use default color','');
    for (var r=0;r&lt;16;r+=3) for (var g=0;g&lt;16;g+=3) for (var b=0;b&lt;16;b+=3) {
        var label=hex(r)+hex(g)+hex(b);
        fg.options[fg.length]=new Option(label,'#'+label);
        fg.options[fg.length-1].style.color='#'+label;
    }
    fg.onchange=function(){ var val=this.value;
        if (val=='_ask') { val=prompt('Enter a CSS color value');
        if (!val||!val.length) return false; }
        this.options[0].value=val; this.options[0].text=val.length?'text: '+val:'text color...';
        var bg=this.nextSibling;
        for (var i=3;i&lt;bg.options.length;i++) bg.options[i].style.color=val;
        var preview=this.nextSibling.nextSibling.nextSibling;
        var t=config.quickEdit.getSelection(config.quickEdit.getField(this.button));
        t=t.replace(/^@@(color\:.+;)?(background-color\:.+;)?/,'').replace(/@@$/,'');
        if (!t.length) t='~AaBbCcDdEeFfGgHhIiJj 1234567890';
        var fg=this.value; if (fg.length) fg='color:'+fg+';';
        var bg=this.nextSibling.value; if (bg.length) bg='background-color:'+bg+';';
        if (fg.length||bg.length) t='@@'+fg+bg+t+'@@';
        removeChildren(preview); wikify(t,preview);
        this.selectedIndex=0; return false;
    };
    var bg=createTiddlyElement(p,'select'); bg.button=this;
    bg.style.width='12em';
    bg.options[0]=new Option('background color...','');
    bg.options[1]=new Option('\xa0 or enter a value','_ask');
    bg.options[2]=new Option('\xa0 or use default color','');
    for (var r=0;r&lt;16;r+=3) for (var g=0;g&lt;16;g+=3) for (var b=0;b&lt;16;b+=3) {
        var label=hex(15-r)+hex(15-g)+hex(15-b);
        bg.options[bg.length]=new Option(label,'#'+label);
        bg.options[bg.length-1].style.backgroundColor='#'+label;
    }
    bg.onchange=function(){ var val=this.value;
        if (val=='_ask') { val=prompt('Enter a CSS color value');
        if (!val||!val.length) return false; }
        this.options[0].value=val;
        this.options[0].text=val.length?'background: '+val:'background color...';
        var fg=this.previousSibling;
        for (var i=3;i&lt;fg.options.length;i++) fg.options[i].style.backgroundColor=val;
        var preview=this.nextSibling.nextSibling;
        var t=config.quickEdit.getSelection(config.quickEdit.getField(this.button));
        t=t.replace(/^@@(color\:.+;)?(background-color\:.+;)?/,'').replace(/@@$/,'');
        if (!t.length) t='~AaBbCcDdEeFfGgHhIiJj 1234567890';
        var fg=this.previousSibling.value; if (fg.length) fg='color:'+fg+';';
        var bg=this.value; if (bg.length) bg='background-color:'+bg+';';
        if (fg.length||bg.length) t='@@'+fg+bg+t+'@@';
        removeChildren(preview); wikify(t,preview);
        this.selectedIndex=0; return false;
    };
    var b=createTiddlyElement(p,'input',null,null,null,{type:'button'}); b.button=this;
    b.value='ok'; b.style.width='4em';
    b.onclick=function() {
        var fg=this.previousSibling.previousSibling.value; if (fg.length) fg='color:'+fg+';';
        var bg=this.previousSibling.value; if (bg.length) bg='background-color:'+bg+';';
        var t=config.quickEdit.getSelection(config.quickEdit.getField(this.button));
        t=t.replace(/^@@(color\:.+;)?(background-color\:.+;)?/,'').replace(/@@$/,'');
        if (fg.length||bg.length) config.quickEdit.setSelection(this.button,'@@'+fg+bg+t+'@@');
        Popup.remove(); return false;
    };
    var preview=createTiddlyElement(p,'div',null,'viewer'); var s=preview.style;
    s.border='1px solid'; s.margin='2px'; s.width='24em'; s.padding='3px'; s.MozBorderRadius='3px';
    s.overflow='hidden'; s.textAlign='center'; s.whiteSpace='normal';
    var t=config.quickEdit.getSelection(config.quickEdit.getField(this));
    wikify(t.length?t:'~AaBbCcDdEeFfGgHhIiJj 1234567890',preview);
    Popup.show();
    event.cancelBubble=true;if(event.stopPropagation)event.stopPropagation();return false;&quot;
&gt;color&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickEdit_convert" modifier="ELSDesignStudios" created="200809080351" modified="200906112024" tags="excludeLists macro">
<pre>/%
|Name|QuickEdit_convert|
|Source|http://www.TiddlyTools.com/#QuickEdit_convert|
|Version|2.4.3|
|Author|Eric Shulman|
|License|see http://www.TiddlyTools.com/#QuickEditPlugin|
|Type|html|
|Requires|QuickEditPlugin|
|Description|quickedit - convert between comma/tab-separated and TW table format|

Usage: see  http://www.TiddlyTools.com/#QuickEditToolbar

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;convert between comma/tab-separated and TW table format&quot;
onclick=&quot;var e=config.quickEdit.getField(this);
    if (e) e.focus(); var txt=config.quickEdit.getSelection(e);
    if (txt.indexOf(',')+txt.indexOf('\t')+txt.indexOf('|')==-3) {
        alert('Please select text containing tabs, commas, or TiddlyWiki table syntax.');
        return false;
    }
    var p=Popup.create(this); if (!p) return false; p.className+=' sticky smallform';
    var s=createTiddlyElement(p,'select'); s.button=this;
    s.options[0]=new Option('select a converter...','');
    if (txt.indexOf(',')!=-1) {
        s.options[s.length]=new Option('commas -&gt; table','commasToTable');
        s.options[s.length]=new Option('commas -&gt; tabs','commasToTabs');
    }
    if (txt.indexOf('\t')!=-1) {
        s.options[s.length]=new Option('tabs -&gt; table','tabsToTable');
        s.options[s.length]=new Option('tabs -&gt; commas','tabsToCommas');
    }
    if (txt.indexOf('|')!=-1) {
        s.options[s.length]=new Option('table -&gt; tabs','tableToTabs');
        s.options[s.length]=new Option('table -&gt; commas','tableToCommas');
    }
    s.size=s.length;
    s.onclick=function(){ if (!this.value.length) return;
            var e=config.quickEdit.getField(this.button); if (!e) return false;
        e.focus(); var txt=config.quickEdit.getSelection(e);
        switch(this.value) {
            case 'tabsToTable':
                txt=txt.replace(/\t/g,'|').replace(/^|$/g,'|');
                txt=txt.replace(/\n/g,'|\n|').replace(/^\|$/g,'');
                break;
            case 'tableToTabs':
                txt=txt.replace(/\t/g,' ').replace(/\|/g,'\t');
                txt=txt.replace(/^\t/g,'').replace(/\t$/g,'');
                txt=txt.replace(/\n\t/g,'\n').replace(/\t\n/g,'\n');
                break;
            case 'commasToTable':
                txt=txt.replace(/,/g,'|').replace(/^|$/g,'|');
                txt=txt.replace(/\n/g,'|\n|').replace(/^\|$/g,'');
                break;
            case 'tableToCommas':
                txt=txt.replace(/,/g,' ').replace(/\|/g,',');
                txt=txt.replace(/^,/g,'').replace(/,$/g,'');
                txt=txt.replace(/\n,/g,'\n').replace(/,\n/g,'\n');
                break;
            case 'tabsToCommas':
                txt=txt.replace(/\t/g,',');
                break;
            case 'commasToTabs':
                txt=txt.replace(/,/g,'\t');
                break;
        }
        replaceSelection(e,txt);
        Popup.remove(); return false;
    };
    s.onkeyup=config.quickEdit.keyup;
    Popup.show();
    s.focus();
    return config.quickEdit.processed(event);&quot;
&gt;convert&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickEdit_custom" modifier="ELSDesignStudios" created="200902191602" modified="200906112024" tags="excludeLists macro">
<pre>/%
|Name|QuickEdit_custom|
|Source|http://www.TiddlyTools.com/#QuickEdit_custom|
|Version|2.4.3|
|Author|Eric Shulman|
|License|see http://www.TiddlyTools.com/#QuickEditPlugin|
|Type|html|
|Requires|QuickEditPlugin|
|Description|quickedit - custom defined formats|

Usage: see  http://www.TiddlyTools.com/#QuickEditToolbar

!help
Reminders:

Custom formats are stored as an &quot;HR-separated list&quot; in [[QuickEdit_customList]], where the first line of each list item is the text 'label' to show in the droplist, followed by one or more lines of wiki content to be inserted into the tiddler source.

Substitution markers can be used to dynamically insert values into the formatted output: $1 inserts the tiddler editor's current selected text. $[[message|default value]] interactively prompts for a value to be inserted. $[[message|$1]] uses the selected text as the default value. $[[message|{{javascript}}]] calculates the default value using javascript code.
!end help

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot; title=&quot;custom defined formats&quot;
onclick=&quot;var p=Popup.create(this); if (!p) return false; p.className+=' sticky smallform';
    var s=createTiddlyElement(p,'select'); s.button=this;
    s.options[0]=new Option('select a custom format...','');
    var items=store.getTiddlerText('QuickEdit_customList','').split('\n----\n');
    for (var i=0; i&lt;items.length; i++) {
        if (!items[i].length) continue; var lines=items[i].split('\n');
        var label=lines.shift(); var val=lines.join('\n');
        s.options[s.length]=new Option(label,val); s.options[s.length-1].title=val;
    }
    s.options[s.length]=new Option('[Edit custom formats...]','_edit');
    s.options[s.length-1].title='add/change custom format definitions...';
    s.size=Math.min(s.length,15);
    s.onclick=function(){ if (!this.value.length) return;
        if (this.value=='_edit') {
            alert(store.getTiddlerText('QuickEdit_custom##help'));
            story.displayTiddler(story.findContainingTiddler(this.button),
                'QuickEdit_customList',DEFAULT_EDIT_TEMPLATE);
        } else {
                var e=config.quickEdit.getField(this.button); if (!e) return false;
            e.focus(); var txt=config.quickEdit.getSelection(e);
            replaceSelection(e, this.value.replace(/\$\x31/g,txt)
                .replace(/\$\[\[[^\]]+\]\]/g, function(t){
                    x=t.substr(3,t.length-5).split('|');
                    var msg=x[0]; var def=x[1]||'';
                    if (def.startsWith('{{')) {
                        try{def=eval(def.substr(2,def.length-4))} catch(ex){showException(ex)}
                    }
                    return prompt(msg,def)||'';
                })
            );
        }
        Popup.remove(); return false;
    };
    s.onkeyup=config.quickEdit.keyup;
    Popup.show();
    s.focus();
    return config.quickEdit.processed(event);&quot;
&gt;custom&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickEdit_customList" modifier="SDM" created="200902191601" modified="201211211539" tags="macro excludeLists" book_key="">
<pre>timestamp
$[[enter a date|{{new Date().formatString('DDD, MMM DDth, YYYY hh12:0mm:0ssam')}}]]
----
scrollbox
@@display:block;height:10em;overflow:auto;$[[enter scrolling content|$1]]@@@@display:block;text-align:right;^^scroll for more...^^@@
----
nested slider
+++[$1]&lt;&lt;tiddler $1&gt;&gt;===
----
big red
@@font-size:36pt;color:red;$1@@
----
</pre>
</div>
<div title="QuickEdit_font" modifier="ELSDesignStudios" created="200803221859" modified="200906112024" tags="excludeLists macro">
<pre>/%
|Name|QuickEdit_font|
|Source|http://www.TiddlyTools.com/#QuickEdit_font|
|Version|2.4.3|
|Author|Eric Shulman|
|License|see http://www.TiddlyTools.com/#QuickEditPlugin|
|Type|html|
|Requires|QuickEditPlugin|
|Description|quickedit - select font family|

Usage: see  http://www.TiddlyTools.com/#QuickEditToolbar

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;set font-family CSS attribute - @@font-family:facename;...@@&quot;
onclick=&quot;var p=Popup.create(this); if (!p) return false; p.className+=' sticky smallform';
    var s=createTiddlyElement(p,'select'); s.button=this;
    s.options[0]=new Option('select a font family...','');
    var fonts=store.getTiddlerText('QuickEdit_fontList','').split('\n');
    for (var i=0; i&lt;fonts.length; i++) {
        if (!fonts[i].length) continue;
        s.options[s.length]=new Option(fonts[i],fonts[i]);
        s.options[s.length-1].style.fontFamily=fonts[i];
    }
    s.options[s.length]=new Option('[Edit font list...]','_edit');
    s.options[s.length-1].title='enter fonts, one per line...';
    s.size=Math.min(s.length,15);
    s.onclick=function(){
        if (this.value=='_edit')
            story.displayTiddler(story.findContainingTiddler(this.button),'QuickEdit_fontList',DEFAULT_EDIT_TEMPLATE);
        else
            config.quickEdit.wrapSelection(this.button,'@@font-family:\x22'+this.value+'\x22;','@@');
        Popup.remove(); return false;
    };
    s.onkeyup=config.quickEdit.keyup;
    Popup.show();
    s.focus();
    return config.quickEdit.processed(event);&quot;
&gt;font&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickEdit_fontList" modifier="SDM" created="200803221901" modified="201211211540" tags="macro excludeLists" book_key="">
<pre>Arial,helvetica,sans-serif
Times New Roman,times,serif
Courier,monospace</pre>
</div>
<div title="QuickEdit_format" modifier="ELSDesignStudios" created="200801111625" modified="200906112024" tags="excludeLists macro">
<pre>/%
|Name|QuickEdit_format|
|Source|http://www.TiddlyTools.com/#QuickEdit_format|
|Version|2.4.3|
|Author|Eric Shulman|
|License|see http://www.TiddlyTools.com/#QuickEditPlugin|
|Type|html|
|Requires|QuickEditPlugin|
|Description|quickedit - basic text formats, headings, blockquotes, etc.|

Usage: see  http://www.TiddlyTools.com/#QuickEditToolbar

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;plain text (remove ALL formatting)&quot; accesskey=&quot;P&quot;
onclick=&quot;var e=config.quickEdit.getField(this); if (e) e.focus(); var txt=config.quickEdit.getSelection(e);
    config.quickEdit.setSelection(e,wikifyPlainText(txt)); return false;&quot;
&gt;&amp;nbsp;~&amp;nbsp;&lt;/a&gt;&lt;/html&gt;/%

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;''bold''&quot; accesskey=&quot;B&quot;
onclick=&quot;config.quickEdit.wrapSelection(this,'\x27\x27','\x27\x27'); return false;&quot;
&gt;&amp;nbsp;B&amp;nbsp;&lt;/a&gt;&lt;/html&gt;/%

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;//italics//&quot; accesskey=&quot;I&quot;
onclick=&quot;config.quickEdit.wrapSelection(this,'//','//'); return false;&quot;
&gt;&amp;nbsp;I&amp;nbsp;&lt;/a&gt;&lt;/html&gt;/%

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;__underline__&quot; accesskey=&quot;U&quot;
onclick=&quot;config.quickEdit.wrapSelection(this,'__','__'); return false;&quot;
&gt;&amp;nbsp;U&amp;nbsp;&lt;/a&gt;&lt;/html&gt;/%

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;--strikethrough--&quot; accesskey=&quot;S&quot;
onclick=&quot;config.quickEdit.wrapSelection(this,'--','--'); return false;&quot;
&gt;&amp;nbsp;S&amp;nbsp;&lt;/a&gt;&lt;/html&gt;/%

%/ &amp;nbsp;/%  SPACER

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;format text&quot;
onclick=&quot;var p=Popup.create(this); if (!p) return false; p.className+=' sticky smallform';
    var s=createTiddlyElement(p,'select'); s.button=this;
    s.options[0]=new Option('select text format...','');
    s.options[s.length]=new Option('CSS class wrapper','{{$1{,}}},Enter a CSS classname');
    s.options[s.length-1].title='CSS class wrapper - {{classname classname etc{...}}}';
    s.options[s.length]=new Option('inline CSS styles','@@$1,@@,Enter CSS (attribute:value;attribute:value;...;)');
    s.options[s.length-1].title='inline CSS styles - @@attr:value;attr:value;...@@';
    s.options[s.length]=new Option('heading 1','\n!,\n');
    s.options[s.length-1].title='H1 heading - !';
    s.options[s.length]=new Option('heading 2','\n!!,\n');
    s.options[s.length-1].title='H2 heading - !!';
    s.options[s.length]=new Option('heading 3','\n!!!,\n');
    s.options[s.length-1].title='H3 heading - !!!';
    s.options[s.length]=new Option('heading 4','\n!!!!,\n');
    s.options[s.length-1].title='H4 heading - !!!!';
    s.options[s.length]=new Option('heading 5','\n!!!!!,\n');
    s.options[s.length-1].title='H5 heading - !!!!!';
    s.options[s.length]=new Option('blockquote','\n\&lt;\&lt;\&lt;\n,\n\&lt;\&lt;\&lt;\n');
    s.options[s.length-1].title='indented blockquote - \&lt;\&lt;\&lt;';
    s.options[s.length]=new Option('monospace','{{{,}}}');
    s.options[s.length-1].title='inline monospaced text - {{{...}}}';
    s.options[s.length]=new Option('plain text','\n{{{\n,\n}}}\n');
    s.options[s.length-1].title='multi-line monospaced text box - {{{...}}}';
    s.options[s.length]=new Option('superscript','^^,^^');
    s.options[s.length-1].title='^^superscript^^';
    s.options[s.length]=new Option('subscript','~~,~~');
    s.options[s.length-1].title='~~subscript~~';
    s.options[s.length]=new Option('HTML','&lt;html&gt;,&lt;\x2fhtml&gt;');
    s.options[s.length-1].title='HTML syntax - &lt;html&gt;...&lt;\x2fhtml&gt;';
    s.options[s.length]=new Option('comment','/%,%/');
    s.options[s.length-1].title='comment (hidden content) - /%...%/';
    s.size=s.length;
    s.onclick=function(){ if (!this.value.length) return;
        var parts=this.value.split(',');
        var prefix=parts[0]; var suffix=parts[1]; var ask=parts[2];
        if (ask) {
            var val=prompt(ask); if (!val) { Popup.remove(); return false; }
            prefix=prefix.replace(/\$1/g,val); suffix=suffix.replace(/\$1/g,val);
        }
        config.quickEdit.wrapSelection(this.button,prefix,suffix);
        Popup.remove(); return false;
    };
    s.onkeyup=config.quickEdit.keyup;
    Popup.show();
    s.focus();
    return config.quickEdit.processed(event);&quot;
&gt;format&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickEdit_image" modifier="ELSDesignStudios" created="200801120913" modified="200906151958" tags="excludeLists macro">
<pre>/%
|Name|QuickEdit_image|
|Source|http://www.TiddlyTools.com/#QuickEdit_image|
|Version|2.4.3|
|Author|Eric Shulman|
|License|see http://www.TiddlyTools.com/#QuickEditPlugin|
|Type|html|
|Requires|QuickEditPlugin|
|Description|quickedit - embed an image|

Usage: see  http://www.TiddlyTools.com/#QuickEditToolbar

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
    title=&quot;embed an image (jpg/gif/png) - [img[tooltip|URL]] or [img[tooltip|path/to/file.ext]]&quot;
    onclick=&quot;var fn=config.quickEdit.promptForFilename(
        'Enter/select an image file',getLocalPath(document.location.href),'');
    if (!fn) return false;  /* cancelled by user */
    var h=document.location.href; var p=decodeURIComponent(h.substr(0,h.lastIndexOf('/')+1));
    if (fn.startsWith(p)) fn=fn.substr(p.length); /* use RELATIVE path/filename.ext */
    var tip=prompt('Enter a tooltip for this image',''); if (!tip) tip=''; else tip+='|';
    return config.quickEdit.setSelection(this,'[img['+tip+fn+']]');&quot;
&gt;image&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickEdit_insert" modifier="ELSDesignStudios" created="200801120913" modified="200906112023" tags="excludeLists macro">
<pre>/%
|Name|QuickEdit_insert|
|Source|http://www.TiddlyTools.com/#QuickEdit_insert|
|Version|2.4.3|
|Author|Eric Shulman|
|License|see http://www.TiddlyTools.com/#QuickEditPlugin|
|Type|html|
|Requires|QuickEditPlugin|
|Description|quickedit - insert content from another tiddler or external file|

Usage: see  http://www.TiddlyTools.com/#QuickEditToolbar

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;insert content from another tiddler or external file&quot;
onclick=&quot;var p=Popup.create(this); if (!p) return false; p.className+=' sticky smallform';

    var s2=createTiddlyElement(p,'select'); s2.title='filter by tag';
    s2.options[0]=new Option('filter by tag...','');
    s2.options[s2.length]=new Option('[all tiddlers]','');
    var tags=store.getTags();
    for (var t=0; t&lt;tags.length; t++) s2.options[s2.length]=new Option(tags[t][0],tags[t][0]);
    s2.onchange=function(){
        var tag=this.value;
        var tids=tag.length?store.reverseLookup('tags',tag,true):store.reverseLookup('tags','excludeLists');
        var list=this.nextSibling.nextSibling;
        while (list.length) list.options[0]=null;
        var prompt='select a tiddler or file...';
        if (tag.length) prompt='select a tagged tiddler ['+tids.length+' matches]...';
        list.options[0]=new Option(prompt,'');
        if (!tag.length) list.options[list.length]=new Option('[browse for file...]','_file');
        for (var t=0; t&lt;tids.length; t++) {
            list.options[list.length]=new Option(tids[t].title,tids[t].title);
            list.options[list.length-1].title=tids[t].getSubtitle();
        }
        list.size=Math.min(list.length,10);
        list.selectedIndex=0; list.focus();
        this.style.width=list.offsetWidth+'px';
        if (!tag.length) this.selectedIndex=0;
    };
    createTiddlyElement(p,'br');

    var s=createTiddlyElement(p,'select'); s.button=this;
    s.title='select a tiddler or file';
    s.options[0]=new Option('select a tiddler or file...','');
    s.options[s.length]=new Option('[browse for file...]','_file');
    var tids=store.reverseLookup('tags','excludeLists');
    for (var t=0; t&lt;tids.length; t++) {
        s.options[s.length]=new Option(tids[t].title,tids[t].title);
        s.options[s.length-1].title=tids[t].getSubtitle();
    }
    s.size=Math.min(s.length,10);
    s.onclick=function(){ if (!this.value.length) return false;
        if (this.value=='_file') {
            var fn=config.quickEdit.promptForFilename(
                'Enter/select a text file',getLocalPath(document.location.href),'');
            if (!fn) return false; /* cancelled by user */
            var txt=loadFile(getLocalPath(fn));
            if (!txt) { alert('Error: unable to read contents from \0027'+fn+'\0027'); return; }
        }
        else var txt=store.getTiddlerText(this.value);
        if (!txt) {
            displayMessage(this.value+' not found');
            this.selectedIndex=0; this.focus();
            return false;
        }
        config.quickEdit.setSelection(this.button,txt);
        Popup.remove(); return false;
    };
    s.onkeyup=config.quickEdit.keyup;
    Popup.show();
    s2.style.width=s.offsetWidth+'px';
    s.focus();
    return config.quickEdit.processed(event);&quot;
&gt;insert&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickEdit_link" modifier="ELSDesignStudios" created="200801120909" modified="200906112023" tags="excludeLists macro">
<pre>/%
|Name|QuickEdit_link|
|Source|http://www.TiddlyTools.com/#QuickEdit_link|
|Version|2.4.3|
|Author|Eric Shulman|
|License|see http://www.TiddlyTools.com/#QuickEditPlugin|
|Type|html|
|Requires|QuickEditPlugin|
|Description|quickedit - link to tiddler or external file|

Usage: see  http://www.TiddlyTools.com/#QuickEditToolbar

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;add a link to a tiddler or external file - [[link text|TiddlerName]]&quot;
onclick=&quot;var p=Popup.create(this); if (!p) return false; p.className+=' sticky smallform';

    var s2=createTiddlyElement(p,'select'); s2.title='filter by tag';
    s2.options[0]=new Option('filter by tag...','');
    s2.options[s2.length]=new Option('[all tiddlers]','');
    var tags=store.getTags();
    for (var t=0; t&lt;tags.length; t++) s2.options[s2.length]=new Option(tags[t][0],tags[t][0]);
    s2.onchange=function(){
        var tag=this.value;
        var tids=tag.length?store.reverseLookup('tags',tag,true):store.reverseLookup('tags','excludeLists');
        var list=this.nextSibling.nextSibling;
        while (list.length) list.options[0]=null;
        var prompt='select a tiddler or file...';
        if (tag.length) prompt='select a tagged tiddler ['+tids.length+' matches]...';
        list.options[0]=new Option(prompt,'');
        if (!tag.length) list.options[list.length]=new Option('[browse for file...]','_file');
        for (var t=0; t&lt;tids.length; t++) {
            list.options[list.length]=new Option(tids[t].title,tids[t].title);
            list.options[list.length-1].title=tids[t].getSubtitle();
        }
        list.size=Math.min(list.length,10);
        list.selectedIndex=0; list.focus();
        this.style.width=list.offsetWidth+'px';
        if (!tag.length) this.selectedIndex=0;
    };
    createTiddlyElement(p,'br');

    var s=createTiddlyElement(p,'select'); s.button=this;
    s.title='select a tiddler or file';
    s.options[0]=new Option('select a tiddler or file...','');
    s.options[s.length]=new Option('[browse for file...]','_file');
    var tids=store.reverseLookup('tags','excludeLists');
    for (var t=0; t&lt;tids.length; t++) {
        s.options[s.length]=new Option(tids[t].title,tids[t].title);
        s.options[s.length-1].title=tids[t].getSubtitle();
    }
    s.size=Math.min(s.length,10);
    s.onclick=function(){ if (!this.value.length) return false;
        var title=this.value; var txt=title;
        if (title=='_file') {
            title=config.quickEdit.promptForFilename('Select a file',
                getLocalPath(document.location.href),'');
            if (!title) { this.selectedIndex=0; this.focus(); return false; }
            var txt=title.substr(title.lastIndexOf('/')+1);
        }
        var txt=prompt('Enter the text to display for this link',txt);
        if (!txt) { this.selectedIndex=0; this.focus(); return false; }
        config.quickEdit.setSelection(this.button,'[['+txt+'|'+title+']]');
        Popup.remove(); return false;
    };
    s.onkeyup=config.quickEdit.keyup;
    Popup.show();
    s2.style.width=s.offsetWidth+'px';
    s.focus();
    return config.quickEdit.processed(event);&quot;
&gt;link&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickEdit_macro" modifier="ELSDesignStudios" created="200801120912" modified="200906112023" tags="excludeLists macro">
<pre>/%
|Name|QuickEdit_macro|
|Source|http://www.TiddlyTools.com/#QuickEdit_macro|
|Version|2.4.3|
|Author|Eric Shulman|
|License|see http://www.TiddlyTools.com/#QuickEditPlugin|
|Type|html|
|Requires|QuickEditPlugin|
|Description|quickedit - embed a macro with 'guide text'|

Usage: see  http://www.TiddlyTools.com/#QuickEditToolbar

Note:
Optional 'guideText' can be used to add suggested defaults/placeholders for specific macro parameters.
Add guideText to your own plugin-defined macros using:
    config.macros.macroName.guideText='guide text goes here';

%/&lt;&lt;tiddler {{
    /* define guide text for a few common TW core macros */
    config.macros.edit.guideText='fieldname #rows';
    config.macros.view.guideText='fieldname (link,wikified,date) format';
    config.macros.slider.guideText='cookie TiddlerName label tooltip';
    config.macros.option.guideText='(txtCookieName,chkCookieName)';
    config.macros.tiddler.guideText='TiddlerName with: params...';
    ''; /* must return blank to suppress output */ }}&gt;&gt;/%

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href='javascript:;' class='tiddlyLink' tabindex='-1'
title='add a macro - \&lt;\&lt;macroName ...\&gt;\&gt;'
onclick=&quot;var p=Popup.create(this); if (!p) return false; p.className+=' sticky smallform';
    var s=createTiddlyElement(p,'select'); s.button=this;
    s.options[0]=new Option('select a macro...','');
    var macros=[]; for (var m in config.macros) if (config.macros[m].handler) macros.push(m); macros.sort();
    for (var i=0; i&lt;macros.length; i++) { var m=macros[i];
        var help=config.macros[m].guideText; if (!help) help=''; else help=' '+help;
        s.options[s.length]=new Option(m,m+help);
        s.options[s.length-1].title='\&lt;\&lt;'+m+help+'\&gt;\&gt;';
    }
    s.size=Math.min(s.length,15);
    s.onclick=function(){ if (!this.value.length) return;
        config.quickEdit.setSelection(this.button,'\&lt;\&lt;'+this.value+'\&gt;\&gt;');
        Popup.remove(); return false;
    };
    s.onkeyup=config.quickEdit.keyup;
    Popup.show();
    s.focus();
    return config.quickEdit.processed(event);&quot;
&gt;macro&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickEdit_replace" modifier="ELSDesignStudios" created="200801111630" modified="201012270540" tags="excludeLists macro">
<pre>/%
|Name|QuickEdit_replace|
|Source|http://www.TiddlyTools.com/#QuickEdit_replace|
|Version|2.4.5|
|Author|Eric Shulman|
|License|see http://www.TiddlyTools.com/#QuickEditPlugin|
|Type|html|
|Requires|QuickEditPlugin|
|Description|quickedit - find/replace selected text with replacement text|

Usage: see  http://www.TiddlyTools.com/#QuickEditToolbar
!!!Revisions
&lt;&lt;&lt;
2010.12.26 2.4.5 fix use getField(this) to support hijacks by editSectionPlugin
&lt;&lt;&lt;
%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;find/replace selected text with replacement text&quot;
onclick=&quot;var p=Popup.create(this,null,'popup sticky smallform'); if (!p) return false;
    var e=config.quickEdit.getField(this);
    var s=config.quickEdit.getSelection(e);
    var t=createTiddlyElement(p,'input'); t.onfocus=function(){this.select()};
    t.value=s.length?s:'enter target text';
    var r=createTiddlyElement(p,'input'); r.onfocus=function(){this.select()};
    r.value='enter replacement text';
    var b=createTiddlyElement(p,'button',null,null,'?');
    b.style.width='2em';
    b.title='FIND/FIND NEXT target text';
    b.root=this;
    b.onclick=function(ev) { /* FIND */
        var e=config.quickEdit.getField(this.root);
        var t=this.previousSibling.previousSibling;
        var tv=t.value.replace(/\\t/mg,'\t').unescapeLineBreaks();
        e.focus();
        if (e.setSelectionRange) { /* MOZ */
            var newstart=e.value.indexOf(tv,e.selectionStart+1);
            if (newstart==-1) newstart=e.value.indexOf(tv); /* wrap around */
            if (newstart==-1) { alert('\u0022'+t.value+'\u0022 not found'); t.focus(); return; }
            e.setSelectionRange(newstart,newstart+tv.length);
            var linecount=e.value.split('\n').length;
            var thisline=e.value.substr(0,e.selectionStart).split('\n').length;
            e.scrollTop=Math.floor((thisline-1-e.rows/2)*e.scrollHeight/linecount);
        } else if (document.selection) { /* IE */
            var range=document.selection.createRange();
            if(range.parentElement()==e) {
                range.collapse(false);
                var found=false; try{found=range.findText(v,e.value.length,4)}catch(e){}
                if (found) range.select();
                else { alert('\u0022'+t.value+'\u0022 not found'); t.focus(); }
            }
        }
    };
    b=createTiddlyElement(p,'button',null,null,'=');
    b.style.width='2em';
    b.title='REPLACE selected text';
    b.root=this;
    b.onclick=function(ev) { /* REPLACE */
        var e=config.quickEdit.getField(this.root);
        var t=this.previousSibling.previousSibling.previousSibling;
        var r=this.previousSibling.previousSibling;
        var rv=r.value.replace(/\\t/mg,'\t').unescapeLineBreaks();
        if (   (e.selectionStart!==undefined &amp;&amp; e.selectionEnd==e.selectionStart)
            || (document.selection &amp;&amp; document.selection.createRange().text==''))
            this.previousSibling.click(); /* no selection... do FIND first */
        if (   (e.selectionStart!==undefined &amp;&amp; e.selectionEnd==e.selectionStart)
            || (document.selection &amp;&amp; document.selection.createRange().text==''))
            { t.focus(); return; } /* still no selection... goto target input */
        e.focus(); replaceSelection(e,rv);
    };
    b=createTiddlyElement(p,'button',null,null,'+');
    b.style.width='2em';
    b.title='REPLACE selected text AND FIND NEXT target text';
    b.onclick=function(ev) { /* REPLACE and FIND NEXT */
        this.previousSibling.click();
        this.previousSibling.previousSibling.click();
    };
    b=createTiddlyElement(p,'button',null,null,'!');
    b.style.width='2em';
    b.title='REPLACE ALL occurrences of target text';
    b.root=this;
    b.onclick=function(ev) { /* REPLACE ALL */
        var e=config.quickEdit.getField(this.root);
        var t=this.previousSibling.previousSibling.previousSibling.previousSibling.previousSibling;
        var r=this.previousSibling.previousSibling.previousSibling.previousSibling;
        var tv=t.value.replace(/\\t/mg,'\t').unescapeLineBreaks();
        var rv=r.value.replace(/\\t/mg,'\t').unescapeLineBreaks();
        if (!tv.length) { alert('Please enter the target text'); t.focus(); return; }
        var m='This will replace all occurrences of:\n\n'+tv+'\n\nwith:\n\n'+rv+'\n\nAre you sure?';
        if (!confirm(m)) { r.focus(); r.select(); return; }
        e.value=e.value.replace(new RegExp(tv.escapeRegExp(),'gm'),rv);
        e.focus(); e.select(); Popup.remove();
    };
    Popup.show();
    if (!s.length) {t.focus();t.select()} else {r.focus();r.select()}
    event.cancelBubble=true;if(event.stopPropagation)event.stopPropagation();return false;&quot;
&gt;replace&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickEdit_sort" modifier="ELSDesignStudios" created="200801111616" modified="200906112023" tags="excludeLists macro">
<pre>/%
|Name|QuickEdit_sort|
|Source|http://www.TiddlyTools.com/#QuickEdit_sort|
|Version|2.4.3|
|Author|Eric Shulman|
|License|see http://www.TiddlyTools.com/#QuickEditPlugin|
|Type|html|
|Requires|QuickEditPlugin|
|Description|quickedit - sort lines of text|

Usage: see  http://www.TiddlyTools.com/#QuickEditToolbar

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;sort lines of text&quot;
onclick=&quot;var p=Popup.create(this); if (!p) return false; p.className+=' sticky smallform';
    var s=createTiddlyElement(p,'select'); s.button=this;
    s.options[0]=new Option('select sort order...','');
    s.options[s.length]=new Option('ascending','A');
    s.options[s.length-1].title='ascending';
    s.options[s.length]=new Option('descending','D');
    s.options[s.length-1].title='descending';
    s.size=s.length;
    s.onclick=function(){ if (!this.value.length) return;
        var e=config.quickEdit.getField(this.button); if (!e) return false;
        var lines=config.quickEdit.getSelection(e).split('\n').sort();
        if (this.value=='D') lines=lines.reverse();
        replaceSelection(e,lines.join('\n'));
        e.focus();
        Popup.remove(); return false;
    };
    s.onkeyup=config.quickEdit.keyup;
    Popup.show();
    s.focus();
    return config.quickEdit.processed(event);&quot;
&gt;sort&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickEdit_split" modifier="ELSDesignStudios" created="200803080738" modified="200906112023" tags="excludeLists macro">
<pre>/%
|Name|QuickEdit_split|
|Source|http://www.TiddlyTools.com/#QuickEdit_split|
|Version|2.4.3|
|Author|Eric Shulman|
|License|see http://www.TiddlyTools.com/#QuickEditPlugin|
|Type|html|
|Requires|QuickEditPlugin|
|Description|quickedit - move selection to new tiddler and insert link, embedded tiddler, or slider|

Usage: see  http://www.TiddlyTools.com/#QuickEditToolbar

Based on ideas originally developed by YannPerrin
(http://yann.perrin.googlepages.com/twkd.html#easySlicer)

%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot; tabindex=&quot;-1&quot;
title=&quot;move selection to new tiddler and insert link, embedded tiddler, or slider&quot;
onclick=&quot;var p=Popup.create(this); if (!p) return false; p.className+=' sticky smallform';
    p.style.whiteSpace='nowrap';
    var i=createTiddlyElement(p,'input');
    i.defaultValue='Enter a new tiddler title';
    i.onfocus=function(){this.select()};
    var s=createTiddlyElement(p,'select'); s.button=this;
    s.options[0]=new Option('select type...','');
    s.options[0].title='select split type';
    s.options[1]=new Option('link','link');
    s.options[1].title='replace with [[TiddlerName]]';
    s.options[2]=new Option('embed','embed');
    s.options[2].title='replace with \&lt;\&lt;tiddler TiddlerName\&gt;\&gt;';
    s.options[3]=new Option('slider','slider');
    s.options[3].title='replace with \&lt;\&lt;slider \u0022\u0022 [[TiddlerName]] [[label]] [[tooltip]]\&gt;\&gt;';
    s.onchange=function(){
        if (s.previousSibling.value==s.previousSibling.defaultValue)
            { alert('A tiddler title is required'); s.selectedIndex=0; s.previousSibling.focus(); return false; }
        var tid=s.previousSibling.value;
        if (store.tiddlerExists(tid) &amp;&amp; !confirm(config.messages.overwriteWarning.format([tid])))
            { s.previousSibling.focus(); return false; }
        switch(s.value) {
            case 'link':
                var newtxt='[['+tid+']]';
                break;
            case 'embed':
                var newtxt='\&lt;\&lt;tiddler [['+tid+']]\&gt;\&gt;';
                break;
            case 'slider':
                var label=prompt('Enter a slider label',tid);
                if (!label) { Popup.remove(); return false; }
                var tip=prompt('Enter a slider tooltip',label);
                if (!tip) { Popup.remove(); return false; }
                var newtxt='\&lt;\&lt;slider \u0022\u0022 [['+tid+']] [['+label+']] [['+tip+']]\&gt;\&gt;';
                break;
        }
        var txt=config.quickEdit.getSelection(config.quickEdit.getField(this.button));
        store.saveTiddler(tid,tid,txt,config.options.txtUserName,new Date(),[],{});
        story.displayTiddler(story.findContainingTiddler(this.button),tid);
        config.quickEdit.setSelection(this.button,newtxt);
        Popup.remove(); return false;
    };
    Popup.show();
    event.cancelBubble=true;if(event.stopPropagation)event.stopPropagation();return false;&quot;
&gt;split&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickEdit_tiddler" modifier="SDM" created="200801120913" modified="201211220320" tags="excludeLists macro" book_key="">
<pre>/%
|Name|QuickEdit_tiddler|
|Source|http://www.TiddlyTools.com/#QuickEdit_tiddler|
|Version|2.2.0|
|Author|Eric Shulman - ELS Design Studios|
|License|http://www.TiddlyTools.com/#LegalStatements &lt;br&gt;and [[Creative Commons Attribution-ShareAlike 2.5 License|http://creativecommons.org/licenses/by-sa/2.5/]]|
|~CoreVersion|2.2|
|Type|script|
|Requires|QuickEditPlugin|
|Overrides||
|Description|definition for toolbar button that inserts content from another tiddler|

Usage:
QuickEditToolbar: &lt;&lt;tiddler QuickEdit_tiddler&gt;&gt;
OR
EditTemplate: &lt;span class='toolbar' macro='tiddler QuickEdit_tiddler'&gt;&lt;/span&gt;

**** INSERT TIDDLER ****
%/&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;tiddlyLink&quot;
title=&quot;copy content from another tiddler&quot;
onclick=&quot;var p=Popup.create(this); if (!p) return false; p.className+=' sticky smallform';
    var s=createTiddlyElement(p,'select'); s.button=this;
    s.options[0]=new Option('select a tiddler...','');
    s.onchange=function(){
        var txt=store.getTiddlerText(this.value);
        if (!txt) { displayMessage(this.value+' not found'); this.selectedIndex=0; this.focus(); return false; }
        config.quickEdit.setSelection(this.button,txt);
        Popup.remove(); return false;
    };
    var tids=store.getTiddlers('title');
    for (var t=0; t&lt;tids.length; t++) {
        s.options[s.length]=new Option(tids[t].title,tids[t].title);
        s.options[s.length-1].title=tids[t].getSubtitle();
    }
    var s=createTiddlyElement(p,'select');
    s.options[0]=new Option('match tag...','');
    s.onchange=function(){
        var tag=this.value;
        var tids=tag.length?store.getTaggedTiddlers(tag,'title'):store.getTiddlers('title');
        var list=this.previousSibling;
        while (list.length) list.options[0]=null;
        var prompt='select a '+(tag.length?'tagged ':'')+'tiddler'+(tag.length?(' ['+tids.length+' matches]'):'')+'...';
        list.options[0]=new Option(prompt,'');
        for (var t=0; t&lt;tids.length; t++) {
            list.options[list.length]=new Option(tids[t].title,tids[t].title);
            list.options[list.length-1].title=tids[t].getSubtitle();
        }
    };
    var tags=store.getTags();
    for (var t=0; t&lt;tags.length; t++) s.options[s.length]=new Option(tags[t][0],tags[t][0]);
    Popup.show(p,false);
    event.cancelBubble=true;if(event.stopPropagation)event.stopPropagation();return false;&quot;
&gt;tiddler&lt;/a&gt;&lt;/html&gt;</pre>
</div>
<div title="QuickNotePlugin" modifier="ELSDesignStudios" created="200909151831" modified="201106072053" tags="systemConfig excludeLists">
<pre>/***
|Name|[[QuickNotePlugin]]|
|Source|http://www.TiddlyTools.com/#QuickNotePlugin|
|Version|2.1.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Description|create quick notes using username+timestamp as tiddler titles|
!!!!!Documenatation
&gt;see [[QuickNotePluginInfo]]
!!!!!Revisions
&lt;&lt;&lt;
2011.06.07 2.1.0 added tiddler:... parameter (default=username)
2011.04.27 2.0.1 merge/clone defaultCustomFields for saving on TiddlySpace
| Please see [[QuickNotePluginInfo]] for previous revision details |
2009.09.15 1.0.0 initial release (transclusion)
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.QuickNotePlugin={ major:2, minor:1, revision:0, date:new Date(2011,6,7) };
config.macros.quickNote = {
    addedMsg: 'Note added to: &quot;%0&quot;',
    createdMsg: 'Created new note tiddler: &quot;%0&quot;',
    shadow: function(tid,txt) {
        config.shadowTiddlers[tid]=txt;
        config.annotations[tid]='see QuickNotePlugin';
    },
    init: function() {
        this.shadow('QuickNote',
            '&lt;&lt;quickNote dateformat:&quot;$1&quot; tags:&quot;$2&quot; tiddler:&quot;$3&quot;&gt;&gt;');
        this.shadow('QuickNotePluginPanel',
            store.getTiddlerText('QuickNotePlugin##html',''));
    },
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var p=paramString.parseParams('name',null,true,false,true);
        var s=createTiddlyElement(place,'span');
        s.innerHTML=store.getTiddlerText('QuickNotePluginPanel','');
        var f=s.getElementsByTagName('form')[0]; if (!f) return;
        f.id=new Date().getTime()+Math.random().toString(); // globally unique ID
        var v=getParam(p,'dateformat',''); v=v=='$1'?'':v; f.dateformat.value=v;
        var v=getParam(p,'tags'      ,''); v=v=='$2'?'':v; f.tags.value=v;
        var v=getParam(p,'tiddler'   ,config.options.txtUserName); v=v=='$3'?'':v; f.target.value=v;
        if (v=='here') {
            var here=story.findContainingTiddler(place);
            if (here) f.target.value=here.getAttribute('tiddler');
        }
        this.tick(f.id);
    },
    tick: function(id) {
        var f=document.getElementById(id); if (!f) return;
        f.title.value=f.target.value+new Date().formatString(f.dateformat.value);
        window.setTimeout('config.macros.quickNote.tick(&quot;'+id+'&quot;)',1000);
    },
    saveNote: function(f) {
        var tid=f.title.value; if (!tid.length) return;
        var t=store.getTiddler(tid); var existing=t!=null;
        if (!existing) { t=new Tiddler(); t.text=store.getTiddlerText(tid,''); }
        var who =t&amp;&amp;config.options.chkForceMinorUpdate?t.modifier:config.options.txtUserName;
        var when=t&amp;&amp;config.options.chkForceMinorUpdate?t.modified:new Date();
        var txt =t.text+(t.text.length?'\n':'')+f.txt.value;
        var tags=t.tags.slice(0); var newtags=f.tags.value.readBracketedList();
        for (var i=0; i&lt;newtags.length; i++) tags.pushUnique(newtags[i]);
        var fields=merge({},config.defaultCustomFields,true)
        store.saveTiddler(tid,tid,txt,who,when,tags,fields);
        autoSaveChanges(); story.displayTiddler(null,tid);
        if (existing) displayMessage(this.addedMsg.format([tid]));
        else displayMessage(this.createdMsg.format([tid]));
    }
}
//}}}
/***
!!!!!Shadow tiddler: QuickNotePluginPanel
{{{
!html
&lt;html&gt;&lt;nowiki&gt;&lt;form class=&quot;quickNote&quot; style=&quot;display:inline;margin:0;padding:0;white-space:nowrap;&quot;&gt;
&lt;input type=hidden name=&quot;dateformat&quot; disabled value=&quot;&quot;&gt;
&lt;input type=hidden name=&quot;target&quot; disabled value=&quot;&quot;&gt;
&lt;input type=text name=&quot;title&quot; disabled value=&quot;&quot; title=&quot;title for new tiddler&quot; style=&quot;width:50%&quot;&gt;
&lt;input type=text name=&quot;tags&quot; value=&quot;&quot; title=&quot;tags for new tiddler&quot; style=&quot;width:40%&quot;&gt;
&lt;input type=button value=&quot;save&quot; style=&quot;width:8%&quot;
    onclick=&quot;config.macros.quickNote.saveNote(this.form); return false;&quot;&gt;&lt;br&gt;
&lt;textarea name=&quot;txt&quot; rows=&quot;5&quot; cols=&quot;60&quot; style=&quot;width:100%&quot;&gt;&lt;/textarea&gt;
&lt;/form&gt;&lt;/html&gt;
!end
}}}
***/
 </pre>
</div>
<div title="QuickNotePluginInfo" modifier="ELSDesignStudios" created="200909151831" modified="201106072042" tags="howto excludeLists">
<pre>/***
|Name|QuickNotePluginInfo|
|Source|http://www.TiddlyTools.com/#QuickNotePlugin|
|Documentation|http://www.TiddlyTools.com/#QuickNotePluginInfo|
|Version|2.1.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|documentation|
|Description|documentation for QuickNotePlugin|
!!!!!Usage
&lt;&lt;&lt;
{{{
&lt;&lt;quickNote tiddler:&quot;...&quot; dateformat:&quot;...&quot; taglist:&quot;...&quot;&gt;&gt;
}}}
*''tiddler'' //(default=username)//&lt;br&gt;target tiddler in which to add note text.  Note: to refer to the current tiddler, use special //keyword value:// ''&quot;here&quot;'' (i.e., &quot;tiddler:here&quot;)
*''dateformat'' //(default=none)//&lt;br&gt;format string (e.g. &quot;&quot;&quot;YYYY0MM0DD0hh0mm0ss&quot;&quot;&quot;) used to generate a unique tiddler title for each new note that is created, by combining the TW username with a //timestamp// for the current time.
*''taglist'' //(optional)//&lt;br&gt;one or more space-separated tag values (e.g., &quot;tag tag [[tag with spaces]] tag tag ...&quot;) that will be added to newly created notes.
For backward-compatibility with existing document content, you can also use the {{{&lt;&lt;tiddler&gt;&gt;}}} macro to transclude the [[QuickNote]] //shadow tiddler//, like this:
{{{
&lt;&lt;tiddler QuickNote with: &quot;dateformat&quot; &quot;taglist&quot; &quot;tiddler&quot;&gt;&gt;
}}}
Note: transclusion uses //unnamed// parameters that ''must occur in the order shown above''.  You can use &quot;&quot; as placeholders to apply default parameter values.
&lt;&lt;&lt;
!!!!!Examples
&lt;&lt;&lt;
{{{&lt;&lt;quickNote dateformat:&quot;-YYYY0MM0DD0hh0mm0ss&quot; tags:&quot;quicknote journal&quot;&gt;&gt;}}}
&lt;&lt;quickNote dateformat:&quot;-YYYY0MM0DD0hh0mm0ss&quot; tags:&quot;quicknote journal&quot;&gt;&gt;
&lt;&lt;&lt;
!!!!!Revisions:
&lt;&lt;&lt;
2011.06.07 2.1.0 added tiddler: macro parameter
2011.04.27 2.0.1 merge/clone defaultCustomFields for saving on TiddlySpace
2011.03.06 2.0.0 converted to plugin.  Handle append to existing tiddler.  Added autosave.
2009.09.15 1.0.0 initial release (transclusion)
&lt;&lt;&lt;</pre>
</div>
<div title="Quotations Formatting" creator="matt" modifier="psd" created="201102111432" modified="201102151517" tags="formatting">
<pre>!Block Quotations
Blocks of text can be displayed as quotations:
{{{
&lt;&lt;&lt;
Steve Jobs: &quot;computers are like a bicycle for our minds&quot;
&lt;&lt;&lt;
}}}
Displays as:
&lt;&lt;&lt;
Steve Jobs: &quot;computers are like a bicycle for our minds&quot;
&lt;&lt;&lt;
!Nested Quotations
Quotes can be displayed on multi-levels:
{{{
&gt; blockquote, level 1
&gt;&gt; blockquote, level 2
&gt;&gt;&gt; blockquote, level 3
}}}
Displays as:
&gt; blockquote, level 1
&gt;&gt; blockquote, level 2
&gt;&gt;&gt; blockquote, level 3</pre>
</div>
<div title="Random Tiddler" modifier="SDM" created="201209021914" modified="201304292059" tags="excludeLists" book_key="" changecount="2">
<pre>!!!! Below are notes for a randomly selected passage of the Bible
{{fyi{
{{{
If you want to edit this, don't open this tiddler!  Click on header below.
   |
   V
}}}
}}}
@@display:block;height:24em;overflow:auto;
&lt;script&gt;
  var tids=store.getMatchingTiddlers(&quot;NOT excludeLists AND NOT wiki&quot;);
  //var tids=store.getTaggedTidlers(&quot;Comment&quot;);
  var randex = Math.floor(Math.random()*tids.length) ;
  if (tids.length)
    return &quot;[[&quot;+tids[randex].title+&quot;]]&lt;br&gt;&lt;hr&gt;&lt;&lt;tiddler &quot;+tids[randex].title+&quot;&gt;&gt;&quot;;
&lt;/script&gt; </pre>
</div>
<div title="Raves" creator="psd" modifier="jermolene" created="201102111106" modified="201110201351" tags="welcome">
<pre>~TiddlyWiki has received many favourable reviews:
* &quot;~TiddlyWiki offers a glimpse of how things are changing in terms of how people think about software... a new beginning for simple software.&quot; -- //Jeremy Wagstaff, [[WSJ.com|http://groups.google.com/group/TiddlyWiki/browse_thread/thread/53c7b7686b9bb5c2/122f1b2146d2ba6d?q=wsj&amp;rnum=1]]//
* &quot;The original ~TiddlyWiki by Jeremy Ruston is, without a doubt, one of the most amazing dynamic web apps I've ever seen (sorry Gmail.)&quot; -- [[Lifehacker.com recommendation|http://www.lifehacker.com/software/productivity/getting-things-done-tiddlywiki-102953.php]]
* &quot;It's blowing my mind.&quot; -- //Evan Williams, founder of Blogger, Twitter and Odeo, [[EvHead|http://evhead.com/2005/05/tiddlywiki-reusable-non-linear.asp]]//
* &quot;What I love most about ~TiddlyWiki is that it is quite easy to use but incredibly flexible.&quot; -- //Ed Sim of Dawntreader Ventures, [[BeyondVC|http://www.beyondvc.com/2005/10/tiddlywiki.html]]//
* &quot;~TiddlyWiki is completely blowing my mind... Completely tripped out. Try it and you'll see what I mean.&quot; -- //Russell Beattie of Yahoo!, [[Russell Beattie's Notebook|http://www.russellbeattie.com/notebook/1008896.html]]//
* &quot;OK, this is the first wiki interface I’ve seen that has real potential. Dunno quite why exactly, but this blows my mind.&quot; -- //Jason Kottke, [[Kottke's Remaindered Links|http://www.kottke.org/remainder/04/09/6574.html]]//
There is also the [[The Great TiddlyWiki Viral Mass Interview Challenge|http://interview.tiddlyspace.com/]], a community project to record the impact that TiddlyWiki has had on the people that use it and build it.
</pre>
</div>
<div title="RearrangeTiddlersPlugin" creator="SDM" modifier="SDM" created="200607012228" tags="systemConfig excludeLists">
<pre>/***
|Name|RearrangeTiddlersPlugin|
|Source|http://www.TiddlyTools.com/#RearrangeTiddlersPlugin|
|Version|2.0.0|
|Author|Eric Shulman|
|OriginalAuthor|Joe Raii|
|License|http://www.TiddlyTools.com/#LegalStatements &lt;br&gt;and [[Creative Commons Attribution-ShareAlike 2.5 License|http://creativecommons.org/licenses/by-sa/2.5/]]|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides|Story.prototype.refreshTiddler|
|Description|drag tiddlers by title to re-order story column display|

adapted from: http://www.cs.utexas.edu/~joeraii/dragn/#Draggable
changes by ELS:
* hijack refreshTiddler() instead of overridding createTiddler()
* find title element by className instead of elementID
* set cursor style via code instead of stylesheet
* set tooltip help text
* set tiddler &quot;position:relative&quot; when starting drag event, restore saved value when drag ends
* update 2006.08.07: use getElementsByTagName(&quot;*&quot;) to find title element, even when it is 'buried' deep in tiddler DOM elements (due to custom template usage)
* update 2007.03.01: use apply() to invoke hijacked core function
* update 2008.01.13: only hijack core function once.  (allows for dynamic loading of plugin via bookmarklet)
* update 2008.10.19: added onclick popup menu with 'move to top' and 'move to bottom' commands

***/
//{{{

if (Story.prototype.rearrangeTiddlersHijack_refreshTiddler===undefined) {
Story.prototype.rearrangeTiddlersHijack_refreshTiddler = Story.prototype.refreshTiddler;
Story.prototype.refreshTiddler = function(title,template)
{
    this.rearrangeTiddlersHijack_refreshTiddler.apply(this,arguments);
    var theTiddler = document.getElementById(this.idPrefix + title); if (!theTiddler) return;
    var theHandle;
    var children=theTiddler.getElementsByTagName(&quot;*&quot;);
    for (var i=0; i&lt;children.length; i++) if (hasClass(children[i],&quot;title&quot;)) { theHandle=children[i]; break; }
    if (!theHandle) return theTiddler;

    Drag.init(theHandle, theTiddler, 0, 0, null, null);
    theHandle.style.cursor=&quot;move&quot;;
    theHandle.title=&quot;drag title to re-arrange tiddlers, click for more options...&quot;
    theTiddler.onDrag = function(x,y,myElem) {
        if (this.style.position!=&quot;relative&quot;)
            { this.savedstyle=this.style.position; this.style.position=&quot;relative&quot;; }
        y = myElem.offsetTop;
        var next = myElem.nextSibling;
        var prev = myElem.previousSibling;
        if (next &amp;&amp; y + myElem.offsetHeight &gt; next.offsetTop + next.offsetHeight/2) {
            myElem.parentNode.removeChild(myElem);
            next.parentNode.insertBefore(myElem, next.nextSibling);//elems[pos+1]);
            myElem.style[&quot;top&quot;] = -next.offsetHeight/2+&quot;px&quot;;
        }
        if (prev &amp;&amp; y &lt; prev.offsetTop + prev.offsetHeight/2) {
            myElem.parentNode.removeChild(myElem);
            prev.parentNode.insertBefore(myElem, prev);
            myElem.style[&quot;top&quot;] = prev.offsetHeight/2+&quot;px&quot;;
        }
    };
    theTiddler.onDragEnd = function(x,y,myElem) {
        myElem.style[&quot;top&quot;] = &quot;0px&quot;;
        if (this.savedstyle!=undefined)
            this.style.position=this.savedstyle;
    };
    theHandle.onclick=function(ev) {
        ev=ev||window.event;
        var p=Popup.create(this); if (!p) return;
        var b=createTiddlyButton(createTiddlyElement(p,&quot;li&quot;),
            &quot;\u25B2 move to top of column &quot;,&quot;move this tiddler to the top of the story column&quot;,
            function() {
                var t=story.getTiddler(this.getAttribute(&quot;tid&quot;));
                t.parentNode.insertBefore(t,t.parentNode.firstChild); // move to top of column
                window.scrollTo(0,ensureVisible(t));
                return false;
            });
        b.setAttribute(&quot;tid&quot;,title);
        var b=createTiddlyButton(createTiddlyElement(p,&quot;li&quot;),
            &quot;\u25BC move to bottom of column &quot;,&quot;move this tiddler to the bottom of the story column&quot;,
            function() {
                var t=story.getTiddler(this.getAttribute(&quot;tid&quot;));
                t.parentNode.insertBefore(t,null); // move to bottom of column
                window.scrollTo(0,ensureVisible(t));
                return false;
            });
        b.setAttribute(&quot;tid&quot;,title);
        Popup.show(p,false);
        ev.cancelBubble=true; if (ev.stopPropagation) ev.stopPropagation(); return(false);
    };
    return theTiddler;
}
}

/**************************************************
 * dom-drag.js
 * 09.25.2001
 * www.youngpup.net
 **************************************************
 * 10.28.2001 - fixed minor bug where events
 * sometimes fired off the handle, not the root.
 **************************************************/

var Drag = {
    obj:null,

    init:
    function(o, oRoot, minX, maxX, minY, maxY) {
        o.onmousedown = Drag.start;
        o.root = oRoot &amp;&amp; oRoot != null ? oRoot : o ;
        if (isNaN(parseInt(o.root.style.left))) o.root.style.left=&quot;0px&quot;;
        if (isNaN(parseInt(o.root.style.top))) o.root.style.top=&quot;0px&quot;;
        o.minX = typeof minX != 'undefined' ? minX : null;
        o.minY = typeof minY != 'undefined' ? minY : null;
        o.maxX = typeof maxX != 'undefined' ? maxX : null;
        o.maxY = typeof maxY != 'undefined' ? maxY : null;
        o.root.onDragStart = new Function();
        o.root.onDragEnd = new Function();
        o.root.onDrag = new Function();
    },

    start:
    function(e) {
        var o = Drag.obj = this;
        e = Drag.fixE(e);
        var y = parseInt(o.root.style.top);
        var x = parseInt(o.root.style.left);
        o.root.onDragStart(x, y, Drag.obj.root);
        o.lastMouseX = e.clientX;
        o.lastMouseY = e.clientY;
        if (o.minX != null) o.minMouseX = e.clientX - x + o.minX;
        if (o.maxX != null) o.maxMouseX = o.minMouseX + o.maxX - o.minX;
        if (o.minY != null) o.minMouseY = e.clientY - y + o.minY;
        if (o.maxY != null) o.maxMouseY = o.minMouseY + o.maxY - o.minY;
        document.onmousemove = Drag.drag;
        document.onmouseup = Drag.end;
        Drag.obj.root.style[&quot;z-index&quot;] = &quot;10&quot;;
        return false;
    },

    drag:
    function(e) {
        e = Drag.fixE(e);
        var o = Drag.obj;
        var ey = e.clientY;
        var ex = e.clientX;
        var y = parseInt(o.root.style.top);
        var x = parseInt(o.root.style.left);
        var nx, ny;
        if (o.minX != null) ex = Math.max(ex, o.minMouseX);
        if (o.maxX != null) ex = Math.min(ex, o.maxMouseX);
        if (o.minY != null) ey = Math.max(ey, o.minMouseY);
        if (o.maxY != null) ey = Math.min(ey, o.maxMouseY);
        nx = x + (ex - o.lastMouseX);
        ny = y + (ey - o.lastMouseY);
        Drag.obj.root.style[&quot;left&quot;] = nx + &quot;px&quot;;
        Drag.obj.root.style[&quot;top&quot;] = ny + &quot;px&quot;;
        Drag.obj.lastMouseX = ex;
        Drag.obj.lastMouseY = ey;
        Drag.obj.root.onDrag(nx, ny, Drag.obj.root);
        return false;
    },

    end:
    function() {
        document.onmousemove = null;
        document.onmouseup = null;
        Drag.obj.root.style[&quot;z-index&quot;] = &quot;0&quot;;
        Drag.obj.root.onDragEnd(parseInt(Drag.obj.root.style[&quot;left&quot;]), parseInt(Drag.obj.root.style[&quot;top&quot;]), Drag.obj.root);
        Drag.obj = null;
    },

    fixE:
    function(e) {
        if (typeof e == 'undefined') e = window.event;
        if (typeof e.layerX == 'undefined') e.layerX = e.offsetX;
        if (typeof e.layerY == 'undefined') e.layerY = e.offsetY;
        return e;
    }
};
//}}}</pre>
</div>
<div title="RecentChanges" creator="SDM" modifier="SDM" created="200903231248" modified="201211212014" tags="macro excludeLists" book_key="">
<pre>&lt;&lt;tiddler HideTiddlerBackground&gt;&gt;&lt;&lt;tiddler HideTiddlerTags&gt;&gt;{{transparent smallform{&lt;&lt;recentChanges 30&gt;&gt;}}}</pre>
</div>
<div title="RecentChangesPlugin" creator="SDM" modifier="ELSDesignStudios" created="200707270332" tags="systemConfig excludeLists">
<pre>/***
|Name|RecentChangesPlugin|
|Source|http://www.TiddlyTools.com/#RecentChangesPlugin|
|Version|2.2.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides||
|Description|display droplist of recently changed tiddlers with goto, edit, and preview buttons|
!!!!!Usage
&lt;&lt;&lt;
The {{{&lt;&lt;recentChanges&gt;&gt;}}} macro displays a droplist of all tiddlers that have been changed within the last N days (default=10 days).
{{{
&lt;&lt;recentChanges&gt;&gt;
&lt;&lt;recentChanges #ofdays summary noEdit previewheight previewclass&gt;&gt;
}}}
where:
* #ofdays specifies the time limit for listing changed tiddlers.  Use 0 (zero) to list all tiddlers in the document.
* ''summary'' is an optional keyword that outputs only the summary text (without the droplist or buttons)
* ''noEdit'' is an optional keyword that hides the 'edit' button
* previewheight is a CSS height measurement and sets the FIXED height of the tiddler preview area (default is 15em)
* previewclass is any CSS classname, and can be used to apply custom styles to the preview area (default is to use the standard 'viewer' class)
&lt;&lt;&lt;
!!!!!Examples
&lt;&lt;&lt;
{{smallform{
{{{&lt;&lt;recentChanges&gt;&gt;}}}
&lt;&lt;recentChanges&gt;&gt;
{{{&lt;&lt;recentChanges 30 summary&gt;&gt;}}}
&lt;&lt;recentChanges 30 summary&gt;&gt;

{{{&lt;&lt;recentChanges 30 noedit 10em groupbox&gt;&gt;}}}
&lt;&lt;recentChanges 30 noedit 10em groupbox&gt;&gt;
}}}
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2009.07.02 [2.2.0] added optional 'noedit' keyword to hide 'edit' button
2008.07.01 [2.1.0] added optional 'summary' keyword for simple text output
2008.05.01 [2.0.1] fixup for titles with double-quotes
2007.07.26 [2.0.0] re-written as plugin
2006.10.02 [1.0.0] initial release (as inline script ShowRecentChanges)
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.RecentChangesPlugin= {major: 2, minor: 2, revision: 0, date: new Date(2009,7,2)};

config.shadowTiddlers.RecentChanges='&lt;recentChanges&gt;&gt;';

config.macros.recentChanges = {
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var days=10; if (!isNaN(params[0])) days=parseInt(params[0]); // time limit in days (use 0 for all tiddlers)
        var summary=params[1]&amp;&amp;params[1].toLowerCase()=='summary'; if (summary) params.shift();
        var noedit=params[1]&amp;&amp;params[1].toLowerCase()=='noedit'; if (noedit) params.shift();
        var height='15em'; if (params[1]) height=params[1]; // preview area fixed height
        var previewclass='viewer'; if (params[2]) previewclass=params[2]; // preview area CSS class
        var tiddlers=store.getTiddlers('modified','excludeLists').reverse();
        var count=tiddlers.length;
        if (days) {
            var timelimit=(new Date()).getTime()-86400000*days;
            for (var count=0; count&lt;tiddlers.length &amp;&amp; tiddlers[count].modified&gt;timelimit; count++);
        }
        var s=count+' tiddlers have changed since ';
        s+=new Date(timelimit).formatString('DDD, MMM DDth YYYY 0hh:0mm');
        s+=' ('+days+' days ago)';
        if (summary)
            { wikify(s,place); return; }
        var opts='&lt;option value=&quot;&quot;&gt;'+s+'&lt;/option&gt;';
        for (var i=0; i&lt;count; i++) { var t=tiddlers[i];
            opts+='&lt;option value=&quot;'+t.title.replace(/&quot;/g,&quot;&amp;#x22;&quot;)+'&quot;&gt;';
            opts+=t.modified.formatString('YYYY.0MM.0DD 0hh:0mm')+' - '+t.title;
            opts+='&lt;/option&gt;';
        }
        var h=store.getTiddlerText('RecentChangesPlugin##html')
        h=h.replace(/%options%/,opts);
        h=h.replace(/%listwidth%/,noedit?79.5:69.5);
        h=h.replace(/%noedit%/,noedit?'none':'inline');
        createTiddlyElement(place,'div').innerHTML=h;
        var preview=createTiddlyElement(place,'div',null,previewclass);
        preview.style.display='none';
        preview.style.whiteSpace='normal';
        preview.style.overflow='auto';
        preview.style.height=height;
    }
}
//}}}
/***
//{{{
!html
&lt;form&gt;&lt;select size=1 name=&quot;list&quot; style=&quot;width:%listwidth%%&quot;
    onchange=&quot;this.form.goto.disabled=this.form.edit.disabled=this.form.preview.disabled=!this.value.length;
        var target=this.parentNode.parentNode.nextSibling; removeChildren(target);
        if (!this.value.length)
            { target.style.display='none'; this.form.preview.value='preview'; }
        else if (target.style.display=='block') {
            wikify('&lt;'+'&lt;tiddler [['+this.value+']]&gt;'+'&gt;',target);
            target.style.display='block';
            this.form.preview.value='done';
        }
&quot;&gt;%options%&lt;/select&gt;&lt;!--
--&gt;&lt;input type=&quot;button&quot; name=&quot;goto&quot; value=&quot;goto&quot; disabled title=&quot;view selected tiddler&quot; style=&quot;width:10%&quot;
    onclick=&quot;var target=this.parentNode.parentNode.nextSibling; removeChildren(target);
        target.style.display='none'; this.form.preview.value='preview';
        story.displayTiddler(story.findContainingTiddler(this),this.form.list.value);
&quot;&gt;&lt;input type=&quot;button&quot; name=&quot;edit&quot; value=&quot;edit&quot; disabled title=&quot;edit selected tiddler&quot; style=&quot;width:10%;display:%noedit%&quot;
    onclick=&quot;var target=this.parentNode.parentNode.nextSibling; removeChildren(target);
        target.style.display='none'; this.form.preview.value='preview';
        story.displayTiddler(story.findContainingTiddler(this),this.form.list.value,DEFAULT_EDIT_TEMPLATE);
&quot;&gt;&lt;input type=&quot;button&quot; name=&quot;preview&quot; value=&quot;preview&quot; disabled title=&quot;show/hide tiddler preview&quot; style=&quot;width:10%&quot;
    onclick=&quot;var target=this.parentNode.parentNode.nextSibling;
        if (this.value=='preview') {
            removeChildren(target);
            wikify('&lt;'+'&lt;tiddler [['+this.form.list.value+']]&gt;'+'&gt;',target);
            target.style.display=this.form.list.value.length?'block':'none'; this.value='done';
        } else {
            removeChildren(target);
            target.style.display='none'; this.value='preview';
        }
&quot;&gt;&lt;/form&gt;
!end
//}}}
***/
 </pre>
</div>
<div title="Reconciliation" modifier="SDM" created="201004120330">
<pre>* &lt;&lt;Bbl Mt 18:15 &gt;&gt;
* //Fools mock at making amends ...//
* [[Forgiveness]]</pre>
</div>
<div title="RedMountainVistaServer" creator="psd" modifier="colmbritton" created="201102111106" modified="201102161206" tags="systemServer">
<pre>|''URL:''|http://solo.dc3.com/tw/|
|''Description:''|Bob Denny's extensions to TiddlyWiki|
|''Author:''|~BobDenny|</pre>
</div>
<div title="Redemption" modifier="SDM" created="201004120330" modified="201305051930" book_key="" changecount="1">
<pre>* The OT principle of kinship is found mainly in Leviticus and Numbers.
* [[Substitution]]
!!! Obligations/privileges:
# to redeem (buy back) any inalienable property sold by his kin  (&lt;&lt;Bbl Lv 25:10 &gt;&gt;-28).
# to receive any such restitution.
# to redeem the person of his kin if he sold himself into slavery to a foreigner (&lt;&lt;Bbl Lv 25:47 &gt;&gt;-49).
# to avenge the blood of his kin if he was murdered (&lt;&lt;Bbl Gn 9:6 &gt;&gt;, &lt;&lt;Bbl Num 35:18 &gt;&gt;-19 ).
# to propagate (preserve) the name of his family, thus Boaz.  The //levirate.//  [[Provision]]
!!! The Lord Jesus
# His work of [[Atonement]] spares us from an eternal disinheritance.  One could almost say He recovered for us that first, original plot of land.
# He purchased us back from [[Servitude]].  We were //sold under sin// (&lt;&lt;Bbl Rom 7:14&gt;&gt;).
# He took vengeance upon him who had the power of death.   &lt;&lt;Bbl Heb 2:14 &gt;&gt; and &lt;&lt;Bbl Gal 4:3 &gt;&gt;-4 both emphasize the ''humanity'' of Christ (W.E. Vine).
* &lt;&lt;Bbl Is 52:3 &gt;&gt;, &lt;&lt;Bbl 1Pt 1:17 &gt;&gt;-19
* Yet to be fulfilled -- &lt;&lt;Bbl Lk 21:28 &gt;&gt;, &lt;&lt;Bbl Rom 8:22 &gt;&gt;-23
* See &lt;&lt;Bbl Ruth 4:3 &quot;&quot; note &gt;&gt;.
!!! Other thoughts
* Fundamentally, only a kinsman can realize and understand the pain and deprivation, or glory and vindication, experienced in this life.  So only a kinsman can properly purchase back a lost property or avenge a murder.  [[Identification]].
* Serving as the second in an old-fashioned duel.
* [[Identification]], [[Family]].
* Jonathan Edwards provides a definition, p 34.
* Redemption gives a new [[Value]].
* Redeemed by [[Sacrifice]].
* //Vindication// -- &lt;&lt;Bbl Gn 20:16&gt;&gt;, also maybe the [[Gold]] of Exo 5:4</pre>
</div>
<div title="Reference" creator="colmbritton" modifier="jermolene" created="201102111458" modified="201110201344">
<pre>|!Formatting|!Macros|!Shadow tiddlers|!Miscellaneous|
|&lt;&lt;tiddler WikiTextContent&gt;&gt;|&lt;&lt;tiddler MacrosContent&gt;&gt;|&lt;&lt;tiddler ShadowTiddlersContent&gt;&gt;|&lt;&lt;tiddler ReferenceContent&gt;&gt;|
</pre>
</div>
<div title="ReferenceContent" creator="jermolene" modifier="jermolene" created="201110201344" modified="201110201344" tags="gettingstarted instructions">
<pre>InterfaceOptions
SaveChanges
ToolbarButtons
SafeMode
KeyboardShortcuts
StartupParameters
SpecialTags
SpecialTiddlers
PermaView
HtmlEntities
[[Tags]]
IncrementalSearch
RegExpSearch
SaveEmptyTemplate
CustomStyleSheet
NestedStyleSheets
NestedTemplates
TiddlerSlicing
CustomMarkup
MobileDevices
</pre>
</div>
<div title="ReferencesButton" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="features">
<pre>Since the FirstVersion of TiddlyWiki, the ReferencesButton has been implemented as a canned search for the name of the current tiddler. That approach was a bit disruptive because of the way that a search operation wipes the current reading state of the document.

The new implementation offers a popup menu of the names of all the referring tiddlers. It can be consulted without disturbing any tiddlers that are currently open.</pre>
</div>
<div title="ReferencesCommand" creator="psd" modifier="blaine" created="201102111106" modified="201102111310" tags="commands">
<pre>Offers a popup menu displaying the tiddlers that link to the current one. It is used with the ToolbarMacro like this:
{{{
&lt;&lt;toolbar references&gt;&gt;
}}}</pre>
</div>
<div title="Refining" modifier="SDM" created="201004120330">
<pre>[[Purity]], [[Gold]], [[Fire]]
&lt;&lt;Bbl 2Cor 4:17 abbr &gt;&gt;, the weight of glory.
The verb to try  has a forgotten meaning in English:  &quot;1.  orig., to separate, set apart.     -- 2.  to extract or refine (metal, etc.), by heating; usually with out.&quot;    Actually the word is related etymologically to thresh .
&lt;&lt;Bbl Job 23:10 abbr &gt;&gt;:   When He has tried me, I shall come out as pure gold.
66:10:      For Thou hast tried us, O God; Thou hast refined us as silver is refined.
&lt;&lt;Bbl Pr 17:3 abbr &gt;&gt;:       The refining pot is for silver and the furnace for gold, but the LORD tests hearts.
27:21:      The crucible is for silver and the furnace for gold, and a man is tested by the praise accorded him.
&lt;&lt;Bbl Is 48:10 abbr &gt;&gt;:       Behold, I have refined you, but not as silver; I have tested you in the furnace of affliction.
Zch 13:9:       And I will bring the third part through the fire  --  Refine them as silver is refined, and test them as gold is tested.  They will call on My name,  and I will answer them;  I will say,  &quot;They are My people;&quot;   and they will say, &quot;The LORD is my God.&quot;
&lt;&lt;Bbl Mal 3:2 abbr &gt;&gt;-3 :      For He is like a refiner's fire; And He will sit as a smelter and purifier of silver, and He will purify the sons of Levi and refine them like gold and silver, so that they may present to the LORD offerings in righteousness.
Also &lt;&lt;Bbl Job 1:22 &gt;&gt;-25 , &lt;&lt;Bbl Job 7:18 &gt;&gt;, &lt;&lt;Bbl Job 28:1 &gt;&gt;-2 ,&lt;&lt;Bbl Job 34:36 &gt;&gt;; &lt;&lt;Bbl Ps 12:6 &gt;&gt;, &lt;&lt;Bbl Ps 17:3 &gt;&gt;, &lt;&lt;Bbl Ps 66:10 &gt;&gt;, &lt;&lt;Bbl Ps 119:119 &gt;&gt;; &lt;&lt;Bbl Pr 17:3 &gt;&gt;, &lt;&lt;Bbl Pr 25:4 &gt;&gt;-5 , &lt;&lt;Bbl Pr 26:23 &gt;&gt;, &lt;&lt;Bbl Pr 27:21 &gt;&gt;; &lt;&lt;Bbl Jer 6:27 &gt;&gt;-29 , &lt;&lt;Bbl Jer 9:7 &gt;&gt;, &lt;&lt;Bbl Jer 11:4 &gt;&gt;; &lt;&lt;Bbl Is 1:25 &gt;&gt;, &lt;&lt;Bbl Is 31:9 &gt;&gt;, &lt;&lt;Bbl Is 48:10 &gt;&gt;; &lt;&lt;Bbl Ez 22:18 &gt;&gt;-22 ; &lt;&lt;Bbl Zech 13:9 &gt;&gt;; &lt;&lt;Bbl Mt 5:8 &gt;&gt;
&quot;Lord, if you don't slow down, I'm going to end up all skimmin's!&quot;   --  Jimmy Darnell</pre>
</div>
<div title="RefreshCommand" modifier="ELSDesignStudios" created="200903220126" tags="macro excludeLists">
<pre>&lt;script label=&quot;refresh&quot; title=&quot;re-render this tiddler&quot;&gt;
        var here=story.findContainingTiddler(place); if (!here) return false;
        story.refreshTiddler(here.getAttribute(&quot;tiddler&quot;),null,true);
&lt;/script&gt;&lt;script&gt;place.lastChild.className='button';&lt;/script&gt;</pre>
</div>
<div title="RegExpSearch" creator="psd" modifier="jermolene" created="201102111106" modified="201110201351" tags="features options">
<pre>RegExpSearch is an [[advanced option|AdvancedOptions]] uses [[JavaScript|http://en.wikipedia.org/wiki/JavaScript]]'s [[RegExp syntax|http://www.programmershelp.co.uk/docs/javascript/regexp.html#1193188]] to allow flexible searches.
</pre>
</div>
<div title="Rejection" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Num 11:20 &gt;&gt;; &lt;&lt;Bbl 1Sam 8:7 &gt;&gt;</pre>
</div>
<div title="RelatedTiddlersPlugin" modifier="SDM" created="201012172230" modified="201211121912" tags="systemConfig excludeLists" book_key="">
<pre>/***
|Name|RelatedTiddlersPlugin|
|Source|http://www.TiddlyTools.com/#RelatedTiddlersPlugin|
|Version|1.1.8|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Requires|InlineJavascriptPlugin, NestedSlidersPlugin, StyleSheetShortcuts|
|Description|starting from a selected tiddler, display a list and/or tree of linked or transcluded tiddlers|
!!!!!Usage
&lt;&lt;&lt;
Starting from a specified tiddler (default=current tiddler), {{{&lt;&lt;relatedTiddlers&gt;&gt;}}} recursively follows the internal links[] data to find all other tiddlers that are related to it by linking (e.g., {{{[[TiddlerName]]}}}) or used as macro parameter (e.g., {{{&lt;&lt;tiddler TiddlerName&gt;&gt;}}}).

The results can be displayed as a simple flat list of related tiddler titles, or as an indented tree diagram that shows the specific connections between the related tiddlers, and can be helpful for identifying clusters of interdependent tiddlers or simply generating an on-the-fly site map for quick discovery and navigation through complex or unfamiliar document content.
//{{{
&lt;&lt;relatedTiddlers TiddlerName hideform &quot;exclude list&quot;&gt;&gt;
//}}}
*''TiddlerName'' (optional)&lt;br&gt;specifies the starting tiddler (and hides the 'select a tiddler' form controls).  Use keyword ''here'' to specify the current tiddler.
*''hideform'' (optional)&lt;br&gt;when present, suppress display of 'select tiddler' droplist and buttons.
*''&quot;exclude list&quot;'' (optional)&lt;br&gt;space-separated list of tiddlers whose links should not be followed.  Use quotes or double-square brackets to ensure list is processed as a single parameter.
The plugin also defines two functions that can be called externally (from other plugins or scripts) to generate and retrieve either a list of links or a formatted &quot;tree view&quot;:
&gt;{{{var list=config.macros.relatedTiddlers.getList(start,exclude,callback);}}}
&gt;{{{var tree=config.macros.relatedTiddlers.getTree(start,exclude,callback);}}}
where ''start'' and ''exclude'' are the same as the macro parameters described above, plus an optional reference to a callback function that allows you to generate an alternative list/tree, based on application-specific data (such tiddler references contained in tags or custom fields), rather than using the default &quot;links&quot; list, like this:
&gt;{{block{
{{{
window.myCallback=function(tiddler) {
    var list=[];
    // ... fill the list based on the specified tiddler ...
    return list;
}
}}}
}}}
The function takes a tiddler object as input, and returns a list of tiddler titles that are //directly// linked (or otherwise related) to that specific tiddler.  {{{getList()}}} and {{{getTree()}}} then use this information to find all the //indirect// connections between tiddlers to produce the list or tree output.
&lt;&lt;&lt;
!!!!!Configuration
&lt;&lt;&lt;
&lt;&lt;option chkRelatedTiddlersShowList&gt;&gt; show list display
&lt;&lt;option chkRelatedTiddlersShowTree&gt;&gt; show tree display
&lt;&lt;option chkRelatedTiddlersZoom&gt;&gt; enable autosizing of tree display //(aka, &quot;zoom&quot; or &quot;shrink-and-grow&quot;)//
don't follow links contained in these tiddlers: &lt;&lt;option txtRelatedTiddlersExclude&gt;&gt;
&lt;&lt;&lt;
!!!!!Examples
&lt;&lt;&lt;
{{smallform{&lt;&lt;relatedTiddlers&gt;&gt;}}}

Using getList()/getTree() public API from other scripts/plugins:
&gt;&lt;script show&gt;
    var start=&quot;About&quot;;
    var exclude=config.options.txtRelatedTiddlersExclude.readBracketedList();
    var callback=null;
    var list=config.macros.relatedTiddlers.getList(start,exclude,callback);
    var tree=config.macros.relatedTiddlers.getTree(start,exclude,callback);
    return &quot;There are &quot;+list.length+&quot; tiddlers related to [[&quot;+start+&quot;]]...\n&quot;+tree;
&lt;/script&gt;
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2009.09.29 [1.1.8] in findRelatedTiddlers(), fixed recursion when using non-null callback
2007.11.11 [1.1.7] in findRelatedTiddlers(), refactored into separate getlinks(),&lt;br&gt;and added param for optional callback function that can be used to return an alternative set of links.&lt;br&gt;Also added API functions, getTree() and getList() for use by other scripts
2007.07.13 [1.1.6] performance optimizations, more code cleanup
2007.07.10 [1.1.5] extensive code cleanup
2007.07.08 [1.1.0] converted from inline script
2007.06.29 [1.0.0] started (as inline script)
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.RelatedTiddlersPlugin={major: 1, minor: 1, revision: 8, date: new Date(2009,9,29)};

// initialize 'autozoom' and 'exclude' tree options (defaults are not to zoom, and to follow all links)
if (config.options.chkRelatedTiddlersZoom===undefined)
    config.options.chkRelatedTiddlersZoom=false;
if (config.options.txtRelatedTiddlersExclude===undefined)
    config.options.txtRelatedTiddlersExclude='GettingStarted DefaultTiddlers';
if (config.options.chkRelatedTiddlersShowList===undefined)
    config.options.chkRelatedTiddlersShowList=true;
if (config.options.chkRelatedTiddlersShowTree===undefined)
    config.options.chkRelatedTiddlersShowTree=false;

config.macros.relatedTiddlers={
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {

        // create form with unique DOM element ID (using current timestamp)... permits multiple form instances
        var now=new Date().getTime();
        var span=createTiddlyElement(place,&quot;span&quot;);
        span.innerHTML=this.form.format([&quot;relatedTiddlers_form&quot;+now]);
        var form=span.getElementsByTagName(&quot;form&quot;)[0]; // find form that we just created
        var target=createTiddlyElement(span,&quot;div&quot;); // create target block in which generated output will be placed

        // initialize droplist contents (all tiddlers except hidden ones)
        var tids=store.getTiddlers('title','excludeLists');
        for (i=0; i&lt;tids.length; i++) form.list.options[form.list.options.length]=new Option(tids[i].title,tids[i].title,false,false);

        // initialize exclude field (space-separated list)
        if (config.options.txtRelatedTiddlersExclude) form.exclude.value=config.options.txtRelatedTiddlersExclude;

        // set starting tiddler, form display, and/or exclude list from macro params (if present) and then show the results!
        var root=&quot;&quot;;
        var hide=false;
        var exclude=config.options.txtRelatedTiddlersExclude;
        if (params[0]) root=params[0]; // TiddlerName
        if (params[1]) hide=(params[1].toLowerCase()==&quot;hideform&quot;); // keyword: &quot;hideform&quot; or &quot;showform&quot; (default)
        if (params[2]) exclude=params[2]; // list of tiddlers whose links should not be followed
        if (root==&quot;here&quot;) { var tid=story.findContainingTiddler(place); if (tid) root=tid.getAttribute(&quot;tiddler&quot;); }
        if (store.tiddlerExists(root)) {
            // NOTE:  don't hide form when running IE, where putting initial focus on hidden form creates an error
            if (!config.browser.isIE) form.style.display=hide?&quot;none&quot;:&quot;block&quot;; // show/hide the controls
            form.list.value=root; // set the root
            form.exclude.value=exclude; // set 'exclude' field
            form.get.click(); // DISPLAY INITIAL RESULTS (if tiddler is selected)
        }
    },
    form:
        &quot;&lt;form id='%0' action='javascript:;' style='display:inline;margin:0;padding:0;' onsubmit='return false'&gt;&lt;!-- \
        --&gt;&lt;span class='fine' style='float:left;vertical-align:bottom;width:39.5%;'&gt;&lt;i&gt;find all tiddlers related to:&lt;/i&gt;&lt;/span&gt;&lt;!-- \
        --&gt;&lt;span class='fine' style='float:left;vertical-align:bottom;'&gt;&lt;i&gt;exclude links contained in:&lt;/i&gt;&lt;/span&gt;&lt;!-- \
        --&gt;&lt;div style='clear:both'&gt;&lt;!-- \
        --&gt;&lt;select name=list size=1 style='width:39.5%' onchange='this.form.get.click()'&gt;&lt;!-- \
        --&gt;&lt;option value=''&gt;select a tiddler...&lt;/option&gt;&lt;!-- \
        --&gt;&lt;/select&gt;&lt;!-- \
        --&gt;&lt;input type='text' option='txtRelatedTiddlersExclude' name='exclude' value='' style='width:40%' \
            title='enter the names of tiddlers whose links should NOT be followed' \
            onkeyup='if (event.keyCode==13) { this.blur(); this.form.get.click(); }'  \
            onchange='config.options[this.getAttribute(\&quot;option\&quot;)]=this.value;saveOptionCookie(this.getAttribute(\&quot;option\&quot;));'&gt;&lt;!-- \
        --&gt;&lt;input type=button name=get value='get related' style='width:10%'  \
            onclick='config.macros.relatedTiddlers.show(this.form,this.form.nextSibling);'&gt;&lt;!-- \
        --&gt;&lt;input type=button name=done value='done' disabled style='width:10%'  \
            onclick='this.form.list.selectedIndex=0; this.form.get.click();'&gt;&lt;!-- \
        --&gt;&lt;/div&gt;&lt;!-- \
        --&gt;&lt;/form&gt;&quot;,
    styles:
        &quot;.relatedTiddlers blockquote \
            { border-left:1px dotted #999; margin:0 25px; padding-left:.5em; font-size:%0%; line-height:115%; } \
        .relatedTiddlers .borderleft \
            { margin:0; padding:0; margin-left:1em; border-left:1px dotted #999; padding-left:.5em; } \
        .relatedTiddlers .fourcolumns \
            { display:block; -moz-column-count:4; -moz-column-gap:1em; -moz-column-width:25%} \
        .relatedTiddlers a \
            { font-weight:normal; } \
        .relatedTiddlers .bold, .relatedTiddlers .bold a \
            { font-weight:bold; } \
        .relatedTiddlers .floatright \
            { float:right; } \
        .relatedTiddlers .clear \
            { clear:both; } &quot;,
    toggleform:
        &quot;{{floatright{&lt;html&gt;&lt;a href='javascript:;' class='button' title='show/hide tiddler selection droplist and buttons' \
        onclick='var here=story.findContainingTiddler(this); var tid=here?here.getAttribute(\&quot;tiddler\&quot;):\&quot;\&quot;; \
            var f=document.getElementById(\&quot;%0\&quot;); var hide=(f.style.display!=\&quot;none\&quot;); \
            f.style.display=hide?\&quot;none\&quot;:\&quot;inline\&quot;; this.innerHTML=hide?\&quot;show form\&quot;:\&quot;hide form\&quot;; return false;'&gt;%1&lt;/a&gt;&lt;/html&gt;}}}&quot;,
    treecheck:
        &quot;{{floatright{@@display:none;&lt;&lt;option chkRelatedTiddlersShowTree&gt;&gt;@@&lt;html&gt;&lt;a href='javascript:;' class='button' onclick='this.parentNode.previousSibling.firstChild.click(); return false;'&gt;tree view&lt;/a&gt;&lt;/html&gt;}}}&quot;,
    tree:
        &quot;{{clear{\n----\n}}} \
        {{floatright small{&lt;&lt;option chkRelatedTiddlersZoom&gt;&gt;autosize tree display}}} \
        {{fine{\n''tiddlers linked from or included by'' [[%0]]\n}}}%1&quot;,
    listcheck:
        &quot;{{floatright{@@display:none;&lt;&lt;option chkRelatedTiddlersShowList&gt;&gt;@@&lt;html&gt;&lt;a href='javascript:;' class='button' onclick='this.parentNode.previousSibling.firstChild.click(); return false;'&gt;list view&lt;/a&gt;&lt;/html&gt;}}}&quot;,
    list:
        &quot;{{clear{\n----\n}}} \
        {{fine{\n''tiddlers containing links to'' [[%0]]\n}}} \
        {{small fourcolumns borderleft{\n%1}}} \
        {{fine{\n''tiddlers linked from or included by'' [[%0]]\n}}} \
        {{borderleft{\n \
            {{fine{\n''bold''=//direct links//, plain=//indirect links//, ''...''=//links not followed//}}} \
            {{small fourcolumns{\n%2}}} \
        }}}&quot;,
    skipped:
        &quot;&lt;html&gt;&lt;span title='links from %0 have NOT been followed'&gt;...&lt;/span&gt;&lt;/html&gt;&quot;,
    mouseover: function(ev) {
        this.saveSize=this.style.fontSize;
        this.style.fontSize='100%';
        this.style.borderLeftStyle='solid';
    },
    mouseout: function(ev) {
        this.style.fontSize=this.saveSize;
        this.style.borderLeftStyle='dotted';
    },
    findRelatedTiddlers: function(tid,tids,treeout,level,exclude,callback) {
        // recursively build list of related tids (links and includes FROM the root tiddler) and generate treeview output
        var t=store.getTiddler(tid);
        if (!t || tids.contains(tid)) return tids; // tiddler already in results (or missing tiddler)... just return current results
        tids.push(t.title); // add tiddler to results
        var skip=exclude &amp;&amp; exclude.contains(tid);
        treeout.text+=level+&quot;[[&quot;+tid+&quot;]]&quot;+(skip?this.skipped.format([tid]):&quot;&quot;)+&quot;\n&quot;;
        if (skip) return tids; // branch is pruned... don't follow links
        var links=callback?callback(t):this.getLinks(t);
        var limit = (links.length - level + 5 );
        //SDM
        if ( limit &gt; 10 ) { limit = 10; }
        limit = (limit-level);
        if ( limit &lt; 0 ) { limit = 0; }
        for (var i=0; i&lt;limit; i++) tids=this.findRelatedTiddlers(links[i],tids,treeout,level+&quot;&gt;&quot;,exclude,callback);
        return tids;
    },
    getLinks: function(tiddler) {
        if (!tiddler.linksUpdated) tiddler.changed();
        return tiddler.links;
    },
    getTree: function(start,exclude,callback) {
        // get related tiddlers and generate blockquote-indented tree output
        var list=[]; var tree={text:&quot;&quot;}; var level=&quot;&quot;;
        list=this.findRelatedTiddlers(start,list,tree,level,exclude,callback);
        return tree.text;
    },
    getList: function(start,exclude,callback) {
        // get related tiddlers and generate blockquote-indented tree output
        var list=[]; var tree={text:&quot;&quot;}; var level=&quot;&quot;;
        list=this.findRelatedTiddlers(start,list,tree,level,exclude,callback);
        return list;
    },
    show: function(form,target) {
        removeChildren(target); form.done.disabled=true; // clear any existing output and disable 'done' button
        var start=form.list.value; if (!start.length) return; // get selected starting tiddler.  If blank value (heading), do nothing

        // get related tiddlers and generate blockquote-indented tree output
        var rels=[]; var treeview={text:&quot;&quot;}; var level=&quot;&quot;;
        var exclude=config.options.txtRelatedTiddlersExclude.readBracketedList();
        var rels=this.findRelatedTiddlers(start,rels,treeview,level,exclude);
        rels.shift(); // remove self from list
        rels.sort(); // sort titles alphabetically

        // generate list output
        var tid=store.getTiddler(start);
        var relsview=&quot;&quot;; for (t=0; t&lt;rels.length; t++) {
            relsview+=tid.links.contains(rels[t])?(&quot;{{bold{[[&quot;+rels[t]+&quot;]]}}}&quot;):(&quot;[[&quot;+rels[t]+&quot;]]&quot;);
            if (exclude &amp;&amp; exclude.contains(rels[t])) relsview+=this.skipped.format([rels[t]]);
            relsview+=&quot;\n&quot;;
        }

        // get references TO the root tiddler, add to related tiddlers and generate refsview output
        var refs=[]; var referers=store.getReferringTiddlers(start);
        for(var r=0; r&lt;referers.length; r++)
            if(referers[r].title!=start &amp;&amp; !referers[r].tags.contains(&quot;excludeLists&quot;)) refs.push(referers[r].title);
        var refcount=refs.length; var relcount=rels.length; // remember individual counts
        for (var r=0; r&lt;refs.length; r++) rels.pushUnique(refs[r]); // combine lists without duplicates
        var total=rels.length; // get combined total
        var refsview=&quot;[[&quot;+refs.sort().join(&quot;]]\n[[&quot;)+&quot;]]\n&quot;;

        // set custom blockquote styles for treeview
        setStylesheet(this.styles.format([config.options.chkRelatedTiddlersZoom?80:100]),'relatedTiddlers_styles');

        // assemble and render output
        var summary=(total?(total+&quot; tiddler&quot;+(total==1?&quot; is&quot;:&quot;s are&quot;)):&quot;There are no tiddlers&quot;)+&quot; related to: [[&quot;+start+&quot;]]&quot;;
        var list=this.list.format([start,refsview.length?refsview:&quot;//none//&quot;,relsview.length?relsview:&quot;//none//&quot;]);
        var tree=this.tree.format([start,treeview.text]);
        var toggle=this.toggleform.format([form.id,(form.style.display=='none'?'show form':'hide form')]);
        var sep=&quot;{{floatright{ | }}}&quot;;
        var showList=total &amp;&amp; config.options.chkRelatedTiddlersShowList;
        var showTree=relcount &amp;&amp; config.options.chkRelatedTiddlersShowTree;
        var out=&quot;{{relatedTiddlers{&quot;+toggle+(relcount?sep+this.treecheck:&quot;&quot;)+(total?sep+this.listcheck:&quot;&quot;)+summary+(showList?list:&quot;&quot;)+(showTree?tree:&quot;&quot;)+&quot;}}}&quot;;
        wikify(out,target);
        form.done.disabled=false; // enable 'done' button

        // add mouseover/mouseout handling to blockquotes (for autosizing)
        var blocks=target.getElementsByTagName(&quot;blockquote&quot;);
        for (var b=0; b&lt;blocks.length; b++)
            { blocks[b].onmouseover=this.mouseover; blocks[b].onmouseout=this.mouseout; }

        // add side-effect to checkboxes so that display is refreshed when a checkbox state is changed
        var checks=target.getElementsByTagName(&quot;input&quot;);
        for (var c=0; c&lt;checks.length; c++) {
            if (checks[c].type.toLowerCase()!=&quot;checkbox&quot;) continue;
            checks[c].coreClick=checks[c].onclick; // save standard click handler
            checks[c].formID=form.id; // link checkbox with correponding form
            checks[c].onclick=function() { this.coreClick.apply(this,arguments); document.getElementById(this.formID).get.click(); }
        }
    }
}
//}}}</pre>
</div>
<div title="Remnant" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Jud 9:5 &gt;&gt;; &lt;&lt;Bbl 1King 19:18 &gt;&gt;; &lt;&lt;Bbl Is 4:3 &gt;&gt;, &lt;&lt;Bbl Is 6:13 &gt;&gt;, &lt;&lt;Bbl Is 10:20 &gt;&gt;-23 , &lt;&lt;Bbl Is 11:11 &gt;&gt;, &lt;&lt;Bbl Is 37:30 &gt;&gt;-31 ; &lt;&lt;Bbl Ez 5:3 &gt;&gt;, &lt;&lt;Bbl Ez 6:8 &gt;&gt;; &lt;&lt;Bbl Dan 11:36 &gt;&gt;; &lt;&lt;Bbl Lk 2:38 &gt;&gt;.  See Bruce, Hebrews, on 2:13 (p. 47).</pre>
</div>
<div title="Remorse" modifier="SDM" created="201004120330" modified="201112042344" book_key="">
<pre>Remorse (not unto life):   &lt;&lt;Bbl Mt 27:3 &gt;&gt;-5 ; &lt;&lt;Bbl 2Cor 7:8 &gt;&gt;-11 Sam 19:4-5; &lt;&lt;Bbl Pr 15:10 &gt;&gt;, &lt;&lt;Bbl Pr 29:1 &gt;&gt;; &lt;&lt;Bbl Jer 5:3 &gt;&gt;; &lt;&lt;Bbl Mt 18:15 &gt;&gt;-18 ; &lt;&lt;Bbl Lk 17:3 &gt;&gt;; &lt;&lt;Bbl 1Tim 5:20 &gt;&gt;; &lt;&lt;Bbl 2Tim 3:16 &gt;&gt;; &lt;&lt;Bbl Tit 1:13 &gt;&gt;, &lt;&lt;Bbl Tit 2:15 &gt;&gt;, &lt;&lt;Bbl Tit 3:10 &gt;&gt;-11 ; &lt;&lt;Bbl Jms 5:19 &gt;&gt;-20 .
* [[Repentance]]</pre>
</div>
<div title="RenameTagsPlugin" creator="SDM" modifier="MPTW" created="201106271025" modified="201111130925" tags="systemConfig excludeLists">
<pre>/***
|Name:|RenameTagsPlugin|
|Description:|Allows you to easily rename or delete tags across multiple tiddlers|
|Version:|3.0a|
|Date:|27-Jun-2011|
|Source:|http://mptw.tiddlyspot.com/#RenameTagsPlugin|
|Author:|Simon Baird &lt;simon.baird@gmail.com&gt;|
|License|http://mptw.tiddlyspot.com/#TheBSDLicense|
Rename a tag and you will be prompted to rename it in all its tagged tiddlers.
***/
//{{{
config.renameTags = {

  prompts: {
    rename: &quot;Rename the tag '%0' to '%1' in %2 tidder%3?&quot;,
    remove: &quot;Remove the tag '%0' from %1 tidder%2?&quot;

  },

  removeTag: function(tag,tiddlers) {
    store.suspendNotifications();
    for (var i=0;i&lt;tiddlers.length;i++) {
      store.setTiddlerTag(tiddlers[i].title,false,tag);
    }
    store.resumeNotifications();
    store.notifyAll();
  },

  renameTag: function(oldTag,newTag,tiddlers) {
    store.suspendNotifications();
    for (var i=0;i&lt;tiddlers.length;i++) {
      store.setTiddlerTag(tiddlers[i].title,false,oldTag); // remove old
      store.setTiddlerTag(tiddlers[i].title,true,newTag);  // add new
    }
    store.resumeNotifications();
    store.notifyAll();
  },

  storeMethods: {

    saveTiddler_orig_renameTags: TiddlyWiki.prototype.saveTiddler,

    saveTiddler: function(title,newTitle,newBody,modifier,modified,tags,fields,clearChangeCount,created,creator) {
      if (title != newTitle) {
        var tagged = this.getTaggedTiddlers(title);
        if (tagged.length &gt; 0) {
          // then we are renaming a tag
          if (confirm(config.renameTags.prompts.rename.format([title,newTitle,tagged.length,tagged.length&gt;1?&quot;s&quot;:&quot;&quot;])))
            config.renameTags.renameTag(title,newTitle,tagged);

          if (!this.tiddlerExists(title) &amp;&amp; newBody == &quot;&quot;)
            // dont create unwanted tiddler
            return null;
        }
      }
      return this.saveTiddler_orig_renameTags(title,newTitle,newBody,modifier,modified,tags,fields,clearChangeCount,created,creator);
    },

    removeTiddler_orig_renameTags: TiddlyWiki.prototype.removeTiddler,

    removeTiddler: function(title) {
      var tagged = this.getTaggedTiddlers(title);
      if (tagged.length &gt; 0)
        if (confirm(config.renameTags.prompts.remove.format([title,tagged.length,tagged.length&gt;1?&quot;s&quot;:&quot;&quot;])))
          config.renameTags.removeTag(title,tagged);
      return this.removeTiddler_orig_renameTags(title);
    }

  },

  init: function() {
    merge(TiddlyWiki.prototype,this.storeMethods);
  }
}

config.renameTags.init();

//}}}

</pre>
</div>
<div title="Repentance" modifier="SDM" created="201004120330" modified="201112050002" book_key="">
<pre>* A part of every revival on any scale.
* Most people confuse repentance with asking God's forgiveness.
* Like Jonah's last chapter, sometimes we must repent anew.
*  &lt;&lt;Bbl Ps 51:1 &gt;&gt;, &lt;&lt;Bbl Is 27:9 &gt;&gt;, &lt;&lt;Bbl Is 30:15 &gt;&gt;, &lt;&lt;Bbl Is 55:6 &gt;&gt;-7; &lt;&lt;Bbl Ez 18:31 &gt;&gt;-32 , &lt;&lt;Bbl Ez 33:11 &gt;&gt;-19 , &lt;&lt;Bbl Ez 36:31 &gt;&gt;-32 ; &lt;&lt;Bbl Dan 4:27 &gt;&gt;; &lt;&lt;Bbl Hos 2:7 &gt;&gt; (see &lt;&lt;Bbl Lk 15:17 &gt;&gt;),14:2-3; Jol 2:12-17; &lt;&lt;Bbl Act 3:19 &gt;&gt;
* For the Judaic view, see Barclay, Matthew, on 3:7-12.
* From God, His kindness:   &lt;&lt;Bbl Is 63:17 &gt;&gt;; &lt;&lt;Bbl Act 3:26 &gt;&gt;, &lt;&lt;Bbl Act 5:31 &gt;&gt;, &lt;&lt;Bbl Act 11:18 &gt;&gt;; &lt;&lt;Bbl Rom 2:4 &gt;&gt;; &lt;&lt;Bbl 2Tim 2:25 &gt;&gt;
* [[Remorse]]</pre>
</div>
<div title="Reproof" modifier="SDM" created="201012110207" modified="201112191713" book_key="">
<pre>* A great theme of Proverbs.  1Sam 19:4-5; Pr 15:10,31, 29:1; Jer 5:3; Mat 18:15-18; Luke 17:3; 1Tim 5:20; 2Tim 3:16; Tit 1:13, 2:15, 3:10-11; Jms 5:19-20.
* INTERVENTION - Gal 6.1 'you' PLEURAL. 'who are spiritual' who have your act together.  Success requires humility.
* [[Authority]]
* //Admonishment//
* [[Discipline-Church]]</pre>
</div>
<div title="Reputation" modifier="SDM" created="201201301606" modified="201201301634" book_key="">
<pre>* [[ImmoralityAvoid]]
* &lt;&lt;Bbl 1Thes 5:22 &gt;&gt;
* &lt;&lt;Bbl 1Tim 3:2 &gt;&gt;, 7
* &lt;&lt;Bbl Titus 1:6 &gt;&gt;-7 children not //accused// (WEB) or not //open to the charge// (NIV).
* &lt;&lt;Bbl Titus 2:7 &gt;&gt; //integrity ... that cannot be condemned//
* Daniel impeccable before his enemies
* &lt;&lt;Bbl Rom 12:17 &gt;&gt;    //before the eyes of everyone//</pre>
</div>
<div title="Rescue" modifier="SDM" created="201111280001" modified="201211270447" book_key="">
<pre>* The man on the road to Jericho, a true neighbor
* [[Redemption]]
* [[Help]]
*       I sought the Lord, and he answered me; he delivered me from all my fears.   &amp;
This poor man (or woman) called, and the Lord heard him;  he saved him out of all his troubles.
The angel of the Lord encamps around those who fear him, and he delivers them.  -- Psalms 34:4, 6-7
* from [[Fire]]
** &lt;&lt;Bbl Zech 3:2 &gt;&gt;
** &lt;&lt;Bbl Amos 4:11 &gt;&gt;
** Bbl Jude 23
* //To God belong escapes from death//
* Paul had so many escapes, and even //despaired of life.//</pre>
</div>
<div title="Resisting" modifier="SDM" created="201004120330">
<pre>* sin: &lt;&lt;Bbl Heb 12:4 &gt;&gt;
* the devil:    &lt;&lt;Bbl Jms 4:7 &gt;&gt;; &lt;&lt;Bbl 1Chr 34:19 &gt;&gt;; &lt;&lt;Bbl Jn 10:39 &gt;&gt;-41 ,&lt;&lt;Bbl Jn 12:48 &gt;&gt;;&lt;&lt;Bbl Jn 15:22 &gt;&gt;; &lt;&lt;Bbl Rom 7:13 &gt;&gt;; &lt;&lt;Bbl 1Cor 15:56 &gt;&gt;, &lt;&lt;Bbl Heb 10:26 &gt;&gt;-31 ; &lt;&lt;Bbl Jms 4:17 &gt;&gt;; &lt;&lt;Bbl Ez 18:13 &gt;&gt;; &lt;&lt;Bbl Mt 23:15 &gt;&gt;, &lt;&lt;Bbl Mt 27:25 &gt;&gt;.
* and Knowledge:    &lt;&lt;Bbl Dan 5:22 &gt;&gt;; &lt;&lt;Bbl Mt 28:11 &gt;&gt;-13 ; &lt;&lt;Bbl Acts 17:31 &gt;&gt;.
* [[Individual]], [[Authority]], [[Sin]]
* [[Enabling]]</pre>
</div>
<div title="Resources" modifier="SDM" created="201212060219" modified="201212150159" tags="wiki howto resource" book_key="">
<pre>http://www.biblestudytools.com/concordances/torreys-topical-textbook/trees.html
http://www.biblestudytools.com/dictionaries/eastons-bible-dictionary/earth.html
http://www.biblestudytools.com/concordances/naves-topical-bible/name.html
http://www.biblestudytools.com/dictionaries/smiths-bible-dictionary/shechem.html
http://www.esvapi.org/
http://www.esvapi.org/v2/rest/passageQuery?key=IP&amp;passage=John+1
http://www.biblestudytools.com/lexicons/greek/nas/
http://www.biblestudytools.com/lexicons/hebrew/nas/hiyn.html</pre>
</div>
<div title="Resources-Personal" modifier="SDM" created="201012261549" modified="201208081417" book_key="">
<pre>// -- Know well the condition of your flocks//
// -- First prepare the land, then build the house// -- Note, could this be applied to foundation for house?
// -- When the ox is in the stall ...//
* [[Wealth]], [[Land]]
* [[Inheritance]]
* [[Contentment]], [[Greed]]</pre>
</div>
<div title="Response" modifier="SDM" created="201112081817" modified="201211281903" book_key="">
<pre>One thing takes on, according to its beholder, either of two absolutely different natures.  The response is the sole determinant.  The Proverbs talk about the law of God that way, and here are some other verses about
!! Polar Reactions
* the word of the cross &lt;&lt;Bbl 1Cor 1:18 abbr &gt;&gt;
* our courage     &lt;&lt;Bbl Php 1:28 &gt;&gt;
* &quot;the ways of the LORD&quot;    &lt;&lt;Bbl Hos 14:9 &gt;&gt;, &lt;&lt;Bbl Pr 10:29 &gt;&gt;
* righteous civil gov't   &lt;&lt;Bbl Rom 13:3 &gt;&gt;
* savor, aroma        &lt;&lt;Bbl 2Cor 2:15 &gt;&gt;-1 6
* the Christ      &lt;&lt;Bbl Lk 2:34 &gt;&gt;
* the Baptist     &lt;&lt;Bbl Lk 7:29 &gt;&gt;-30
* the glory cloud     &lt;&lt;Bbl Ex 14:20 &gt;&gt;
* Moses' testimony        &lt;&lt;Bbl Dt 30:19 &gt;&gt;
* God's coming (burning)  &lt;&lt;Bbl Mal 3:3 &gt;&gt;, &lt;&lt;Bbl Mal 4:1 &gt;&gt;
* faith in God's Son      &lt;&lt;Bbl Jn 3:36 &gt;&gt;
* Christ the Corner Stone &lt;&lt;Bbl 1Pt 2:7 &gt;&gt;-8</pre>
</div>
<div title="Responsibility" modifier="SDM" created="201012110207" modified="201206191550" book_key="">
<pre>* The sinful nature is only waiting for a commandment to transgress, for a gift to trample.
* Gn 2,3; 1Chr 34:19; Jn 10:39-41,12:48;15:22,24; Rom 7:13; 1Cor 15:56, Heb 10:26-31; Jms 4:17; Ez 18:13; Mat 23:15, 27:25.
* and Knowledge:    Dan 5:22; Mat 28:11-13; Acts 17:31.
* [[Individual]], [[Authority]]
* [[Sin]], [[Blame]], [[Guilt]]
!!! Enabling
* Jer 44:19  Husbands, responsibility of
* Pr.  //a good man who gives way before the wicked//</pre>
</div>
<div title="Rest" modifier="SDM" created="201004120330" modified="201212211837" book_key="">
<pre>* ''Sabbath'', //sabado (Spanish)//
* The Law and the Covenant, J. Jordan, chap. 10.
* &lt;&lt;Bbl Gn 2:2 &gt;&gt;      God rested.  Hebrews offers the same rest to us, &lt;&lt;Bbl Heb 4:9 &gt;&gt;-10
* Noah - //This one will give us rest.//
* &lt;&lt;Bbl Ex 16:23 &quot;&quot; note &gt;&gt;-30     First mention of the Sabbath after creation.
* 20:8-11   (second mention after creation)
* 21:2      The freeing of slaves &quot;without payment&quot; every sabbatical year.
* 31:12-17  A covenant sign.  It is left implicit that faith is in operation; sabbath signifies faith, and faith is really the sign underneath all.
* &lt;&lt;Bbl Lv 25:2 &gt;&gt;-5    Here rest requires faith, precisely as &lt;&lt;Bbl Ex 16:23 &gt;&gt;:30 was intended to show the Israelites.
* &lt;&lt;Bbl Dt 5:15 &gt;&gt;     [[Servitude]] in which there is no day of rest.  See  &lt;&lt;Bbl Ex 16:23 &quot;&quot; note &gt;&gt;-30 .  Also, slaves were freed every sabbatical year, &lt;&lt;Bbl Ex 21:2 &gt;&gt;.
* &lt;&lt;Bbl 2Chron 36:21 &gt;&gt; //the [[Land]] enjoyed its sabbath rest ... until the seventy years were completed//
* &lt;&lt;Bbl Ps 3:1 &gt;&gt;-5  //I awoke, for the LORD sustains me.//  In the context of David's circumstances this is the more remarkable.
* &lt;&lt;Bbl Ps 4:8 &gt;&gt; //In peace I will both lay myself down and sleep, for you, Yahweh alone, make me live in safety. //
* &lt;&lt;Bbl Ps 127:2 &gt;&gt;        This verse describes Ruth's life.
* &lt;&lt;Bbl Ecc 4:6 &gt;&gt;      //One hand full of rest is bett.er...//
* &lt;&lt;Bbl Ez 20:12 &gt;&gt;        //My sabbaths are a [[Sign]]//
* &lt;&lt;Bbl Mt 11:28 &gt;&gt;-30    //Come to Me, all ye who are heavy-laden//
* &lt;&lt;Bbl Mt 12:5 &gt;&gt;-7      F.F. Bruce exposits this powerfully in The Hard Sayings.
* &lt;&lt;Bbl Mt 12:10 &gt;&gt;-12    //It is lawful to do good ...//
* &lt;&lt;Bbl Lk 13:15 &gt;&gt; A woman is released from sickness, the indignation of the synagogue official.
* &lt;&lt;Bbl Lk 14:1 &gt;&gt;-6 A continuation of 13:10-17, with the same denouem'nt of humiliation for the opponents of Jesus.
* Fulfilled in the NT:  &lt;&lt;Bbl Col 2:16 &gt;&gt;; &lt;&lt;Bbl Rom 14:5 &gt;&gt;; &lt;&lt;Bbl Gal 4:9 &gt;&gt;-10 .
* [[Restoration]] -- but the lawless views the sabbath as restriction.
* &lt;&lt;Bbl Heb 3:18 &gt;&gt;, &lt;&lt;Bbl Heb 4:1 &gt;&gt;-20   The relationship between rest and [[Faith]] is evinced.
* In 1980 I was a young man hitchhiking west from Philadelphia, and of course, what's the single biggest landmark for a person heading west across the country?  The Mississippi River!  For me, it became especially important.  I spent a night on the Michigan side, but I didn't sleep at all because of the mosquitoes.  When I crossed the River, I discovered there were no mosquitoes, so I immediately found a small park for motorists and lay down and slept.  Interestingly, I was probably on I-90 at the city called La Crosse.</pre>
</div>
<div title="Restoration" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Ps 3:3 &gt;&gt;; &lt;&lt;Bbl Gal 6:1 &gt;&gt;; &lt;&lt;Bbl 1Pt 5:10 &gt;&gt;
&lt;&lt;Bbl Ps 74:1 abbr &gt;&gt;-23 -- &quot;Recovery Psalm&quot;
[[Redemption]], [[Security]], //recovery//</pre>
</div>
<div title="Resurrection" modifier="SDM" created="201211250044" tags="story">
<pre>[[Christ]]
[[Judgment-ofGod]]
[[Transformation]]
[[Life]]
[[Deliverance]]
[[Hope]]
[[Power]]
[[Death]]</pre>
</div>
<div title="Rev-01-01-note" modifier="SDM" created="201010310230" modified="201211211328" tags="Comment" book_key="385001a">
<pre>&lt;&lt;Bbl Rev 1:6 &gt;&gt;   The KJV and NKJV are incorrect; we are not kings, but rather a kingdom.
1:15    see &lt;&lt;Bbl Ez 1:28 &gt;&gt;, &lt;&lt;Bbl Ez 43:2 &gt;&gt;
&lt;&lt;Bbl Rev 1:20 abbr &gt;&gt; This demonstrates that there truly are &quot;guardian angels,&quot; if not over individuals, then certainly over socio-geographical areas.

2:10    This clearly seems to indicate ten days of torture followed by death.
----
2:13    Pergamos' Chamber of Commerce probably didn't promote their &quot;home of Satan&quot; status.  But if they had so desired, a billboard at the end of town saying &quot;welcome to Pergamos, etc&quot; would have sufficed.
----
3:14:  Compare &lt;&lt;Bbl Is 65:16 &gt;&gt; (Heb).
----
7:9-11  see &lt;&lt;Bbl Gn 12:1 &gt;&gt;-3
----
&lt;&lt;Bbl Rev 12:11 abbr &gt;&gt;    see &lt;&lt;Bbl Heb 11:35 &gt;&gt;
----
&lt;&lt;Bbl Rev 12:17 abbr &gt;&gt;    see &lt;&lt;Bbl Ex 1:16 &gt;&gt;; &lt;&lt;Bbl Mt 2:16 &gt;&gt;
----
&lt;&lt;Bbl Rev 19:13 abbr &gt;&gt;    See &lt;&lt;Bbl Is 63:3 &gt;&gt;.
----
&lt;&lt;Bbl Rev 21:3 abbr &gt;&gt; Emmanuel, God with us.
21:4    What good would these promises be to someone who had never lost a loved one, never cried?

----
22:1-2  see &lt;&lt;Bbl Ez 47:12 &gt;&gt;  </pre>
</div>
<div title="Revelation" modifier="SDM" created="201202291313" modified="201212211506" book_key="">
<pre>''The showing of that which was hidden.''
* These terms share the same semantic essence:
## revelation
## unveiling
## apocalypse
## disclosure
* [[Veil]]
* [[Invisible-Visible]]
!!! The inclusion of the Gentiles or [[Nations]].
* &lt;&lt;Bbl Is 25:7 &quot;&quot; note &gt;&gt;
* &lt;&lt;Bbl Eph 3:2 &gt;&gt;-11
* &lt;&lt;Bbl Gal 3:3 &gt;&gt;
</pre>
</div>
<div title="Reverence" modifier="SDM" created="201301091601" modified="201301091601" book_key="">
<pre>* Bangladeshis who reserve the cushion for their Bible
!!! Loss of reverence
* http://scott_wiki.htm#DefinitionsChanging</pre>
</div>
<div title="Righteousness" modifier="SDM" created="201201120003" modified="201211250029" book_key="">
<pre>* &lt;&lt;Bbl Is 32:17 &gt;&gt;
* Be rude to sinful thoughts</pre>
</div>
<div title="River" modifier="SDM" created="201004120330" modified="201011031338">
<pre>* &lt;&lt;Bbl Ps 46:4 &gt;&gt;; &lt;&lt;Bbl Ez 47:1 &gt;&gt;-12 ; &lt;&lt;Bbl Jn 7:37 &gt;&gt;-39  (symbol of the Holy Spirit); &lt;&lt;Bbl Rev 22:1 &gt;&gt;-2
* [[Water]]</pre>
</div>
<div title="Road" modifier="SDM" created="201011272330" modified="201211110336" book_key="">
<pre>* //path, highway, Way// -- see [[Gospel]], [[Walk]].
* &lt;&lt;Bbl Is 35:8 &gt;&gt;-10 -- The &quot;Highway of Holiness&quot;
* &lt;&lt;Bbl Is 40:3 &gt;&gt;-5 -- The road is made level through repentance  John the Baptist's ministry.
* &lt;&lt;Bbl Mt 7:13 &gt;&gt;    The first road should remind us of the sort of road the Romans were famous for constructing.  Perhaps the &quot;gate&quot; even refers to a triumphal arch.  The second road is narrow.  A great many Bible readers have been confused by the expression, &quot;straight and narrow,&quot; but that is a misreading of the KJV, &quot;strait is the gate, and narrow is the way.&quot;  (Compare the term //straitlaced//.)  The kind of road Jesus describes is anything but straight; it is a typical footpath of the hills.  Jesus, then, is not saying that His path is like walking a tightrope, which is straight and easily fallen off of for lack of balance or skill.  He says it is like following a mountain path, which requires a different kind of skill, but mostly close attention and endurance; &quot;few find it.&quot;
* &lt;&lt;Bbl Jer 6:16 &gt;&gt; -- //Stand in the ways and see, and ask for the old paths...//
* The Romans are of course famous for their roads.  On December 17, 1948, Yigael Yadin remembered the existence of such a road stretching across the Negev.  Bulldozers cleared it for action in four nights of hard, dangerous and secret work, and the Israeli column of half-tracks and troop carriers that charged down that road defeated the principal Egyptian stronghold in the Sinai Peninsula (Fighting Heroes of Israel, 179-181).  </pre>
</div>
<div title="Rock" modifier="SDM" created="201004120330" modified="201112281622" book_key="">
<pre>&lt;&lt;Bbl Dt 32:4 &gt;&gt;; &lt;&lt;Bbl Lk 20:17 &gt;&gt;-18 .  &lt;&lt;Bbl 1Sam 7:12 &gt;&gt;, stone of help.
&lt;&lt;Bbl Lk 23:30 abbr &gt;&gt;; &lt;&lt;Bbl Rev 6:16 &gt;&gt;; &lt;&lt;Bbl Mt 21:44 &gt;&gt;; &lt;&lt;Bbl 1Pt 2:7 &gt;&gt;-8
* //a Stone in Zion// -- &lt;&lt;Bbl 1Pe 2:6 &gt;&gt;, &lt;&lt;Bbl Rom 9:33 &gt;&gt;, &lt;&lt;Bbl Rom 10:11 &gt;&gt;</pre>
</div>
<div title="Romans-01-01-note" modifier="SDM" created="201010310320" modified="201211160310" tags="Comment" book_key="200001a">
<pre>Overall structure:  first eleven chapters show God's grace, the remainer show our consecration.  11:36 - 12:1 is the fulcrum.  Mike Reed gives this general an outline for the first eight chapters:
{{{
    chap. 1-2, the Need
    chap. 3-4, the Provision
    chap. 5,    -- freedom from wrath,
    chap. 6,    -- freedom from sin,
    chap. 7,    -- freedom from the Law,
    chap. 8,    -- freedom from death.
}}}
For an overall comparison with the Book of Galatians, see F.F. Bruce, Romans, pp. 30-33.
Chap 2 -- [[Subversion]]
&lt;&lt;Bbl Rom 1:4 &quot;&quot; &gt;&gt;  Not that He was made the Son of God as a result; rather, the emphasis is on with power.  See &lt;&lt;Bbl Mk 9:1 &gt;&gt;, where &quot;the coming of the kingdom of God 'with power' (by contrast with the limitations under which it was manifested during Jesus' ministry) is probably the direct sequel to Jesus' death and vindication  (Bruce, 69).
    Spirit of holiness  uses a Hebrew idiom to say the Holy Spirit.
    The antithesis of flesh and spirit in vss. 3-4 refers not to His two natures but rather to the two states of humiliation and exaltation.
    The dead  is in a &quot;generalising plural&quot;; some have inferred that the resurrections of others (Lazarus or even those raised during the passion), but the exact same phrase is used in &lt;&lt;Bbl Acts 26:23 &gt;&gt; in reference solely to Christ.  But perhaps the theme of &lt;&lt;Bbl Rom 8:11 &gt;&gt; is in view (Bruce, p. 69).
1:6-7   Echoes the first verse.
1:14    The KJV says debtor , under moral obligation.
1:16    For not ashamed , see &lt;&lt;Bbl Heb 2:22 &gt;&gt;.
&lt;&lt;Bbl Rom 1:17 &quot;&quot; &gt;&gt; Bruce:  &quot;It is based on faith and addressed to faith.&quot;  He also cites the NEB margin:   &quot;a way that starts from faith and ends in faith.&quot;
    Cites &lt;&lt;Bbl Hab 2:4 &gt;&gt;b and &quot;gives them the sense, 'it is he who is righteous (justified) who will live.'  The terms of Habakkuk's oracle are sufficiently general to make room for Paul's application of them  --  an application, which, far from doing violence to the prophet's intention, expresses the abiding validity of his message&quot; (Bruce, p. 76).

3:27    Law  here is translated principle  in the RSV, which is much better.

&lt;&lt;Bbl Rom 4:10 abbr &gt;&gt; Abraham received the promise before he was a Jew.
4:13    John Stott matches this with &lt;&lt;Bbl 1Cor 3:21 &gt;&gt;-22  and with all the NT references to an inheritance.
4:23    The next chapter probably ought to commence here.</pre>
</div>
<div title="Romans-05-01-note" modifier="SDM" created="201211160310" modified="201211230332" tags="Comment" book_key="200005a">
<pre>5:3 //Tribulation// here is not qualified.  Whether we encounter trouble through genuine persecution, the vicissitudes of life, or our own screw-ups, the result is the same -- a hope which does not disappoint.
5:6-8   These words recall Jesus' admonishment in &lt;&lt;Bbl Lk 6:32 &gt;&gt;-36  to not love and give merely as the sinners do.
    This clearly denies the notion that Jesus died so the Father would love us.
5:8-9   Compare J.B. Phillips.
5:12-19 Compares closely with &lt;&lt;Bbl 1Cor 15:21 &gt;&gt;-22 .
&lt;&lt;Bbl Rom 5:13 abbr &gt;&gt;-14  A parenthetical statement.  It presents a converse idea (consistent with the general comparison that is this passage's theme) that before Christ came into the world, there was indeed grace; but grace had no direct agent.  Just as sin could not be revealed as thoroughly sinful, ugly (7:13), so grace could not be revealed in all its loveliness.  See also vs. 20.
5:14b   Adam is the only OT character specifically called a type  of the Christ.  Interestingly, this type is composed more of observable differences than similarities.
5:16    The many transgressions  is the &quot;sins of countless men,&quot; as Phillips puts it.
5:20    See note above fore 5:13.

6:2 see &lt;&lt;Bbl Ps 137:4 &gt;&gt;

7   Some of the arguments in chap. 7 are restatements of the previous argument.
7:14-25 This reasoning seems like a Christian version of a view held by the Pharisees that your members could sin independently of your will.  Jesus derides that view (if the commentators are correct) in &lt;&lt;Bbl Mt 5:29 &gt;&gt;-30 .
7:24    body of death   --  Don Fraser says the Romans would sometimes strap a corpse onto the body of a prisoner.  This sounds like a made-to-order fabrication to me.

&lt;&lt;Bbl Rom 8:2 abbr &gt;&gt;-25   Reproduces much of the argument of &lt;&lt;Bbl 2Cor 3:17 &gt;&gt; - 5:1, combined with part of the argument of Gal 4   see &lt;&lt;Bbl Php 1:12 &gt;&gt;
&lt;&lt;Bbl Rom 8:31 abbr &gt;&gt;-37  see &lt;&lt;Bbl Is 50:8 &gt;&gt;-10

[[Romans-12-01-note]]</pre>
</div>
<div title="Romans-12-01-note" modifier="SDM" created="201012110201" modified="201211230336" tags="Comment" book_key="200012a">
<pre>For once, a chapter division makes great sense.  Rom 12 follows a doxology and continues in (possibly) a [[Chiasmus]].

12:1    Is it possible that Paul has in mind the &quot;living sacrifice&quot; of &lt;&lt;Bbl Dan 3:28 &gt;&gt;?!  (I preach this, 7/22/90, Hill Country Church)
12:3    The theme which follows is unity, the unity of the body.  So we find this problem of //thinking of ourselves more highly than we ought// is a cause of disunity.
12:3-8  Compares closely with &lt;&lt;Bbl 1Cor 12:12 &gt;&gt;-31 .
&lt;&lt;Bbl Rom 12:1 &gt;&gt; - 15.4 -- F.F. Bruce proposes a close comparison with the Sermon on the Mount.
12:11   How is it that the same word can be translated diligence (NAS) and zeal ??
12:12-13    Wycliffe added the words, &quot;that is, harboring of poor men.&quot;

&lt;&lt;Bbl Rom 13:9 abbr &gt;&gt; -- as a Pharisee, Paul could never have come up with this statement.

&lt;&lt;Bbl Rom 14:1 abbr &gt;&gt;-15:6   Compares closely with &lt;&lt;Bbl 1Cor 8:1 &gt;&gt;-13, &lt;&lt;Bbl 1Cor 10:14 &gt;&gt; - 11:1.</pre>
</div>
<div title="RssFeed" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="features">
<pre>TiddlyWiki's RSS feed is available [[here|http://www.tiddlywiki.com/index.xml]]. You can generate an RSS feed for your own TiddlyWiki using the GenerateAnRssFeed option.</pre>
</div>
<div title="Ruth-01-01-note" modifier="SDM" created="201010310420" modified="201201060426" tags="Comment" book_key="520001a">
<pre>!!! Intro Notes
* Ruth informs us that the period of the Judges was not all as grim as that other book suggests.  In that other book the children of Israel are always either enslaved to the Canaanite nations or enslaved by their idolatries, and &quot;every man did what was right in his own eyes.&quot;  But in Ruth we see domestic life in a serene Israelite village free from lawlessness, perversity and war.
* Ruth provides vital glimpses of the law not as expressed in constitution, nor in case statue, but in the lives of God's people.
* Interesting general comparison with 1 Kings 19:19-21 and 2 Kings 2:2-12.  To follow Elijah, Elisha must break ties with his up-till-now life.
* As with any other book of the Bible, preposterous attempts to discredit the book.
** A few have claimed it an interesting piece of fiction.
** Driver described it as propaganda for the kinsman-redeemer idea.  Widows encouraged to be faithful.
** Staples said there was a fertility cult in Bethlehem and the writer recorded a cultic myth.
** Some scholars came up with the idea that it was a post-exilic polemic against the view that marrying a gentile wife was sinful (but it doesn't read like a polemic:  doesn't go on about how Boaz married her in spite of her Moabite background, doesn't present the first kinsman as rejecting Ruth for that reason).
!!! The Sojourn
&lt;&lt;Bbl Ruth 1:1 abbr &gt;&gt;-8   The scene opens like an aerial view which zooms in to gaze at a single human discussion (like The Lady Vanishes).  Bethlehem = House of Bread
1:2, 22, 4:3    The country of Moab   --  literally, the field or fields.  Bounds says the usage points to foreign soil.
1:4     &quot;Marriages of women of Ammon or Moab are nowhere in the Law expressly forbidden, as were marriages with the women of Canaan (&lt;&lt;Bbl Dt 7:1 &gt;&gt;-3 ).  In the days of Nehemiah the special law (&lt;&lt;Bbl Dt 23:3 &gt;&gt;-6 ) was interpreted as forbidding them, and as excluding the children of such marriages from the congregation of Israel (&lt;&lt;Bbl Neh 7:1 &gt;&gt;-3 )   [Bounds, p. 473].
    Ruth was the wife of Mahlon (4:10).
    Are Ruth and Orpah really Moabite names?
1:6 The theme of famine and harvest is already established.  God is presented as controlling the life of a nation.
1:7 In this crisis we find the daughters and Naomi showing deep courtesy to each other.  In an almost formal act of separation, the daughters are going to accompany her to the border as if to cross over, but they will be persuaded to remain in their homeland.  Naomi is thus caught by surprise when Ruth chooses to continue.
1:9 The word rest   is from the same root as Noah's name (&lt;&lt;Bbl Gn 5:28 &gt;&gt;-29 ) and is found in a variant form in 3:1.  It is a rough synonym of &quot;sabbath&quot; without the direct theological significance.
1:11    Refers to the law of the levirate (Latin, brother-in-law).  The Moabites may have had their own version of this law.
1:13-14 Note the bitterness in Naomi.
    Judas kissed the lord Jesus; Mary Magdalene clung to Him.  Courtesy versus commitment.
1:15-18 When do we say such words to each other?
    This is more than affection for Naomi.  Ruth is after a relationship with the God if Israel, and since Naomi is His representative, that means a relationship with Naomi.  A lesson for witnessing.
1:16    Look to vs 15 for the antecedent.  //Lodge// is temporary as in an overnight stay.  &lt;&lt;Bbl Heb 11:8 &gt;&gt;-16 .
&lt;&lt;Bbl Ruth 1:19 abbr &gt;&gt;    The KJV says &quot;they.&quot;   However the Heb. is in the feminine, so other translations are able to say &quot;the women.&quot;
1:20-21 We must look carefully at Naomi's situation.  Naomi is about to change her name from Naomi to Mara, as we will see.  Naomi means &quot;pleasant&quot;;  Mara means &quot;bitter&quot;.  The sword of death and famine has severed her from all earthly support.  Her husband and children are dead, and she is in a land far from her home.  The end of 1:8 tells the story.
!!! The Return
    We must strive to imagine the humiliation of Naomi at returning to her hometown.  We can easily compare her situation with that of Job, and we can be sure a few of Job's comforters were present to console her.
1:21    This is Naomi's second and third statements about Yahweh.  Notice &quot;El Shaddai&quot;, the God of provision.  In &lt;&lt;Bbl Gn 15:7 &gt;&gt;, God revealed to Abram as Yahweh, the I AM God; in &lt;&lt;Bbl Gn 17:1 &gt;&gt;, revealed as El Shaddai, the provider God.  This title, given as God is promising a son to the 99 year old man, speaks specially of His provision.  &quot;... As possessing the power to realize His promises, even when the order of nature presented no prospect of their fulfillment, and the powers of nature were insufficient to secure it.&quot;  Used mainly in the Pentateuch, then 31 times in Job, then a bit in the prophets.
1:22    A summary statement of the story's setting, with an additional piece of information.  In our own land the homeless are on the move when the weather is right.

2:1 Here, as elsewhere in Hebrew narrative, much is &quot;given away&quot; at the beginning; more than a modern writer would choose to.  Boaz means, &quot;Strength is In Him.&quot;  One of the pillars for the Temple of Solomon bears this name, &lt;&lt;Bbl 2King 7:21 &gt;&gt;.
&lt;&lt;Bbl Ruth 2:3 abbr &gt;&gt; NAS margin, her chance chanced upon.  One old English version says, &quot;her hap happed upon.&quot;
2:5 Boaz enjoys his place as a provider to the poor.
2:7 //House,// a booth or shelter from the sun.
2:8 The maids are women following the men, taking care of the less physically demanding work.
2:10    Ruth had been apprehensive about even finding permission to glean, 2:1.
2:11-12 A huge spiritual discernment of the meaning of her voluntary exile.  Abraham comes to mind, and the daughter of &lt;&lt;Bbl Ps 45:10 &gt;&gt;.
    Fulfilled in 3:9.  But Keil &amp; Delitszch says that although the same Hebrew word is used, these are different figures of speech.
2:13    Not like,  in that she is a Moabite.
2:14    Served her, margin says &quot;held out to her.&quot;  Here also is the same sign of favor that the Christ offered His betrayer, &lt;&lt;Bbl Jn 13:26 &gt;&gt;.
&lt;&lt;Bbl Jn 2:16 abbr &gt;&gt;    The KJV says, &quot;handfuls of purpose.&quot;  Boaz turns it from hard work to easy work.
2:17    An ephah is a half bushel according to my Open Bible.
2:18    That is, she had been satisfied earlier.
    The 1611  KJV put &quot;he&quot; in for the second word; the 1613 corrected this to &quot;she.&quot;
2:22    Here is a great reason for remaining within the fellowship of the Lord.  </pre>
</div>
<div title="Ruth-03-01-note" modifier="SDM" created="201201060426" modified="201207312040" tags="Comment" book_key="520003a">
<pre>!!! The Tryst
&lt;&lt;Bbl Ruth 3:9 &gt;&gt;   Compare 2:12-13.  Boaz is a [[kinsman-redeemer|Redemption]].  Ruth boldly states this fact of his eligibility to him, in both word and symbolic &lt;&lt;Bbl Act 3:14 &gt;&gt;.  Our life is [[hid|Invisible-Visible]] with Christ.  The world knows nothing of the relationship (11/17/90).  &lt;&lt;Bbl Jn 7:33 &gt;&gt;-34 , &lt;&lt;Bbl Jn 17:25 &gt;&gt;-26 ,&lt;&lt;Bbl Jn 14:19 &gt;&gt;; &lt;&lt;Bbl Col 3:3 &gt;&gt;-4 .
    &lt;&lt;Bbl Mt 13:44 &gt;&gt;:  Ruth is indeed a treasure which Boaz finds &quot;hidden in a field,&quot; that is, in an inheritance which provides the relational link.  Boaz &quot;found and hid&quot; the treasure, &lt;&lt;Bbl Ruth 3:14 &gt;&gt;, and then out of joy went and bought the field.
    No indication of why Boaz tells her to stay through the night.  One possibility is that for Ruth to return home by night would have been dangerous or compromising to her reputation.  Also doesn't say why he chooses secrecy; perhaps it might have compromised the procedure of redemption.  But it may be the secrecy of a deep love with a hidden center.
!!! The [[Redemption]]
4:1-2   This formal gathering in the gates did just what the courthouse bulletin board does today.
4:3-10  From Salvation When?, Conrad Murrell:  the redeemer must meet three requirements.
## He must have the right.
*** Boaz was a close relative, 2:20
*** Christ is a man, &lt;&lt;Bbl Heb 2:9 &gt;&gt;-18 ; &lt;&lt;Bbl Gal 4:3 &gt;&gt;-5.
## He must have the ability or means.
*** //Boaz// means //in him is strength.//  Boaz was wealthy, thus an //eligible bachelor//.  And the financial cost includes supporting Naomi.  The first kinsman forfeits his claim to Elimelech's property on these grounds (4:6) (though he may also have balked at taking on a Moabites).
*** Christ is God, &lt;&lt;Bbl Rom 1:14 &gt;&gt;
## He must be willing.  And there is the most precious aspect of both Boaz' and Christ's good news.
There's no suggestion that Boaz is required to do anything more than let Ruth and Naomi glean his fields.  Moreover, Ruth's foreignness could have been an obstacle.  The key to his love is found in Ruth's embrace of God (&lt;&lt;Bbl Ruth 2:11 &gt;&gt;-12).  The real covenant of their marriage is 1:16-17.  For Christ, see &lt;&lt;Bbl Heb 11:16 &gt;&gt;.
!!! the Consummation
4:10    Indeed, the first Adam had been cut off from his gate.
4:17    Obed means &quot;servant.&quot;
4:18-22 Compare this list with that of &lt;&lt;Bbl 1Chr 2:5 &gt;&gt;-15 .  Some scholars see this list as too short to cover the time required; they presume that some generations were skipped.
&lt;&lt;tiddler HideTiddlerTags&gt;&gt; </pre>
</div>
<div title="Sacrifice" modifier="SDM" created="201004120330" modified="201210212128" tags="Living-Animal" book_key="">
<pre>@@color:brown;All biblical sacrifice rests on the idea that the gift of life to God, whether in consecration or expiation, is necessary to the action or the restoration of religion of life...man in the abnormal state of sin is disqualified for offering his own person.  Hence the principle of vicariousness -- @@  // --  G. Vos//
All biblical sacrifice rests on the idea that you owe God a gift of life.  You owe it to Him in //consecration//  --  giving Him your whole heart and soul and mind and strength.  But if you can't handle that, you owe it to Him in //expiation//, which means paying a penalty  --  death.  One or the other.
But giving your own life does not satisfy God's requirements, because sin has made us ineligible.  Animals brought for sacrifice had to be perfect.  Jesus came as the perfect lamb of God, perfectly free from sin, to give His life vicariously.  Consecration and expiation are fulfilled in Him.
* [[Priest]], //offering//
* [[Blood]]. [[Atonement]]
|v 3, fruits of the soil|v 4, fat portions of &lt;br&gt; 1st-born of flocks |
!!! OT pointing to Christ
* The opening of Leviticus
* &lt;&lt;Bbl Lv 14:1 &gt;&gt;-7
!!! Spiritual Sacrifices
* &lt;&lt;Bbl 1Pt 2:5 &quot;&quot; note &gt;&gt;
* There are seven spiritual sacrifices that can be found in the NT.  The references are
** &lt;&lt;Bbl Heb 13:15 &gt;&gt;-16  (three of 'em);
** &lt;&lt;Bbl Eph 5:2 &gt;&gt;;
** &lt;&lt;Bbl Php 2:17 &gt;&gt;,
** &lt;&lt;Bbl Php 4:18 &gt;&gt;;
** &lt;&lt;Bbl Rom 12:1 &gt;&gt;. </pre>
</div>
<div title="Sacrilege" modifier="SDM" created="201203072359" book_key="">
<pre>* __The Bridal Bible__ is now in print.
** Titles you'll never see:
### __The Windows 7 Koran__
### __The Windows 7 Baghvad Gita__
### __The Windows 7 Book of Mormon__
** Look on our nation, O Lord.</pre>
</div>
<div title="Safari" creator="psd" modifier="ericshulman" created="201102111107" modified="201208051540" tags="browsers issues">
<pre>Safari can SaveChanges using the TiddlySaver Java applet.

There are still some issues with Safari:
* Permalinks with Unicode characters in them (like [[this one|http://avm.free.fr/tidlipo.html#AdaptationFran%C3%A7aise]]) don't work properly
* When using Safari 6.0 on OSX &quot;Mountain Lion&quot;, TiddlySaver.jar does not get loaded properly.  To work around this, go to &quot;preferences / advanced&quot; and check &quot;Show Develop menu in menu bar&quot;, then mark &quot;Disable local file restrictions&quot; </pre>
</div>
<div title="SafeMode" creator="psd" modifier="jermolene" created="201102111107" modified="201110201351" tags="features">
<pre>SafeMode can be selected by putting {{{#start:safe}}} (see StartupParameters) on the end of the TiddlyWiki URL. It stops TiddlyWiki from executing any [[Plugins]], modifying shadow tiddlers, or reading/writing cookies. It can be useful for tracking down problems caused by rogue [[Plugins]].
</pre>
</div>
<div title="Salt" modifier="SDM" created="201004120330" modified="201211250019" book_key="">
<pre>* A symbol of [[Covenant]] and perhaps of [[Holiness]].
* &lt;&lt;Bbl Lv 2:13 &gt;&gt;, &lt;&lt;Bbl Num 18:19 &gt;&gt;, &lt;&lt;Bbl Job 6:6 &gt;&gt; (stimulates the appetite); &lt;&lt;Bbl 2Chr 13:5 &gt;&gt;, &lt;&lt;Bbl Ezr 4:14 &gt;&gt; (lit., &quot;we partake of the salt of the palace&quot;; check the RSV also), &lt;&lt;Bbl Ez 42:24 &gt;&gt;, &lt;&lt;Bbl Ez 16:4 &gt;&gt;, &lt;&lt;Bbl 2Ki 2:20 &gt;&gt;-21 , &lt;&lt;Bbl Mk 9:49 &gt;&gt;-50 ; &lt;&lt;Bbl Col 4:6 &gt;&gt;.
* &lt;&lt;Bbl Mt 5:30 &gt;&gt;
* Salt is humble.  He didn't call us the __spice__ of the world.
* Arab proverb, &quot;There is salt between us.&quot;
* You can't make a horse drink, but as Bill Gothard points out, you can salt the oats.
* See Wycliffe Bible Ency., &quot;Covenant of Salt.&quot;
* But what of [[Death]]?  When was the &quot;Carthaginian peace&quot; of Alexander?</pre>
</div>
<div title="Salvation-Savior" modifier="SDM" created="201004120330" modified="201301091600" book_key="">
<pre>* [[Christ]] provides [[Healing]] for our wounds and [[Provision]] for our needs.
* The English word is related in its root to &quot;salve&quot;.  &lt;&lt;Bbl Acts 4:12 &gt;&gt;; &lt;&lt;Bbl 1Tim 2:3 &gt;&gt;-4
* It is well summed up in the Greek noun //soterio//, verb //sozo//, which is the comprehensive NT word for all that Christ has accomplished for us.  It has been rendered &quot;[[Freedom]] from the molestation of all enemies.&quot;  Most literally, it means wholeness or soundness, and thus corresponds with the Hebrew [[Shalom|Peace]].
* Paul encapsulates it before Agrippa in &lt;&lt;Bbl Acts 26:18 &gt;&gt;
* &lt;&lt;Bbl Jn 4:42 0 n &gt;&gt;
* [[Grace]]
* For sad notes about //born again//, see [[Reverence]]
* //Savior, Messiah//
* http://www.christinyou.net/pages/salvation.html
!!! Accomplished, present, completed
* &lt;&lt;Bbl 1Peter 1:3 &gt;&gt;-9 shows tenses, so to speak -- accomplished, in progress, reserved for the future.
* [[SanctifiedProgressive]], [[SanctifiedPositional]]
* &lt;&lt;Bbl Song 1:9 &gt;&gt;-11</pre>
</div>
<div title="SanctifiedPositional" modifier="SDM" created="201201030003" modified="201201032339" book_key="">
<pre>* Sanctification has intersecting or paradoxical aspects.  It is accomplished, ongoing or progressive, and yet to be consummated.  So it is like [[Salvation]].
* [[SanctifiedProgressive]]</pre>
</div>
<div title="SanctifiedProgressive" modifier="SDM" created="201004120330" modified="201212051324" book_key="">
<pre>* Edwards (. 232) has steps in a process of change:
## Engage the battle.  Separate from the object of your sinful affections.
## Turn to Christ and commit yourself to keep turning to Christ.
## Surround yourself with wise counselors.  Be part of a church.
## Speak honestly.  Uncover the more subtle lies.
## Commit yourself to thinking God's thoughts about addictions and wise living.
## Engage the battle at the level of the imagination.
## Delight in the fear of the Lord.
* [[SanctifiedPositional]]
* &lt;&lt;Bbl 1Jn 3:3 &gt;&gt;
* &lt;&lt;Bbl Heb 12:14 &gt;&gt;
* &lt;&lt;Bbl Zeph 3:9 &gt;&gt;
* &lt;&lt;Bbl Is 1:17&gt;&gt;a
* &lt;&lt;Bbl Rom 6:17 &gt;&gt;
* &lt;&lt;Bbl Php 3:12 &gt;&gt;-16
* //Don't pray for patience, you'll receive opportunities to be patient.//  I wonder why patience is singled out.  It's every bit as true for other virtues.
* @@color:brown;It may be hard for an egg to turn into a bird: it would be a jolly sight harder for it to learn to fly while remaining an egg. We are like eggs at present. And you cannot go on indefinitely being just an ordinary, decent egg. We must be hatched or go bad.@@ // -- C. S. Lewis//
* [[Fruit]], [[Virtue]]
* [[Temptation]]</pre>
</div>
<div title="Satan" modifier="SDM" created="201004120330" modified="201211201318" tags="Living-Animal" book_key="">
<pre>* &quot;Accuser.&quot;  &lt;&lt;Bbl Zech 3:1 &gt;&gt;-2 ; &lt;&lt;Bbl 1Jn 5:19 &gt;&gt;; &lt;&lt;Bbl 1Chr 21:1 &gt;&gt;; &lt;&lt;Bbl 2Sam 24:1 &gt;&gt;; &lt;&lt;Bbl 2Cor 11:14 &gt;&gt;.
* &lt;&lt;Bbl 1Thes 3:5 &gt;&gt;, the Tempter.
* as a //snake, serpent, dragon//:  &lt;&lt;Bbl Ge 3:1 &gt;&gt;-4 ; &lt;&lt;Bbl Is 27:1 &gt;&gt;; &lt;&lt;Bbl Mr 16:17 &gt;&gt;; &lt;&lt;Bbl Lu 10:18 &gt;&gt;; &lt;&lt;Bbl Re 12:9 &gt;&gt;-13 ; &lt;&lt;Bbl Re 16:13 &gt;&gt;-14 ; &lt;&lt;Bbl Re 20:2 &gt;&gt;
* //devil,  demon,  adversary, Lucifer (though I believe it's correct to consider this a false appropriation)//
* [[Sin]], [[Temptation]], [[Deceit]], [[Demon]]
!!! Opportunistic
* &lt;&lt;Bbl Lk 4:13 &gt;&gt;
* &lt;&lt;Bbl Jn 13:2 &gt;&gt;
* //...like a lion, seeking whom he may devour...//
!!! Under God's control
* Job
* the bronze serpent
* the lying spirit sent to King Ahab
* &lt;&lt;Bbl 2Thes 2:11 abbr &gt;&gt;-12
* Romans 1</pre>
</div>
<div title="SaveAsPlugin" modifier="ELSDesignStudios" created="200602030909" tags="systemConfig excludeLists systemConfigDisable">
<pre>/***
|Name|SaveAsPlugin|
|Source|http://www.TiddlyTools.com/#SaveAsPlugin|
|Documentation|http://www.TiddlyTools.com/#SaveAsPluginInfo|
|Version|2.6.1|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides||
|Description|Save current document to a different path/filename|
Adds 'save as' command to 'backstage' menu and {{{&lt;&lt;saveAs&gt;&gt;}}} macro (to embed command link wherever you like).
&gt;//Note: This plugin replaces functionality previously provided by [[NewDocumentPlugin]], except for the HTML+CSS 'snapshot' feature, which has been moved to a separate [[SnapshotPlugin]].//
!!!!!Documentation
&lt;&lt;&lt;
see [[SaveAsPluginInfo]]
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2009.08.04 [2.6.1] fixed handling when limit is omitted
| Please see [[SaveAsPluginInfo]] for additional revision details |
2006.02.03 [1.0.0] Created
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.SaveAsPlugin= {major: 2, minor: 6, revision: 1, date: new Date(2009,8,4)};

config.macros.saveAs = {
    label: 'save as...',
    labelparam: 'label:',
    prompt: 'Save current document to a different path/file',
    promptparam: 'prompt:',
    filePrompt: 'Please select or enter a target path/filename',
    targetparam: 'target:',
    defaultFilename: 'new.html',
    filenameparam: 'filename:',
    currfilekeyword: 'here',
    typeparam: 'type:',
    type_TW: 'tw', type_PS: 'ps', type_TX: 'tx', type_CS: 'cs', type_NF: 'nf', // file type tokens
    type_map: { // map filetype param alternatives/abbreviations to token values
        tiddlywiki:'tw', tw:'tw', wiki: 'tw',
        purestore: 'ps', ps:'ps', store:'ps',
        plaintext: 'tx', tx:'tx', text: 'tx',
        comma:     'cs', cs:'cs', csv:  'cs',
        newsfeed:  'nf', nf:'nf', xml:  'nf', rss:'nf'
    },
    limitparam: 'limit:',
    replaceparam: 'replace',
    mergeparam: 'merge',
    quietparam: 'quiet',
    openparam: 'open',
    askParam: 'ask',
    askMsg: &quot;Enter a tag filter (use * for all tiddlers, 'none' for blank document)&quot;,
    emptyParam: 'none',
    confirmmsg: &quot;Found %0 tiddlers matching\n\n'%1'\n\nPress OK to proceed&quot;,
    mergeprompt: '%0\nalready contains tiddler definitions.\n'
        +'\nPress OK to add new/revised tiddlers to current file contents.'
        +'\nPress Cancel to completely replace file contents',
    mergestatus: 'Merged %0 new/revised tiddlers and %1 existing tiddlers',
    okmsg: '%0 tiddlers written to %1',
    failmsg: 'An error occurred while creating %1',
    filter: '',
    handler: function(place,macroName,params) {
        if ((params[0]||'').startsWith(this.labelparam))
            var label=params.shift().substr(this.labelparam.length);
        if ((params[0]||'').startsWith(this.promptparam))
            var prompt=params.shift().substr(this.promptparam.length);
        if ((params[0]||'').startsWith(this.targetparam))
            var target=params.shift().substr(this.targetparam.length);
        if ((params[0]||'').startsWith(this.filenameparam))
            var filename=params.shift().substr(this.filenameparam.length);
        if ((params[0]||'').startsWith(this.typeparam))
            var filetype=this.type_map[params.shift().substr(this.typeparam.length).toLowerCase()];
        if ((params[0]||'').startsWith(this.limitparam))
            var limit=params.shift().substr(this.limitparam.length);
        var q=((params[0]||'')==this.quietparam);   if (q) params.shift();
        var o=((params[0]||'')==this.replaceparam); if (o) params.shift();
        var m=((params[0]||'')==this.mergeparam);   if (m) params.shift();
        var a=((params[0]||'')==this.openparam);    if (a) params.shift();
        var btn=createTiddlyButton(place,label||this.label,prompt||this.prompt,
            function(){ config.macros.saveAs.go( this.getAttribute('target'),
                this.getAttribute('filename'), this.getAttribute('filetype'),
                this.getAttribute('filter'), this.getAttribute('limit'),
                this.getAttribute('quiet')=='true', this.getAttribute('overwrite')=='true',
                this.getAttribute('merge')=='true', this.getAttribute('autoopen')=='true');
                return false; }
        );
        if (target) btn.setAttribute('target',target);
        if (filename) btn.setAttribute('filename',filename);
        btn.setAttribute('filetype',filetype||this.type_TW);
        btn.setAttribute('filter',params.join(' '));
        btn.setAttribute('limit',limit||0);
        btn.setAttribute('quiet',q?'true':'false');
        btn.setAttribute('overwrite',o?'true':'false');
        btn.setAttribute('merge',m?'true':'false');
        btn.setAttribute('autoopen',a?'true':'false');
    },
    go: function(target,filename,filetype,filter,limit,quiet,overwrite,merge,autoopen) {
        var cm=config.messages; // abbreviation
        var cms=config.macros.saveAs; // abbreviation
        if (window.location.protocol!='file:') // make sure we are local
            { displayMessage(cm.notFileUrlError); return; }

        // get tidders, confirm filtered results
        var tids=cms.selectTiddlers(filter);
        if (tids===false) return; // cancelled by user
        if (cms.filter!=cms.emptyParam &amp;&amp; cms.filter.length &amp;&amp; !quiet)
            if (!confirm(cms.confirmmsg.format([tids.length,cms.filter]))) return;

        // get target path/filename
        if (!filetype) filetype=this.type_TW;
        target=target||cms.getTarget(filename,filetype==this.type_TX?'txt':filetype==this.type_CS?'csv':'html');
        if (!target) return; // cancelled by user

        var link='file:///'+target.replace(/\\/g,'/');
        var samefile=link==decodeURIComponent(window.location.href);
        var p=getLocalPath(document.location.href);
        if (samefile) {
            if (config.options.chkSaveBackups) { var t=loadOriginal(p);if(t)saveBackup(p,t); }
            if (config.options.chkGenerateAnRssFeed &amp;&amp; saveRss instanceof Function) saveRss(p);
        }
        var notes='';
        var total={val:0};
        var out=this.assembleFile(target,filetype,tids,limit,notes,quiet,overwrite,merge,total);
        var ok=saveFile(target,out);
        if (ok &amp;&amp; autoopen) {
            if (!samefile) window.open(link).focus();
            else { store.setDirty(false); window.location.reload(); }
        }
        if (!quiet || !(ok &amp;&amp; autoopen))
            displayMessage((ok?this.okmsg:this.failmsg).format([total.val,target]),link);
    },
    selectTiddlers: function(filter) {
        var cms=config.macros.saveAs; // abbreviation
        var tids=[]; cms.filter=filter||'';
        if (filter==cms.emptyParam) tids=[];
        if (filter==config.macros.saveAs.askParam) {
            filter=prompt(config.macros.saveAs.askMsg,'');
            if (!filter) return false;  // cancelled by user
            cms.filter=filter=='*'?'':filter;
        }
        if (!filter||!filter.length||filter=='*') tids=store.getTiddlers('title');
        else tids=store.filterTiddlers('[tag['+filter+']]');
        return tids;
    },
    getTarget: function(defName,defExt) {
        var cms=config.macros.saveAs; // abbreviation
        // get new target path/filename
        var newPath=getLocalPath(window.location.href);
        var slashpos=newPath.lastIndexOf('/'); if (slashpos==-1) slashpos=newPath.lastIndexOf('\\');
        if (slashpos!=-1) newPath=newPath.substr(0,slashpos+1); // trim filename
        if (!defName||!defName.length) { // use current filename as default
            var p=getLocalPath(window.location.href);
            var s=p.lastIndexOf('/'); if (s==-1) s=p.lastIndexOf('\\');
            if (s!=-1) defName=p.substr(s+1);
        }
        var defFilename=(defName||cms.defaultFilename).replace(/.html$/,'.'+defExt);
        var target=cms.askForFilename(cms.filePrompt,newPath,defFilename,defExt);
        if (!target) return; // cancelled by user
        // if specified file does not include a path, assemble fully qualified path and filename
        var slashpos=target.lastIndexOf('/'); if (slashpos==-1) slashpos=target.lastIndexOf('\\');
        if (slashpos==-1) target=target+(defName||cms.defaultFilename).replace(/.html$/,'.'+defExt);
        return target;
    },
    askForFilename: function(msg,path,file,defExt) {
        if(window.Components) { // moz
            try {
                netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');
                var nsIFilePicker = window.Components.interfaces.nsIFilePicker;
                var picker = Components.classes['@mozilla.org/filepicker;1'].createInstance(nsIFilePicker);
                picker.init(window, msg, nsIFilePicker.modeSave);
                var thispath = Components.classes['@mozilla.org/file/local;1'].createInstance(Components.interfaces.nsILocalFile);
                thispath.initWithPath(path);
                picker.displayDirectory=thispath;
                picker.defaultExtension=defExt||'html';
                picker.defaultString=file;
                picker.appendFilters(nsIFilePicker.filterAll|nsIFilePicker.filterText|nsIFilePicker.filterHTML);
                if (picker.show()!=nsIFilePicker.returnCancel) var result=picker.file.persistentDescriptor;
            }
            catch(e) { alert('error during local file access: '+e.toString()) }
        }
        else { // IE
            try { // XP/Vista only
                var s = new ActiveXObject('UserAccounts.CommonDialog');
                s.Filter='All files|*.*|Text files|*.txt|HTML files|*.htm;*.html|';
                s.FilterIndex=(defExt=='txt')?2:3; // default to HTML files;
                s.InitialDir=path;
                s.FileName=file;
                if (s.showOpen()) var result=s.FileName;
            }
            catch(e) { var result=prompt(msg,path+file); } // fallback for non-XP IE
        }
        return result;
    },
    plainTextHeader:
         'Source:\n\t%0\n'
        +'Title:\n\t%1\n'
        +'Subtitle:\n\t%2\n'
        +'Created:\n\t%3 by %4\n'
        +'Application:\n\tTiddlyWiki %5 / %6 %7\n\n',
    plainTextTiddler:
        '- - - - - - - - - - - - - - -\n'
        +'|     title: %0\n'
        +'|   created: %1\n'
        +'|  modified: %2\n'
        +'| edited by: %3\n'
        +'|      tags: %4\n'
        +'- - - - - - - - - - - - - - -\n'
        +'%5\n',
    plainTextFooter:
        '',
    newsFeedHeader:
         '&lt;'+'?xml version=&quot;1.0&quot;?'+'&gt;\n'
        +'&lt;rss version=&quot;2.0&quot;&gt;\n'
        +'&lt;channel&gt;\n'
        +'&lt;title&gt;%1&lt;/title&gt;\n'
        +'&lt;link&gt;%0&lt;/link&gt;\n'
        +'&lt;description&gt;%2&lt;/description&gt;\n'
        +'&lt;language&gt;en-us&lt;/language&gt;\n'
        +'&lt;copyright&gt;Copyright '+(new Date().getFullYear())+' %4&lt;/copyright&gt;\n'
        +'&lt;pubDate&gt;%3&lt;/pubDate&gt;\n'
        +'&lt;lastBuildDate&gt;%3&lt;/lastBuildDate&gt;\n'
        +'&lt;docs&gt;http://blogs.law.harvard.edu/tech/rss&lt;/docs&gt;\n'
        +'&lt;generator&gt;TiddlyWiki %5 / %6 %7&lt;/generator&gt;\n',
    newsFeedTiddler:
        '\n%0\n',
    newsFeedFooter:
        '&lt;/channel&gt;&lt;/rss&gt;',
    pureStoreHeader:
         '&lt;html&gt;&lt;body&gt;'
        +'&lt;style type=&quot;text/css&quot;&gt;'
        +'  #storeArea {display:block;margin:1em;}'
        +'  #storeArea div {padding:0.5em;margin:1em;border:2px solid black;height:10em;overflow:auto;}'
        +'  #pureStoreHeading {width:100%;text-align:left;background-color:#eeeeee;padding:1em;}'
        +'&lt;/style&gt;'
        +'&lt;div id=&quot;pureStoreHeading&quot;&gt;'
        +'  TiddlyWiki &quot;PureStore&quot; export file&lt;br&gt;'
        +'  Source'+': &lt;b&gt;%0&lt;/b&gt;&lt;br&gt;'
        +'  Title: &lt;b&gt;%1&lt;/b&gt;&lt;br&gt;'
        +'  Subtitle: &lt;b&gt;%2&lt;/b&gt;&lt;br&gt;'
        +'  Created: &lt;b&gt;%3&lt;/b&gt; by &lt;b&gt;%4&lt;/b&gt;&lt;br&gt;'
        +'  TiddlyWiki %5 / %6 %7&lt;br&gt;'
        +'  Notes:&lt;hr&gt;&lt;pre&gt;%8&lt;/pre&gt;'
        +'&lt;/div&gt;'
        +'&lt;div id=&quot;storeArea&quot;&gt;',
    pureStoreTiddler:
        '%0\n%1',
    pureStoreFooter:
        '&lt;/div&gt;&lt;!--POST-BODY-START--&gt;\n&lt;!--POST-BODY-END--&gt;&lt;/body&gt;&lt;/html&gt;',
    assembleFile: function(target,filetype,tids,limit,notes,quiet,overwrite,merge,total) {
        var revised='';
        var now = new Date().toLocaleString();
        var src=convertUnicodeToUTF8(document.location.href);
        var title = convertUnicodeToUTF8(wikifyPlain('SiteTitle').htmlEncode());
        var subtitle = convertUnicodeToUTF8(wikifyPlain('SiteSubtitle').htmlEncode());
        var user = convertUnicodeToUTF8(config.options.txtUserName.htmlEncode());
        var twver = version.major+'.'+version.minor+'.'+version.revision;
        var v=version.extensions.SaveAsPlugin; var pver = v.major+'.'+v.minor+'.'+v.revision;
        var headerargs=[src,title,subtitle,now,user,twver,'SaveAsPlugin',pver,notes];
        switch (filetype) {
            case this.type_TX: // plain text
                var header=this.plainTextHeader.format(headerargs);
                var footer=this.plainTextFooter;
                break;
            case this.type_CS: // comma-separated
                var fields={};
                for (var i=0; i&lt;tids.length; i++) for (var f in tids[i].fields) fields[f]=f;
                var names=['title','created','modified','modifier','tags','text'];
                for (var f in fields) names.push(f);
                var header=names.join(',')+'\n';
                var footer='';
                break;
            case this.type_NF: // news feed (XML)
                headerargs[0]=store.getTiddlerText('SiteUrl','');
                var header=this.newsFeedHeader.format(headerargs);
                var footer=this.newsFeedFooter;
                tids=store.sortTiddlers(tids,'-modified');
                break;
            case this.type_PS: // PureStore (no code)
                var header=this.pureStoreHeader.format(headerargs);
                var footer=this.pureStoreFooter;
                break;
            case this.type_TW: // full TiddlyWiki
            default:
                var currPath=getLocalPath(window.location.href);
                var original=loadFile(currPath);
                if (!original) { alert(config.messages.cantSaveError); return; }
                var posDiv = locateStoreArea(original);
                if (!posDiv) { alert(config.messages.invalidFileError.format([currPath])); return; }
                var header = original.substr(0,posDiv[0]+startSaveArea.length)+'\n';
                var footer = '\n'+original.substr(posDiv[1]);
                break;
        }
        if (parseInt(limit)!=0) tids=tids.slice(0,limit);
        var out=this.getData(target,filetype,tids,quiet,overwrite,merge,fields);
        var revised = header+convertUnicodeToUTF8(out.join('\n'))+footer;
        // if full TW, insert page title and language attr, and reset MARKUP blocks as needed...
        if (filetype==this.type_TW) {
            var newSiteTitle=convertUnicodeToUTF8(getPageTitle()).htmlEncode();
            revised=revised.replaceChunk('&lt;title'+'&gt;','&lt;/title'+'&gt;',' ' + newSiteTitle + ' ');
            revised=updateLanguageAttribute(revised);
            var titles=[]; for (var i=0; i&lt;tids.length; i++) titles.push(tids[i].title);
            revised=updateMarkupBlock(revised,'PRE-HEAD',
                titles.contains('MarkupPreHead')? 'MarkupPreHead' :null);
            revised=updateMarkupBlock(revised,'POST-HEAD',
                titles.contains('MarkupPostHead')?'MarkupPostHead':null);
            revised=updateMarkupBlock(revised,'PRE-BODY',
                titles.contains('MarkupPreBody')? 'MarkupPreBody' :null);
            revised=updateMarkupBlock(revised,'POST-SCRIPT',
                titles.contains('MarkupPostBody')?'MarkupPostBody':null);
        }
        total.val=out.length;
        return revised;
    },
    getData: function(target,filetype,tids,quiet,overwrite,merge,fields) {
        // output selected tiddlers and gather list of titles (for use with merge)
        var out=[]; var titles=[];
        var url=store.getTiddlerText('SiteUrl','');
        for (var i=0; i&lt;tids.length; i++) {
            out.push(this.formatItem(store,filetype,tids[i],url,fields));
            titles.push(tids[i].title);
        }
        // if TW or PureStore format, ask to merge with existing tiddlers (if any)
        if (filetype==this.type_TW || filetype==this.type_PS) {
            if (overwrite) return out; // skip merge... forced overwrite
            var txt=loadFile(target);
            if (txt &amp;&amp; txt.length) {
                var remoteStore=new TiddlyWiki();
                if (version.major+version.minor*.1+version.revision*.01&lt;2.52) txt=convertUTF8ToUnicode(txt);
                if (remoteStore.importTiddlyWiki(txt) &amp;&amp; (merge||confirm(this.mergeprompt.format([target])))) {
                    var existing=remoteStore.getTiddlers('title');
                    for (var i=0; i&lt;existing.length; i++)
                        if (!titles.contains(existing[i].title))
                            out.push(this.formatItem(remoteStore,filetype,existing[i],url));
                    if (!quiet) displayMessage(this.mergestatus.format([tids.length,out.length-tids.length]));
                }
            }
        }
        return out;
    },
    formatItem: function(s,f,t,u,fields) {
        if (f==this.type_TW)
            var r=s.getSaver().externalizeTiddler(s,t);
        if (f==this.type_PS)
            var r=this.pureStoreTiddler.format([t.title,s.getSaver().externalizeTiddler(s,t)]);
        if (f==this.type_NF)
            var r=this.newsFeedTiddler.format([t.saveToRss(u)]);
        if (f==this.type_TX)
            var r=this.plainTextTiddler.format([t.title, t.created.toLocaleString(), t.modified.toLocaleString(),
                t.modifier, String.encodeTiddlyLinkList(t.tags), t.text]);
        if (f==this.type_CS) {
            function toCSV(t) { return '&quot;'+t.replace(/&quot;/g,'&quot;&quot;')+'&quot;'; } // always encode CSV
            var out=[ toCSV(t.title), toCSV(t.created.toLocaleString()), toCSV(t.modified.toLocaleString()),
                toCSV(t.modifier), toCSV(String.encodeTiddlyLinkList(t.tags)), toCSV(t.text) ];
            for (var f in fields) out.push(toCSV(t.fields[f]||''));
            var r=out.join(',');
        }
        return r||'';
    }
};
//}}}
//{{{
// automatically add saveAs to backstage
config.tasks.saveAs = {
    text: 'saveAs',
    tooltip: config.macros.saveAs.prompt,
    action: function(){ clearMessage(); config.macros.saveAs.go(); }
}
config.backstageTasks.splice(config.backstageTasks.indexOf('save')+1,0,'saveAs');
//}}}</pre>
</div>
<div title="SaveBackups" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="features options">
<pre>This is one of the InterfaceOptions you can use to customize TiddlyWiki. It determines whether TiddlyWiki creates a backup file each time you SaveChanges. I'd suggest keeping it switched on for safety!</pre>
</div>
<div title="SaveChanges" creator="psd" modifier="jermolene" created="201102111107" modified="201111031825" tags="features gettingstarted instructions">
<pre>If you've followed the appropriate [[Downloading]] guidelines, then you can save your changes as you go along. (AutoSave makes this easy).

It's important to save changes using ~TiddlyWiki's built in saving functionality (rather than the browser's 'Save As' function - [[here's why|SaveUnpredictabilities]]). Your local version of ~TiddlyWiki will have a button on the right hand side that says 'save changes' - that's the button you'll need to use.

It's worthwhile configuring your backup settings. You can edit the AdvancedOptions to decide when backups are made and where they're saved.

If you're still experiencing problems, the following links will help:
*General guidance on FireFox, InternetExplorer, [[Opera]], [[Camino]] or [[Safari]]
* if you're using InternetExplorer on Windows you might run into XP ServicePack2Problems or VistaIssues
</pre>
</div>
<div title="SaveCloseTiddlerPlugin" modifier="SDM" created="201012180331" tags="systemConfig excludeLists">
<pre>/***
|Name:|SaveCloseTiddlerPlugin|
|Description:|Provides two extra toolbar commands, saveCloseTiddler and cancelCloseTiddler|
|Version:|3.0 ($Rev: 5502 $)|
|Date:|$Date: 2008-06-10 23:31:39 +1000 (Tue, 10 Jun 2008) $|
|Source:|http://mptw.tiddlyspot.com/#SaveCloseTiddlerPlugin|
|Author:|Simon Baird &lt;simon.baird@gmail.com&gt;|
|License:|http://mptw.tiddlyspot.com/#TheBSDLicense|
To use these you must add them to the tool bar in your EditTemplate
***/
//{{{
merge(config.commands,{

    saveCloseTiddler: {
        text: 'done/close',
        tooltip: 'Save changes to this tiddler and close it',
        handler: function(ev,src,title) {
            var closeTitle = title;
            var newTitle = story.saveTiddler(title,ev.shiftKey);
            if (newTitle)
                closeTitle = newTitle;
            return config.commands.closeTiddler.handler(ev,src,closeTitle);
        }
    },

    cancelCloseTiddler: {
        text: 'cancel/close',
        tooltip: 'Undo changes to this tiddler and close it',
        handler: function(ev,src,title) {
            // the same as closeTiddler now actually
            return config.commands.closeTiddler.handler(ev,src,title);
        }
    }

});

//}}}</pre>
</div>
<div title="SaveEmptyTemplate" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="features options">
<pre>This causes a blank, template TiddlyWiki to be saved alongside your file when you SaveChanges. It's intended to help people who are distributing TiddlyWikiAdaptations, and isn't needed when you're an end-user of TiddlyWiki.

The template TiddlyWiki is called 'empty.html'.</pre>
</div>
<div title="SaveTiddlerCommand" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="commands">
<pre>Saves any pending edits to the current tiddler, and switches it to the default view. It is used with the ToolbarMacro like this:
{{{
&lt;&lt;toolbar saveTiddler&gt;&gt;
}}}</pre>
</div>
<div title="SaveUnpredictabilities" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="issues troubleshooting">
<pre>Several people have reported problems with reusing TiddlyWiki when they have used the File/Save command of their browser to save it. The issue is that some browsers (notably FireFox) don't save the text of the HTML file exactly as it appears on the server, but rather save a snapshot of the current state of the page. In the case of a highly dynamic page like TiddlyWiki, this leads to all sorts of peculiarness...

TiddlyWiki now displays a warning if it thinks that it has been saved wrongly.</pre>
</div>
<div title="Savor" modifier="SDM" created="201004120330" modified="201206181948" book_key="">
<pre>* &lt;&lt;Bbl 1Cor 1:18 &quot;&quot; note &gt;&gt;.</pre>
</div>
<div title="ScriptrViewTemplate" modifier="SDM" created="201211092042" modified="201211222313" tags="template excludeLists" book_key="">
<pre>&lt;!--{{{--&gt;
&lt;div class='toolbar' macro='toolbar [[ToolbarCommands::ViewToolbar]]'&gt;&lt;/div&gt;
&lt;span class='title' macro='view title'&gt;&lt;/span&gt;
&lt;!-- &lt;div class='subtitle fine'&gt;
&lt;span macro='view modifier link'&gt;&lt;/span&gt;, &lt;span macro='view modified date'&gt;&lt;/span&gt; (&lt;span macro='message views.wikified.createdPrompt'&gt;&lt;/span&gt; &lt;span macro='view created date'&gt;&lt;/span&gt;)&lt;/div&gt; --&gt;
&lt;div class='subtitle fine'&gt;
&lt;!-- &lt;span macro='view modified date'&gt;&lt;/span&gt; --&gt; &lt;/div&gt;
&lt;div class='tagClear'&gt;&lt;/div&gt;
&lt;!--- &lt;div class='tagging' macro='tagging'&gt;&lt;/div&gt;
&lt;div class='tagged' macro='tags'&gt;&lt;/div&gt;  //SDM --&gt;
&lt;div class='tagged'&gt;&lt;span&gt;&lt;span style='margin: 0px 8px;' macro=&quot;BblProx p&quot;&gt;&lt;/span&gt;&lt;span style='margin: 0px 8px;' macro=&quot;BblMatchNote&quot;&gt;&lt;/span&gt;&lt;span style='margin: 0px 8px;' macro=&quot;BblProx n&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class='viewer' macro='view text wikified'&gt;&lt;/div&gt;
&lt;div class='tagClear'&gt;&lt;/div&gt;
&lt;div class='toolbar' style='line-height:100%;margin-top:.5em;'&gt;&lt;a href=&quot;javascript:;&quot;
    onclick=&quot;window.scrollTo(0,ensureVisible(story.findContainingTiddler(this)));return false;&quot;
    onmouseover=&quot;this.title='scroll to top of '+story.findContainingTiddler(this).getAttribute('tiddler')&quot;&gt;&amp;#x25b2;&lt;/a&gt;
&lt;/div&gt;
&lt;div class='tagClear'&gt;&lt;/div&gt;
&lt;!--}}}--&gt;</pre>
</div>
<div title="Scripture" modifier="SDM" created="201004120330" modified="201211190422" book_key="">
<pre>* //Bible//, [[Book]]
* &lt;&lt;Bbl Act 17:11 &gt;&gt;, the reception of the Bereans.
!!! the glory of the Bible
* John Stott:  &quot;Men spoke and God spoke.  Men spoke from God (&lt;&lt;Bbl 2Pt 1:21 &gt;&gt;) and God spoke through men (&lt;&lt;Bbl Heb 1:1 &gt;&gt;).&quot;
* (August 2012) I imagine the glory of the Bible as a large spider web.  My view is partly obscured by some nearby leaves; this is like areas of the Scripture where the meaning remains mysterious or inscrutable.  I can see a few places where strands are cross-crossed instead of parallel; this is like the imperfections we can attribute to scribal errors.  But the overall spectacle is fascinating, compelling; and if the person next to me proposed it were nothing but a heap of unordered threads, I would dismiss the idea without a second thought.</pre>
</div>
<div title="ScrollBox" modifier="SDM" created="200603121507" modified="201211220119" tags="macro excludeLists" book_key="">
<pre>/%
|Name|ScrollBox|
|Source|http://www.TiddlyTools.com/#ScrollBox|
|Version|1.0.0|
|Author|Eric Shulman - ELS Design Studios|
|License|http://www.TiddlyTools.com/#LegalStatements &lt;br&gt;and [[Creative Commons Attribution-ShareAlike 2.5 License|http://creativecommons.org/licenses/by-sa/2.5/]]|
|~CoreVersion|2.1|
|Type|transcluded wiki syntax|
|Requires||
|Overrides||
|Description|display the contents of a tiddler in a fixed-height scrolling area|
%//%

Usage: &lt;&lt;tiddler ScrollBox with: TiddlerName height&gt;&gt;

%/@@display:block;height:$2;overflow:auto;&lt;&lt;tiddler $1&gt;&gt;
@@@@display:block;text-align:right;^^scroll for more...^^@@</pre>
</div>
<div title="Scruples" modifier="SDM" created="201211121921" book_key="">
<pre>* [[Conscience]]</pre>
</div>
<div title="Search" creator="psd" modifier="jermolene" created="201102111107" modified="201111031649">
<pre>The default version of ~TiddlyWiki includes basic search functionality. When a search term is entered, all tiddlers that contain this term are opened, with the search term highlighted wherever it appears.

However, using the [[plugin architecture|Plugins]] of ~TiddlyWiki, the [[community|Help and Support]] has written a number of search plugins which can be installed on your local ~TiddlyWiki files easily. The most popular search plugins are:
*Eric Shulman's ~SearchOptionsPlugin - a highly configurable plugin that produces a list of tiddler titles with options for advanced searches. Available at http://www.TiddlyTools.com/#SearchOptionsPlugin
*Udo Borkowski's ~YourSearchPlugin - opens the search results in a large iFrame in the same style as Google (result, then synopsis). Available at http://tiddlywiki.abego-software.de/
*Frederik Dohr's ~SimpleSearchPlugin (which this site is using) - copy and paste the code on [[this page|http://svn.tiddlywiki.org/Trunk/contributors/FND/plugins/SimpleSearchPlugin.js]] into a new tiddler, tag the tiddler with systemConfig, and save / re-open your ~TiddlyWiki.

</pre>
</div>
<div title="SearchOptions" modifier="SDM" created="201211220201" modified="201211230141" tags="macro menu excludeLists" book_key="">
<pre>search in:
  {{nowrap{&lt;&lt;option chkSearchTitles&gt;&gt;titles &lt;&lt;option chkSearchText&gt;&gt;text &lt;&lt;option chkSearchTags&gt;&gt;tags}}} /%
%/{{nowrap{&lt;&lt;option chkSearchFields&gt;&gt;fields &lt;&lt;option chkSearchShadows&gt;&gt;shadows}}}
----
  {{nowrap{&lt;&lt;option chkCaseSensitiveSearch&gt;&gt;case-sensitive}}} /%
%/{{nowrap{&lt;&lt;option chkRegExpSearch&gt;&gt;match text patterns}}}
  {{nowrap{&lt;&lt;option chkIncrementalSearch&gt;&gt;key-by-key search:}}} /%
    %/{{threechar smallform nowrap{&lt;&lt;option txtIncrementalSearchMin&gt;&gt; or more characters}}} /%
    %/{{threechar smallform nowrap{&lt;&lt;option txtIncrementalSearchDelay&gt;&gt; msec delay}}}&lt;hr&gt;
  {{nowrap{&lt;&lt;option chkSearchList&gt;&gt;show results in a list &amp;nbsp; &amp;nbsp;}}} /%
%/{{nowrap{&lt;&lt;option chkSearchListTiddler&gt;&gt;save list in ''[[SearchResults]]''}}}
  {{nowrap{&lt;&lt;option chkSearchTitlesFirst&gt;&gt;show title matches first}}} /%
%/{{nowrap{&lt;&lt;option chkSearchByDate&gt;&gt;sort results by date}}} /%
%/{{nowrap{&lt;&lt;option chkSearchHighlight&gt;&gt;highlight matching text}}}
----
{{nowrap{&lt;&lt;option chkSearchOpenTiddlers&gt;&gt;search open tiddlers only}}}
{{nowrap{&lt;&lt;option chkSearchExcludeTags&gt;&gt;exclude tiddlers tagged with:}}}
{{editor{&lt;&lt;option txtSearchExcludeTags&gt;&gt;}}}</pre>
</div>
<div title="SearchOptionsPlugin" modifier="ELSDesignStudios" created="200510181742" tags="systemConfig excludeLists">
<pre>/***
|Name|SearchOptionsPlugin|
|Source|http://www.TiddlyTools.com/#SearchOptionsPlugin|
|Documentation|http://www.TiddlyTools.com/#SearchOptionsPluginInfo|
|Version|3.0.5|
|Author|Eric Shulman - ELS Design Studios|
|License|http://www.TiddlyTools.com/#LegalStatements &lt;br&gt;and [[Creative Commons Attribution-ShareAlike 2.5 License|http://creativecommons.org/licenses/by-sa/2.5/]]|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides|Story.prototype.search, TiddlyWiki.prototype.search, config.macros.search.onKeyPress|
|Options|##Configuration|
|Description|extend core search function with additional user-configurable options|
Adds extra options to core search function including selecting which data items to search, enabling/disabling incremental key-by-key searches, and generating a ''list of matching tiddlers'' instead of immediately displaying all matches.  This plugin also adds syntax for rendering 'search links' within tiddler content to embed one-click searches using pre-defined 'hard-coded' search terms.
!!!!!Documentation
&gt;see [[SearchOptionsPluginInfo]]
!!!!!Configuration
&lt;&lt;&lt;
Search in:
&lt;&lt;option chkSearchTitles&gt;&gt; titles &lt;&lt;option chkSearchText&gt;&gt; text &lt;&lt;option chkSearchTags&gt;&gt; tags &lt;&lt;option chkSearchFields&gt;&gt; fields &lt;&lt;option chkSearchShadows&gt;&gt; shadows
&lt;&lt;option chkSearchHighlight&gt;&gt; Highlight matching text in displayed tiddlers
&lt;&lt;option chkSearchList&gt;&gt; Show list of matches
&lt;&lt;option chkSearchListTiddler&gt;&gt; Write list to [[SearchResults]] tiddler
&lt;&lt;option chkSearchTitlesFirst&gt;&gt; Show title matches first
&lt;&lt;option chkSearchByDate&gt;&gt; Sort matching tiddlers by modification date (most recent first)
&lt;&lt;option chkIncrementalSearch&gt;&gt; Incremental key-by-key search: {{twochar{&lt;&lt;option txtIncrementalSearchMin&gt;&gt;}}} or more characters,  {{threechar{&lt;&lt;option txtIncrementalSearchDelay&gt;&gt;}}} msec delay
&lt;&lt;option chkSearchOpenTiddlers&gt;&gt; Search only in tiddlers that are currently displayed
&lt;&lt;option chkSearchExcludeTags&gt;&gt; Exclude tiddlers tagged with: &lt;&lt;option txtSearchExcludeTags&gt;&gt;
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2009.01.16 [3.0.5] added chkSearchOpenTiddlers option to limit searches to displayed tiddlers only
|please see [[SearchOptionsPluginInfo]] for additional revision details|
2005.10.18 [1.0.0] Initial Release
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.SearchOptionsPlugin= {major: 3, minor: 0, revision: 5, date: new Date(2009,1,16)};

var co=config.options; // abbrev
if (co.chkSearchTitles===undefined) co.chkSearchTitles=true;
if (co.chkSearchText===undefined) co.chkSearchText=true;
if (co.chkSearchTags===undefined) co.chkSearchTags=true;
if (co.chkSearchFields===undefined) co.chkSearchFields=true;
if (co.chkSearchTitlesFirst===undefined) co.chkSearchTitlesFirst=true;
if (co.chkSearchList===undefined) co.chkSearchList=true;
if (co.chkSearchHighlight===undefined) co.chkSearchHighlight=true;
if (co.chkSearchListTiddler===undefined) co.chkSearchListTiddler=false;
if (co.chkSearchByDate===undefined) co.chkSearchByDate=false;
if (co.chkIncrementalSearch===undefined) co.chkIncrementalSearch=true;
if (co.chkSearchShadows===undefined) co.chkSearchShadows=true;
if (co.txtIncrementalSearchDelay===undefined) co.txtIncrementalSearchDelay=500;
if (co.txtIncrementalSearchMin===undefined) co.txtIncrementalSearchMin=3;
if (co.chkSearchOpenTiddlers===undefined) co.chkSearchOpenTiddlers=false;
if (co.chkSearchExcludeTags===undefined) co.chkSearchExcludeTags=true;
if (co.txtSearchExcludeTags===undefined) co.txtSearchExcludeTags=&quot;excludeSearch&quot;;
if (config.macros.search.reportTitle==undefined)
    config.macros.search.reportTitle=&quot;SearchResults&quot;; // note: not a cookie!
config.macros.search.label+=&quot;\xa0&quot;; // a little bit of space just because it looks better
//}}}
// // searchLink: {{{[search[text to find]] OR [search[text to display|text to find]]}}}
//{{{
config.formatters.push( {
    name: &quot;searchLink&quot;,
    match: &quot;\\[search\\[&quot;,
    lookaheadRegExp: /\[search\[(.*?)(?:\|(.*?))?\]\]/mg,
    prompt: &quot;search for: '%0'&quot;,
    handler: function(w)
    {
        this.lookaheadRegExp.lastIndex = w.matchStart;
        var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
        if(lookaheadMatch &amp;&amp; lookaheadMatch.index == w.matchStart) {
            var label=lookaheadMatch[1];
            var text=lookaheadMatch[2]||label;
            var prompt=this.prompt.format([text]);
            var btn=createTiddlyButton(w.output,label,prompt,
                function(){story.search(this.getAttribute(&quot;searchText&quot;))},&quot;searchLink&quot;);
            btn.setAttribute(&quot;searchText&quot;,text);
            w.nextMatch = this.lookaheadRegExp.lastIndex;
        }
    }
});
//}}}
// // incremental search uses option settings instead of hard-coded delay and minimum input values
//{{{
var fn=config.macros.search.onKeyPress;
fn=fn.toString().replace(/500/g, &quot;config.options.txtIncrementalSearchDelay||500&quot;);
fn=fn.toString().replace(/&gt; 2/g, &quot;&gt;=(config.options.txtIncrementalSearchMin||3)&quot;);
eval(&quot;config.macros.search.onKeyPress=&quot;+fn);
//}}}
// // REPLACE story.search() for option to &quot;show search results in a list&quot;
//{{{
Story.prototype.search = function(text,useCaseSensitive,useRegExp)
{
    var co=config.options; // abbrev
    var re=new RegExp(useRegExp ? text : text.escapeRegExp(),useCaseSensitive ? &quot;mg&quot; : &quot;img&quot;);
    if (config.options.chkSearchHighlight) highlightHack=re;
    var matches = store.search(re,co.chkSearchByDate?&quot;modified&quot;:&quot;title&quot;,&quot;&quot;);
    if (co.chkSearchByDate) matches=matches.reverse(); // most recent first
    var q = useRegExp ? &quot;/&quot; : &quot;'&quot;;
    clearMessage();
    if (!matches.length) {
        if (co.chkSearchListTiddler) discardSearchResults();
        displayMessage(config.macros.search.failureMsg.format([q+text+q]));
    } else {
        if (co.chkSearchList||co.chkSearchListTiddler)
            reportSearchResults(text,matches);
        else {
            var titles = []; for(var t=0; t&lt;matches.length; t++) titles.push(matches[t].title);
            this.closeAllTiddlers(); story.displayTiddlers(null,titles);
            displayMessage(config.macros.search.successMsg.format([matches.length, q+text+q]));
        }
    }
    highlightHack = null;
}
//}}}
// // REPLACE store.search() for enhanced searching/sorting options
//{{{
TiddlyWiki.prototype.search = function(searchRegExp,sortField,excludeTag)
{
    var co=config.options; // abbrev
    var tids = this.reverseLookup(&quot;tags&quot;,excludeTag,false,sortField);
    var opened=[]; story.forEachTiddler(function(tid,elem){opened.push(tid);});

    // eliminate tiddlers tagged with excluded tags
    if (co.chkSearchExcludeTags&amp;&amp;co.txtSearchExcludeTags.length) {
        var ex=co.txtSearchExcludeTags.readBracketedList();
        var temp=[]; for(var t=tids.length-1; t&gt;=0; t--)
            if (!tids[t].tags.containsAny(ex)) temp.push(tids[t]);
        tids=temp;
    }

    // scan for matching titles first...
    var results = [];
    if (co.chkSearchTitles) {
        for(var t=0; t&lt;tids.length; t++) {
            if (co.chkSearchOpenTiddlers &amp;&amp; !opened.contains(tids[t].title)) continue;
            if(tids[t].title.search(searchRegExp)!=-1) results.push(tids[t]);
        }
        if (co.chkSearchShadows)
            for (var t in config.shadowTiddlers) {
                if (co.chkSearchOpenTiddlers &amp;&amp; !opened.contains(t)) continue;
                if ((t.search(searchRegExp)!=-1) &amp;&amp; !store.tiddlerExists(t))
                    results.push((new Tiddler()).assign(t,config.shadowTiddlers[t]));
            }
    }
    // then scan for matching text, tags, or field data
    for(var t=0; t&lt;tids.length; t++) {
        if (co.chkSearchOpenTiddlers &amp;&amp; !opened.contains(tids[t].title)) continue;
        if (co.chkSearchText &amp;&amp; tids[t].text.search(searchRegExp)!=-1)
            results.pushUnique(tids[t]);
        if (co.chkSearchTags &amp;&amp; tids[t].tags.join(&quot; &quot;).search(searchRegExp)!=-1)
            results.pushUnique(tids[t]);
        if (co.chkSearchFields &amp;&amp; store.forEachField!=undefined)
            store.forEachField(tids[t],
                function(tid,field,val) {
                    if (val.search(searchRegExp)!=-1) results.pushUnique(tids[t]);
                },
                true); // extended fields only
    }
    // then check for matching text in shadows
    if (co.chkSearchShadows)
        for (var t in config.shadowTiddlers) {
            if (co.chkSearchOpenTiddlers &amp;&amp; !opened.contains(t)) continue;
            if ((config.shadowTiddlers[t].search(searchRegExp)!=-1) &amp;&amp; !store.tiddlerExists(t))
                results.pushUnique((new Tiddler()).assign(t,config.shadowTiddlers[t]));
        }

    // if not 'titles first', or sorting by modification date,
    // re-sort results to so titles, text, tag and field matches are mixed together
    if(!sortField) sortField = &quot;title&quot;;
    var bySortField=function(a,b){
        if(a[sortField]==b[sortField])return(0);else return(a[sortField]&lt;b[sortField])?-1:+1;
    }
    if (!co.chkSearchTitlesFirst || co.chkSearchByDate) results.sort(bySortField);

    return results;
}
//}}}
// // HIJACK core {{{&lt;&lt;search&gt;&gt;}}} macro to add &quot;report&quot; and &quot;simple inline&quot; output
//{{{
config.macros.search.SOP_handler=config.macros.search.handler;
config.macros.search.handler = function(place,macroName,params)
{
    // if &quot;report&quot;, use SearchOptionsPlugin report generator for inline output
    if (params[1]&amp;&amp;params[1].substr(0,6)==&quot;report&quot;) {
        var keyword=params[0];
        var options=params[1].split(&quot;=&quot;)[1]; // split &quot;report=option+option+...&quot;
        var heading=params[2]?params[2].unescapeLineBreaks():&quot;&quot;;
        var matches=store.search(new RegExp(keyword.escapeRegExp(),&quot;img&quot;),&quot;title&quot;,&quot;excludeSearch&quot;);
        if (matches.length) wikify(heading+window.formatSearchResults(keyword,matches,options),place);
    } else if (params[1]) {
        var keyword=params[0];
        var heading=params[1]?params[1].unescapeLineBreaks():&quot;&quot;;
        var seperator=params[2]?params[2].unescapeLineBreaks():&quot;, &quot;;
        var matches=store.search(new RegExp(keyword.escapeRegExp(),&quot;img&quot;),&quot;title&quot;,&quot;excludeSearch&quot;);
        if (matches.length) {
            var out=[];
            for (var m=0; m&lt;matches.length; m++) out.push(&quot;[[&quot;+matches[m].title+&quot;]]&quot;);
            wikify(heading+out.join(seperator),place);
        }
    } else
        config.macros.search.SOP_handler.apply(this,arguments);
};
//}}}
// // SearchResults panel handling
//{{{
setStylesheet(&quot;.searchResults { padding:1em 1em 0 1em; }&quot;,&quot;searchResults&quot;); // matches std tiddler padding

config.macros.search.createPanel=function(text,matches,body) {

    function getByClass(e,c) { var d=e.getElementsByTagName(&quot;div&quot;);
        for (var i=0;i&lt;d.length;i++) if (hasClass(d[i],c)) return d[i]; }
    var panel=createTiddlyElement(null,&quot;div&quot;,&quot;searchPanel&quot;,&quot;searchPanel&quot;);
    this.renderPanel(panel,text,matches,body);
    var oldpanel=document.getElementById(&quot;searchPanel&quot;);
    if (!oldpanel) { // insert new panel just above tiddlers
        var da=document.getElementById(&quot;displayArea&quot;);
        da.insertBefore(panel,da.firstChild);
    } else { // if panel exists
        var oldwrap=getByClass(oldpanel,&quot;searchResults&quot;);
        var newwrap=getByClass(panel,&quot;searchResults&quot;);
        // if no prior content, just insert new content
        if (!oldwrap) oldpanel.insertBefore(newwrap,null);
        else {  // swap search results content but leave containing panel intact
            oldwrap.style.display='block'; // unfold wrapper if needed
            var i=oldwrap.getElementsByTagName(&quot;input&quot;)[0]; // get input field
            if (i) { var pos=this.getCursorPos(i); i.onblur=null; } // get cursor pos, ignore blur
            oldpanel.replaceChild(newwrap,oldwrap);
            panel=oldpanel; // use existing panel
        }
    }
    this.showPanel(true,pos);
    return panel;
}

config.macros.search.renderPanel=function(panel,text,matches,body) {

    var wrap=createTiddlyElement(panel,&quot;div&quot;,null,&quot;searchResults&quot;);
    wrap.onmouseover = function(e){ addClass(this,&quot;selected&quot;); }
    wrap.onmouseout = function(e){ removeClass(this,&quot;selected&quot;); }
    // create toolbar: &quot;open all&quot;, &quot;fold/unfold&quot;, &quot;close&quot;
    var tb=createTiddlyElement(wrap,&quot;div&quot;,null,&quot;toolbar&quot;);
    var b=createTiddlyButton(tb, &quot;open all&quot;, &quot;open all matching tiddlers&quot;, function() {
        story.displayTiddlers(null,this.getAttribute(&quot;list&quot;).readBracketedList()); return false; },&quot;button&quot;);
    var list=&quot;&quot;; for(var t=0;t&lt;matches.length;t++) list+='[['+matches[t].title+']] ';
    b.setAttribute(&quot;list&quot;,list);
    var b=createTiddlyButton(tb, &quot;fold&quot;, &quot;toggle display of search results&quot;, function() {
        config.macros.search.foldPanel(this); return false; },&quot;button&quot;);
    var b=createTiddlyButton(tb, &quot;close&quot;, &quot;dismiss search results&quot;, function() {
        config.macros.search.showPanel(false); return false; },&quot;button&quot;);
    createTiddlyText(createTiddlyElement(wrap,&quot;div&quot;,null,&quot;title&quot;),&quot;Search for: &quot;+text); // title
    wikify(body,createTiddlyElement(wrap,&quot;div&quot;,null,&quot;viewer&quot;)); // report
    return panel;
}

config.macros.search.showPanel=function(show,pos) {
    var panel=document.getElementById(&quot;searchPanel&quot;);
    var i=panel.getElementsByTagName(&quot;input&quot;)[0];
    i.onfocus=show?function(){config.macros.search.stayFocused(true);}:null;
    i.onblur=show?function(){config.macros.search.stayFocused(false);}:null;
    if (show &amp;&amp; panel.style.display==&quot;block&quot;) { // if shown, grab focus, restore cursor
        if (i&amp;&amp;this.stayFocused()) { i.focus(); this.setCursorPos(i,pos); }
        return;
    }
    if(!config.options.chkAnimate) {
        panel.style.display=show?&quot;block&quot;:&quot;none&quot;;
        if (!show) { removeChildren(panel); config.macros.search.stayFocused(false); }
    } else {
        var s=new Slider(panel,show,false,show?&quot;none&quot;:&quot;children&quot;);
        s.callback=function(e,p){e.style.overflow=&quot;visible&quot;;}
        anim.startAnimating(s);
    }
    return panel;
}

config.macros.search.foldPanel=function(button) {
    var d=document.getElementById(&quot;searchPanel&quot;).getElementsByTagName(&quot;div&quot;);
    for (var i=0;i&lt;d.length;i++) if (hasClass(d[i],&quot;viewer&quot;)) var v=d[i]; if (!v) return;
    var show=v.style.display==&quot;none&quot;;
    if(!config.options.chkAnimate)
        v.style.display=show?&quot;block&quot;:&quot;none&quot;;
    else {
        var s=new Slider(v,show,false,&quot;none&quot;);
        s.callback=function(e,p){e.style.overflow=&quot;visible&quot;;}
        anim.startAnimating(s);
    }
    button.innerHTML=show?&quot;fold&quot;:&quot;unfold&quot;;
    return false;
}

config.macros.search.stayFocused=function(keep) { // TRUE/FALSE=set value, no args=get value
    if (keep===undefined) return this.keepReportInFocus;
    this.keepReportInFocus=keep;
    return keep
}

config.macros.search.getCursorPos=function(i) {
    var s=0; var e=0; if (!i) return { start:s, end:e };
    try {
        if (i.setSelectionRange) // FF
            { s=i.selectionStart; e=i.selectionEnd; }
        if (document.selection &amp;&amp; document.selection.createRange) { // IE
            var r=document.selection.createRange().duplicate();
            var len=r.text.length; s=0-r.moveStart('character',-100000); e=s+len;
        }
    }catch(e){};
    return { start:s, end:e };
}
config.macros.search.setCursorPos=function(i,pos) {
    if (!i||!pos) return; var s=pos.start; var e=pos.end;
    if (i.setSelectionRange) //FF
        i.setSelectionRange(s,e);
    if (i.createTextRange) // IE
        { var r=i.createTextRange(); r.collapse(true); r.moveStart(&quot;character&quot;,s); r.select(); }
}
//}}}
// // SearchResults report generation
// note: these functions are defined globally, so they can be more easily redefined to customize report formats//
//{{{
if (!window.reportSearchResults) window.reportSearchResults=function(text,matches)
{
    var cms=config.macros.search; // abbrev
    var body=window.formatSearchResults(text,matches);
    if (!config.options.chkSearchListTiddler) // show #searchResults panel
        window.scrollTo(0,ensureVisible(cms.createPanel(text,matches,body)));
    else { // write [[SearchResults]] tiddler
        var title=cms.reportTitle;
        var who=config.options.txtUserName;
        var when=new Date();
        var tags=&quot;excludeLists excludeSearch temporary&quot;;
        var tid=store.getTiddler(title); if (!tid) tid=new Tiddler();
        tid.set(title,body,who,when,tags);
        store.addTiddler(tid);
        story.closeTiddler(title);
        story.displayTiddler(null,title);
    }
}

if (!window.formatSearchResults) window.formatSearchResults=function(text,matches,opt)
{
    var body='';
    var title=config.macros.search.reportTitle
    var q = config.options.chkRegExpSearch ? &quot;/&quot; : &quot;'&quot;;
    if (!opt) var opt=&quot;all&quot;;
    var parts=opt.split(&quot;+&quot;);
    for (var i=0; i&lt;parts.length; i++) { var p=parts[i].toLowerCase();
        if (p==&quot;again&quot;||p==&quot;all&quot;)   body+=window.formatSearchResults_again(text,matches);
        if (p==&quot;summary&quot;||p==&quot;all&quot;) body+=window.formatSearchResults_summary(text,matches);
        if (p==&quot;list&quot;||p==&quot;all&quot;)    body+=window.formatSearchResults_list(text,matches);
        if (p==&quot;buttons&quot;||p==&quot;all&quot;) body+=window.formatSearchResults_buttons(text,matches);
    }
    return body;
}

if (!window.formatSearchResults_again) window.formatSearchResults_again=function(text,matches)
{
    var title=config.macros.search.reportTitle
    var body='';
    // search again
    body+='{{span{&lt;&lt;search &quot;'+text.replace(/&quot;/g,'&amp;#x22;')+'&quot;&gt;&gt; /%\n';
    body+='%/&lt;html&gt;&lt;input type=&quot;button&quot; value=&quot;search again&quot;';
    body+=' onclick=&quot;var t=this.parentNode.parentNode.getElementsByTagName(\'input\')[0];';
    body+=' config.macros.search.doSearch(t); return false;&quot;&gt;';
    body+=' &lt;a href=&quot;javascript:;&quot; onclick=&quot;';
    body+=' var e=this.parentNode.nextSibling;';
    body+=' var show=e.style.display!=\'block\';';
    body+=' if(!config.options.chkAnimate) e.style.display=show?\'block\':\'none\';';
    body+=' else anim.startAnimating(new Slider(e,show,false,\'none\'));';
    body+=' return false;&quot;&gt;options...&lt;/a&gt;';
    body+='&lt;/html&gt;@@display:none;border-left:1px dotted;margin-left:1em;padding:0;padding-left:.5em;font-size:90%;/%\n';
    body+=' %/&lt;&lt;option chkSearchTitles&gt;&gt;titles /%\n';
    body+=' %/&lt;&lt;option chkSearchText&gt;&gt;text /%\n';
    body+=' %/&lt;&lt;option chkSearchTags&gt;&gt;tags /%\n';
    body+=' %/&lt;&lt;option chkSearchFields&gt;&gt;fields /%\n';
    body+=' %/&lt;&lt;option chkSearchShadows&gt;&gt;shadows\n';
    body+=' &lt;&lt;option chkCaseSensitiveSearch&gt;&gt;case-sensitive /%\n';
    body+=' %/&lt;&lt;option chkRegExpSearch&gt;&gt;text patterns /%\n';
    body+=' %/&lt;&lt;option chkSearchByDate&gt;&gt;sorted by date\n';
    body+=' &lt;&lt;option chkSearchHighlight&gt;&gt; highlight matching text in displayed tiddlers\n';
    body+=' &lt;&lt;option chkIncrementalSearch&gt;&gt;incremental key-by-key search: /%\n';
    body+=' %/{{twochar{&lt;&lt;option txtIncrementalSearchMin&gt;&gt;}}} or more characters, /%\n';
    body+=' %/{{threechar{&lt;&lt;option txtIncrementalSearchDelay&gt;&gt;}}} msec delay\n';
    body+=' &lt;&lt;option chkSearchOpenTiddlers&gt;&gt; search only in tiddlers that are currently displayed\n';
    body+=' &lt;&lt;option chkSearchExcludeTags&gt;&gt;exclude tiddlers tagged with:\n';
    body+=' {{editor{&lt;&lt;option txtSearchExcludeTags&gt;&gt;}}}/%\n';
    body+='%/@@}}}\n\n';
    return body;
}

if (!window.formatSearchResults_summary) window.formatSearchResults_summary=function(text,matches)
{
    // summary: nn tiddlers found matching '...', options used
    var body='';
    var co=config.options; // abbrev
    var title=config.macros.search.reportTitle
    var q = co.chkRegExpSearch ? &quot;/&quot; : &quot;'&quot;;
    body+=&quot;''&quot;+config.macros.search.successMsg.format([matches.length,q+&quot;{{{&quot;+text+&quot;}}}&quot;+q])+&quot;''\n&quot;;
    var opts=[];
    if (co.chkSearchTitles) opts.push(&quot;titles&quot;);
    if (co.chkSearchText) opts.push(&quot;text&quot;);
    if (co.chkSearchTags) opts.push(&quot;tags&quot;);
    if (co.chkSearchFields) opts.push(&quot;fields&quot;);
    if (co.chkSearchShadows) opts.push(&quot;shadows&quot;);
    if (co.chkSearchOpenTiddlers) body+=&quot;^^//search limited to displayed tiddlers only//^^\n&quot;;
    body+=&quot;~~&amp;nbsp; searched in &quot;+opts.join(&quot; + &quot;)+&quot;~~\n&quot;;
    body+=(co.chkCaseSensitiveSearch||co.chkRegExpSearch?&quot;^^&amp;nbsp; using &quot;:&quot;&quot;)
        +(co.chkCaseSensitiveSearch?&quot;case-sensitive &quot;:&quot;&quot;)
        +(co.chkRegExpSearch?&quot;pattern &quot;:&quot;&quot;)
        +(co.chkCaseSensitiveSearch||co.chkRegExpSearch?&quot;matching^^\n&quot;:&quot;&quot;);
    return body;
}

if (!window.formatSearchResults_list) window.formatSearchResults_list=function(text,matches)
{
    // bullet list of links to matching tiddlers
    var body='';
    var pattern=co.chkRegExpSearch?text:text.escapeRegExp();
    var sensitive=co.chkCaseSensitiveSearch?&quot;mg&quot;:&quot;img&quot;;
    var link='{{tiddlyLinkExisting{&lt;html&gt;&lt;nowiki&gt;&lt;a href=&quot;javascript:;&quot; onclick=&quot;'
        +'if(config.options.chkSearchHighlight)'
        +'  highlightHack=new RegExp(\x27'+pattern+'\x27,\x27'+sensitive+'\x27);'
        +'story.displayTiddler(null,\x27%0\x27);'
        +'highlightHack = null; return false;'
        +'&quot; title=&quot;%2&quot;&gt;%1&lt;/a&gt;&lt;/html&gt;}}}';
    for(var t=0;t&lt;matches.length;t++) {
        body+=&quot;* &quot;;
        if (config.options.chkSearchByDate)
            body+=matches[t].modified.formatString('YYYY.0MM.0DD 0hh:0mm')+&quot; &quot;;
        var title=matches[t].title;
        var fixup=title.replace(/'/g,&quot;\\x27&quot;).replace(/&quot;/g,&quot;\\x22&quot;);
        var tid=store.getTiddler(title);
        var tip=tid?tid.getSubtitle():''; tip=tip.replace(/&quot;/g,&quot;&amp;quot;&quot;);
        body+=link.format([fixup,title,tip])+'\n';
    }
    return body;
}

if (!window.formatSearchResults_buttons) window.formatSearchResults_buttons=function(text,matches)
{
    // embed buttons only if writing SearchResults to tiddler
    if (!config.options.chkSearchListTiddler) return &quot;&quot;;
    // &quot;open all&quot; button
    var title=config.macros.search.reportTitle;
    var body=&quot;&quot;;
    body+=&quot;@@diplay:block;&lt;html&gt;&lt;input type=\&quot;button\&quot; href=\&quot;javascript:;\&quot; &quot;
        +&quot;onclick=\&quot;story.displayTiddlers(null,[&quot;;
    for(var t=0;t&lt;matches.length;t++)
        body+=&quot;'&quot;+matches[t].title.replace(/\'/mg,&quot;\\'&quot;)+&quot;'&quot;+((t&lt;matches.length-1)?&quot;, &quot;:&quot;&quot;);
    body+=&quot;],1);\&quot; accesskey=\&quot;O\&quot; value=\&quot;open all matching tiddlers\&quot;&gt;&lt;/html&gt; &quot;;
    // &quot;discard SearchResults&quot; button
    body+=&quot;&lt;html&gt;&lt;input type=\&quot;button\&quot; href=\&quot;javascript:;\&quot; &quot;
        +&quot;onclick=\&quot;discardSearchResults()\&quot; value=\&quot;discard &quot;+title+&quot;\&quot;&gt;&lt;/html&gt;&quot;;
    body+=&quot;@@\n&quot;;
    return body;
}

if (!window.discardSearchResults) window.discardSearchResults=function()
{
    // remove the tiddler
    story.closeTiddler(config.macros.search.reportTitle);
    store.deleteTiddler(config.macros.search.reportTitle);
    store.notify(config.macros.search.reportTitle,true);
}
//}}}</pre>
</div>
<div title="Seasons" modifier="SDM" created="201004120330">
<pre>* &lt;&lt;Bbl Ecc 3:1 &gt;&gt;-8 , also Moses' invocation concerning the ark of God in &lt;&lt;Bbl Num 10:35 &gt;&gt;-36 .
* of refreshing:     &lt;&lt;Bbl Act 3:19 &gt;&gt; (perhaps referring to a whole ethnic hope); see 1Kng 17:6,19:5-8; &lt;&lt;Bbl Mt 4:11 &gt;&gt;; &lt;&lt;Bbl Mk 1:13 &gt;&gt;.
* //times//</pre>
</div>
<div title="Secrecy" modifier="SDM" created="201004120330" modified="201211162130" book_key="">
<pre>* Negative sense.
** For secrecy as concealment by God, see [[Invisible-Visible]]
** For secret faith, see [[SecretBeliever]]
* Evil expectation that God will not see
* [[Deceit]]
* &lt;&lt;Bbl Is 28:15 abbr &gt;&gt;, &lt;&lt;Bbl Is 29:15 &gt;&gt;, &lt;&lt;Bbl Jer 23:24 &gt;&gt;, &lt;&lt;Bbl Jer 49:10 &gt;&gt;, &lt;&lt;Bbl Ez 9:9 &gt;&gt;, &lt;&lt;Bbl Ez 8:12 &gt;&gt;
* &lt;&lt;Bbl Eph 5:12 &gt;&gt;
* {{anti{[[God-Sees-All]]}}}
* {{anti{[[Openness]]}}}</pre>
</div>
<div title="SecretBeliever" modifier="SDM" created="201211162130" book_key="">
<pre>!!! Secret faith in the Lord
* &lt;&lt;Bbl Jn 3:1 &gt;&gt; -- Nicodemus by night
* &lt;&lt;Bbl Jn 19:38 &gt;&gt;
* //Many believed, but secretly for fear of the Jews.//</pre>
</div>
<div title="Security" modifier="SDM" created="201010251537" modified="201211250343" tags="House" book_key="">
<pre>* [[Assurance]]
* [[Perseverance]], [[Faithfulness]]
* &lt;&lt;Bbl Ex 4:19 &gt;&gt;, &lt;&lt;Bbl Mt 2:20 &gt;&gt;
* &lt;&lt;Bbl Ps 68:19 &gt;&gt;-20  -- Escapes from Death
* &lt;&lt;Bbl Pr 18:10 &gt;&gt; -- a strong tower
* //safety, protection//
* Results in [[Confidence]] and [[Freedom]]
* {{anti{[[Fear]], [[Need]], [[Mistreatment]], [[Privation]], [[Persecution]]}}}
* When the walls of a city are broken down, no place is safe.  When there is a break anywhere, safety is reduced.  &lt;&lt;Bbl Pr 25:28&gt;&gt;</pre>
</div>
<div title="Seed" modifier="SDM" created="201004120330" modified="201211250029" tags="Living-Plant" book_key="">
<pre>* &lt;&lt;Bbl Is 6:13 &gt;&gt;; &lt;&lt;Bbl Hag 6:19 &gt;&gt;, &lt;&lt;Bbl Zech 8:12 &gt;&gt;; &lt;&lt;Bbl Jn 12:24 &gt;&gt;; &lt;&lt;Bbl 1Pt 1:23 &gt;&gt;; &lt;&lt;Bbl 1Jn 3:19 &gt;&gt;
* //of the woman// -- signals the virgin conception.  //Offspring//, [[Procreation]]
* [[Faith]].  5000-year-old corn seed found in King Tutankhamen's tomb that was planted and yielded several harvests (per Jimmy Darnell).  See &lt;&lt;Bbl Lk 17:6 &quot;&quot; note &gt;&gt;.
* Plant life meets animal life, as God gives seed for food for the animal</pre>
</div>
<div title="Seeking" modifier="SDM" created="201101102209">
<pre>* [[Coveting]], //search, desire.//
* &lt;&lt;Bbl Lk 15:1&gt;&gt;ff -- Parables of missing items.
* //Seek first God's kingdom ...//
* //...to seek and save what was lost.//</pre>
</div>
<div title="Selection" modifier="SDM" created="201012140548">
<pre>[[Partiality]]
!!!! Limited [[Atonement]]
* The term predestined:  &lt;&lt;Bbl Eph 1:4 &gt;&gt;-5 , &lt;&lt;Bbl Rom 8:30 &gt;&gt;
* Christ is selective:  &lt;&lt;Bbl Jn 17:9 &gt;&gt;.
* As you enter, you see //whosoever//; and when you look back, you see //elected//.  Source is Earl Rabamacher(?)</pre>
</div>
<div title="Self-Justification" modifier="SDM" created="201208032047" modified="201208032053" book_key="">
<pre>[img[Religion vs Gospel|scott_wiki_docs/Religion-vs-Gospel.jpg]]
* [[Legalism]]</pre>
</div>
<div title="SelfContained" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="concepts features">
<pre>One of the neatest features of TiddlyWiki is that it is entirely self-contained in a single HTML file - even including graphics like the GradientMacro. The file contains the actual hypertext document, and the ~JavaScript, ~CascadingStyleSheets and HTML necessary to both view and edit it. This means that it is trivial to host a TiddlyWiki on a website, or to distribute one by email. And anyone with a reasonably recent web browser will be able to read and edit it.</pre>
</div>
<div title="SelfControl" modifier="SDM" created="201004120330" modified="201302121407" book_key="">
<pre>!!! definition
* E.T. Welch offers two-fold definition:
## Self control is control of the self:
### Living within [[Boundaries]]
### Thinking before acting -- [[ThoughtLife]]
## Self control is NOT:
### Emotional flatness or indifference
### Self-dependence
{{fyi{
Real self control depends entirely on having a new Self.
A new self is not a reward you receive for your self control.
}}}
{{fyi{
Self control can be a lifeline, a safety rail of protection; for where one's character may fail, self-control may hold the line against sin or dissipation of the {{anti{[[Flesh]]}}}.  Consider the practiced discipline of a soldier.
}}}
* The soldier, the athlete.
* &lt;&lt;Bbl Gal 5:22&gt;&gt;-23 -- Relates to [[Godliness]]
* &lt;&lt;Bbl 2Tim 1:7&gt;&gt; //power, love and self-control//
* &lt;&lt;Bbl 1Cor 9:24 &gt;&gt;-27 //I fight like that, as not beating the air...I buffet my body//
* &lt;&lt;Bbl 1Thes 5:4&gt;&gt;-11 Sons of light = self-controlled = focused (Gene Getz)
* Pr 16:32; 17:27
* &lt;&lt;Bbl 1Pt 4:1 &gt;&gt;, 7; &lt;&lt;Bbl 1Pt 5:8 &gt;&gt;
* Mind map Jan 2012
* Helps create [[Faithfulness]], [[Perseverance]] and [[Security]]
* Necessary to [[Holiness]]
!!! The Tongue
* [[Speech]]
* &lt;&lt;Bbl James 3:3 &gt;&gt;ff
* &lt;&lt;Bbl Pr 12:18 &gt;&gt;; &lt;&lt;Bbl Pr 15:2 &gt;&gt; //...speaks rashly...gushes out folly//
* &lt;&lt;Bbl Pr 10:10 &gt;&gt; //a chattering fool comes to ruin//
!!! Lack of self control
* &lt;&lt;Bbl 2Tim 3:1 &gt;&gt; paints a really scary picture.
* Mr. Toad is a study in lack of self-control.
* Samson is, as well.  But discover his maturation in &lt;&lt;Bbl Judges 16:22 &quot;&quot; note &gt;&gt;
!!! White knuckling
* &lt;&lt;Bbl Ps 39:1 &gt;&gt;-3
* If you try to do well in  your own power, th epower of the {{anti{[[Flesh]]}}}, you are fighting God; you are living in a double-bind.  Tim Shoemaker cites &lt;&lt;Bbl Gal 5:16&gt;&gt;-18 and proceeds to electrocute a pickle.
* Shows inadequacy when dealing with rationalizations for sinful behavior.  {{anti{[[Weakness]]}}}.</pre>
</div>
<div title="Separation" modifier="SDM" created="201004120330" modified="201211160327" book_key="">
<pre>&lt;&lt;Bbl Ex 8:23 &gt;&gt;; &lt;&lt;Bbl Lv 18:3 &gt;&gt;-4 , &lt;&lt;Bbl Lv 20:22 &gt;&gt;-26 ; &lt;&lt;Bbl Num 23:9 &gt;&gt;, &lt;&lt;Bbl Ezra 9:1 &gt;&gt;-4  (linked to wall, vs. 9); &lt;&lt;Bbl Ps 45:10 &gt;&gt;-12 ; &lt;&lt;Bbl Is 8:11&gt;&gt;-12,  &lt;&lt;Bbl Ez 22:26 &gt;&gt;, &lt;&lt;Bbl Ez 43:8 &gt;&gt;, &lt;&lt;Bbl Ez 44:23 &gt;&gt;; &lt;&lt;Bbl 1Cor 7:29 &gt;&gt;-31 .
[[Holiness]] </pre>
</div>
<div title="Servant" modifier="SDM" created="201012110209" modified="201205280204" book_key="">
<pre>* ''Servant of the Lord'' -- a description given to Moses, Joshua (at the end of his life), David, Israel (Lev 25).
*  With Isaiah the use of this phrase becomes more common:  &lt;&lt;Bbl Is 41:8 &gt;&gt;, &lt;&lt;Bbl Is 49:3 &gt;&gt;
* A //bondservant// is merely an employee under long-term contractual commitment.</pre>
</div>
<div title="ServerSide" creator="psd" modifier="jermolene" created="201102111107" modified="201111031648" tags="community concepts">
<pre>Out of the box, ~TiddlyWiki doesn't have a Server Side back end. In many applications that's a great strength because it means that you can work with ~TiddlyWiki without having to be connected to the Internet or, because it's SelfContained, installing any software.

In other applications, a ~ServerSide can be very useful, particularly if you want to edit a ~TiddlyWiki while it's online, or you need lots of people to be able to edit a ~TiddlyWiki at the same time. The development [[Community]] has come up with several ~ServerSide implementations that are suitable for a range of applications, listed under HostedOptions.</pre>
</div>
<div title="Service" modifier="SDM" created="201004120330">
<pre>It must be based in love, not in dead works; there will be a constant temptation to the latter.  It's not supposed to be like paying taxes.  &lt;&lt;Bbl Rth 2:22 &gt;&gt;; &lt;&lt;Bbl 1Sam 14:7 &gt;&gt;; &lt;&lt;Bbl Is 26:13 &gt;&gt;; Zch 3:7; &lt;&lt;Bbl Ps.123 &gt;&gt;
right motivation:       &lt;&lt;Bbl Hos 2:16 &gt;&gt;, &lt;&lt;Bbl Hos 14:3 &gt;&gt;; &lt;&lt;Bbl Mt 8:15 &gt;&gt;
to false or evil allegiances:  &lt;&lt;Bbl Dt 4:28 &gt;&gt;, &lt;&lt;Bbl Dt 28:36 &gt;&gt;; &lt;&lt;Bbl Jud 10:11 &gt;&gt;-16 Kng 16:7-8; &lt;&lt;Bbl 2Chr 12:8 &gt;&gt;, &lt;&lt;Bbl Jer 5:19 &gt;&gt;, &lt;&lt;Bbl Jer 16:13 &gt;&gt;, &lt;&lt;Bbl Jer 17:4 &gt;&gt;
to others, righteous:       1Kng 12:7; &lt;&lt;Bbl 1Chr 9:33 &gt;&gt;; &lt;&lt;Bbl Mt 20:25 &gt;&gt;-28 ; &lt;&lt;Bbl 1Pt 4:10 &gt;&gt;-11 </pre>
</div>
<div title="ServicePack2Problems" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="instructions issues troubleshooting">
<pre>Internet Explorer Windows XP ~SP2 seems to have a magical ability to keep track of html files that have been downloaded from the internet and saved on an NTFS drive. By storing additional data in an [[alternate data stream|http://www.microsoft.com/technet/sysinternals/FileAndDisk/Streams.mspx]], it manages to keep them in the 'Internet' zone regardless of attempts to rename or modify the file. But, in order to be able to SaveChanges, TiddlyWiki needs to run in the 'My Computer' zone.

The solution is to right-click on the TiddlyWiki html file and choose //Properties//. If the file is blocked, you'll see an 'Unblock' button on the resulting property sheet that removes the protection and allows the file to open in the 'My Computer' zone. Then open the file in Internet Explorer - it might put up its information bar asking you whether you want to run it. You need to 'Allow blocked content' to let TiddlyWiki do its stuff.
&lt;&lt;&lt;
If you find yourself running into the information bar frequently, you can disable it by visiting the &quot;Options&quot; dialog and, on the &quot;Advanced&quot; tab make sure that &quot;Allow active content to run in files on My Computer&quot; is checked.

Alternatively, you can rename the file to {{{*.hta}}} which has the added bonus of automatically granting all necessary save permissions.
&lt;&lt;&lt;
This is all a bit frustrating. An easy alternative is to use FireFox, which seems to do the trick on all platforms.</pre>
</div>
<div title="Servitude" modifier="SDM" created="201209012317" book_key="">
<pre>* //Bondage, slavery, forced labor//
* [[Rest]]</pre>
</div>
<div title="Sex" modifier="SDM" created="201111280155" modified="201211281926" book_key="">
<pre>* From lust to love -- &lt;&lt;Bbl Gn 34:2 &gt;&gt;-3
* From lust to hatred -- &lt;&lt;Bbl 2Sam 13:13 &gt;&gt;-14
* [[Marriage]]
* [[Lust]]</pre>
</div>
<div title="Sexism" modifier="SDM" created="201211181611" book_key="">
<pre>* [[Individual]]</pre>
</div>
<div title="ShadowTiddlers" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="concepts terminology">
<pre>ShadowTiddlers are special tiddlers that have default values that take over if they are undefined or deleted. For example, PageTemplate and StyleSheetColors are both shadow tiddlers.

ShadowTiddlers make it harder to render a TiddlyWiki inoperative by accidentally deleting something important.  You can see a list of shadow tiddlers in the Shadowed tab under the More tab in the right hand column.  When you create a tiddler with the same title you override the underlying shadow tiddler.
----
&lt;&lt;list shadowed&gt;&gt;</pre>
</div>
<div title="ShadowTiddlersContent" creator="colmbritton" modifier="matt" created="201102111446" modified="201102151536">
<pre>[[ColorPalette|ColorPalette shadows]]
[[DefaultTiddlers|DefaultTiddlers shadows]]
[[EditTemplate|EditTemplate shadows]]
[[GettingStarted|GettingStarted shadows]]
[[MainMenu|MainMenu shadows]]
[[PageTemplate|PageTemplate shadows]]
[[PluginManager|PluginManager shadows]]
[[SideBarOptions|SideBarOptions shadows]]
[[SiteSubtitle|SiteSubtitle shadows]]
[[SiteTitle|SiteTitle shadows]]
[[StyleSheet|StyleSheet shadows]]
[[TabAll|TabAll shadows]]
[[TabMoreMissing|TabMoreMissing shadows]]
[[TabMoreOrphans|TabMoreOrphans shadows]]
[[TabMoreShadowed|TabMoreShadowed shadows]]
[[TabTimeline|TabTimeline shadows]]
[[ViewTemplate|ViewTemplate shadows]]
[[WindowTitle|WindowTitle shadows]]</pre>
</div>
<div title="Shame" modifier="SDM" created="201011010053" modified="201211161333" book_key="">
<pre>! Core Definition
Worth is the measure of how something or someone is viewed, based on goodness or badness.  Shame is the opposite.
* See {{anti{[[Glory]], [[Honor]] and [[Favor]]}}}.
* Habakkuk contrasts //shame and not glory//.
* See also &lt;&lt;Bbl Rev 21:27 &gt;&gt;.
* Other contrastive pairs are dignity, opposed to //ignominy// or //unworth// or //dishonor//.
Shame is much more complicated than we imagine at first blush.
* It can be felt as an emotion which we (inadequately) call embarrassment.
* Shame can be perceived internally, unknown to the community.
* Or the community can perceive it for us, perhaps while we are unaware.
* It can be imposed, imputed, or threatened.
* It can be hidden (very inadequately) under the term &quot;low self-esteem&quot;.
The Bible tells us that before all this, shame and worth are objective realities.  Because of our relativistic training, this is hard yet important to understand.


! Aspects
!!! Objective
Intrinsic condition.  Objective in basis, through God's revelation. //Shameful ways//.
* Deviance: &lt;&lt;Bbl Eph 5:12 &gt;&gt; says //it is shameful even to mention what the disobedient do in secret.//  &lt;&lt;Bbl Rev 21:27 &gt;&gt; says //nothing impure will ever enter it, nor will anyone who does what is shameful or deceitful...//
* [[Subversion]]
* Godlessness -- &lt;&lt;Bbl Php 3:19 &gt;&gt; //...their glory is in their shame. Their mind is on earthly things.//
* Deception
** false ministry -- &lt;&lt;Bbl 2Cor 4:2 &gt;&gt; //we have renounced secret and shameful ways; we do not use deception...// (but we) //commend ourselves to every man's conscience in the sight of God.//
!!! Subjective
An assessment that can be threatened, imposed, imputed, or perceived as a transaction in almost any personal or social relationship.
## &lt;&lt;Bbl Gn 38:23 &gt;&gt; -- Judah is nervous about his reputation because of the prostitute.
## to //treat// someone shamefully.  &lt;&lt;Bbl Lk 20:11 &gt;&gt; //they beat and treated shamefully; Prophet without honor//. [[Mistreatment]].
## Shaming behavior -- &lt;&lt;Bbl 2Kings 2:17 &gt;&gt; Elisha is shamed into action (other instances similar).
## [[Satan]] means //accuser//.
## As proscribed punishment -- &lt;&lt;Bbl Dt 25:7 &gt;&gt;-10  //the unsandaled//.  Here the objective must find its echo in the subjective -- heaven on earth, so to speak.
## Adultery -- &lt;&lt;Bbl Pr 6:32 &gt;&gt;-35  //he will never overcome his shame//
!!! a reference for emotion
* [[Guilt]], humiliation, embarrassment, //low self-esteem//.
* //Condemnation// is the popular term for emotional shame that leads us away from Christ.
* //Conviction// is the popular term for emotional shame that leads us //TO// Christ.  &lt;&lt;Bbl 2Thes 3:14 &gt;&gt;, &lt;&lt;Bbl 2Tim 2:15 &gt;&gt;
! Root cause of shame
The Hebrew word for shame is //bosh.// You would expect to find //bosh// .where we read that &quot;the eyes of both of them were opened, and they knew that they were naked.&quot; But //bosh// isn't there.  In fact, the word appears only once in Genesis and only once in Exodus.  It's too strong an idea to throw around frequently.
* &lt;&lt;Bbl Gn 2:25 &gt;&gt;     The man and his wife were both naked, and they felt no shame.  This is the only place //Bosh// (shame) is used in Genesis (it's used only once in Exodus).
* From Image to image-management
* {{
scripture{
&lt;&lt;Bbl Gn 3:7 abbr &gt;&gt;:  ^^7^^ ... they sewed fig leaves together and made coverings for themselves. ^^8^^ ... they hid from the Lord God among the trees of the garden. ... ^^10^^ ...&quot;I was afraid because I was naked; so I hid.&quot;  ... ^^21^^The Lord God made garments of skin for Adam and his wife and clothed them.
}}}
* It's fascinating the term for shame (//bosh//) isn't used here.  Instead, shame is represented in self-consciousness, self-fixing (image management), self-isolation, fear, placing [[Blame]].
* We know Adam wanted a covering before God (he says so), but we also imagine it was a reflexive response for them both in facing each other.
* They both made their own coverings, as I imagine it -- it wasn't a remedy they could pursue as a team.
! Jesus Christ
See [[Shame-Crucified]]
</pre>
</div>
<div title="Shame-Crucified" modifier="SDM" created="201206181312" modified="201206181829" book_key="">
<pre>!!!! Christ's experience of shame
* [[Shame]]
* [[Mistreatment]]
* &lt;&lt;Bbl Act 8:33 &gt;&gt; -- //In His humiliation he was deprived of justice. //
* &lt;&lt;Bbl Heb 12:2 &gt;&gt; -- //endured the cross, scorning its shame, and sat down at the right hand of the throne of God.//
* &lt;&lt;Bbl Ps 69:6 &gt;&gt;-7  -- //May those who hope in You not be disgraced because of me, O Lord... not be put to shame because of me, O God of Israel.  For I endure scorn for Your sake, and shame covers my face.//
* Aspects
## Apprehended as a criminal.
## Officially sentenced as a criminal.
## Isolated, abandoned.
### Mocked, derided by his enemies.
### Repudiated by his friends.
### Discredited in general.
## Humiliated through the beating and torture of His earthly body.
## Naked, stripped of his [[Clothing]].
## His clothing distributed as petty spoils.
## Made a complete public spectacle in all this.
## His mother present as a witness -- a discredit to the family.
## Technically under the Law of Moses, Christ @@color:red;became a violation in His body@@.  He became sin.  See &lt;&lt;Bbl Gal 3:13 &quot;&quot; note &gt;&gt;.
* For all Semitic people, nothing could be worse than having your Mom present as you are sentenced for the crime, placed naked in stocks for ridicule by strangers, and slowly executed. Our culture cause us to focus on the physiological torture.  We do add the spiritual dimension -- &quot;His Father turned away His face -- //that// was the //worst.//&quot;  That can't be denied; yet I'm still concerned how our cultural perspective causes us to overlook the aspect of shame.  We must consider what it meant for our Lord to &quot;despise the shame of the cross&quot; (Heb 12) to better understand His gift.
!!!! No shame in Christ
* [[Rock]]
* &lt;&lt;Bbl Heb 12:2 &gt;&gt; -- Let us fix our eyes on Jesus, the author and perfecter of our faith, who for the joy set before him endured the cross, __scorning its shame__, and sat down at the right hand of the throne of God.  //Fix our eyes// means we emulate this.
* Christ came for this -- &lt;&lt;Bbl Is 61:7 &gt;&gt;
* Rick Reynolds asked, What do you do with your shame?  Later he answered, I think I would take my shame to the cross.</pre>
</div>
<div title="SharedTiddlersPlugin" modifier="SDM" created="201302272105" tags="systemConfig" book_key="">
<pre>/***
|''Name''|SharedTiddlersPlugin|
|''Version''|1.6.0|
|''Type''|plugin|
|''~CoreVersion''|2.2.6|
|''Requires''|UpToDateFiltersPlugin|
|''Requirements note''|[[UpToDateFiltersPlugin|http://yakovl.bplaced.net/TW/STP/STP.html/#UpToDateFiltersPlugin]] is necessary only for TW below v2.6.2; later it will get a separate repository|
|''Description''|Introduces a possibility to use tiddlers from other ~TiddlyWikis (without importing them)|
|''Documentation''|http://yakovl.bplaced.net/TW/STP/STP.html/#SharedTiddlersPluginInfo|
|''Source''|http://yakovl.bplaced.net/TW/STP/STP.html/#SharedTiddlersPlugin|
|''Author''|Yakov Litvin|
|''Forked from''|[[IncludePlugin|http://tiddlywiki.abego-software.de/#IncludePlugin]], by Udo Borkowski|
|''Contact''|see [[docs|SharedTiddlersPluginInfo]]|
|''Copyright''|Yakov Litvin, 2012|
|''Licence''|[[BSD-like open source license|http://yakovl.bplaced.net/TW/STP/STP.html/#%5B%5BYakov%20Litvin%20Public%20Licence%5D%5D]], see [[here|Yakov Litvin Public Licence]] if imported|
|&gt;| In this tiddler, the code is minified and hidden; the full code can be found [[here|http://yakovl.bplaced.net/TW/STP/STP.html/#SharedTiddlersPluginCode]]. |
/%
***/
config.filters.all=function(l){this.forEachTiddler(function(s,m){l.pushUnique(m)});return l};config.filters.includedFrom=function(l,s){for(var m=0;m&lt;l.length;m++)l[m].includeURL!=s[3]&amp;&amp;l.splice(m,1);return l};
(function(){function l(){var a={},b={},d=function(a){return{subs:a,warned:!1}};this.init=function(){void 0==config.options.chkWarnOnSharedTiddlersConflicts&amp;&amp;(config.options.chkWarnOnSharedTiddlersConflicts=!0);void 0==config.options.chkAlertOnSharedTiddlersConflicts&amp;&amp;(config.options.chkAlertOnSharedTiddlersConflicts=!1)};this.checkNew=function(c,e,f,g){var j=store.fetchTiddler(c);if(null!=j&amp;&amp;j.includeURL!=e){j=k.getSubsUrl(c)?!0:!1;if(f==j)if(a[c])void 0==a[c][e]&amp;&amp;(a[c][e]=d(f));else if(f)a[c]={},
a[c][e]=d(f),a[c][k.getSubsUrl(c)]=d(f);else{var h=w(function(a,b){return a.fetchTiddler(c)?b:null});h?(a[c]={},a[c][e]=d(f),a[c][h]=d(f)):window.sharedTiddlersAPI.orig_fetchTiddler(c)&amp;&amp;(a[c]={},a[c][e]=d(f),a[c][&quot;main store&quot;]=d(!1))}f&amp;&amp;(!j&amp;&amp;a[c])&amp;&amp;delete a[c];j=k.getSubsShUrl(c);g&amp;&amp;j&amp;&amp;(g=k.containSubsUrl(c,j),f==g&amp;&amp;(b[c]?void 0==b[c][e]&amp;&amp;(b[c][e]=d(f)):(b[c]={},b[c][e]=d(f),b[c][j]=d(f))),f&amp;&amp;(!g&amp;&amp;b[c])&amp;&amp;delete b[c])}};var e=function(a,b){var d=&quot;&quot;,e=function(a){d+=&quot;\n&quot;+a;b&amp;&amp;t(a)},j;for(tName in a){j=
!1;e(&quot;* &quot;+tName+&quot; in:&quot;);for(tUrl in a[tName])e(&quot; * &quot;+tUrl),a[tName][tUrl].subs&amp;&amp;(j=!0);j&amp;&amp;e(&quot;  (with the subsitute priority)&quot;)}return d};this.notify=function(){var c=config.options.chkWarnOnSharedTiddlersConflicts,d=config.options.chkAlertOnSharedTiddlersConflicts;if(d||c){var f,g,j={},h=!1;for(f in a)for(g in a[f])!1==a[f][g].warned&amp;&amp;(h=!0,null==j[f]&amp;&amp;(j[f]={}),j[f][g]={subs:a[f][g].subs},a[f][g].warned=!0);var n={},k=!1;for(f in b)for(g in b[f])!1==b[f][g].warned&amp;&amp;(k=!0,null==n[f]&amp;&amp;(n[f]={}),n[f][g]=
{subs:b[f][g].subs},b[f][g].warned=!0);f=&quot;&quot;;h&amp;&amp;(f+=&quot;New conflicts:&quot;,c&amp;&amp;t(f),f+=e(j,c));k&amp;&amp;(f&amp;&amp;(f+=&quot;\n&quot;),f+=&quot;New conflicts between those competing for substituting shadows:&quot;,c&amp;&amp;t(&quot;New conflicts between those competing for substituting shadows:&quot;),f+=e(j,c));d&amp;&amp;f&amp;&amp;alert(f)}}}function s(){var a={};this.add=function(b,d,e,c){if(e||c)void 0==a[b]&amp;&amp;(a[b]={urlsSubs:[],urlsSubsSh:[]}),e&amp;&amp;a[b].urlsSubs.pushUnique(d),c&amp;&amp;a[b].urlsSubsSh.pushUnique(d)};this.getSubsUrl=function(b){b=a[b];return null==b||0==b.urlsSubs.length?
null:b.urlsSubs[0]};this.getSubsShUrl=function(b){b=a[b];if(null==b||0==b.urlsSubsSh.length)return null;var d,e;for(d=0;d&lt;b.urlsSubs.length;d++)for(e=0;d&lt;b.urlsSubsSh.length;e++)if(b.urlsSubs[d]==b.urlsSubsSh[e])return b.urlsSubs[d];return b.urlsSubsSh[0]};this.containSubsUrl=function(b,d){var e=a[b];return null==e?!1:e.urlsSubs.contains(d)};this.getPrefs=function(b){return a[b]}}function m(){var a={};this.isUsed=function(b){return a[b]?!0:!1};this.setUsed=function(b){a[b]=1}}var t=function(a,b){displayMessage(a,
b);console.log(a)};window.abego||(window.abego={});if(abego.TiddlyWikiIncluder)alert(&quot;Warning: abego.TiddlyWikiIncluder is already exists, so probably two copies of SharedTiddlersPlugin and/or IncludePlugin are installed and activated. It is highly recommended to deactivate all but one copy. You can find those by searching 'abego.TiddlyWikiIncluder'.&quot;);else{window.sharedTiddlersAPI={};var x,p=[],h={},y=[],q,z=[],r;conflicts=new l;conflicts.init();var k=new s,C=function(a){return&quot;No include specified for %0&quot;.format([a])},
I=function(){var a=y;y=[];if(a.length)for(var b=0;b&lt;z.length;b++)z[b](a)},u,D=function(){void 0!==q&amp;&amp;clearInterval(q);u=0;var a=function(){config.extensions.SharedTiddlersPlugin.sendProgress(&quot;&quot;,&quot;&quot;,&quot;Done&quot;)};q=setInterval(function(){u++;10&gt;=u||(clearInterval(q),q=void 0,config.extensions.SharedTiddlersPlugin.sendProgress(&quot;Refreshing...&quot;,&quot;&quot;,&quot;&quot;),refreshDisplay(),setTimeout(a,0))},1)},w=function(a){for(var b,d=0;d&lt;p.length;d++){var e=config.extensions.SharedTiddlersPlugin.getStore(p[d]);if(e&amp;&amp;(b=a(e,p[d])))return b}},
E=function(){if(!window.store)return setTimeout(E,100);var a=store.fetchTiddler;window.sharedTiddlersAPI.orig_fetchTiddler=a;store.fetchTiddler=function(b){var d;if(d=k.getSubsUrl(b))return h[d].fetchTiddler(b);if(d=a.apply(this,arguments))return d;if(void 0!==config.shadowTiddlers[b]){if(d=k.getSubsShUrl(b))return h[d].fetchTiddler(b)}else return b==config.macros.newTiddler.title?void 0:w(function(a){return a.fetchTiddler(b)})};p.length&amp;&amp;D()},F=function(){if(!window.store)return setTimeout(F,100);
var a=store.getTiddlerText(&quot;IncludeList&quot;);a&amp;&amp;wikify(a,document.createElement(&quot;div&quot;))},A=function(a){return function(){var b=store.forEachTiddler;store.forEachTiddler=function(a){var e={},c=function(b,c){if(!e[b]&amp;&amp;(!k.getSubsUrl(b)||k.getSubsUrl(b)==c.getIncludeURL()))e[b]=1,a.apply(this,arguments)};b.call(store,c);for(var h in config.shadowTiddlers)k.getSubsShUrl(h)||(e[h]=1);e[config.macros.newTiddler.title]=1;w(function(a){a.forEachTiddler(c)})};try{return a.apply(this,arguments)}finally{store.forEachTiddler=
b}}},G=function(a,b){return a[b]=A(a[b])};config.extensions.SharedTiddlersPlugin={setProgressFunction:function(a){r=a},getProgressFunction:function(){return r},sendProgress:function(a,b,d){r&amp;&amp;r.apply(this,arguments)},onError:function(a,b){t(&quot;Error when including '%0':\n%1&quot;.format([a,b]))},hasPendingIncludes:function(){for(var a=0;a&lt;p.length;a++){var b=config.extensions.SharedTiddlersPlugin.getState(p[a]);if(&quot;waiting&quot;==b||&quot;loading&quot;==b)return!0}return!1},getIncludes:function(){return p.slice()},getState:function(a){var b=
h[a];return!b?C(a):&quot;string&quot;==typeof b?b:null},getStore:function(a){var b=h[a];return!b?C(a):b instanceof TiddlyWiki?b:null},getFunctionUsingForReallyEachTiddler:A,useForReallyEachTiddler:G,addListener:function(a){z.push(a)},importIncluded:function(a,b){b=void 0==b?1:parseInt(b);var d,e,c={tiddler:null},h=function(a){store.addTiddler(a);store.setDirty(!0);c.status=0;c.tiddler=a;c.from=f};if(a instanceof Tiddler)c.tiddler=window.sharedTiddlersAPI.orig_fetchTiddler(a.title),d=jQuery.extend(!0,new Tiddler,
a);else return c.status=-1,c.errorText=&quot;not a Tiddler instance&quot;,c;var f;(f=d.includeURL)&amp;&amp;delete d.includeURL;switch(b){case 1:h(d);break;case 4:e=window.sharedTiddlersAPI.orig_fetchTiddler(d.title);(!e||e.modified&lt;d.modified)&amp;&amp;confirm(&quot;Up-to-date &quot;+d.title+&quot; from &quot;+f+&quot; is availabe, import?&quot;)&amp;&amp;h(d);break;default:c.status=-1,c.errorText=&quot;unknown import mode&quot;}return c},importAndLog:function(a,b){var d=a.title,e=this.importIncluded(a,b);switch(e.status){case 0:console.log(&quot;imported: &quot;+d+&quot; from &quot;+e.from);
break;case -1:console.log(&quot;error importing &quot;+d+&quot;: &quot;+e.errorText)}}};window.sharedTiddlersAPI.forReallyEachTiddler=function(a){A(function(){store.forEachTiddler(a)}).call(store)};abego.TiddlyWikiIncluder={getIncludes:config.extensions.SharedTiddlersPlugin.getIncludes,getState:config.extensions.SharedTiddlersPlugin.getState,getStore:config.extensions.SharedTiddlersPlugin.getStore};window.sharedTiddlersAPI.getIncludes=config.extensions.SharedTiddlersPlugin.getIncludes;window.sharedTiddlersAPI.getState=
config.extensions.SharedTiddlersPlugin.getState;window.sharedTiddlersAPI.getStore=config.extensions.SharedTiddlersPlugin.getStore;window.sharedTiddlersAPI.importAndLog=config.extensions.SharedTiddlersPlugin.importAndLog;config.extensions.SharedTiddlersPlugin.include=function(a,b,d,e,c,v,f){void 0===x&amp;&amp;(x=void 0===config.options.chkUseInclude||config.options.chkUseInclude);if(x){var g=this,j=!p.contains(a);j&amp;&amp;(p.push(a),h[a]=&quot;waiting&quot;);var l=function(b,c,d,e){void 0===b?(h[a]=e,g.onError(a,e)):(h[a]=
b,h[a].orig_store=new TiddlyWiki,h[a].forEachTiddler(function(b,c){c.includeURL=a;h[a].orig_store.addTiddler(c)}),h[a].clear(),n(),y.push(a),setTimeout(I,void 0))},n=function(){if(null===config.extensions.SharedTiddlersPlugin.getStore(a))return setTimeout(n,100);var c=h[a].orig_store.filterTiddlers(b),g,j;for(g=0;g&lt;c.length;g++)j=jQuery.extend(!0,new Tiddler,c[g]),h[a].orig_store.fetchTiddler(j.title)&amp;&amp;(f&amp;&amp;eval(c[g].text),v?config.extensions.SharedTiddlersPlugin.importAndLog(j,v):(conflicts.checkNew(j.title,
a,d,e),h[a].addTiddler(j)));if(!v&amp;&amp;(d||e))for(g=0;g&lt;c.length;g++)k.add(c[g].title,a,d,e);conflicts.notify();store.slices={};refreshAll();story.refreshAllTiddlers()},m=function(){h[a]=&quot;loading&quot;;var b=r,c=function(c,d){b&amp;&amp;b(c,&quot;stp_loadTiddlyWikiStore&quot;,d,a,null)},d=function(b){c(&quot;Error when loading %0&quot;.format([a]),&quot;Failed&quot;);l(void 0,a,null,b);return b};c(&quot;Start loading %0&quot;.format([a]),&quot;Started&quot;);var e=a,f=function(b,e,f,g){if(void 0===b)d(g);else{c(&quot;Processing %0&quot;.format([a]),&quot;Processing&quot;);try{var j=
new TiddlyWiki,h=j.importTiddlyWiki(b)?null:&quot;Problem with importing TiddlyWiki, probable reason is: &quot;+&quot;The file '%0' does not appear to be a valid TiddlyWiki file&quot;.format([a]);h?d(h):(c(&quot;Loaded %0&quot;.format([a]),&quot;Done&quot;),l(j,a,null))}catch(k){d(exceptionText(k))}}};if(0!=e.search(/^((http(s)?)|(file)):/)){if(0==e.search(/^((.\:\\)|(\\\\)|(\/))/))e=&quot;file://&quot;+e;else var g=document.location.toString(),j=g.lastIndexOf(&quot;/&quot;),e=g.substr(0,j+1)+e;e=e.replace(/\\/mg,&quot;/&quot;)}var k=e,n=function(a,b,c,d){return a?
f(c,d,b):f(void 0,d,b,&quot;Error loading %0&quot;.format([d]))};if(2&gt;version.major||2==version.major&amp;&amp;7&gt;version.minor){e={type:&quot;GET&quot;,url:k,processData:!1,data:void 0,cache:!1,beforeSend:function(){},complete:function(a){var b;a:{try{b=!a.status&amp;&amp;&quot;file:&quot;===location.protocol||200&lt;=a.status&amp;&amp;300&gt;a.status||304===a.status||1223===a.status;break a}catch(c){}b=!1}b?n(!0,null,a.responseText,k,a):n(!1,null,null,k,a)}};try{window.Components&amp;&amp;(window.netscape&amp;&amp;window.netscape.security&amp;&amp;-1==document.location.protocol.indexOf(&quot;http&quot;))&amp;&amp;
window.netscape.security.PrivilegeManager.enablePrivilege(&quot;UniversalBrowserRead&quot;)}catch(m){}jQuery.ajax(e)}else httpReq(&quot;GET&quot;,k,n,null)};j?c?setTimeout(m,c):m():n()}};config.extensions.SharedTiddlersPlugin.addListener(D);config.shadowTiddlers.AdvancedOptions+=&quot;\n~IncludePlugin settings:\n&lt;&lt;option chkUseInclude&gt;&gt; Include ~TiddlyWikis\n&lt;&lt;option chkAlertOnSharedTiddlersConflicts&gt;&gt; Alert on tiddler name conflicts\n&lt;&lt;option chkWarnOnSharedTiddlersConflicts&gt;&gt; Display messages and write log in the browser console on conflicts\nIncludeList | IncludeState | ImportIncluded | [[help|http://yakovl.bplaced.net/TW/SharedTiddlersPlugin.html/#SharedTiddlersPluginInfo]]\n^^(Reload this ~TiddlyWiki to make changes become effective)^^&quot;;
config.shadowTiddlers.IncludeState=&quot;&lt;&lt;includeState&gt;&gt;&quot;;config.shadowTiddlers.ImportIncluded='| the url of the document to import from | &lt;&lt;option txtStoreUrl&gt;&gt;               |\n| the filter of tiddlers to import       | &lt;&lt;option txtFilterTiddlersToImport&gt;&gt; |\n&lt;html&gt;&lt;a href=\'javascript:;\' onclick=\'\n\tvar storeUrl = config.options.txtStoreUrl;\n\tvar theStore = sharedTiddlersAPI.getStore(storeUrl);\n\tvar t;\n\tif(!theStore)\n\t\tdisplayMessage(&quot;no store loaded from &quot;+storeUrl);\n\telse{\n\t\tvar tiddlersToImport = theStore.filterTiddlers(config.options.txtFilterTiddlersToImport);\n\t\tconsole.log(tiddlersToImport.length+&quot; tiddlers imported&quot;+ ((tiddlersToImport.length &gt; 0)? &quot;:&quot; : &quot;&quot;));\n\t\t\n\t\tfor(var i = 0; i &lt; tiddlersToImport.length; i++)\n\t\t\twindow.sharedTiddlersAPI.importAndLog(tiddlersToImport[i]);\n\t};\n\'&gt;import (without saving)&lt;a/&gt;&lt;/html&gt;';
var B=function(a,b){a.style.display=b?&quot;block&quot;:&quot;none&quot;};config.extensions.SharedTiddlersPlugin.getDefaultProgressFunction=function(){setStylesheet(&quot;.includeProgressState{\nbackground-color:#FFCC00;\nposition:absolute;\nright:0.2em;\ntop:0.2em;\nwidth:7em;\npadding-left:0.2em;\npadding-right:0.2em\n}\n&quot;,&quot;stp_Include&quot;);var a=document.createElement(&quot;div&quot;);a.className=&quot;includeProgressState&quot;;a.style.display=&quot;none&quot;;document.body.appendChild(a);return function(b,d,e){&quot;Done&quot;==e||&quot;Failed&quot;==e?setTimeout(function(){B(a,
!1,1E3)},100):&quot;stp_loadTiddlyWikiStore&quot;==d?(u=0,&quot;Processing&quot;==e&amp;&amp;(removeChildren(a),createTiddlyText(a,&quot;Including...&quot;),B(a,!0,0))):(removeChildren(a),createTiddlyText(a,b),B(a,!0,0))}};config.extensions.SharedTiddlersPlugin.setProgressFunction(config.extensions.SharedTiddlersPlugin.getDefaultProgressFunction());config.macros.include=new m;config.macros.include.handler=function(a,b,d,e,c){b=e.source.substring(e.matchStart,e.nextMatch);pParams=c.parseParams(&quot;url&quot;,null,!0,!1,!0);!getFlag(pParams,&quot;hide&quot;,
!1)&amp;&amp;!d.contains(&quot;hide&quot;)&amp;&amp;createTiddlyText(createTiddlyElement(a,&quot;code&quot;),b);if(!config.macros.include.isUsed(b)){config.macros.include.setUsed(b);a=parseInt(getParam(pParams,&quot;delay&quot;,&quot;0&quot;));c=pParams[0].url;b=getParam(pParams,&quot;filters&quot;,&quot;[all[-]]&quot;);e=d.contains(&quot;substituteShadows&quot;);var h=d.contains(&quot;substitute&quot;),f=getParam(pParams,&quot;import&quot;,void 0);d=d.contains(&quot;eval&quot;);for(var g=0;c&amp;&amp;g&lt;c.length;g++)&quot;hide&quot;!=c[g]&amp;&amp;(&quot;substituteShadows&quot;!=c[g]&amp;&amp;&quot;substitute&quot;!=c[g]&amp;&amp;&quot;eval&quot;!=c[g])&amp;&amp;config.extensions.SharedTiddlersPlugin.include(c[g],
b,h,e,a,f,d)}};config.macros.includeState={};config.macros.includeState.handler=function(a){var b=function(){removeChildren(d);var a=wikify,c;c=&quot;&quot;;var h=config.extensions.SharedTiddlersPlugin.getIncludes();if(h.length){c+=&quot;|!Address|!State|\n&quot;;for(var f=0;f&lt;h.length;f++){var g=h[f];c+=&quot;|{{{&quot;+g+&quot;}}}|&quot;;g=config.extensions.SharedTiddlersPlugin.getState(g);c+=g?&quot;{{{&quot;+g+&quot;}}}&quot;:&quot;included&quot;;c+=&quot;|\n&quot;}c+=&quot;|includeState|k\n&quot;}else c=&quot;{{noIncludes{\nNo TiddlyWiki is included or including is disabled (see AdvancedOptions)\n}}}\n&quot;;
a(c,d);config.extensions.SharedTiddlersPlugin.hasPendingIncludes()&amp;&amp;setTimeout(b,500)},d=createTiddlyElement(a,&quot;div&quot;);setTimeout(b,0)};config.macros.wikifyIncluded={};config.macros.wikifyIncluded.handler=function(a,b,d,e,c){createTiddlyText(createTiddlyElement(a,&quot;code&quot;),e.source.substring(e.matchStart,e.nextMatch));pParams=c.parseParams(&quot;url&quot;,null,!0,!1,!0);var h=d[0],f=d[1],g=d[2]?parseInt(d[2]):100,j=d[3]?parseInt(d[3]):100,k=function(){var a=sharedTiddlersAPI.getStore(h);if(a&amp;&amp;(a=a.getTiddlerText(f))){wikify(a,
document.createElement(&quot;div&quot;));return}g--;0&lt;g&amp;&amp;setTimeout(k,j)};k()};var J=Tiddler.prototype.isReadOnly;Tiddler.prototype.isReadOnly=function(){return J.apply(this,arguments)||this.isIncluded()};Tiddler.prototype.isIncluded=function(){return void 0!=this.includeURL};Tiddler.prototype.getIncludeURL=function(){return this.includeURL};var K={getMissingLinks:1,getOrphans:1,getTags:1,reverseLookup:1,updateTiddlers:1},H;for(H in K)G(TiddlyWiki.prototype,H);E();setTimeout(F,100)}})();
// //%/</pre>
</div>
<div title="Sheep" modifier="SDM" created="201004120330" modified="201210212123" tags="Living-Animal" book_key="">
<pre>* [[Humility]] -- To be FED, you must lead yourself be LED.  He'll feed you as you let Him lead you.
* [[Obedience]] -- questionable however whether this is a strength of theirs; gullability, perhaps.
* [[Need]]
!!! Shepherd
* &lt;&lt;Bbl Num 27:17 &gt;&gt; Kng 22:17; &lt;&lt;Bbl Jer 25:34 &gt;&gt;-35 ,&lt;&lt;Bbl Jer 50:6 &gt;&gt;-8 ; &lt;&lt;Bbl Ez 34:5 &gt;&gt;; &lt;&lt;Bbl Mt 9:36 &gt;&gt;; &lt;&lt;Bbl Mk 6:34 &gt;&gt;.
* &lt;&lt;Bbl Jn 10:1 &gt;&gt;
* &lt;&lt;Bbl Ex 48:15&gt;&gt; -- First reference to God as a shepherd.  Note the experience mrom which Jacob speaks:
** He is a shepherd by pastime, indeed by vocation for decades -- //I have born the sun, and the rain//.  Sounds a bit like Paul defending his ministry to the Corinthians.
** He does much more than raise sheep -- he cunningly breeds them!  This points to God's fuller sovereignty.</pre>
</div>
<div title="ShowAllByTags" modifier="SDM" created="201012172300" tags="macro excludeLists">
<pre>/%
|Name|ShowAllByTags|
|Source|http://www.TiddlyTools.com/#ShowAllByTags|
|Version|1.1.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|script|
|Requires|InlineJavascriptPlugin|
|Description|for each tag, show a numbered list of all tiddlers with that tag|

Usage:
    &lt;&lt;tiddler ShowAllByTags with: &quot;tag tag tag&quot;&gt;&gt;
where
    &quot;tag tag tag&quot; (optional)
        quoted, space-separated, bracketed list of tags to **exclude** from the display
!Revisions
2008.08.04 [1.1.0] added optional parameter to exclude specified tags
!end Revisions

%/&lt;script&gt;
    var ex=[];
    if (&quot;$1&quot;!=&quot;$&quot;+&quot;1&quot;) ex=&quot;$1&quot;.readBracketedList();
    var tags = store.getTags();
    if(tags.length == 0) return &quot;no tags in document&quot;;
    var out=&quot;&quot;;
    for(var t=0; t&lt;tags.length; t++) {
        if (ex.contains(tags[t][0])) continue;
        out+=&quot;*[[&quot;+tags[t][0]+&quot;]] (&quot;+tags[t][1]+&quot;)&quot;+&quot;\n&quot;;
        var tids=store.getTaggedTiddlers(tags[t][0]);
        for (i=0; i&lt;tids.length; i++) out+=&quot;##[[&quot;+tids[i].title+&quot;]]\n&quot;;
    }
    return out;
&lt;/script&gt;</pre>
</div>
<div title="ShowPopup" modifier="SDM" created="200609091431" modified="201211212013" tags="macro excludeLists" book_key="">
<pre>/%
!info
|Name|ShowPopup|
|Source|http://www.TiddlyTools.com/#ShowPopup|
|Version|1.1.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|transcluded html|
|Requires||
|Overrides||
|Description|display tiddler content in a TiddlyWiki popup panel|
Usage:
&lt;&lt;&lt;
{{{
&lt;&lt;tiddler ShowPopup with: TiddlerName label tooltip buttonClass width popupClass&gt;&gt;
}}}
*{{{TiddlerName}}} is the title of the tiddler whose content is to be displayed
*{{{label}}} is the text of the popup command
*{{{tooltip}}} is the mouseover help text for the command
*{{{buttonClass}}} is a CSS classname applied to the command text (default=button)
*{{{width}}} is the width of the popup (using CSS measurements, default=auto)
*{{{popupClass}}} is a CSS classname applied to the popup panel (default=none).  Use 'sticky' for persistent popups (requires  StickyPopupPlugin)
&lt;&lt;&lt;
Example:
&lt;&lt;&lt;
{{{
&lt;&lt;tiddler ShowPopup with: ShowPopup [[Try this]] [[show this tiddler in a popup]]&gt;&gt;
}}}
&lt;&lt;tiddler ShowPopup with: ShowPopup [[Try this]] [[show this tiddler in a popup]]&gt;&gt;
&lt;&lt;&lt;
!end

!show
&lt;html&gt;&lt;hide linebreaks&gt;
&lt;a href=&quot;javascript:;&quot; class=&quot;$4&quot; title=&quot;$3&quot; onclick=&quot;
    var p=Popup.create(this);if(!p)return;p.className+=' $6';var t=store.getTiddlerText('$1','');
    var d=createTiddlyElement(p,'div');var s=d.style;s.whiteSpace='normal';s.width='$5';s.padding='2px';wikify(t,d);
    Popup.show();event.cancelBubble=true;if(event.stopPropagation)event.stopPropagation();return(false);
&quot;&gt;$2&lt;/a&gt;&lt;/html&gt;
!end

%/&lt;&lt;tiddler {{'ShowPopup##'+('$1'=='$'+'1'?'info':'show')}} with: [[$1]] [[$2]] [[$3]] [[$4]] [[$5]] [[$6]]&gt;&gt;</pre>
</div>
<div title="ShowPopupPlugin" modifier="SDM" created="201112021827" tags="systemConfig excludeLists" book_key="">
<pre>/***
|Name|[[ShowPopupPlugin]]|
|Source|http://www.TiddlyTools.com/#ShowPopupPlugin|
|Version|2.1.1|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Description|display tiddler content in a TiddlyWiki popup panel|
!!!!!Documenatation
&gt;see [[ShowPopupPluginInfo]]
!!!!!Revisions
&lt;&lt;&lt;
2011.03.13 2.1.1 in click(), removed check for popup already shown (prevents nested popups!)
| Please see [[ShowPopupPluginInfo]] for previous revision details |
2006.09.09 1.0.0 initial release (transclusion)
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.ShowPopupPlugin=
    { major:2, minor:1, revision:1, date:new Date(2011,3,13) };
config.macros.showPopup = {
    tip: 'display &quot;%0&quot; in a popup',
    init: function() {
        config.shadowTiddlers.ShowPopup =
            '&lt;&lt;showPopup tiddler:[[$1]] label:&quot;$2&quot; tip:&quot;$3&quot; buttonClass:&quot;button $4&quot; width:&quot;$5&quot; popupClass:&quot;$6&quot; &quot;$7&quot;&gt;&gt;';
        config.annotations.ShowPopup =
            'created by ShowPopupPlugin';
    },
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var p=paramString.parseParams('name',null,true,false,true);
        var tid=getParam(p,'tiddler','TiddlerName');
        var label=getParam(p,'label',tid);
        var tip=getParam(p,'tip',this.tip.format([tid]));
        var buttonClass=getParam(p,'buttonClass','');
        var width=getParam(p,'width','auto');
        var popupClass=getParam(p,'popupClass','');
        var above=params.contains('above');
        var mouseover=params.contains('mouseover');
        var b=createTiddlyButton(place, label, tip, this.click, buttonClass, null, null,
            { tid:tid, popupClass:popupClass, width:width, above:above });
        b.innerHTML=label; // render HTML for entities, images, etc
        if (mouseover) b.onmouseover=b.onclick;  // option: mouseover triggers click
    },
    click: function(ev) { var ev=ev||window.event;
        // DISABLED if (Popup.find(this)!=-1)return false; // popup already shown!
        var p=Popup.create(this); if(!p)return false; // popup not created!
        addClass(p,this.getAttribute('popupClass'));
        var d=createTiddlyElement(p,'div');
        var s=d.style; s.whiteSpace='normal'; s.width=this.getAttribute('width'); s.padding='2px';
        wikify(store.getTiddlerText(this.getAttribute('tid'),''),d);
        if (this.getAttribute('above')!='true') Popup.show();
        else Popup.show('top','left',{x:0,y:-jQuery(d).outerHeight()});
        ev.cancelBubble=true; if(ev.stopPropagation)ev.stopPropagation(); return false;
    }
}
//}}}</pre>
</div>
<div title="SideBarOptions" creator="jermolene" modifier="SDM" created="200903251430" modified="201212150013" tags="menu excludeLists" book_key="">
<pre>&lt;&lt;closeAll&gt;&gt;&lt;&lt;permaview&gt;&gt;&lt;&lt;newTiddler&gt;&gt;&lt;&lt;newJournal &quot;DD MMM YYYY&quot; &quot;journal&quot;&gt;&gt;&lt;&lt;saveChanges&gt;&gt;&lt;&lt;slider chkSliderOptionsPanel OptionsPanel &quot;options »&quot; &quot;Change TiddlyWiki advanced options&quot;&gt;&gt;</pre>
</div>
<div title="SideBarOptions shadows" creator="matt" modifier="matt" created="201102111438" modified="201102151511" tags="shadow">
<pre>This tiddler contains the commands that produce the buttons contained in the slider above the timeline on the right.
In ~TiddlySpace they are displayed on the right hand side of the menu bar.
By default it is set to:
{{{
&lt;&lt;closeAll&gt;&gt;&lt;&lt;permaview&gt;&gt;&lt;&lt;newTiddler&gt;&gt;
}}}

You can edit it to include anything else you want.</pre>
</div>
<div title="SideBarTabs" modifier="SDM" created="200904271834" modified="201211272041" tags="menu excludeLists" book_key="">
<pre>&lt;&lt;tabs &quot;A-Z&quot;
&quot;A-Z&quot; &quot;Topical&quot; TabTopicEntries
&quot;recent&quot; &quot;Timeline&quot; TabTimeline
&quot;tag&quot; &quot;All tags&quot; TabTags&gt;&gt;</pre>
</div>
<div title="Silence" modifier="SDM" created="201004120330" modified="201211252002" book_key="">
<pre>* &lt;&lt;Bbl Ps 62:1 &gt;&gt;,
* &lt;&lt;Bbl Ps 65:1 &gt;&gt; (but note NKJV, NIV, &quot;the meaning is uncertain&quot; of silence/awaiting);
* &lt;&lt;Bbl Rev 8:1 &gt;&gt;.
!!! Humility
* //mouth shut// or //all flesh silent// means no boasting. &lt;&lt;Bbl Zech 2:13&gt;&gt;; &lt;&lt;Bbl Hab 2:20 &gt;&gt;
* //Like a lamb that is silent//
!!! Let God
&lt;&lt;Bbl Ex 14:14 &gt;&gt;; </pre>
</div>
<div title="SilenceUnwholesome" modifier="SDM" created="201211251957" book_key="">
<pre>* {{anti{[Proclamation]}}}
* That ancien superstition.
** //Knock on wood.//
** //Speak of the devil, and he is there/
** //Hope I didn't jinx anything by saying that.//
* When [[Satan] has a lie securely in place, the last thing he wants is someone speaking up; it might be the truth.
</pre>
</div>
<div title="Sin" modifier="SDM" created="201004120330" modified="201211181645" book_key="">
<pre>* [[Responsibility]], [[Guilt]], [[Shame]]
* [[Wickedness]], [[Broken]], [[Depravity]]
* [[Blasphemy]]
* Two agencies of sin:
## Omission
## Commission.  This kind is assumed when we joke, //I didn't do it.//
* Three kinds of sin:
## Violating God's command.
## Violating the scruples of my own [[Scruples]] -- this is not done by [[Faith]].
## Violating carelessly the [[Scruples]] of another -- this is not done out of love.
* Rushdoony (Institutes, p. 82) points out that sin is not merely acting contrary to conscience.
* @@color:indigo;A man may sin securely, but safely never.@@ // -- Ben Jonson//
* @@color:darkgreen;Sin is likened better to anarchy rather than crime; for crime breaks the laws of the state, but anarchy denies the right of the state to even make the laws.  So sin denies the Creator ...@@ // -- unknown//
&lt;&lt;Bbl Gn 3:1 &gt;&gt;ff, &lt;&lt;Bbl Gn 6:5 &gt;&gt;-8 ; &lt;&lt;Bbl Ps 36:1 &gt;&gt;-4 ; &lt;&lt;Bbl Pr 14:12 &gt;&gt;, &lt;&lt;Bbl Pr 16:2 &gt;&gt;, &lt;&lt;Bbl Pr 21:2 &gt;&gt;; &lt;&lt;Bbl Jn 2:24 &gt;&gt;-25 ; &lt;&lt;Bbl Is 2:5 &gt;&gt;-8 , &lt;&lt;Bbl Is 30:8 &gt;&gt;-17
In Christ my acts of sin are forgiven, and my sin nature is crucified.
*Fallen Nature:     &lt;&lt;Bbl Ecc 7:29 &gt;&gt;, &lt;&lt;Bbl Ps 52:1 &gt;&gt;-3 ; &lt;&lt;Bbl Is 43:27 &gt;&gt;
*Presumptuous:      &lt;&lt;Bbl Is 5:18 &gt;&gt;; &lt;&lt;Bbl Ps 36:1 &gt;&gt;-2
*Unforgivable:      See Harmony of the Gospels, p 78.
*Rebellion:         &lt;&lt;Bbl Num 15:30 &gt;&gt;-31 ; &lt;&lt;Bbl Is 1:2 &gt;&gt;-3 , &lt;&lt;Bbl Is 48:8 &gt;&gt;; &lt;&lt;Bbl Jer 2:21 &gt;&gt;
*[[Lawlessness]]:   &lt;&lt;Bbl 1Jn 3:4 &gt;&gt;
*Defined:       &lt;&lt;Bbl 1Jn 3:4 &gt;&gt;
*Inevitability of:      &lt;&lt;Bbl Ecc 7:20 &gt;&gt;, &lt;&lt;Bbl Job 4:17 &gt;&gt;-19 , &lt;&lt;Bbl Job 14:14 &gt;&gt;-16 Kng 8:46=&lt;&lt;Bbl 2Chr 6:36 &gt;&gt;
*All guilty:        &lt;&lt;Bbl Ps 53:1 &gt;&gt;-3 ; &lt;&lt;Bbl Pr 20:9 &gt;&gt;; &lt;&lt;Bbl Is 43:27 &gt;&gt;; &lt;&lt;Bbl Lam 3:39 &gt;&gt;; &lt;&lt;Bbl Heb 12:23 &gt;&gt;
*Tyre, a type of sin and Judgment:  &lt;&lt;Bbl Ezk 28:2 &gt;&gt;
*of Balaam:     &lt;&lt;Bbl Num 31:16 &gt;&gt;; &lt;&lt;Bbl 2Pt 2:15 &gt;&gt;-16 ; &lt;&lt;Bbl Rev 2:14 &gt;&gt;.
*Unintentional:     (Missing reference to Leviticus
*Attitude towards past:  &lt;&lt;Bbl Rom 6:21 &gt;&gt;
*does not satisfy:      &lt;&lt;Bbl Ez 16:28 &gt;&gt;-30
*partaking (participation) in:  &lt;&lt;Bbl Gn 19:15 &gt;&gt;-17  (here referring to the punishment); &lt;&lt;Bbl Num 16:26 &gt;&gt;;&lt;&lt;Bbl 1Tim 5:22 &gt;&gt;; &lt;&lt;Bbl 2Jn 10:11 &gt;&gt; See [[Evil-Failure-to-Restrain]]</pre>
</div>
<div title="SiteMenuGoto" modifier="SDM" created="201012190134" modified="201211250038" tags="macro excludeLists" book_key="">
<pre>{{smallform{
    &lt;script label=&quot;tiddler:&quot; title=&quot;select a tiddler title or open matching tiddler&quot;&gt;
    // send a return key to the gotoTiddler input field
    var form=place.parentNode.nextSibling.firstChild;
    config.macros.gotoTiddler.inputKeyHandler({keyCode:13},form.gotoTiddler,form.list);
    return false;
&lt;/script&gt;&lt;script&gt;
    place.lastChild.style.fontWeight=&quot;normal&quot;;
&lt;/script&gt;
&lt;&lt;gotoTiddler search inputstyle:&quot;display:block;width:98.5%;margin:0;font-size:8pt;&quot; liststyle:&quot;width:85%;font-size:8pt;&quot;&gt;&gt;/%
%/}}}/%
%/{{selected{{{toolbar fine{
    &lt;&lt;tiddler BreadcrumbsCommand&gt;&gt;/%
    %/ &lt;&lt;tiddler ShowPopup with:
        FavoriteTiddlers &quot;favorites&quot; &quot;quick access to favorite tiddlers&quot; button auto&gt;&gt;/%
    %/ &lt;&lt;openStory popup&gt;&gt;/%
    %/ &lt;&lt;tiddler QuickSearchPopup with: {{tiddler?tiddler.title:&quot;&quot;}} &quot;see also&quot;&gt;&gt;/%
%/}}}}}}{{clear{
}}}</pre>
</div>
<div title="SiteNav" modifier="SDM" created="200903221336" modified="201211230141" tags="template excludeLists" book_key="">
<pre>{{tiny left{
&lt;script&gt;
    // timestamp for generating GUID (globally unique ID)
    config.renderTime=new Date().getTime();
&lt;/script&gt;/%
%/+++[options|set search options]#sidebarSearchOptions:
    &lt;&lt;tiddler SearchOptions&gt;&gt;===
&lt;script&gt;place.lastChild.id+=config.renderTime;&lt;/script&gt;/%
%/{{small {&lt;&lt;search&gt;&gt;}}} }}}
</pre>
</div>
<div title="SiteNavInline" modifier="SDM" created="201211220444" modified="201211230142" tags="template menu excludeLists" book_key="">
<pre>{{outline {
&lt;&lt;gotoTiddler
    search
&gt;&gt;/%
%/&lt;script&gt;
    // timestamp for generating GUID (globally unique ID)
    config.renderTime=new Date().getTime();
&lt;/script&gt;/%
%/+++[options|set search options]#sidebarSearchOptions:
    &lt;&lt;tiddler SearchOptions&gt;&gt;===
&lt;script&gt;place.lastChild.id+=config.renderTime;&lt;/script&gt; }}}</pre>
</div>
<div title="SiteSubtitle" creator="psd" modifier="SDM" created="201006232100" modified="201212162059" tags="template excludeLists" book_key="">
<pre> συνεκδοχή</pre>
</div>
<div title="SiteSubtitle shadow tiddlers" creator="jermolene" modifier="jermolene" created="201102111636" modified="201102111636" tags="shadow">
<pre>In the SiteSubtitle tiddler you can define the subtitle of your ~TiddlyWiki (seen under the main title)
In ~TiddlySpace by default it is set as
{{{
a TiddlySpace
}}}

You can set it to anything you want, such as:
{{{
documentation on the shadow tiddlers
}}}</pre>
</div>
<div title="SiteSubtitle shadows" creator="matt" modifier="matt" created="201102111438" modified="201102151512" tags="shadow">
<pre>In the SiteSubtitle tiddler you can define the subtitle of your tiddlywiki (seen under the main title)
In ~TiddlySpace by default it is set as
{{{
a TiddlySpace
}}}

You can set it to anything you want, such as:
{{{
documentation on the shadow tiddlers
}}}</pre>
</div>
<div title="SiteTitle" creator="psd" modifier="SDM" created="201006232059" modified="201211222344" tags="template excludeLists" book_key="">
<pre>Bible Notes</pre>
</div>
<div title="SiteTitle shadows" creator="matt" modifier="matt" created="201102111613" modified="201102151512" tags="shadow">
<pre>In the SiteTitle tiddler you can define the title of your TiddlyWiki.  When you first create a TiddlyWiki it defaults to
{{{
TiddlyWiki
}}}
However you can edit it to display anything that you choose.</pre>
</div>
<div title="SiteUrl" creator="psd" modifier="jermolene" created="201102111107" modified="201110201351">
<pre>http://tiddlywiki.com/
</pre>
</div>
<div title="SnapshotPlugin" modifier="ELSDesignStudios" created="200804210357" tags="systemConfig excludeLists systemConfigDisable">
<pre>/***
|Name|SnapshotPlugin|
|Source|http://www.TiddlyTools.com/#SnapshotPlugin|
|Documentation|http://www.TiddlyTools.com/#SnapshotPluginInfo|
|Version|1.2.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides||
|Description|save or print HTML+CSS image of rendered document content|
|Status|ALPHA - DO NOT DISTRIBUTE|
This plugin provides a macro as well as tiddler toolbar commands to create a file or browser window containing the //rendered// CSS-and-HTML that is currently being displayed for selected elements of the current document.
!!!!!Documentation
&gt;see [[SnapshotPluginInfo]]
!!!!!Configuration
&lt;&lt;&lt;
&lt;&lt;option chkSnapshotHTMLOnly&gt;&gt; output HTML only (omit CSS)
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2009.06.04 [1.2.0] added handling in getSnap() so current form input values are shown in snapshots
|please see [[SnapshotPluginInfo]] for additional revision details|
2008.04.21 [1.0.0] initial release - derived from [[NewDocumentPlugin]] with many improvements...
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.SnapshotPlugin= {major: 1, minor: 2, revision: 0, date: new Date(2009,6,4)};

if (config.options.chkSnapshotHTMLOnly===undefined) config.options.chkSnapshotHTMLOnly=false;

config.macros.snapshot = {
    snapLabel: &quot;save a snapshot&quot;,
    printLabel: &quot;print a snapshot&quot;,
    snapPrompt: &quot;save an HTML image of rendered content&quot;,
    printPrompt: &quot;print an HTML image of rendered content&quot;,
    hereID: &quot;here&quot;,
    viewerID: &quot;viewer&quot;,
    storyID: &quot;story&quot;,
    allID: &quot;all&quot;,
    askID: &quot;ask&quot;,
    askTiddlerID: &quot;askTiddler&quot;,
    askDOMID: &quot;askDOM&quot;,
    askMsg: &quot;select an element...&quot;,
    hereItem: &quot;tiddler: '%0'&quot;,
    viewerItem: &quot;tiddler: '%0' (content only)&quot;,
    storyItem: &quot;story column&quot;,
    allItem: &quot;entire document&quot;,
    tiddlerItem: &quot;select a tiddler...&quot;,
    IDItem: &quot;select a DOM element by ID...&quot;,
    HTMLItem: &quot;[%0] output HTML only (omit CSS)&quot;,
    fileMsg: &quot;select or enter a target path/filename&quot;,
    defaultFilename: &quot;snapshot.html&quot;,
    okmsg: &quot;snapshot written to %0&quot;,
    failmsg: &quot;An error occurred while creating %0&quot;,
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var printing=params[0]&amp;&amp;params[0]==&quot;print&quot;; if (printing) params.shift();
        params = paramString.parseParams(&quot;anon&quot;,null,true,false,false);
        var id=getParam(params,&quot;id&quot;,&quot;here&quot;);
        var label=getParam(params,&quot;label&quot;,printing?this.printLabel:this.snapLabel);
        var prompt=getParam(params,&quot;prompt&quot;,printing?this.printPrompt:this.snapPrompt);
        var btn=createTiddlyButton(place,label,prompt, function(ev){
            this.setAttribute(&quot;snapID&quot;,this.getAttribute(&quot;startID&quot;));
            config.macros.snapshot.go(this,ev)
        });
        btn.setAttribute(&quot;startID&quot;,id);
        btn.setAttribute(&quot;snapID&quot;,id);
        btn.setAttribute(&quot;printing&quot;,printing?&quot;true&quot;:&quot;false&quot;);
        btn.setAttribute(&quot;HTMLOnly&quot;,config.options.chkSnapshotHTMLOnly?&quot;true&quot;:&quot;false&quot;);
    },
    go: function(here,ev) {
        var cms=config.macros.snapshot; // abbreviation
        var id=here.getAttribute(&quot;snapID&quot;);
        var printing=here.getAttribute(&quot;printing&quot;)==&quot;true&quot;;
        var HTMLOnly=here.getAttribute(&quot;HTMLOnly&quot;)==&quot;true&quot;;

        if (id==cms.askID||id==cms.askTiddlerID||id==cms.askDOMID) {
            cms.askForID(here,ev);
        } else {
            // get element
            if (id==cms.storyID) id=&quot;tiddlerDisplay&quot;;
            if (id==cms.allID) id=&quot;contentWrapper&quot;;
            var snapElem=document.getElementById(id);
            if (id==cms.hereID || id==cms.viewerID)
                var snapElem=story.findContainingTiddler(here);
            if (snapElem &amp;&amp; hasClass(snapElem,&quot;tiddler&quot;) &amp;&amp; (id==cms.viewerID || HTMLOnly)) {
                // find viewer class element within tiddler element
                var nodes=snapElem.getElementsByTagName(&quot;*&quot;);
                for (var i=0; i&lt;nodes.length; i++)
                    if (hasClass(nodes[i],&quot;viewer&quot;)) { snapElem=nodes[i]; break; }
            }
            if (!snapElem) // not in a tiddler or no viewer element or unknown ID
                { e.cancelBubble=true; if(e.stopPropagation)e.stopPropagation(); return(false); }
            // write or print snapshot
            var out=cms.getsnap(snapElem,id,printing,HTMLOnly);
            if (printing) cms.printsnap(out); else cms.savesnap(out);
        }
        return false;
    },
    askForID: function(here,ev) {
        var ev = ev ? ev : window.event;
        var cms=config.macros.snapshot; // abbreviation
        var id=here.getAttribute(&quot;snapID&quot;);
        var indent='\xa0\xa0\xa0\xa0';
        var p=Popup.create(here); if (!p) return false; p.className+=' sticky smallform';
        var s=createTiddlyElement(p,'select'); s.button=here;
        if (id==cms.askID) {
            s.options[s.length]=new Option(cms.askMsg,cms.askID);
            var tid=story.findContainingTiddler(here);
            if(tid) {
                var title=tid.getAttribute(&quot;tiddler&quot;);
                if (here.getAttribute(&quot;HTMLOnly&quot;)!=&quot;true&quot;)
                    s.options[s.length]=new Option(indent+cms.hereItem.format([title]),cms.hereID);
                s.options[s.length]=new Option(indent+cms.viewerItem.format([title]),cms.viewerID);
            }
            s.options[s.length]=new Option(indent+cms.tiddlerItem,cms.askTiddlerID);
            s.options[s.length]=new Option(indent+cms.IDItem,cms.askDOMID);
            s.options[s.length]=new Option(indent+cms.storyItem,&quot;tiddlerDisplay&quot;);
            s.options[s.length]=new Option(indent+cms.allItem,&quot;contentWrapper&quot;);
        }
        if (id==cms.askDOMID) {
            s.options[s.length]=new Option(cms.IDItem,cms.askDOMID);
            var elems=document.getElementsByTagName(&quot;*&quot;);
            var ids=[];
            for (var i=0;i&lt;elems.length;i++)
                if (elems[i].id.length &amp;&amp; elems[i].className!=&quot;animationContainer&quot;)
                    ids.push(elems[i].id);
            ids.sort();
            for (var i=0;i&lt;ids.length;i++) s.options[s.length]=new Option(indent+ids[i],ids[i]);
        }
        if (id==cms.askTiddlerID) {
            s.options[s.length]=new Option(cms.tiddlerItem,cms.askTiddlerID);
            var elems=document.getElementsByTagName(&quot;div&quot;);
            var ids=[];
            for (var i=0;i&lt;elems.length;i++) { var id=elems[i].id;
                if (id.length &amp;&amp; id.substr(0,story.idPrefix.length)==story.idPrefix &amp;&amp; id!=&quot;tiddlerDisplay&quot;)
                    ids.push(id);
            }
            ids.sort();
            for (var i=0;i&lt;ids.length;i++) s.options[s.length]=new Option(indent+ids[i].substr(story.idPrefix.length),ids[i]);
        }
        s.options[s.length]=new Option(cms.HTMLItem.format([here.getAttribute(&quot;HTMLOnly&quot;)==&quot;true&quot;?&quot;\u221a&quot;:&quot;_&quot;]),cms.HTMLItem);
        s.onchange=function(ev){
            var ev = ev ? ev : window.event;
            var cms=config.macros.snapshot; // abbreviation
            var here=this.button;
            if (this.value==cms.HTMLItem) {
                config.options.chkSnapshotHTMLOnly=!config.options.chkSnapshotHTMLOnly;
                here.setAttribute(&quot;HTMLOnly&quot;,config.options.chkSnapshotHTMLOnly?&quot;true&quot;:&quot;false&quot;);
                config.macros.option.propagateOption(&quot;chkSnapshotHTMLOnly&quot;,&quot;checked&quot;,
                    config.options.chkSnapshotHTMLOnly,&quot;input&quot;);
            } else
                here.setAttribute(&quot;snapID&quot;,this.value);
            config.macros.snapshot.go(here,ev);
            return false;
        };
        Popup.show();
        ev.cancelBubble=true;
        if(ev.stopPropagation)ev.stopPropagation();
        return false;
    },
    getpath: function() {
        // get current path
        var path=getLocalPath(window.location.href);
        var slashpos=path.lastIndexOf(&quot;/&quot;);
        if (slashpos==-1) slashpos=path.lastIndexOf(&quot;\\&quot;);
        if (slashpos!=-1) path=path.substr(0,slashpos+1); // trim filename
        return path;
    },
    getsnap: function(snapElem,id,printing,HTMLOnly) {
        var cms=config.macros.snapshot; // abbreviation
        var out='&lt;head&gt;\n';
        if (printing)
            out+='&lt;base href=&quot;file:///'+cms.getpath().replace(/\\/g,'/')+'&quot;&gt;&lt;/base&gt;\n';
        if (!HTMLOnly) {
            var styles=document.getElementsByTagName('style');
            var fmt='&lt;style&gt;\n/* stylesheet=%0 */\n%1\n\n&lt;/style&gt;\n';
            for(var i=0; i &lt; styles.length; i++)
                out+=fmt.format([styles[i].getAttribute('id'),styles[i].innerHTML]);
        }
        out+='&lt;/head&gt;\n';

        var elems=snapElem.getElementsByTagName('input');
        for (var i=0; i&lt;elems.length; i++) { var e=elems[i];
            if (e.type=='text')     e.defaultValue=e.value;
            if (e.type=='checkbox')     e.defaultChecked=e.checked;
            if (e.type=='radiobutton')  e.defaultChecked=e.checked;
        }
        var elems=snapElem.getElementsByTagName('textarea');
        for (var i=0; i&lt;elems.length; i++)   elems[i].defaultValue=elems[i].value;

        var fmt='&lt;body&gt;\n\n&lt;div class=&quot;%0&quot;&gt;%1&lt;/div&gt;\n\n&lt;/body&gt;\n';
        out+=fmt.format([(id==cms.viewerID?'tiddler viewer':''),snapElem.innerHTML]);

        return '&lt;html&gt;\n'+out+'&lt;/html&gt;';
    },
    printsnap: function(out) {
        var win=window.open(&quot;&quot;,&quot;_blank&quot;,&quot;&quot;);
        win.document.open();
        win.document.writeln(out);
        win.document.close();
        win.focus(); // bring to front
        win.print(); // trigger print dialog
    },
    savesnap: function(out) {
        var cms=config.macros.snapshot; // abbreviation
        // make sure we are local
        if (window.location.protocol!=&quot;file:&quot;)
            { alert(config.messages.notFileUrlError); return; }
        var target=cms.askForFilename(cms.fileMsg,cms.getpath(),cms.defaultFilename);
        if (!target) return; // cancelled by user
        // if specified file does not include a path, assemble fully qualified path and filename
        var slashpos=target.lastIndexOf(&quot;/&quot;);
        if (slashpos==-1) slashpos=target.lastIndexOf(&quot;\\&quot;);
        if (slashpos==-1) target=target+cms.defaultFilename;
        var link=&quot;file:///&quot;+target.replace(/\\/g,'/'); // link for message text
        var ok=saveFile(target,convertUnicodeToUTF8(out));
        var msg=ok?cms.okmsg.format([target]):cms.failmsg.format([target]);
        clearMessage(); displayMessage(msg,link);
    },
    askForFilename: function(msg,path,file) {
        if(window.Components) { // moz
            try {
                netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');
                var nsIFilePicker = window.Components.interfaces.nsIFilePicker;
                var picker = Components.classes['@mozilla.org/filepicker;1'].createInstance(nsIFilePicker);
                picker.init(window, msg, nsIFilePicker.modeSave);
                var thispath = Components.classes['@mozilla.org/file/local;1'].createInstance(Components.interfaces.nsILocalFile);
                thispath.initWithPath(path);
                picker.displayDirectory=thispath;
                picker.defaultExtension='html';
                picker.defaultString=file;
                picker.appendFilters(nsIFilePicker.filterAll|nsIFilePicker.filterText|nsIFilePicker.filterHTML);
                if (picker.show()!=nsIFilePicker.returnCancel) var result=picker.file.persistentDescriptor;
            }
            catch(e) { alert('error during local file access: '+e.toString()) }
        }
        else { // IE
            try { // XP/Vista only
                var s = new ActiveXObject('UserAccounts.CommonDialog');
                s.Filter='All files|*.*|Text files|*.txt|HTML files|*.htm;*.html|';
                s.FilterIndex=3; // default to HTML files;
                s.InitialDir=path;
                s.FileName=file;
                if (s.showOpen()) var result=s.FileName;
            }
            catch(e) { var result=prompt(msg,path+file); } // fallback for non-XP IE
        }
        return result;
    }
};
//}}}

// // TOOLBAR DEFINITIONS
//{{{
config.commands.snapshotSave = {
    text: &quot;snap&quot;,
    tooltip: config.macros.snapshot.snapPrompt,
    handler: function(ev,src,title) {
        src.setAttribute(&quot;snapID&quot;,&quot;ask&quot;);
        src.setAttribute(&quot;printing&quot;,&quot;false&quot;);
        src.setAttribute(&quot;HTMLOnly&quot;,config.options.chkSnapshotHTMLOnly?&quot;true&quot;:&quot;false&quot;);
        config.macros.snapshot.go(src,ev);
        return false;
    }
};
config.commands.snapshotPrint = {
    text: &quot;print&quot;,
    tooltip: config.macros.snapshot.printPrompt,
    handler: function(ev,src,title) {
        src.setAttribute(&quot;snapID&quot;,&quot;ask&quot;);
        src.setAttribute(&quot;printing&quot;,&quot;true&quot;);
        src.setAttribute(&quot;HTMLOnly&quot;,config.options.chkSnapshotHTMLOnly?&quot;true&quot;:&quot;false&quot;);
        config.macros.snapshot.go(src,ev);
        return false;
    }
};
//}}}

// // COPIED FROM [[StickyPopupPlugin]] TO ELIMINATE PLUGIN DEPENDENCY
//{{{
if (config.options.chkStickyPopups==undefined) config.options.chkStickyPopups=false;
Popup.stickyPopup_onDocumentClick = function(ev)
{
    // if click is in a sticky popup, ignore it so popup will remain visible
    var e = ev ? ev : window.event; var target = resolveTarget(e);
    var p=target; while (p) {
        if (hasClass(p,&quot;popup&quot;) &amp;&amp; (hasClass(p,&quot;sticky&quot;)||config.options.chkStickyPopups)) break;
        else p=p.parentNode;
    }
    if (!p) // not in sticky popup (or sticky popups disabled)... use normal click handling
        Popup.onDocumentClick(ev);
    return true;
};
try{removeEvent(document,&quot;click&quot;,Popup.onDocumentClick);}catch(e){};
try{addEvent(document,&quot;click&quot;,Popup.stickyPopup_onDocumentClick);}catch(e){};
//}}}</pre>
</div>
<div title="Soldier" modifier="SDM" created="201004120330" modified="201012061530">
<pre>* &lt;&lt;Bbl 2Tim 2:3 &gt;&gt;; &lt;&lt;Bbl Php 2:25 &gt;&gt;; &lt;&lt;Bbl Eph 6:10 &gt;&gt;-18 , &lt;&lt;Bbl 2Cor 6:7 &gt;&gt;, &lt;&lt;Bbl 2Cor 10:3 &gt;&gt;; &lt;&lt;Bbl 1Tim 1:18 &gt;&gt;; &lt;&lt;Bbl 1Tim 6:12 &gt;&gt;.
* @@color:brown;If I profess with the loudest voice and clearest exposition every portion of the truth of God except precisely that little point which the world and the devil are at the moment attacking, I am not confessing Christ, however boldly I may be professing Christ.  Where the battle rages, there the loyalty of the soldier is proven, and to be steady on all the battlefield besides, is merely flight and disgrace if he flinches at that point.@@ // -- Martin Luther //
* @@color:indigo; //... the devil may hold a thanksgiving banquet on the day we are removed ...//@@  //-- C.T. Studd //
* [[War]], [[Sword]]
* [[Faithfulness]]</pre>
</div>
<div title="Solitude" modifier="SDM" created="201004120330" modified="201211250018" book_key="">
<pre>1Kng 8:38; &lt;&lt;Bbl Pr 14:10 &gt;&gt;; &lt;&lt;Bbl Ecc 7:3 &gt;&gt;; &lt;&lt;Bbl Mk 1:35 &gt;&gt;; &lt;&lt;Bbl Jn 2:24 &gt;&gt;-25 , &lt;&lt;Bbl Jn 16:32 &gt;&gt;; &lt;&lt;Bbl 1Cor 2:11 &gt;&gt;; &lt;&lt;Bbl 2Tim 4:16 &gt;&gt;.
* //Alone, [[Loneliness]], isolation//
* {{anti{ [[Host]], [[Marriage]]}}}</pre>
</div>
<div title="Song-01-01-note" modifier="SDM" created="201012111823" modified="201212051322" tags="Comment" book_key="601001a">
<pre>&lt;&lt;Bbl Song 1:9 abbr &gt;&gt;-11   Past, present, and future statements.
&lt;&lt;Bbl Song 1:4 abbr &gt;&gt; Privacy and intimacy are in the king's chambers.  These are  also  found  in 2:14, 3:4, 4:12-16.

2:10-14 Just talk to me!  Surely this makes a practical statement to husbands.
2:16    I am my beloved's    --  this phrase also in 6:3, 7:10.

4:2 the image of fertility is continued in 6:6.

8:6 The sum total of his emotions (heart) and of his works (arm)</pre>
</div>
<div title="Source" modifier="SDM" created="201006232114">
<pre>http://www.in-arch.net/Sqrigg/squrig.html</pre>
</div>
<div title="Sovereignty" modifier="SDM" created="201009302041" modified="201203050343" book_key="">
<pre>* [[Authority]]
*  Who does the choosing?  &lt;&lt;Bbl Jn 15:16 &gt;&gt;.  See [[Atonement]]
* Sovereignty is an attribute of God. According to Don Fortner it means ruling &quot;all things, everywhere, at all times absolutely.&quot;  If, by becoming man, [[Christ]] gave up the use of His divine attributes in any way, then He was not sovereign. If Jesus was not sovereign during His earthly ministry, then He was not God. If He was not God, the Word that was God (Jn.1:1) never became flesh - only part of the Word did. And the name &quot;Immanuel,&quot; meaning &quot;God with us&quot; (NAS Mtt. 1:23), is a lie, and God's Word is not true.  ([[D. Musick |http://kenosis.info/index.shtml#KenoticistsChristian]])</pre>
</div>
<div title="SpecialTags" creator="psd" modifier="colmbritton" created="201102111107" modified="201102211429" tags="features">
<pre>TiddlyWiki defines a small number of SpecialTags that are used to indicate that tiddlers should be treated differently in some way:
* ''excludeSearch'': excludes a tiddler from search results
* ''excludeLists'': excludes a tiddler from the lists in the sidebar tabs
* ''systemConfig'': marks tiddlers that contain [[JavaScript|http://en.wikipedia.org/wiki/JavaScript]] that should be executed once TiddlyWiki has loaded
* ''excludeMissing'': excludes a tiddler from the processing that generates the MissingTiddlers list. Use it when you have a tiddler that contains links to missing tiddlers and you don't want those missing links to appear in the MissingTiddlers list</pre>
</div>
<div title="SpecialTiddlers" creator="psd" modifier="blaine" created="201102111107" modified="201102111633" tags="features instructions">
<pre>~TiddlyWiki uses several &quot;special tiddlers&quot; to perform a number of essential functions as follows:
*[[Configuration]] tiddlers configure the layout of the page, including the MainMenu, the SiteTitle, the SiteSubtitle and other features.
*A tiddler called DefaultTiddlers is used to list the tiddlers that are shown at startup.
*A tiddler called SaveChanges is automatically displayed if there's a problem with saving. Any of them can be edited with the changes taking effect immediately.
* MoreTab, MissingTiddlers, OrphanTiddlers</pre>
</div>
<div title="Speech" modifier="SDM" created="201010271703" modified="201301091604" book_key="">
<pre>* //Tongue, speak//
* Important notes under [[SelfControl]]
* [[Reverence]]
* [[Confession]]
* &lt;&lt;Bbl Is 50:4 &gt;&gt; //the Lord God has given me the tongue of a disciple ... encourage the weary one with a word.//
* &lt;&lt;Bbl Pr 8:6 &gt;&gt;-8 -- Wisdom as a speaker
* &lt;&lt;Bbl Pr 10:32 &gt;&gt; //lips of the righteous know what is fitting, but the mouth of the wicked only what is perverse//
* &lt;&lt;Bbl Pr 16:21 &gt;&gt; //pleasant words promote instruction//
* &lt;&lt;Bbl Pr 24:26 &gt;&gt; //honest answer like a kiss on the lips//
* &lt;&lt;Bbl Pr 22:21 &gt;&gt; //He who loves a pure heart and whose speech is gracious will have the king for his friend.//
* &lt;&lt;Bbl Pr 16:13 &gt;&gt; //Kings take pleasure in honest lips; they value a man who speaks the truth.//
* 26:18-19 -- //Like a madman shooting firebrands or deadly arrows is a man who deceives his neighbor and says, 'I was only joking!'//
* 19.1 -- //Better a poor man whose walk is blameless than a fool whose lips are perverse.//
* 4.24 -- //Put away perversity from your mouth; keep corrupt talk far from your lips.//
* 8.13 -- //pride and arrogance, evil behavior and perverse speech//
!!!! more buffer
6 12 A scoundrel and villain,
       who goes about with a corrupt mouth,
6 13 who winks with his eye,
       signals with his feet
       and motions with his fingers,
6 14 who plots evil with deceit in his heart
       he always stirs up dissension.

7 21 // With persuasive words she seduces him//

16 29 A violent man entices his neighbor
       and leads him down a path that is not good.
16 30 He who winks with his eye is plotting perversity;
       he who purses his lips is bent on evil.

15 23 A man finds joy in giving an apt reply
       and how good is a timely word!

26 24 A malicious man disguises himself with his lips,
       but in his heart he harbors deceit.
26 25 Though his speech is charming, do not believe him,
       for seven abominations fill his heart.
26 26 His malice may be concealed by deception,
       but his wickedness will be exposed in the assembly.</pre>
</div>
<div title="Spirit" modifier="SDM" created="201010270155" modified="201201040315" book_key="">
<pre>* Grosheide, I Corinthians, p. 68, refers to the threefold sense of the word :
## the Spirit of God, the person of the Holy Ghost -- [[SpiritOfChrist]]
## the sanctified spirit of the believer
## the highest organ of man.
He refers separately to the self-consciousness, or personality of God.
* &lt;&lt;Bbl Job 10:11 &gt;&gt; //You gave me life and showed me kindness, and in Your providence watched over my spirit.//
* F.F. Bruce discusses the term in all its senses in Romans, pp. 44-50.</pre>
</div>
<div title="Spirit-Son" modifier="SDM" created="201211150157" book_key="">
<pre>!! Spirit-Son
* &lt;&lt;Bbl Jn 7:37 &gt;&gt;-39

* &lt;&lt;Bbl Acts 16:6 &gt;&gt;-7
* &lt;&lt;Bbl Rom 8:6 &gt;&gt;-10
* &lt;&lt;Bbl Gal 4:6 &gt;&gt;
</pre>
</div>
<div title="SpiritOfChrist" modifier="SDM" created="201004120330" modified="201301131953" book_key="">
<pre>* [[Spirit]]
* [[Holiness]]
* [[Power]] and [[Gifts]]
* [[Anointing]]
!!! Down payment
* &lt;&lt;Bbl Rom 8:23 &gt;&gt;; &lt;&lt;Bbl 2Cor 5:5 &gt;&gt;; &lt;&lt;Bbl Eph 1:13 &gt;&gt;, &lt;&lt;Bbl Eph 4:30 &gt;&gt;.   &lt;&lt;Bbl 2Cor 1:21 &gt;&gt;-22 .  &lt;&lt;Bbl Num 11:17 &gt;&gt;, p. 40-42.)
* &lt;&lt;Bbl Gn 13:17 &gt;&gt; gives a type of the Holy Spirit as a down-payment or //earnest//. Compare &lt;&lt;Bbl Heb 11:9 &gt;&gt;-16 .
* Consider the craftsman who in advance finishes out one tiny section of the work out of eagerness;
## my granddad does that,
## and I saw a watercolor artist in Cartagena do that.
* The manna in the wilderness
## prefigured the promised land
## ceased upon entry -- [[Joshua-01-01-note]]
* The rock called Ebenezer
!!! Gospel of Luke mentions the Spirit of God
* 1:3   Mary
* 1:15  John (prophecy)
* 1:41  Elizabeth
* 1:25-27   Simeon
* 1:67  Zecharias
* 3:21  Jesus - His baptiem
* 3:16
* 4:1   Jesus - the temptation
* 4:18 Isaiah's statement
</pre>
</div>
<div title="SplitTiddler" modifier="SDM" created="200802180331" modified="201211272056" tags="howto" book_key="">
<pre>/%
|Name|SplitTiddler|
|Source|http://www.TiddlyTools.com/#SplitTiddler|
|Version|1.9.5|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|html|
|Description|split tiddler contents into separate tiddlers|

%/&lt;html&gt;&lt;nowiki&gt;&lt;style&gt;
#tiddlerSplitTiddler .tagged { display:none; }
#tiddlerSplitTiddler .label { font-size:90%;font-style:italic;white-space:nowrap; }
#tiddlerSplitTiddler table, #tiddlerSplitTiddler tr, #tiddlerSplitTiddler td
    { border:0; margin:0; padding:0; }
&lt;/style&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;form&gt;
&lt;table style='width:100%'&gt;&lt;tr&gt;&lt;td style='width:20%'&gt;
    &lt;div class='label'&gt;source tiddler:&lt;/div&gt;
    &lt;select name='src' value='' style='width:99%;padding:2px;margin:0'
        title='select a tiddler containing source material'&gt;
    &lt;option value=''&gt;select a tiddler...&lt;/option&gt;
    &lt;/select&gt;
&lt;/td&gt;&lt;td style='width:20%'&gt;
    &lt;div class='label'&gt;target title format:&lt;/div&gt;
    &lt;input name='titleformat' value='%0 - %1' style='width:99%'
        title='format for target tiddler titles'&gt;
&lt;/td&gt;&lt;td style='width:20%'&gt;
    &lt;div class='label'&gt;output format:&lt;/div&gt;
    &lt;input name='format' value='%4' style='width:99%'
        title='format for target tiddler content'&gt;
&lt;/td&gt;&lt;td style='width:20%'&gt;
    &lt;div class='label'&gt;target field:&lt;/div&gt;
    &lt;input name='fieldname' value='text' style='width:99%'
        title='field to hold content in target tiddler'&gt;
&lt;/td&gt;&lt;td style='width:20%'&gt;
    &lt;div class='label'&gt;add tags:&lt;/div&gt;
    &lt;input name='tags' value='' style='width:99%'
        title='tags for target tiddlers'&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;div style='font-size:80%;font-style:italic;text-align:center;color:gray'&gt;
%0=source title, %1=first line of item, %2=first word of item, %3=item number, %4=item content
&lt;/div&gt;
&lt;div style='float:left;margin-right:1em'&gt;
&lt;div class='label'&gt;split source content by:&lt;/div&gt;
&lt;div style='line-height:2.1em'&gt;
&lt;input type='radio' name='splitby' value='charcount'&gt;every
&lt;input name='charcount' value='1000' onfocus='this.select()' style='width:3em'
    title='split content every N characters'&gt; characters&lt;br&gt;
&lt;input type='radio' name='splitby' value='linecount'&gt;every
&lt;input name='linecount' value='20' onfocus='this.select()' style='width:3em'
    title='split content every N lines'&gt; lines&lt;br&gt;
&lt;input type='radio' name='splitby' value='match' CHECKED&gt;match
&lt;input name='sep' value='\n----\n' onfocus='this.select()' style='width:8em'
    title='match character sequence to split content'&gt;&lt;br&gt;
&amp;nbsp; &lt;input type='checkbox' name='regexp' title='match using regular expressions (text patterns)'&gt;use RegExp text pattern&lt;br&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div style='float:left;margin-right:1em'&gt;
&lt;div class='label'&gt;options:&lt;/div&gt;
&lt;input type='checkbox' name='warn' checked&gt;confirm overwrites&lt;br&gt;
&lt;input type='checkbox' name='show'&gt;show tiddlers when done&lt;br&gt;
&lt;input type='checkbox' name='limit'&gt;create only
&lt;input name='maxtids' value='8' style='width:2em'&gt; tiddlers&lt;br&gt;
&lt;input type='checkbox' name='index' checked&gt;create an index tiddler&lt;br&gt;
&amp;nbsp;&amp;nbsp; index item format:
&lt;input name='indexformat' value='&lt;&lt;tiddler [[%0 - %1]]&gt;&gt;' style='width:10em'
    title='%0=target tiddler title'&gt;
&lt;/div&gt;
&lt;input type='button' style='float:right;height:5em;margin-top:2.5em' value='split tiddler' onclick=&quot;
    var f=this.form;
    if (!f.src.value.length)
        { alert('select a tiddler title'); f.src.focus(); return false; }
    if (!f.titleformat.value.length)
        { alert('enter a target title format'); f.titleformat.focus(); return false; }
    if (!f.src.value.length)
        { alert('enter an output item format'); f.format.focus(); return false; }
    var start=new Date().getTime();
    var src=store.getTiddlerText(f.src.value);
    if (!src) { displayMessage('\x27'+f.src.value+'\x27 not found'); return false; }
    var tags=f.tags.value;
    var parts=[];
    if (f.splitby[0].checked) { /* chars */
        for (var i=0; i&lt;src.length; i+=f.charcount.value)
            parts.push(src.substr(i,f.charcount.value));
    } else if (f.splitby[1].checked) { /* lines */
        var lines=src.split('\n');
        var t=''; var c=f.linecount.value;
        while (lines.length) {
            t+=lines.shift()+'\n'; c--;
            if (!c) { parts.push(t); var c=f.linecount.value; t=''; }
        }
    } else { /* match text/regexp */
        var sep=!f.regexp.checked?f.sep.value.unescapeLineBreaks():new RegExp(f.sep.value);
        var pieces=src.split(sep);
        for (var i=0; i&lt;pieces.length; i++) if (pieces[i].length) parts.push(pieces[i]);
    }
    var msg='Found '+parts.length+' items in \x27'+f.src.value+'\x27. OK to proceed?';
    if (!confirm(msg)) return false;
    if (parts.length) store.suspendNotifications();
    var pad=parts.length.toString().length;
    var tids=[]; var out=[];
    var srctitle=f.src.value;
    var fmt=f.format.value.unescapeLineBreaks();
    var titlefmt=f.titleformat.value.unescapeLineBreaks();
    var fieldname=f.fieldname.value.toLowerCase();
    var indexfmt=f.indexformat.value.unescapeLineBreaks();
    var max=f.limit.checked?f.maxtids.value:parts.length;
    var warn=f.warn.checked;
    for (var p=0; p&lt;max; p++) {
        var lines=parts[p].split('\n');
        var firstline=lines[0];
        var firstword=firstline.split(' ')[0];
        var itemnum=String.zeroPad(p+1,pad);
        if (titlefmt.indexOf('%2')!=-1) /* remove firstword if used in title */
            { var words=lines[0].split(' '); words.shift(); lines[0]=words.join(' '); var discard=!words.length; }
        if (titlefmt.indexOf('%1')!=-1 || discard) /* remove firstline if used in title */
            lines.shift();
        var content=lines.join('\n');
        var args=[srctitle,firstline,firstword,itemnum,content];
        var tid=titlefmt.format(args).replace(/[\[\]\|]/g,'_');
        var txt=fmt.format(args);
        var fields={}; if (fieldname!='text')
            { fields[fieldname]=txt; txt='&lt;&lt;view '+fieldname+' wikified&gt;&gt;'; }
        var tags=tags.format(args);
        if (warn &amp;&amp; store.tiddlerExists(tid) &amp;&amp; !confirm(config.messages.overwriteWarning.format([tid])))
            continue;
        store.saveTiddler(tid,tid,txt,config.options.txtUserName,new Date(),tags,fields);
        if (f.index.checked) out.push(indexfmt.format(args));
        tids.pushUnique(tid);
    }
    var elapsed=(new Date().getTime()-start)/1000;
    if (parts.length) store.resumeNotifications();
    if (tids.length) {
        if (f.index.checked) {
            var tid=f.src.value+'Index';
            if (!warn||!store.tiddlerExists(tid)||confirm(config.messages.overwriteWarning.format([tid])))
                store.saveTiddler(tid,tid,out.join('\n'),config.options.txtUserName,new Date(),[],{});
        }
        store.notifyAll();
        if (f.show.checked) story.displayTiddlers(story.findContainingTiddler(this),tids);
        displayMessage('created '+tids.length+' target tiddlers in '+elapsed+' seconds');
    }
&quot;&gt;&lt;div style='clear:both'&gt;&lt;/div&gt;
&lt;/form&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/html&gt;&lt;&lt;tiddler {{
    var list=place.lastChild.getElementsByTagName('form')[0].src;
    store.forEachTiddler(function(title,tiddler){
        list.options[list.length]=new Option(title,title);
    });
'';}}&gt;&gt;</pre>
</div>
<div title="Stability" modifier="SDM" created="201211141948" modified="201211250020" book_key="">
<pre>James 1:17
* [[Faithfulness]]
* [[Foundation]]</pre>
</div>
<div title="StartupParameters" creator="psd" modifier="colmbritton" created="201102111107" modified="201102161201" tags="features">
<pre>TiddlyWiki obtains its StartupParameters from the //location// portion of it's URL (the bit after the '#'). At it's simplest, the StartupParameters can list the names of the tiddlers to be opened when the TiddlyWiki is opened:
{{{
http://www.tiddlywiki.com/#HelloThere JeremyRuston
}}}
In fact, that usage is equivalent to:
{{{
http://www.tiddlywiki.com/#open:HelloThere open:JeremyRuston
}}}
The complete list of commands is:
|!Command |!Description |!Example |
|open:title |Opens the tiddler with the specified title |http://www.tiddlywiki.com/#open:HelloThere |
|start:safe |Switches to SafeMode |http://www.tiddlywiki.com/#start:safe |
|search:text |Performs a search for the specified text |http://www.tiddlywiki.com/#search:jeremy |
|tag:text |Displays tiddlers tagged with the specified tag |http://www.tiddlywiki.com/#tag:news |
|newTiddler:title |Opens a new tiddler with the specified title in edit mode |http://www.tiddlywiki.com/#newTiddler:&quot;This is a new tiddler&quot; |
|newJournal:titleFormat |Opens a new tiddler with the specified [[Date Format String|Date Formats]] |http://www.tiddlywiki.com/#newJournal:&quot;YYYY MMM DD&quot; |

See the details of the underlying ParameterParser for more details.</pre>
</div>
<div title="Statism" modifier="SDM" created="201009300154" modified="201011031918">
<pre>* &lt;&lt;Bbl Est 3:8 &gt;&gt; //whose customs are different ... and who do not obey the king's laws//
* [[Authority]]</pre>
</div>
<div title="Stealing" modifier="SDM" created="201201022330" modified="201206191547" book_key="">
<pre>* from [[Need]]: &lt;&lt;Bbl Pr 6:30 &gt;&gt;-31 ;   &lt;&lt;Bbl Pr 28:21 &gt;&gt;; &lt;&lt;Bbl Pr 30:9 &gt;&gt;;
* See [[MinorProphets-note]] about Haggai 1:4
* //Theft, thief//</pre>
</div>
<div title="StickyPopupPlugin" modifier="ELSDesignStudios" created="200711260051" tags="systemConfig excludeLists">
<pre>/***
|Name|StickyPopupPlugin|
|Source|http://www.TiddlyTools.com/#StickyPopupPlugin|
|Version|1.0.1|
|Author|Eric Shulman - ELS Design Studios|
|License|http://www.TiddlyTools.com/#LegalStatements &lt;br&gt;and [[Creative Commons Attribution-ShareAlike 2.5 License|http://creativecommons.org/licenses/by-sa/2.5/]]|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides|Popup.onDocumentClick|
|Options|##Configuration|
|Description|allow mouse interactions inside popups without automatically closing them|
Usually, when a TW popup is displayed, it is automatically closed whenever a click occurs //anywhere// in the document, either //inside// or //outside// the popup itself.  This plugin makes popups persistent (a.k.a, &quot;sticky&quot;), allowing you to perform multiple mouse interactions on content //inside// the popup (e.g., entering form fields, opening links, selecting text, etc.), remaining visible until you click //outside// the popup or perform an action that opens another popup (only one popup can be displayed at any given time).
!!!!!Configuration
&lt;&lt;&lt;
You can cause popups to behave in a persistent (&quot;sticky&quot;) manner simply by selecting the option checkbox below.  The selected popup display behavior will be applied to ALL popups in the document automatically.
&gt;&lt;&lt;option chkStickyPopups&gt;&gt; make all popups &quot;sticky&quot;
&gt;{{{usage: &lt;&lt;option chkStickyPopups&gt;&gt;}}}
&lt;&lt;&lt;
!!!!!Usage
&lt;&lt;&lt;
If you are developing your own plugins or inline scripts that create popups programmatically using the core function:
{{{
Popup.create(this)
}}}
you can provide additional parameters that specify the desired CSS classname(s) to assign to the popup DOM element.  The default class when none is specified is simply &quot;popup&quot;.  To create a //sticky// popup, simply enter a custom class combination like this:
{{{
Popup.create(this,null,&quot;sticky popup&quot;)
}}}
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2008.05.16 [1.0.1] added try..catch around addEvent/removeEvent calls to avoid error in Opera
2007.11.25 [1.0.0] initial release - moved from [[CoreTweaks]]
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.StickyPopupPlugin= {major: 1, minor: 0, revision: 1, date: new Date(2008,5,16)};

if (config.options.chkStickyPopups==undefined) config.options.chkStickyPopups=false;

Popup.stickyPopup_onDocumentClick = function(ev)
{
    // if click is in a sticky popup, ignore it so popup will remain visible
    var e = ev ? ev : window.event; var target = resolveTarget(e);
    var p=target; while (p) {
        if (hasClass(p,&quot;popup&quot;) &amp;&amp; (hasClass(p,&quot;sticky&quot;)||config.options.chkStickyPopups)) break;
        else p=p.parentNode;
    }
    if (!p) // not in sticky popup (or sticky popups disabled)... use normal click handling
        Popup.onDocumentClick(ev);
    return true;
};
try{removeEvent(document,&quot;click&quot;,Popup.onDocumentClick);}catch(e){};
try{addEvent(document,&quot;click&quot;,Popup.stickyPopup_onDocumentClick);}catch(e){};
//}}}</pre>
</div>
<div title="StoryMenu" modifier="SDM" created="200607201633" modified="201211260112" tags="menu excludeLists" book_key="">
<pre>{{center{
{{floatleft{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;&lt;tiddler ToggleLeftSidebar&gt;&gt;}}}/%
%/{{small{
&lt;&lt;openStory popup&gt;&gt;&lt;script&gt;
    place.lastChild.className='tiddlyLinkExisting';
&lt;/script&gt;/%
%/ &amp;nbsp; &lt;&lt;tiddler ShowPopup with:
    [[StoryMenu##changes]] &quot;changes&quot; &quot;show recent changes&quot; tiddlyLinkExisting 60em sticky&gt;&gt;/%
%/ &amp;nbsp; {{span{&lt;script&gt;
    place.style.display=readOnly?'none':'inline';
&lt;/script&gt;&lt;&lt;tiddler ShowPopup with:
    [[DocumentSetup]] &quot;setup&quot; &quot;configuration and setup&quot; tiddlyLinkExisting auto sticky&gt;&gt;/%
%/&amp;nbsp; crumbs &lt;&lt;tiddler ToggleBreadcrumbs&gt;&gt;/%
%/}}}
{{smallform{&lt;&lt;unsavedChanges panel&gt;&gt;}}}/%
%/}}}/%
!changes
{{smallform{&lt;&lt;recentChanges 30&gt;&gt;}}}
!end
%/</pre>
</div>
<div title="StoryMenuTop" modifier="SDM" created="201211222023" modified="201211260112" tags="template menu excludeLists" book_key="">
<pre>{{center outline {
{{floatleft{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;&lt;tiddler ToggleLeftSidebar&gt;&gt;}}}/%
%/{{small{
&lt;&lt;openStory popup&gt;&gt;&lt;script&gt;
    place.lastChild.className='tiddlyLinkExisting';
&lt;/script&gt;/%
%/ &amp;nbsp; &lt;&lt;tiddler ShowPopup with:
    [[StoryMenuTop##changes]] &quot;changes&quot; &quot;show recent changes&quot; tiddlyLinkExisting 60em sticky&gt;&gt;/%
%/ &amp;nbsp; {{span{&lt;script&gt;
    place.style.display=readOnly?'none':'inline';
&lt;/script&gt;&lt;&lt;tiddler ShowPopup with:
    [[DocumentSetup]] &quot;setup&quot; &quot;configuration and setup&quot; tiddlyLinkExisting auto sticky&gt;&gt;/%
%/ &amp;nbsp; {{inline{ crumbs &lt;&lt;tiddler ToggleBreadcrumbs&gt;&gt; }}} /%
%/
{{smallform{&lt;&lt;unsavedChanges command&gt;&gt;}}}/%
%/}}} }}}/%
!changes
{{smallform{&lt;&lt;recentChanges 30&gt;&gt;}}}
!end
%/}}}</pre>
</div>
<div title="StorySaverPlugin" modifier="ELSDesignStudios" created="200710051746" modified="200910201719" tags="systemConfig excludeLists">
<pre>/***
|Name|StorySaverPlugin|
|Source|http://www.TiddlyTools.com/#StorySaverPlugin|
|Documentation|http://www.TiddlyTools.com/#StorySaverPluginInfo|
|Version|1.8.3|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Requires|MarkupPostBody|
|Description|save/restore current tiddler view between browser sessions|
Automatically save a list of currently viewed tiddlers (the 'story') in a local cookie, {{{txtSavedStory}}} and then open those tiddlers when the document is reloaded, so you can resume working from the same place you left off!!  Also, use {{{&lt;&lt;saveStory&gt;&gt;}}} and {{{&lt;&lt;openStory&gt;&gt;}}} macros to quickly save/re-display stories stored in tiddlers, using a command link, droplist, or popup display.
!!!!!Documentation
&gt;see [[StorySaverPluginInfo]]
!!!!!Configuration
&lt;&lt;&lt;
&lt;&lt;option chkSaveStory&gt;&gt; use automatic story cookie (reopens tiddlers on startup)
&lt;&lt;option chkStoryAllowAdd&gt;&gt;include 'add a story' command in droplist/popup
&lt;&lt;option chkStoryFold&gt;&gt;fold story tiddlers when opening a story (see [[CollapseTiddlersPlugin]])
&lt;&lt;option chkStoryClose&gt;&gt;close other tiddlers when opening a story
&lt;&lt;option chkStoryTop&gt;&gt;open story tiddlers at top of column
&lt;&lt;option chkStoryBottom&gt;&gt;open story tiddlers at bottom of column
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2009.10.20 1.8.3 fix handling for 'add' item in popup menu
|please see [[StorySaverPluginInfo]] for additional revision details|
2007.10.05 1.0.0 initial release. Moved [[SetDefaultTiddlers]] inline script and rewrote as a {{{&lt;&lt;saveStory&gt;&gt;}}} macro.
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.StorySaverPlugin= {major: 1, minor: 8, revision: 3, date: new Date(2009,10,20)};

var defaults={
    chkSaveStory:       false,
    chkStoryFold:       true,
    chkStoryClose:      true,
    chkStoryAllowAdd:   true,
    chkStoryTop:        true,
    chkStoryBottom:     false
};
for (var id in defaults) if (config.options[id]===undefined)
    config.options[id]=defaults[id];

// if removeCookie() function is not defined by TW core, define it here.
if (window.removeCookie===undefined) {
    window.removeCookie=function(name) {
        document.cookie = name+'=; expires=Thu, 01-Jan-1970 00:00:01 UTC; path=/;';
    }
}

// save or clear story cookie on exit
if (window.coreTweaks_confirmExit==undefined) {
    window.coreTweaks_confirmExit=window.confirmExit;
    window.confirmExit=function() {
        if (config.options.chkSaveStory) { // save cookie
            var links=[];
            story.forEachTiddler(function(title,element){links.push('[['+title+']]');});
            config.options.txtSavedStory=links.join(' ');
            saveOptionCookie('txtSavedStory');
        } else removeCookie('txtSavedStory');
        return window.coreTweaks_confirmExit.apply(this,arguments);
    }
}
//}}}
/***
''apply saved story on startup:'' //important note: the following code is actually located in [[MarkupPostBody]].  This is because it needs to supercede the core's getParameters() function, which is called BEFORE plugins are loaded, preventing the normal plugin-based hijack method from working, while code loaded into [[MarkupPostBody]] will be processed as soon as the document is read, even before the TW main() function is invoked.//
&lt;&lt;tiddler MarkupPostBody&gt;&gt;
***/
//{{{
config.macros.saveStory = {
    label: 'set default tiddlers',
    defaultTiddler: 'DefaultTiddlers',
    prompt: 'store a list of currently displayed tiddlers in another tiddler',
    askMsg: 'Enter the name of a tiddler in which to save the current story:',
    tag: 'story',
    excludeTag: 'excludeStory',
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var tid=params.shift()||'DefaultTiddlers';
        var label=params.shift()||this.label;
        var tip=params.shift()||this.prompt;
        var btn=createTiddlyButton(place,label,tip,this.setTiddler,'button');
        btn.setAttribute('tid',tid);
        btn.setAttribute('extratags','[['+params.join(']] [[')+']]');
    },
    setTiddler: function() {
        var cms=config.macros.saveStory; // abbrev
        // get list of current open tiddlers
        var tids=[];
        story.forEachTiddler(function(title,element){
            var t=store.getTiddler(title);
            if (!t || !t.isTagged(cms.excludeTag)) tids.push('[['+title+']]');
        });
        // get target tiddler
        var tid=this.getAttribute('tid');
        if (!tid || tid=='ask') {
            tid=prompt(cms.askMsg,cms.defaultTiddler);
            if (!tid || !tid.length) return false; // cancelled by user
        }
        if(store.tiddlerExists(tid) &amp;&amp; !confirm(config.messages.overwriteWarning.format([tid])))
            return false;
        tids=tids.join('\n');
        var t=store.getTiddler(tid); var tags=t?t.tags:[];
        var extratags=(this.getAttribute('extratags')||'').readBracketedList();
        for (var i=0; i&lt;extratags.length; i++) tags.pushUnique(extratags[i]);
        tags.pushUnique(cms.tag);
        store.saveTiddler(tid,tid,tids,config.options.txtUserName,new Date(),tags,t?t.fields:null);
        story.displayTiddler(null,tid);
        story.refreshTiddler(tid,null,true);
        displayMessage(tid+' has been '+(t?'updated':'created'));
        return false;
    }
}
//}}}
//{{{
config.macros.openStory = {
    label: 'open story: %0',
    prompt: 'open the set of tiddlers listed in: %0',
    popuplabel: 'stories',
    popupprompt: 'view a set of tiddlers',
    tag: 'story',
    selectprompt: 'select a story...',
    optionsprompt: 'viewing options...',
    foldcmd: '[%0] fold story',
    foldprompt: 'fold story tiddlers when opening a story',
    closecmd: '[%0] close others',
    closeprompt: 'close other tiddlers when opening a story',
    topcmd: '[%0] open at top',
    topprompt: 'open story tiddlers at top of column',
    bottomcmd: '[%0] open at bottom',
    bottomprompt: 'open story tiddlers at bottom of column',
    addcmd: 'add a story...',
    addprompt: 'create a new story',
    excludeTag: 'excludeStory',
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        if (params[0].toLowerCase()=='list') return this.createList(place,params);
        else if (params[0].toLowerCase()=='popup') return this.createPopup(place,params);
        else this.createButton(place,params);
    },
    showStory: function(tid,fold) {
        var co=config.options; // abbrev
        var tids=[];
        var t=store.getTiddler(tid);
        var tagged=store.getTaggedTiddlers(tid,'title');
        if (tagged.length) // if tiddler IS a tag, use tagged tiddlers as story
            for (var i=0; i&lt;tagged.length; i++) tids.push(tagged[i].title);
        else if (t) { // get tiddler list from content
            if (!t.linksUpdated) t.changed();
            for (var i=0; i&lt;t.links.length; i++) {
                var tid=store.getTiddler(t.links[i]);
                if (tid &amp;&amp; !tid.isTagged(this.excludeTag))
                    tids.push(t.links[i]);
            }
        }
        var template=null;
        if (fold||co.chkStoryFold) template='CollapsedTemplate'; // see [[CollapseTiddlersPlugin]]
        if (!store.tiddlerExists('CollapsedTemplate')) template=null;
        if (co.chkStoryClose) story.closeAllTiddlers();
        var pos='top'; var first=tids[0];
        if (!story.isEmpty() &amp;&amp; co.chkStoryBottom) { pos='bottom'; tids=tids.reverse(); }
        story.displayTiddlers(pos,tids,template);
        var cmd='var t=story.getTiddler(&quot;'+first+'&quot;);if(t)window.scrollTo(0,t.offsetTop);';
        var delay=config.options.chkAnimate?config.animDuration+100:0;
        setTimeout(cmd,delay);
    },
    createButton: function(place,params) {
        var tid=params[0]||'';
        var label=params[1]||this.label; label=label.format([tid]);
        var tip=params[2]||this.prompt; tip=tip.format([tid]);
        var fold=(params[3]&amp;&amp;(params[3].toLowerCase()=='fold'))||config.options.chkStoryFold;
        var fn=function(){config.macros.openStory.showStory(this.getAttribute('tid'),this.getAttribute('fold')); return false; };
        var btn=createTiddlyButton(place,label,tip,fn,'button');
        btn.setAttribute('tid',tid);
        if (fold) btn.setAttribute('fold',fold);
    },
    createPopup: function(place,params) {
        params.shift(); // discard 'popup' keyword
        var label=params.shift()||this.popuplabel;
        var tip=params.shift()||this.popupprompt;
        var btn=createTiddlyButton(place,label,tip,this.showPopup,'button');
        btn.setAttribute('filter',params.shift()||config.macros.openStory.tag);
    },
    showPopup: function(ev) { var e=ev||window.event;
        var co=config.options; // abbrev
        var cmo=config.macros.openStory; // abbrev
        var indent='\xa0\xa0';
        var p=Popup.create(this); if (!p) return false;
        createTiddlyText(createTiddlyElement(p,'li'),cmo.selectprompt);
        var stories=store.filterTiddlers('[tag['+this.getAttribute('filter')+']]');
        for (var s=0; s&lt;stories.length; s++) {
            var label=indent+stories[s].title;
            var tip=cmo.prompt.format([stories[s].title]);
            var fn=function(){config.macros.openStory.showStory(this.getAttribute('tid'));return false;};
            var btn=createTiddlyButton(createTiddlyElement(p,'li'),label,tip,fn,'button');
            btn.setAttribute('tid',stories[s].title);
        }
        createTiddlyText(createTiddlyElement(p,'li'),cmo.optionsprompt);
        if (store.tiddlerExists('CollapsedTemplate')) {
            var label=indent+cmo.foldcmd.format([co.chkStoryFold?'x':'\xa0\xa0']);
            var tip=cmo.foldprompt;
            var fn=function(){ config.macros.option.propagateOption(
                'chkStoryFold','checked',!config.options.chkStoryFold,'input'); return false; };
            var btn=createTiddlyButton(createTiddlyElement(p,'li'),label,tip,fn,'button');
        }
        var label=indent+cmo.closecmd.format([co.chkStoryClose?'x':'\xa0\xa0']);
        var tip=indent+cmo.closeprompt;
        var fn=function(){ config.macros.option.propagateOption(
            'chkStoryClose','checked',!config.options.chkStoryClose,'input'); return false; };
        var btn=createTiddlyButton(createTiddlyElement(p,'li'),label,tip,fn,'button');
        if (!co.chkStoryClose) {
            var label=indent+cmo.topcmd.format([co.chkStoryTop?'x':'\xa0\xa0']);
            var tip=indent+cmo.topprompt;
            var fn=function(){
                config.macros.option.propagateOption(
                    'chkStoryTop','checked',!config.options.chkStoryTop,'input');
                config.macros.option.propagateOption(
                    'chkStoryBottom','checked',!config.options.chkStoryTop,'input');
                return false;
            };
            var btn=createTiddlyButton(createTiddlyElement(p,'li'),label,tip,fn,'button');
            var label=indent+cmo.bottomcmd.format([co.chkStoryBottom?'x':'\xa0\xa0']);
            var tip=indent+cmo.botprompt;
            var fn=function(){
                config.macros.option.propagateOption(
                    'chkStoryBottom','checked',!config.options.chkStoryBottom,'input');
                config.macros.option.propagateOption(
                    'chkStoryTop','checked',!config.options.chkStoryBottom,'input');
                return false;
            };
            var btn=createTiddlyButton(createTiddlyElement(p,'li'),label,tip,fn,'button');
        }
        if (!readOnly &amp;&amp; co.chkStoryAllowAdd) {
            var label=cmo.addcmd;
            var tip=cmo.addprompt;
            var fn=config.macros.saveStory.setTiddler;
            createTiddlyElement(createTiddlyElement(p,'li'),'hr');
            var btn=createTiddlyButton(createTiddlyElement(p,'li'),label,tip,fn,'button');
        }
        Popup.show();
        e.cancelBubble=true;if(e.stopPropagation)e.stopPropagation();
        return false;
    },
    createList: function(place,params) {
        var cmo=config.macros.openStory; // abbrev
        var s=createTiddlyElement(place,'select',null,'storyListbox');
        s.size=1;
        s.onchange=function() {
            if (this.value=='_fold') {
                config.macros.option.propagateOption('chkStoryFold','checked',
                    !config.options.chkStoryFold,'input');
                cmo.refreshList();
            } else if (this.value=='_close') {
                config.macros.option.propagateOption('chkStoryClose','checked',
                    !config.options.chkStoryClose,'input');
                cmo.refreshList();
            } else if (this.value=='_top') {
                config.macros.option.propagateOption('chkStoryTop','checked',
                    !config.options.chkStoryTop,'input');
                cmo.refreshList();
            } else if (this.value=='_bottom') {
                config.macros.option.propagateOption('chkStoryBottom','checked',
                    !config.options.chkStoryBottom,'input');
                cmo.refreshList();
            } else if (this.value=='_add')
                config.macros.saveStory.setTiddler.apply(this,arguments);
            else cmo.showStory(this.value);
        }
        params.shift(); // discard 'list' keyword
        s.setAttribute('filter',params.shift()||cmo.tag);
        setStylesheet('.storyListbox { width:100%; }', 'StorySaverStyles');
        store.addNotification(null,this.refreshList); this.refreshList();
        return;
    },
    refreshList: function() {
        var cmo=config.macros.openStory; // abbrev
        var indent='\xa0\xa0\xa0\xa0';
        var lists=document.getElementsByTagName('select');
        for (var i=0; i&lt;lists.length; i++) { if (lists[i].className!='storyListbox') continue;
            var here=lists[i];
            var stories=store.filterTiddlers('[tag['+here.getAttribute('filter')+']]');
            while (here.length) here.options[0]=null; // remove current list items
            here.options[here.length]=new Option(cmo.selectprompt,'',true,true);
            for (var s=0; s&lt;stories.length; s++)
                here.options[here.length]=new Option(indent+stories[s].title,stories[s].title);
            if (!readOnly &amp;&amp; config.options.chkStoryAllowAdd)
                here.options[here.length]=new Option(cmo.addcmd,'_add');
            here.options[here.length]=new Option(cmo.optionsprompt,'');
            if (store.tiddlerExists('CollapsedTemplate')) {
                var msg=cmo.foldcmd.format([config.options.chkStoryFold?'x':'\xa0\xa0']);
                here.options[here.length]=new Option(indent+msg,'_fold');
            }
            var msg=cmo.closecmd.format([config.options.chkStoryClose?'x':'\xa0\xa0']);
            here.options[here.length]=new Option(indent+msg,'_close',false,false);
            if (!config.options.chkStoryClose) {
                var msg=cmo.topcmd.format([config.options.chkStoryTop?'x':'\xa0\xa0']);
                here.options[here.length]=new Option(indent+msg,'_top',false,false);
                var msg=cmo.bottomcmd.format([config.options.chkStoryBottom?'x':'\xa0\xa0']);
                here.options[here.length]=new Option(indent+msg,'_bottom',false,false);
            }
        }
    }
}
//}}}</pre>
</div>
<div title="StorySaverPluginInfo" modifier="ELSDesignStudios" created="200710051746" modified="200910201719" tags="howto excludeLists">
<pre>/***
|Name|StorySaverPlugin|
|Source|http://www.TiddlyTools.com/#StorySaverPlugin|
|Documentation|http://www.TiddlyTools.com/#StorySaverPluginInfo|
|Version|1.8.3|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|documentation|
|Requires|MarkupPostBody|
|Description|documentation for [[StorySaverPlugin]]|
Automatically saves a list of currently viewed tiddlers (the &quot;story&quot;) in a local cookie, {{{txtSavedStory}}} and then opens those tiddlers when the document is subsequently reloaded, allowing you to quickly resume working with the document from the same place you left off!! The plugin also defines {{{&lt;&lt;saveStory&gt;&gt;}}} and {{{&lt;&lt;openStory&gt;&gt;}}} macros that allow you to quickly save/re-display stories stored in tiddlers, using simple, one-click command links or droplists.
!!!!!Usage
&lt;&lt;&lt;
If a document URL does not contain a paramifier (i.e., a &quot;#...&quot; suffix), then the saved story cookie (if any) will be used //as if// it had been entered as a permaview (e.g., a &quot;#tiddler tiddler tiddler...&quot; suffix on the URL), bypassing the [[DefaultTiddlers]] definition.  This behavior is automatically applied whenever the plugin is installed in your document.  You can enable/disable the automatic cookie-based StorySaver feature by using the checkbox below:
&gt;&lt;&lt;option chkSaveStory&gt;&gt; enable StorySaverPlugin
&gt;//usage:// {{{&lt;&lt;option chkSaveStory&gt;&gt;}}}
You can also temporarily //bypass// the redisplay of a saved story ''without disabling the StorySaver cookie'' by including a trailing &quot;#&quot; at the end of the document URL.  This will cause your document to be loaded into the browser without displaying //any// initial tiddlers at all.  Alternatively, you can enter {{{#story:storyname}}} on the end of the URL (e.g., {{{#story:DefaultTiddlers}}}) to display any specific saved story, regardless of the value of the cookie-based saved story.

__''saveStory macro:''__
The {{{&lt;&lt;saveStory&gt;&gt;}}} macro lets you write the list of currently viewed tiddlers to a specified tiddler name (e.g., DefaultTiddlers, MyFavorites, etc.).  Tiddlers containing saved stories are automatically tagged with &lt;&lt;tag story&gt;&gt;, so that they can be recognized by the {{{&lt;&lt;storyViewer&gt;&gt;}}} macro (see [[StoryViewerPlugin]]).  The syntax for the {{{&lt;&lt;saveStory&gt;&gt;}}} macro is:
{{{
&lt;&lt;saveStory storyname label tooltip tag tag tag...&gt;&gt;
}}}
*''storyname''&lt;br&gt;is the target tiddler in which to save the current story.  If you use the keyword, ''ask'', in place of the tiddlername, you will be prompted to enter a tiddler title when saving the story (default: DefaultTiddlers).
*''label'' and ''tooltip''&lt;br&gt;are the link text and mouseover guide-text
*''tag tag tag...'' (optional)&lt;br&gt;are extra tags that are added when saving a story tiddler (in addition to the default&lt;&lt;tag story&gt;&gt;tag).

__''openStory macro:''__
To redisplay a saved story, the {{{&lt;&lt;openStory&gt;&gt;}}} macro can be used to embed either a droplist of all saved stories, or a link for a specified story.  Selecting from the droplist or clicking the link opens the corresponding set of tiddlers.
{{{
&lt;&lt;openStory list tagValue&gt;&gt;
&lt;&lt;openStory popup label tooltip tagValue&gt;&gt;
&lt;&lt;openStory storyname label tooltip fold&gt;&gt;
}}}
*''list''&lt;br&gt;shows a droplist of all saved stories, plus additional commands/viewing options.  Selecting a story opens the corresponding tiddlers.
*''popup''&lt;br&gt;shows a popup display containing a list of all saved stories, plus additional commands/viewing options.  Selecting a story opens the corresponding tiddlers.  ''label'' and ''tooltip'' are optional and provide alternative display text and mouseover help text, respectively.
*''storyname''&lt;br&gt;is a tiddler containing a saved story.  //Note: You can also use a tag value as a storyname, in which case the story view will be composed of all tiddlers tagged with the specified tag value.//
*''label''&lt;br&gt;is the command link text (default: &quot;open story: %0&quot;, where %0 is replaced by the storyname).
*''tooltip''&lt;br&gt;is the command mouseover guide-text (default: &quot;open the set of tiddlers listed in: '%0'&quot;),
*''tagValue'' (optional, default='story')&lt;br&gt;specifies an alternative tag value to match when listing story tiddlers.  Note: if MatchTagsPlugin is installed, you can also use a compound //boolean tag expression//, enclosed within doubled square brackets.
*''fold''&lt;br&gt;If this optional keyword is present, the story tiddlers are initially 'folded' using [[CollapsedTemplate]] instead of the usual [[ViewTemplate]] (see [[CollapseTiddlersPlugin]]).

__''excludeStory tag:''__
Any tiddlers tagged with&lt;&lt;tag excludeStory&gt;&gt;will be automatically omitted when creating new story tiddlers with {{{&lt;&lt;saveStory&gt;&gt;}}}.  Similarly, if a tiddler that is part of a saved story is tagged with&lt;&lt;tag excludeStory&gt;&gt;, it will not be displayed when that story is opened via {{{&lt;&lt;openStory&gt;&gt;}}}.

__''PermaView command link enhancement:''__
In order to further aide in saving/restoring the list of tiddlers currently being viewed, the core {{{&lt;&lt;permaview&gt;&gt;}}} command has been enhanced, so its link value always includes the current story view tiddler list as a paramifier in the URL.  This let you quickly use the browser's right-click menu directly on the permalink command text to &quot;bookmark this link...&quot;.  Depending upon your system, you may also be able to drag the 'permaview' link directly from the page and drop it onto your desktop to create an instant permaview-bearing URL shortcut icon.
&lt;&lt;&lt;
!!!!!Examples
&lt;&lt;&lt;
*{{{&lt;&lt;saveStory TestStory &quot;save a test story&quot;&gt;&gt;}}}&lt;br&gt;{{smallform{&lt;&lt;saveStory TestStory &quot;save a test story&quot;&gt;&gt;}}}
*{{{&lt;&lt;openStory TestStory&gt;&gt;}}}&lt;br&gt;&lt;&lt;openStory TestStory&gt;&gt;
*{{{&lt;&lt;openStory list&gt;&gt;}}}&lt;br&gt;{{smallform{&lt;&lt;openStory list&gt;&gt;}}}
*{{{&lt;&lt;openStory popup label tooltip&gt;&gt;}}}&lt;br&gt;{{smallform{&lt;&lt;openStory popup&gt;&gt;}}}
&lt;&lt;&lt;
!!!!!Configuration
&lt;&lt;&lt;
&lt;&lt;option chkSaveStory&gt;&gt; use automatic story cookie (reopens tiddlers on startup)
&lt;&lt;option chkStoryAllowAdd&gt;&gt;include 'add a story' command in droplist/popup
&lt;&lt;option chkStoryFold&gt;&gt;fold story tiddlers when opening a story (see [[CollapseTiddlersPlugin]])
&lt;&lt;option chkStoryClose&gt;&gt;close other tiddlers when opening a story
&lt;&lt;option chkStoryTop&gt;&gt;open story tiddlers at top of column
&lt;&lt;option chkStoryBottom&gt;&gt;open story tiddlers at bottom of column
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2009.10.20 1.8.3 fix handling for 'add' item in popup menu
2009.08.29 1.8.2 added 'return false' to all button handlers to fix IE page-transition error
2009.08.23 1.8.1 fixed 'excludeStory' handling for links to missing tiddlers
2009.08.20 1.8.0 added 'excludeStory' tag handling
2009.07.27 1.7.1 corrected test for {{{chkStoryAllowAdd}}} when rendering //list// output
2009.07.27 1.7.0 added options: {{{chkStoryAllowAdd=true}}}, {{{chkStoryTop=true}}}, and {{{chkStoryBottom=false}}}.  Also, autoscroll to first tiddler in story
2009.07.26 1.6.0 added optional 'extratags' param to {{{&lt;&lt;saveStory&gt;&gt;}}} and 'tagfilter' to {{{&lt;&lt;openStory&gt;&gt;}}}
2009.07.06 1.5.1 in setTiddler(), use pushUnique() to avoid double 'story' tag
2009.04.24 1.5.0 added optional 'fold' param to {{{&lt;&lt;openStory StoryName ...&gt;&gt;}}} macro
2008.09.07 1.4.3 added removeCookie() function for compatibility with [[CookieManagerPlugin]]
2008.07.11 1.4.2 in confirmExit(), corrected bracketing for titles containing spaces
2008.03.10 [*.*.*] plugin size reduction: documentation moved to [[StorySaverPluginInfo]]
2008.01.01 1.4.1 sort list of stories alphabetically
2008.01.01 1.4.0 added popup option
2007.12.31 1.3.1 instead of readBracketedList(), use internal tiddler.links[] to retrieve story list from tiddler content. Allows more flexible formatting of story tiddler content: anything content that is not a tiddler link is automatically filtered out of the list.
2007.10.23 1.3.0 split {{{&lt;&lt;storyViewer&gt;&gt;}}} macro definition into stand-alone [[StoryViewerPlugin]] to allow separate installation of story saving vs. story viewing features.
2007.10.21 1.2.0 added {{{&lt;&lt;openStory&gt;&gt;}}} and {{{&lt;&lt;storyViewer&gt;&gt;}}} macros.
2007.10.20 1.1.0 in setTiddler(), automatically add &quot;story&quot; tag to saved story tiddlers
2007.10.18 1.0.1 added default initialization for chkSaveStory option value.  Also, in setTiddler(), call displayTiddler() after saving story to ensure that altered tiddler is shown to the user.
2007.10.05 1.0.0 initial release.   Moved [[SetDefaultTiddlers]] inline script and rewrote as a {{{&lt;&lt;saveStory&gt;&gt;}}} macro.  Moved permaview &quot;mouseover HREF&quot; enhancement from [[CoreTweaks]].
&lt;&lt;&lt;</pre>
</div>
<div title="StoryViewerPlugin" modifier="ELSDesignStudios" created="200710230906" modified="201103111137" tags="systemConfig excludeLists">
<pre>/***
|Name|[[StoryViewerPlugin]]|
|Source|http://www.TiddlyTools.com/#StoryViewerPlugin|
|Documentation|http://www.TiddlyTools.com/#StoryViewerPluginInfo|
|Version|1.4.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Description|view a set of tiddlers using a droplist, &quot;first/previous/next/last&quot; links, or timed slideshow|
The {{{&lt;&lt;storyViewer&gt;&gt;}}} macro allows you to quickly ''display //and// navigate between a set of tiddlers'', using a droplist of titles and/or individual &quot;first/previous/next/last&quot; buttons/text links.  It also provides a &quot;slideshow&quot; feature that permits you to ''present one tiddler at a time with a countdown timer to automatically advance to the next tiddler'' after a specified number of seconds.
!!!!!Documentation
&gt; see [[StoryViewerPluginInfo]]
!!!!!Revisions
&lt;&lt;&lt;
2011.03.11 1.4.0 added 'sort:fieldname' parameter
2011.01.24 1.3.4 in droplist onchange handler, don't clear slideshow 'started' flag (allows slideshow to continue after manual navigation)
|please see [[StoryViewerPluginInfo]] for additional revision details|
2007.10.23 1.0.0 Initial release, split {{{&lt;&lt;storyViewer&gt;&gt;}}} macro definition from [[StorySaverPlugin]] to allow separate installation of story saving vs. story viewing features.
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.StoryViewerPlugin= {major: 1, minor: 4, revision: 0, date: new Date(2011,3,11)};

config.macros.storyViewer = {
    tag:            &quot;story&quot;,
    storynotfoundmsg:   &quot;'%0' is an empty/unrecognized story&quot;,
    firstcmd:       &quot;first&quot;,
    firstbutton:        &quot;&lt;&lt;&quot;,
    firstmsg:       &quot;first: '%0'&quot;,
    nextcmd:        &quot;next&quot;,
    nextbutton:     &quot;&gt;&quot;,
    nextmsg:        &quot;next: '%0'&quot;,
    previouscmd:        &quot;previous&quot;,
    previousbutton:     &quot;&lt;&quot;,
    prevmsg:        &quot;previous: '%0'&quot;,
    lastcmd:        &quot;last&quot;,
    lastbutton:     &quot;&gt;&gt;&quot;,
    lastmsg:        &quot;last: '%0'&quot;,
    refreshmsg:     &quot;redisplay '%0'&quot;,
    refreshmsg:     &quot;&quot;,
    autostart:      false,
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {

        var parsed=paramString.parseParams('anon',null,true,false,false);
        var here=story.findContainingTiddler(place);
        if (here) var tid=here.getAttribute(&quot;tiddler&quot;);
        var storyname=&quot;&quot;;
        var p=params.shift();
        var keywords=['first','previous','here','next','last','list','links','timer','sort'];
        if (!p || keywords.indexOf(p.split(':')[0])!=-1) {
            // find story from current tiddler name
            if (!tid) return; // not in a tiddler... do nothing!
            var stories=store.getTaggedTiddlers(this.tag);
            if (!stories) return;
            for (var s=0; s&lt;stories.length; s++) {
                if (!stories[s].linksUpdated) stories[s].changed();
                var tids=stories[s].links.slice(0);
                if (tids.contains(tid)) { storyname=stories[s].title; break; }
            }
            if (!storyname.length) return; // current tiddler is not part of a saved story
        }
        else { storyname=p; p=params.shift(); } // user-specified story name

        var sortby=getParam(parsed,'sort','title');
        var tids=this.getStory(storyname,sortby); // get tiddler list

        var target=null;
        switch (p?p.split(':')[0]:'') {
            case 'first':
                target=tids[0];
                break;
            case 'previous':
                var i=tids.indexOf(tid);
                if (i!=-1) var target=tids[Math.max(i-1,0)];
                break;
            case 'here':
                if (tid) target=tid;
                break;
            case 'next':
                var i=tids.indexOf(tid);
                if (i!=-1) var target=tids[Math.min(i+1,tids.length-1)];
                break;
            case 'last':
                target=tids[tids.length-1];
                break;
            case 'links':
                this.renderAllLinks(place,storyname);
                break;
            case 'timer':
                var delay=parseInt(getParam(parsed,'timer',15))*1000; // msecs between slides
                var autostart=params[0]=='autostart'; if (autostart) params.shift();
                var action=params[0]; // null/close/fold
                this.renderTimer(place,tids,tid,delay,autostart,action);
                break;
            case 'list':
            default:
                var prompt=getParam(parsed,'prompt',storyname+'...');
                var nobuttons=params.contains(&quot;nobuttons&quot;);
                var allbuttons=params.contains(&quot;allbuttons&quot;);
                var onlybuttons=params.contains(&quot;onlybuttons&quot;);
                this.renderList(place,tids,tid,storyname,prompt,nobuttons,allbuttons,onlybuttons);
                break;
        }
        var label=getParam(parsed,'label',params[0]||target);
        if (target) this.renderLink(place,tid,target,label);
    },
    getStory: function(storyname,sortby) { // READ TIDDLER LIST
        var tids=[];
        var fn=store.getMatchingTiddlers||store.getTaggedTiddlers;
        var tagged=store.sortTiddlers(fn.apply(store,[storyname]),sortby||'title');
        if (tagged.length) // if storyname is a tag, get tagged tiddlers rather than links
            for (var t=0; t&lt;tagged.length; t++) tids.push(tagged[t].title);
        else {
            var t=store.getTiddler(storyname);
            if (t &amp;&amp; !t.linksUpdated) t.changed();
            var tids=t?t.links.slice(0):[];
        }
        return tids;
    },
    renderLink: function(place,tid,target,label) {
        // override default labelling with specified text (if any)
        if (tid==target) { // self-referential links turn into 'refresh links'
            var btn=createTiddlyButton(place,null,this.refreshmsg.format([tid]), function() {
                var here=story.findContainingTiddler(place).getAttribute(&quot;tiddler&quot;);
                story.refreshTiddler(here,null,true);
            });
            wikify(label,btn);
        }
        else // create link
            wikify(label,createTiddlyLink(place,target,false));
    },
    renderAllLinks: function(place,storyname) {
        var out=&quot;{{floatleft{&quot;;
        out+=&quot;&lt;&lt;storyViewer [[&quot;+storyname+&quot;]] first first&gt;&gt; &amp;nbsp;&quot;;
        out+=&quot;&lt;&lt;storyViewer [[&quot;+storyname+&quot;]] previous previous&gt;&gt; &amp;nbsp;&quot;;
        out+=&quot;}}}&quot;;
        out+=&quot;{{floatright{&quot;;
        out+=&quot;&amp;nbsp; &lt;&lt;storyViewer [[&quot;+storyname+&quot;]] next next&gt;&gt;&quot;;
        out+=&quot;&amp;nbsp; &lt;&lt;storyViewer [[&quot;+storyname+&quot;]] last last&gt;&gt;&quot;;
        out+=&quot;}}}&quot;;
        out+=&quot;{{center{&lt;&lt;storyViewer [[&quot;+storyname+&quot;]] here&gt;&gt;}}}&quot;;
        wikify(out,place);
    },
    renderList: function(place,tids,tid,storyname,prompt,nobuttons,allbuttons,onlybuttons) {
        var h=&quot;&quot;;
        h+='&lt;form style=&quot;display:inline&quot;&gt;';
        if ((!nobuttons||onlybuttons) &amp;&amp; allbuttons) {
            h+='&lt;input type=&quot;button&quot; value=&quot;'+this.firstbutton+'&quot; ';
            h+='    style=&quot;padding:0&quot; title=&quot;'+(tids[0]?this.firstmsg.format([tids[0]]):'')+'&quot;';
            h+=' onclick=&quot;if (this.form.list.length&lt;2) return; ';
            h+='    this.form.list.selectedIndex=1; this.form.list.onchange();&quot;&gt;';
        }
        if (!nobuttons||onlybuttons) {
            h+='&lt;input type=&quot;button&quot; value=&quot;'+this.previousbutton+'&quot; style=&quot;padding:0 0.3em&quot;';
            h+=' onclick=&quot;if (this.form.list.length&lt;2) return; ';
            h+='    var i=this.form.list.selectedIndex-1; if (i&lt;1) i=1; ';
            h+='    this.form.list.selectedIndex=i; this.form.list.onchange();&quot;';
            h+=' onmouseover=&quot;if (this.form.list.length&lt;2) return; ';
            h+='    var i=this.form.list.selectedIndex-1; if (i&lt;1) i=1; ';
            h+='    var v=this.form.list.options[i].value; if (!v.length) return; ';
            h+='    this.title=config.macros.storyViewer.prevmsg.format([v]);&quot;&gt;';
        }
        h+='&lt;select size=&quot;1&quot; name=&quot;list&quot;';
        if (onlybuttons) h+=' style=&quot;display:none;&quot;';
        h+=' onchange=&quot;if (this.value) story.displayTiddler(this,this.value);&quot;&gt;';
        h+='&lt;option value=&quot;&quot;&gt;'+prompt+'&lt;/option&gt;';
        for (i=0; i&lt;tids.length; i++) {
            h+='&lt;option '+
                (tids[i]==tid?'selected ':'')+
                'value=&quot;'+tids[i]+'&quot;&gt;\xa0\xa0'+tids[i]+'&lt;/option&gt;';
        }
        h+='&lt;/select&gt;';
        if (!nobuttons||onlybuttons) {
            h+='&lt;input type=&quot;button&quot; value=&quot;'+this.nextbutton+'&quot; style=&quot;padding:0 0.3em&quot;';
            h+=' onclick=&quot;var i=this.form.list.selectedIndex+1; ';
            h+='    if (i&gt;this.form.list.options.length-1) i=this.form.list.options.length-1; ';
            h+='    this.form.list.selectedIndex=i; this.form.list.onchange();&quot;';
            h+=' onmouseover=&quot;var i=this.form.list.selectedIndex+1; ';
            h+='    if (i&gt;this.form.list.options.length-1) i=this.form.list.options.length-1; ';
            h+='    var v=this.form.list.options[i].value; if (!v.length) return;';
            h+='    this.title=config.macros.storyViewer.nextmsg.format([v]);&quot;&gt;';
        }
        if ((!nobuttons||onlybuttons) &amp;&amp; allbuttons) {
            h+='&lt;input type=&quot;button&quot; value=&quot;'+this.lastbutton+'&quot; ';
            h+='    style=&quot;padding:0&quot; title=&quot;'+(tids[tids.length-1]?this.lastmsg.format([tids[tids.length-1]]):'')+'&quot;';
            h+=' onclick=&quot;this.form.list.selectedIndex=this.form.list.options.length-1; this.form.list.onchange();&quot;&gt;';
        }
        h+='&lt;/form&gt;';
        createTiddlyElement(place,&quot;span&quot;).innerHTML=h;
    },
    renderTimer: function(place,tids,tid,delay,autostart,action) {
        var now=new Date().getTime(); // msec
        var target=createTiddlyElement(null,'input',now+Math.random()); // unique ID
        target.setAttribute('type','button'); target.style.padding='0';
        place.appendChild(target);
        target.tid      =tids[Math.min(tids.indexOf(tid)+1,tids.length-1)]||''; // next tiddler
        target.action       =action;
        target.formatTimer  =this.formatTimer;
        target.start        =this.startTimer;
        target.stop     =this.stopTimer;
        target.onmouseover  =this.pauseTimer;
        target.onmouseout   =this.resumeTimer;
        target.tick     =this.timerTick;
        target.onclick      =this.timerClick;
        target.next     =this.timerNext;
        target.start(delay,autostart);
    },
    formatTimer: function(t) {
        return '0:'+String.zeroPad(Math.floor(t/1000),2);
    },
    startTimer: function(delay,start) {
        var co=config.options; // abbrev
        start=config.macros.storyViewer.started=start||config.macros.storyViewer.started;
        var now=new Date().getTime(); // msec
        this.started=start;
        this.delay=delay;
        this.paused=start?0:delay;
        this.stopTime=now+delay; // msec
        this.title='CLICK='+(start?'reset':'start')+&quot; slideshow timer... next: '&quot;+this.tid+&quot;'&quot;;
        this.style.cursor='pointer';
        this.value=this.formatTimer(delay);
        if (start) {
            var code=&quot;var e=document.getElementById('&quot;+this.id+&quot;'); if(e)e.tick()&quot;;
            this.timer=setTimeout(code,500);
        }
        return false;
    },
    stopTimer: function() {
        this.timer=clearTimeout(this.timer);
        this.started=config.macros.storyViewer.started=false;
        this.paused=0;
        this.title=&quot;CLICK=start slideshow timer... next: '&quot;+this.tid+&quot;'&quot;;
        this.value=this.formatTimer(this.delay);
        return false;
    },
    pauseTimer: function() {
        if (!this.started) return;
        var now=new Date().getTime(); // msec
        this.paused=Math.max(this.stopTime-now,0);
        this.stopTime=now+this.paused;
        return false;
    },
    resumeTimer: function() {
        if (!this.started || !this.paused) return;
        var now=new Date().getTime(); // msec
        this.stopTime=now+this.paused;
        this.paused=0;
        return false;
    },
    timerTick: function() {
        var now=new Date().getTime(); // msec
        if (!this.started)
            this.stopTime=now+this.delay;
        else if (this.paused) {
            this.stopTime=now+this.paused;
            this.title=&quot;[PAUSED] MOUSEOUT=resume, CLICK=reset... next: '&quot;+this.tid+&quot;'&quot;;
        }
        var remaining=this.stopTime-now;
        if (remaining&gt;0) {
            if (this.started &amp;&amp; !this.paused) this.value=this.formatTimer(remaining);
            var code=&quot;var e=document.getElementById('&quot;+this.id+&quot;'); if(e)e.tick()&quot;;
            this.timer=setTimeout(code,500);
        } else {
            this.stop();
            this.next();
        }
        return false;
    },
    timerClick: function() {
        return this.started?this.stop():this.start(this.delay,true);
    },
    timerNext: function() { // OPEN NEXT TIDDLER
        var here=story.findContainingTiddler(this);
        config.macros.storyViewer.started=true; // next slide autostarts to continue slideshow
        if (this.tid) story.displayTiddler(here,this.tid);
        config.macros.storyViewer.started=false;
        if (!here) return false;
        var t=here.getAttribute('tiddler');
        if (this.action=='close') story.closeTiddler(t);
        if (this.action=='fold' &amp;&amp; config.commands.collapseTiddler) // see CollapseTiddlerPlugin
            config.commands.collapseTiddler.handler(null,here,t);
        return false;
    }
}
//}}}
//{{{
config.paramifiers.story = {
    onstart: function(v) {
        var t=store.getTiddler(v); if (t) t.changed();
        var list=t?t.links:store.getTiddlerText(v,&quot;&quot;).parseParams(&quot;open&quot;,null,false);
        story.displayTiddlers(null,list);
    }
};
//}}}</pre>
</div>
<div title="StoryViewerPluginInfo" modifier="ELSDesignStudios" created="200710230906" modified="201103111136" tags="howto excludeLists">
<pre>/***
|Name|StoryViewerPluginInfo|
|Source|http://www.TiddlyTools.com/#StoryViewerPlugin|
|Documentation|http://www.TiddlyTools.com/#StoryViewerPluginInfo|
|Version|1.4.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|documentation|
|Description|documentation for StoryViewerPlugin|
The {{{&lt;&lt;storyViewer&gt;&gt;}}} macro allows you to quickly ''display //and// navigate between a set of tiddlers'', using a droplist of titles and/or individual &quot;first/previous/next/last&quot; buttons/text links.  It also provides a &quot;slideshow&quot; feature that permits you to ''present one tiddler at a time with a countdown timer to automatically advance to the next tiddler'' after a specified number of seconds.
!!!!!Usage
&lt;&lt;&lt;
{{{
&lt;&lt;storyViewer storyname|tagvalue list buttonoption prompt:... sort:...&gt;&gt;
&lt;&lt;storyViewer storyname|tagvalue first|previous|here|next|last sort:...&gt;&gt;
&lt;&lt;storyViewer storyname|tagvalue links sort:fieldname&gt;&gt;
&lt;&lt;storyViewer storyname|tagvalue timer:nnn autostart close|fold sort:...&gt;&gt;
}}}
where:
* ''storyname'' or ''tagvalue''&lt;br&gt;specifies a set of tiddler titles, defined either by matching a tag value, or by creating a tiddler, tagged with &lt;&lt;tag story&gt;&gt;, containing a space-separated list of titles.  //Note: You can use the {{{&lt;&lt;saveStory&gt;&gt;}}} macro (see [[StorySaverPlugin]]) to automatically create stories using the titles of the tiddlers that are currently being viewed.//  If you omit the storyname/tagname parameter, the plugin will attempt to identify a suitable story by locating the current tiddler title within a saved story tiddler.  The story view controls are not displayed unless the current tiddler title is explicitly found in at least one saved story.
** Note: if [[MatchTagsPlugin]] is installed, you can use a compound //boolean tag expression//, enclosed within doubled square brackets.  This allows you to generate sets of stories based on complex combinations of tags, rather than matching just one tag value.  [[MatchTagsPlugin]] also allows you to use a //wildcard// expression, &quot;.*&quot; (without quotes), that will match all tiddlers, regardless of their tag value(s).
* ''list''&lt;br&gt;displays a droplist of tiddlers for the specified story, with previous/next pushbuttons on either side of the list.  You can also specify which buttons will appear when using a droplist:
** ''allbuttons''&lt;br&gt;displays buttons for first/last as well as previous/next.
** ''nobuttons''&lt;br&gt;displays the droplist without any buttons
** ''onlybuttons''&lt;br&gt;hides the droplist and shows just the buttons
* ''prompt:...'' (default={{{&quot;storyname...&quot;}}})&lt;br&gt;specifies non-selectable label text to use as the first item in the droplist.
* ''sort:fieldname'' //(optional)//&lt;br&gt;when a ''tagvalue'' is used to select tiddlers, you can specify a tiddler fieldname that can be used to sort the resulting list of tiddlers, with an optional &quot;-&quot; prefix to indicate descending vs. ascending ordering, e.g, &quot;sort:-modified&quot; will generate a list of tiddlers in reverse date order (newest tiddler first).
* ''first'' or ''previous'' or ''here'' or ''next'' or ''last''&lt;br&gt;displays an individual link to the indicated tiddler within the story. The next/previous links are automatically calculated relative to the current tiddler.  ''here'' displays the current tiddler title.
* ''links''&lt;br&gt;displays the set of first, previous, here, next and last links with just one convenient macro invocation, allowing you to quickly and easily embed story navigation links into any tiddler content.
* ''timer:nnn''&lt;br&gt;displays an automatic countdown 'slideshow' timer, where ''nnn'' is the number of seconds between slides.  Click on the timer to start the countdown.  The countdown is paused when hovering over the timer.  Click a //running// timer to immediately advance to the next tiddler in the story.  Optional slideshow parameters:
** ''autostart''&lt;br&gt;automatically starts the countdown without an initial click.
** ''close'' or ''fold''&lt;br&gt;close or fold (see [[CollapseTiddlerPlugin]]) the current tiddler when the next tiddler in the story is opened. The default is to simply display the next tiddler following the current one.
&lt;&lt;&lt;
!!!!!Examples
&lt;&lt;&lt;
{{smallform{
{{{
&lt;&lt;storyViewer MenuDefinitions list nobuttons&gt;&gt;
}}}
&gt;&lt;&lt;storyViewer MenuDefinitions list nobuttons&gt;&gt; //uses &quot;saved story&quot; tiddler//
{{{
&lt;&lt;storyViewer pluginInfo&gt;&gt;
}}}
&gt;&lt;&lt;storyViewer pluginInfo&gt;&gt;
{{{
&lt;&lt;storyViewer pluginInfo list allbuttons prompt:&quot;TiddlyTools menu definitions...&quot;&gt;&gt;
}}}
&gt;&lt;&lt;storyViewer pluginInfo list allbuttons prompt:&quot;TiddlyTools menu definitions...&quot;&gt;&gt;
{{{
&lt;&lt;storyViewer pluginInfo first&gt;&gt;
&lt;&lt;storyViewer pluginInfo previous&gt;&gt;
&lt;&lt;storyViewer pluginInfo next&gt;&gt;
&lt;&lt;storyViewer pluginInfo last&gt;&gt;
}}}
&gt;&lt;&lt;storyViewer pluginInfo first&gt;&gt;
&gt;&lt;&lt;storyViewer pluginInfo previous&gt;&gt;
&gt;&lt;&lt;storyViewer pluginInfo next&gt;&gt;
&gt;&lt;&lt;storyViewer pluginInfo last&gt;&gt;
{{{
&lt;&lt;storyViewer pluginInfo previous label:&quot;back&quot;&gt;&gt;
&lt;&lt;storyViewer pluginInfo next label:&quot;forward&quot;&gt;&gt;
}}}
&gt;&lt;&lt;storyViewer pluginInfo previous label:&quot;back&quot;&gt;&gt;
&gt;&lt;&lt;storyViewer pluginInfo next label:&quot;forward&quot;&gt;&gt;
{{{
&lt;&lt;storyViewer pluginInfo links&gt;&gt;
}}}
&gt;&lt;&lt;storyViewer pluginInfo links&gt;&gt;
{{{
&lt;&lt;storyViewer pluginInfo timer:20 fold&gt;&gt;
}}}
&gt;&lt;&lt;storyViewer pluginInfo timer:20 fold&gt;&gt;
{{{
&lt;&lt;storyViewer &quot;.*&quot; prompt:&quot;timeline...&quot; sort:-modified&gt;&gt;
}}}
&gt;&lt;&lt;storyViewer &quot;.*&quot; prompt:&quot;timeline...&quot; sort:-modified&gt;&gt;
}}}
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2011.03.11 1.4.0 added 'sort:fieldname' parameter
2011.01.24 1.3.4 in droplist onchange handler, don't clear slideshow 'started' flag (allows slideshow to continue after manual navigation)
2011.01.12 1.3.3 added config.macros.storyViewer.started (controls 'autostart' for automatic presentation of multiple pages)
2011.01.11 1.3.2 use pushbutton instead of text to display slideshow timer
2011.01.11 1.3.1 code and documentation cleanup
2011.01.10 1.3.0 added slideshow (params= timer:nnn, autostart, close/fold).  Added custom prompt for droplist (param= prompt:&quot;text&quot;). Added support for [[MatchTagsPlugin]]
2008.06.05 1.2.0 added custom story paramifier to extract story titles from tiddler links instead of using parseParams.  Permits use of links from any tiddler as a story, even if it contains wiki-syntax formatting in addition to list of tiddler titles
2008.03.10 *.*.* plugin size reduction: documentation moved to [[StoryViewerPluginInfo]]
2007.12.31 1.1.0 instead of readBracketedList(), use internal tiddler.links[] to retrieve story list from tiddler content.  Allows more flexible formatting of story tiddler content.
2007.12.04 *.*.* update for TW2.3.0: replaced deprecated core functions, regexps, and macros
2007.10.23 1.0.0 Initial release, split {{{&lt;&lt;storyViewer&gt;&gt;}}} macro definition from [[StorySaverPlugin]] to allow separate installation of story saving vs. story viewing features.
&lt;&lt;&lt;</pre>
</div>
<div title="Strangers" modifier="SDM" created="201004120330" modified="201301211727" book_key="">
<pre>&lt;&lt;Bbl Gn 12:1 &gt;&gt;; &lt;&lt;Bbl Gn 23:4 &gt;&gt;; &lt;&lt;Bbl Lv 25:2 &gt;&gt;; &lt;&lt;Bbl Ex 12:11 &gt;&gt;; &lt;&lt;Bbl 1Chr 29:15 &gt;&gt;; &lt;&lt;Bbl 2Chr 16:19 &gt;&gt;-20 ; &lt;&lt;Bbl Ps 119:19 &gt;&gt;; &lt;&lt;Bbl Ps 146:9 &gt;&gt;; &lt;&lt;Bbl Is 49:21 &gt;&gt;; &lt;&lt;Bbl Mt 8:19 &gt;&gt;-20 ; &lt;&lt;Bbl Jn 14:1 &gt;&gt;-4 ; &lt;&lt;Bbl Heb 11:8 &gt;&gt;-10
* //Foriegner//
* //Lonely//
* Root meaning of the word //Hebrew//</pre>
</div>
<div title="Strength" modifier="SDM" created="201211241947" modified="201211250015" book_key="">
<pre>* Caleb in his old age
* //You have a little strength//
* {{anti{ [[Weakness]]}</pre>
</div>
<div title="Stumbling" modifier="SDM" created="201004120330" modified="201207062100" book_key="">
<pre>&lt;&lt;Bbl Ps 119:165 &gt;&gt;; &lt;&lt;Bbl Mt 17:27 &gt;&gt;, &lt;&lt;Bbl Mt 18:6 &gt;&gt;; &lt;&lt;Bbl 1Pt 2:11 &gt;&gt;-17
* May your stumbling-blocks become stepping-stones.
* [[Trial]]</pre>
</div>
<div title="StyleSheet" creator="psd" modifier="SDM" created="200903111603" modified="201303030027" tags="stylesheet excludeLists" book_key="">
<pre>/*{{{*/

.rf {font-family: calibri, arial; color: brown; font-size:.7em; font-weight: bold; }
.rf .big {font-size:2em; }

.hilite   {background:#ffc; color:#000; border:2px solid #79d; margin:6px 12px 6px 24px;padding:5px;}
.holyquote   {background:#FDF5E6; color:#000; border:1px solid brown; margin:6px 12px 6px 24px;padding:5px;}
.fyi   {background:#FCFDFD; color:#009; border:1px solid #009; margin:6px 12px 6px 24px;padding:5px;}
.anti {color:#903;}
.anti a:link  {color:#903;}

div[tags~=&quot;Scriptr&quot;].tiddler .viewer {
   font-family:georgia;
   background: #FDF5E6;
   font-size:1.1em;
   /*background-image: url(&quot;./Bbl/parchment.jpg&quot;);*/
   /* FFF0F5 */
   /* FFEFD5 */
}

div[tags~=&quot;Comment&quot;].tiddler .viewer {
   background-color: #ecf2f5;
}

[[StyleSheetAdjustments]]
[[StyleSheetShortcuts]]

/*.siteNav    { position:absolute;z-index:1;right:.5em;top:2em;width:14em; }
.siteNav    { position:absolute;right:.5em;top:2em;width:14em; }
.siteNav .siteNav .button  { color:#fff }
.siteNav .button:hover  { color:#009 }
.siteNav input[type=&quot;checkbox&quot;]   { margin:0; }
*/

/*.matchTags .popup*/

.searchBox { text-align:left; background-color: [[ColorPalette::TertiaryPale]]; font-size:0.8em; position:absolute;left:640px;top:22px;width:200px; }
.searchBox .button:hover  { color:#009 }
.searchBox input[type=&quot;text&quot;]   { width:10em; }


.commandBox    { display:block;text-align:left; background-color: [[ColorPalette::TertiaryPale]]; font-size:0.8em; position:absolute;left:340px;top:22px;width:280px; }
.commandBox .button:hover  { color:#009 }
.commandBox input[type=&quot;checkbox&quot;]   { margin:0; }

.buttonMenu .imgLink, #hoverMenu .imgLink:hover {border:none; padding:0px; float:right; margin-bottom:2px; margin-top:0px;}
.buttonMenu  .button, #hoverMenu .tiddlyLink {border:none; font-weight:bold; background:#18f; color:#FFF; padding:0 5px; float:right; margin-bottom:4px;}
.buttonMenu .button:hover, #hoverMenu .tiddlyLink:hover {font-weight:bold; border:none; color:#fff; background:#000; padding:0 5px; float:right; margin-bottom:4px;}
.buttonMenu .button {width:7px; text-align:center}
/*.buttonMenu { position:absolute; width:7px;}*/


.tabAllSlider .button
{
display: inline-block;
font-family: Consolas,'Courier New',courier,monospace;
font-weight:bold; border:none; background:[[ColorPalette::SecondaryMid]]; color:#fff;
}

.tabAllSlider .button:hover
{
background:[[ColorPalette::PrimaryDark]];
}

#sidebarTabs .button
{
margin-top: 0em;
margin-right: 0.2em;
margin-bottom: 0em;
margin-left: 0.2em;
padding-top: 0.2em;
padding-right: 0.3em;
padding-bottom: 0.2em;
padding-left: 0.3em;
display: inline;
}

.mapH1 {
    font-weight:bold;
    text-decoration:none;
    display: block;
    font-size: 1.5em; /* 1.35em;*/
    margin-bottom:5px;
    margin-left:12px;
}

.mapH1 {color:[[ColorPalette::SecondaryDark]]; background:transparent;}

.mapH1 {
    /*border-bottom:2px solid [[ColorPalette::TertiaryLight]];*/
}

.sliderPanel .mapH1 {
    font-size: 1em;
    /*border-top:2px solid [[ColorPalette::TertiaryLight]];
    border-bottom:2px solid [[ColorPalette::TertiaryLight]];
    margin-top:5px;*/
}

.tabContents .dp100 {
    font-size: .9em;
        font-weight:normal;
}

.tabContents .dp100 ul {
    margin:     5px 0px;
    /*padding-bottom: 5px;
    border-bottom:   solid 1px [[ColorPalette::TertiaryLight]];*/
    list-style-type: none;
}

[[EmasticStyleSheet]]
[[EmasticPercent]]
/***
!!!Printing
***/
@media print {#mainMenu {display: none ! important;}}
@media print {#topMenu {display: none ! important;}}
@media print {#sidebar {display: none ! important;}}
@media print {#messageArea {display: none ! important;}}
@media print {#toolbar {display: none ! important;}}
@media print {.header {display: none ! important;}}
@media print {.tiddler .subtitle {display: none ! important;}}
@media print {.tiddler .toolbar {display; none ! important; }}
@media print {.tiddler .tagging {display; none ! important; }}
@media print {.tiddler .tagged {display; none ! important; }}

[[StyleSheetPrint]]

/*}}}*/</pre>
</div>
<div title="StyleSheet shadows" creator="matt" modifier="matt" created="201102111439" modified="201102151512" tags="shadow">
<pre>The StyleSheet tiddler allows you to customise the look and feel of your TiddlyWiki using CSS
You can put simple one line tweaks in, like:
{{{
.mainMenu { color: red; }
}}}

Or you can put in full ~StyleSheets, like that seen in TiddlySpace in the StyleSheetTiddlySpace
{{{
/*{{{*/
[[StyleSheetTiddlySpace]]
/*}}}*/
}}}</pre>
</div>
<div title="StyleSheetAdjustments" modifier="SDM" created="200903230056" modified="201303050341" tags="stylesheet excludeLists" book_key="">
<pre>/*{{{*/
/* ADJUSTMENTS TO STANDARD ELEMENTS */

body {background-color: #FCFDFD;}

.headerShadow, .headerForeground
    { padding-top:1em; white-space:nowrap; }

#siteNav {top:1em; left:50%; margin:0.5em; padding:0.5em; z-index:1000; _position:absolute;}
.siteNav {display:block; text-align:right; padding:0.2em;}

#mainMenu
    { text-align:left; width:14em; padding:0.5em; }
#mainMenu table, #mainMenu table td
    { border:1px solid #999; border-collapse:collapse; padding:.3em; }
#displayArea
    { margin-left:16em; margin-right:15em; }
.popup
    { max-height:30em; overflow:auto; border-radius:5px;  padding:.5em; }
.popup li
    { white-space:nowrap; line-height:100%; }
.toolbar
    { float:right; white-space:nowrap; }
.viewer
    { border:1px solid gray; border-radius:5px;  padding:.5em; }
.tiddler {background-color: #FFF;}
.tiddler .title
    { color: [[ColorPalette::QuaternaryDark]]; }
.tiddler h1, h2, h3, h4, h5, h6
    { color: [[ColorPalette::QuaternaryDark]]; }
.tiddler .subtitle
    { display:inline; }
.tagged
    { border:1px solid #999; border-radius:3px; }
.tagged
    { opacity:.7; }
.selected .tagged
    { opacity:1; }

a.bibleLink:link
    { 
	color: brown;
	border-bottom: 1px dashed brown;
    }
.button, .tiddler .button, #sidebarTabs .button
    { margin:0px; padding: 0px .3em; border:1px solid transparent;
        border-radius:1px; }
.button:hover
    { border:1px solid #999; }
#sidebarTabs .button
    { margin:0px 0.2em; padding:0.2em 0.3em; border:1px solid transparent;
        border-radius:3px; display:block; }
#sidebarTabs .button:hover
    { border:1px solid #999; }
.editor textarea
    { font-family:monospace; }
.tab
    {   padding-bottom:1px;
        border-radius-topleft:3px;
        border-radius-topright:3px;
    }
.tabContents
    { border-radius:5px;  }
.tabContents, .tabSelected
    { background-color:#eef; }
.tabUnselected
    { background-color:#79d; }
/*}}}*/</pre>
</div>
<div title="StyleSheetPlugins" modifier="SDM" created="200611070646" modified="201211222049" tags="stylesheet excludeLists" book_key="">
<pre>/***
|Name|StyleSheetPlugins|
|Source|http://www.TiddlyTools.com/#StyleSheetPlugins|
|Version||
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|CSS|
|Description|custom definitions for plugin-specific ID's and classes|
&gt;Important Note: ''this tiddler is highly-customized for the TiddlyTools document'' and you may need to extensively modify, supplement, replace or remove portions of these definitions in order to best fit //YOUR// document needs.
***/
/***
!MoveablePanelPlugin - searchResults
***/
/*{{{*/
.undocked .searchResults {
    border:1px solid #abe; border-radius:2px;
    padding:0em; background:#003; min-width:35em;
}
.undocked .searchResults .title { margin-left:.5em; }
.undocked .searchResults .viewer { -moz-border-radius: 0 0 1em 1em; }
.undocked .searchResults .viewer ul { max-height:20em; overflow:auto; }
.undocked .searchResults .toolbar { margin-top:.3em; padding-right:.5em; }
/*}}}*/
/***
!PageTemplate - siteMenu
***/
/*{{{*/
.siteMenu
    { background:transparent; padding:.5em; padding-top:0; margin:0; }
.siteMenu a, .siteMenu .button, .siteMenu .tiddlyLinkExisting, .siteMenu .tiddlyLinkNonExisting
    { font-weight: normal; font-style: normal; }
/*** LEAVE THESE OUT FOR NOW
.siteMenu .button, .siteMenu a
    { border:1px solid transparent; background:transparent; margin:0px; padding:0px 1px;  border-radius:3px; }
.siteMenu .button:hover, .siteMenu a:hover
    { border:1px solid #69c; background:#006; color:#fff; }
***/
/*}}}*/
/***
!PageTemplate - storyMenu
***/
/*{{{*/
.storyMenu
    { display:block; margin:0em 1em .5em 1em; }
.storyMenu a, .storyMenu .button, .storyMenu .tiddlyLinkExisting, .storyMenu .tiddlyLinkNonExisting
    { font-weight: normal; font-style: normal; text-decoration:none; }
/*}}}*/
/***
!NestedSlidersPlugin
***/
/*{{{*/
.floatingPanel
    { z-index:700; padding:1em; margin:0em; border:1px solid;  border-radius:2px; font-size:8pt; text-align:left; }
.floatingPanel hr
    { margin:2px 0 1px 0; padding:0; }
#sidebarOptions .sliderPanel
    { margin:0; padding:0; font-size:1em; background:transparent; }
#sidebarOptions .sliderPanel a
    { font-weight:normal; }
#sidebarOptions .sliderPanel blockquote
    { margin:0;padding:0;margin-left:1em; border-left:1px dotted; padding-left:1em }

.selected .floatingPanel .button,
.selected .floatingPanel a:link,
.selected .floatingPanel a:hover,
.selected .floatingPanel a:visited,
.floatingPanel .button,
.floatingPanel a:link,
.floatingPanel a:hover,
.floatingPanel a:visited
    { color:[[ColorPalette::PrimaryDark]] !important; }

/*}}}*/
/***
!CheckboxPlugin
***/
/*{{{*/
input[type=&quot;Checkbox&quot;]
    { margin-top:2px;margin-bottom:2px; }
/*}}}*/
/***
!BreadcrumbsPlugin
***/
/*{{{*/
/* smaller size for bread crumbs (see BreadcrumbsPlugin) */
#breadCrumbs
    { display:none; margin:0em 1em; padding-bottom:.5em; font-size:7pt; } /* display:block is set by plugin when crumbs are in use */
/*}}}*/
/***
!TableOfContentsPlugin
***/
/*{{{*/
#sidebarTabs .tabContents *[class=&quot;TOCList&quot;] /* MOZ ONLY */
    { background-color: transparent; border-color:transparent !important; }
/*}}}*/
/***
!AttachFilePlugin
***/
/*{{{*/
#sidebar .attachPanel
    { right:115%; top:3em; text-align:left; }
/*}}}*/
/***
!ImportTiddlersPlugin
***/
/*{{{*/
#sidebar #importPanel
    { right:115%; top:6em; text-align:left; }
/*}}}*/
/***
!ExportTiddlersPlugin
***/
/*{{{*/
#sidebar #exportPanel
    { right:115%; top:9em; text-align:left; }
/*}}}*/
/***
!QuoteOfTheDayPlugin
***/
/*{{{*/
.QOTD
    { color:inherit !important; background:inherit !important; }
/*}}}*/
/***
!TableSorterPlugin
***/
/*{{{*/
.sortedCol
    { color:inherit !important; background:inherit !important; }
/*}}}*/</pre>
</div>
<div title="StyleSheetPrint" modifier="SDM" created="200701010848" modified="201211202156" tags="stylesheet excludeLists" book_key="">
<pre>/***
|Name|StyleSheetPrint|
|Source|http://www.TiddlyTools.com/#StyleSheetPrint|
|Version||
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|CSS|
|Description|adjustments for printing|
***/

/*{{{*/
@media print {

#mainMenu, #sidebar, #messageArea, .toolbar, .tagged, .tagging, .subtitle, .header
    {display: none !important;}
#breadCrumbs, #siteMenu, #storyMenu
    { display:none !important; }
#displayArea
    { margin: 1em !important; }
noscript /* Fixes a feature in Firefox 1.5.0.2 where print preview displays the noscript content */
    { display:none; }
.tiddler
    { page-break-after:always; }
/*****
use this for 3x5 index cards:
.tiddler { height:3in !important; width:5in !important; overflow:none !important; }
*****/

}
/*}}}*/</pre>
</div>
<div title="StyleSheetShortcuts" modifier="SDM" created="200611070646" modified="201211250421" tags="stylesheet excludeLists" book_key="">
<pre>/***
|Name|StyleSheetShortcuts|
|Source|http://www.TiddlyTools.com/#StyleSheetShortcuts|
|Version||
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|CSS|
|Description|'convenience' classes for common formatting, alignment, boxes, tables, etc.|

These 'style tweaks' can be easily included in other stylesheet tiddler so they can share a baseline look-and-feel that can then be customized to create a wide variety of 'flavors'.
***/
/*{{{*/

/* text alignments */
.left
    { display:block;text-align:left; }
.center
    { display:block;text-align:center; }
.center table
    { margin:auto !important; }
.right
    { display:block;text-align:right; }
.justify
    { display:block;text-align:justify; }
.indent
    { display:block;margin:0;padding:0;border:0;margin-left:2em; }
.floatleft
    { float:left; }
.floatright
    { float:right; }
.valignTop, .valignTop table, .valignTop tbody, .valignTop th, .valignTop tr, .valignTop td
    { vertical-align:top; }
.valignBottom, .valignBottom table, .valignBottom tbody, .valignBottom th, .valignBottom tr, .valignBottom td
    { vertical-align:bottom; }
.clear
    { clear:both; }
.wrap
    { white-space:normal; }
.nowrap
    { white-space:nowrap; }
.hidden
    { display:none; }
.show
    { display:inline !important; }
.span
    { display:span; }
.block
    { display:block; }
.relative
    { position:relative; }
.absolute
    { position:absolute; }

/* font sizes */
.big
    { font-size: 1.15em; }
.medium
    { font-size: 1.1em; }
.normal
    { font-size: 1em; }
.small
    { font-size: 0.96em; }
.fine
    { font-size: 0.92em; }
.tiny
    { font-size: 0.86em; }
/*
.big
    { font-size:14pt;line-height:120% }
.medium
    { font-size:12pt;line-height:120% }
.normal
    { font-size:9pt;line-height:120% }
.small
    { font-size:8pt;line-height:120% }
.fine
    { font-size:7pt;line-height:120% }
.tiny
    { font-size:6pt;line-height:120% }
.larger
    { font-size:120%; }
.smaller
    { font-size:80%; }
*/
/* font styles */
.bold
    { font-weight:bold; }
.italic
    { font-style:italic; }
.underline
    { text-decoration:underline; }

/* plain list items (no bullets or indent) */
.nobullets li { list-style-type: none; margin-left:-2em; }

/* vertical tabsets - courtesy of Tobias Beer */
.vTabs .tabset {float:left;display:block;padding:0px;margin-top:.5em;min-width:20%;}
.vTabs .tabset .tab {display:block;text-align:right;padding:2px 3px 2px 7px; margin:0 1px 1px 0;}
.vTabs .tabContents {margin-left:20%;max-width:80%;padding:5px;}
.vTabs .tabContents .tabContents {border:none; background:transparent;}

/* multi-column tiddler content (not supported in Internet Explorer) */
.twocolumns { display:block;
    -moz-column-count:2; -moz-column-gap:1em; -moz-column-width:50%; /* FireFox */
    -webkit-column-count:2; -webkit-column-gap:1em; -webkit-column-width:50%; /* Safari */
    column-count:2; column-gap:1em; column-width:50%; /* Opera */
}
.threecolumns { display:block;
    -moz-column-count:3; -moz-column-gap:1em; -moz-column-width:33%; /* FireFox */
    -webkit-column-count:3; -webkit-column-gap:1em; -webkit-column-width:33%; /* Safari */
    column-count:3; column-gap:1em; column-width:33%; /* Opera */
}
.fourcolumns { display:block;
    -moz-column-count:4; -moz-column-gap:1em; -moz-column-width:25%; /* FireFox */
    -webkit-column-count:4; -webkit-column-gap:1em; -webkit-column-width:25%; /* Safari */
    column-count:4; column-gap:1em; column-width:25%; /* Opera */
}

/* page breaks */
.breakbefore { page-break-before:always; }
.breakafter { page-break-before:always; }

/* show/hide browser-specific content for InternetExplorer vs. non-IE (&quot;moz&quot;) browsers */
*[class=&quot;ieOnly&quot;]
    { display:none; } /* hide in moz (uses CSS selector) */
* html .mozOnly, *:first-child+html .mozOnly
    { display: none; } /* hide in IE (uses IE6/IE7 CSS hacks) */

/* borderless tables */
.borderless, .borderless table, .borderless td, .borderless tr, .borderless th, .borderless tbody
    { border:0 !important; margin:0 !important; padding:0 !important; }
.widetable, .widetable table
    { width:98%; }

.fixedtable, .fixedtable table
    { width:98%; table-layout:fixed; }

/* thumbnail images (fixed-sized scaled images) */
.thumbnail img { height:5em !important; }

/* stretchable images (auto-size to fit tiddler) */
.stretch img { width:95%; }

/* grouped content */
.outline
    { display:block; padding:0.5em; border-radius:3px; border:1px solid; }
.menubox
    { display:block; padding:1em; border-radius:3px; border:1px solid; background:#fff; color:#000; }
.menubox .button, .menubox .tiddlyLinkExisting, .menubox .tiddlyLinkNonExisting
    { color:#009 !important; }
.groupbox
    { display:block; padding:1em; border-radius:5px; border:1px solid; background:#ffe; color:#000; }
.groupbox a, .groupbox .button, .groupbox .tiddlyLinkExisting, .groupbox .tiddlyLinkNonExisting
    { color:#009 !important; font-size: 0.9em; }
.groupbox code
    { color:#333 !important; }
.borderleft
    { margin:0;padding:0;border:0;margin-left:1em; border-left:1px dotted; padding-left:.5em; }
.borderright
    { margin:0;padding:0;border:0;margin-right:1em; border-right:1px dotted; padding-right:.5em; }
.borderbottom
    { margin:0;padding:1px 0;border:0;border-bottom:1px dotted; margin-bottom:1px; padding-bottom:1px; }
.bordertop
    { margin:0;padding:0;border:0;border-top:1px dotted; margin-top:1px; padding-top:1px; }

/* scrolled content */
.scrollbars { overflow:auto; }
.height10em { height:10em; }
.height15em { height:15em; }
.height20em { height:20em; }
.height25em { height:25em; }
.height30em { height:30em; }
.height35em { height:35em; }
.height40em { height:40em; }

/* compact form */
.smallform
    { white-space:nowrap; }
.smallform input, .smallform textarea, .smallform button, .smallform checkbox, .smallform radio, .smallform select
    { font-size:8pt; }

/* stretchable edit fields and textareas (auto-size to fit tiddler) */
.stretch input { width:99%; }
.stretch textarea { width:99%; }

/* compact input fields (limited to a few characters for entering percentages and other small values) */
.onechar input   { width:1em; }
.twochar input   { width:2em; }
.threechar input { width:3em; }
.fourchar input  { width:4em; }
.fivechar input  { width:5em; }

/* text colors */
.white { color:#fff !important }
.gray  { color:#999 !important }
.black { color:#000 !important }
.red   { color:#f66 !important }
.green { color:#0c0 !important }
.blue  { color:#99f !important }

/* rollover highlighting */
.mouseover
    {color:[[ColorPalette::TertiaryLight]] !important;}
.mouseover a
    {color:[[ColorPalette::TertiaryLight]] !important;}
.selected .mouseover
    {color:[[ColorPalette::Foreground]] !important;}
.selected .mouseover .button, .selected .mouseover a
    {color:[[ColorPalette::PrimaryDark]] !important;}

/* rollover zoom text */
.zoomover
    { font-size:80% !important; }
.selected .zoomover
    { font-size:100% !important; }

/* [[ColorPalette]] text colors */
.Background { color:[[ColorPalette::Background]];    }
.Foreground { color:[[ColorPalette::Foreground]];    }
.PrimaryPale    { color:[[ColorPalette::PrimaryPale]];   }
.PrimaryLight   { color:[[ColorPalette::PrimaryLight]];  }
.PrimaryMid { color:[[ColorPalette::PrimaryMid]];    }
.PrimaryDark    { color:[[ColorPalette::PrimaryDark]];   }
.SecondaryPale  { color:[[ColorPalette::SecondaryPale]]; }
.SecondaryLight { color:[[ColorPalette::SecondaryLight]];}
.SecondaryMid   { color:[[ColorPalette::SecondaryMid]];  }
.SecondaryDark  { color:[[ColorPalette::SecondaryDark]]; }
.TertiaryPale   { color:[[ColorPalette::TertiaryPale]];  }
.TertiaryLight  { color:[[ColorPalette::TertiaryLight]]; }
.TertiaryMid    { color:[[ColorPalette::TertiaryMid]];   }
.TertiaryDark   { color:[[ColorPalette::TertiaryDark]];  }
.Error      { color:[[ColorPalette::Error]];     }

/* [[ColorPalette]] background colors */
.BGBackground     { background-color:[[ColorPalette::Background]];  }
.BGForeground     { background-color:[[ColorPalette::Foreground]];  }
.BGPrimaryPale    { background-color:[[ColorPalette::PrimaryPale]]; }
.BGPrimaryLight   { background-color:[[ColorPalette::PrimaryLight]];    }
.BGPrimaryMid     { background-color:[[ColorPalette::PrimaryMid]];  }
.BGPrimaryDark    { background-color:[[ColorPalette::PrimaryDark]]; }
.BGSecondaryPale  { background-color:[[ColorPalette::SecondaryPale]];   }
.BGSecondaryLight { background-color:[[ColorPalette::SecondaryLight]];  }
.BGSecondaryMid   { background-color:[[ColorPalette::SecondaryMid]];    }
.BGSecondaryDark  { background-color:[[ColorPalette::SecondaryDark]];   }
.BGTertiaryPale   { background-color:[[ColorPalette::TertiaryPale]];    }
.BGTertiaryLight  { background-color:[[ColorPalette::TertiaryLight]];   }
.BGTertiaryMid    { background-color:[[ColorPalette::TertiaryMid]]; }
.BGTertiaryDark   { background-color:[[ColorPalette::TertiaryDark]];    }
.BGError      { background-color:[[ColorPalette::Error]];       }
/*}}}*/</pre>
</div>
<div title="Submission" modifier="SDM" created="201211221616" book_key="">
<pre>stub</pre>
</div>
<div title="Substitution" modifier="SDM" created="201211181614" modified="201302121411" book_key="">
<pre>* [[Redemption]], [[Sacrifice]]
* [[Exchange]] -- &lt;&lt;Bbl 1Pt 2:24 &gt;&gt;</pre>
</div>
<div title="Subversion" modifier="SDM" created="201011011540" modified="201211181646" book_key="">
<pre>* Isaiah -- //Bitter for sweet, sweet for bitter.//
* Exchanging glory for [[Shame]] -- &lt;&lt;Bbl Php 3:19 &gt;&gt;; &lt;&lt;Bbl Pr 24:24 &gt;&gt;; Jer &quot;Peace, Peace&quot;,
* [[Deceit]], [[Satan]], [[Wickedness]]
* the Pharisees; creation of double-binds in order to enslave.
* Accusation often made against Christ and His own -- // turning the world upside down.//
* Ex 32:2 -- holiest gold, used for nastiest idolatry.
* //Let the marriage bed remain undefiled.//
* Hugh Hefner's mission statement (VonVanderon)
* Against [[Order]]; creates [[Confusion]]</pre>
</div>
<div title="Suffering" modifier="SDM" created="201004120330" modified="201212211925" book_key="">
<pre>* &lt;&lt;Bbl Ps 119:67 &gt;&gt;; &lt;&lt;Bbl 2Cor 1:3 &gt;&gt;-10 ; &lt;&lt;Bbl Col 1:24 &gt;&gt;
* This would make a good focus of study for all the Bible's history:  Eve, Job, Jacob, Joseph ...
* [[Persecution]]
* [[Mistreatment]]
* I have a mind map about 1 Peter's treatment of suffering.
* @@color:darkgreen;Suffering is the thread from which the stuff of joy is woven.  Never will the optimist know joy,@@ // -- Henri de Lubac//  (I would substitute //[[Triumphalism]]// for //optimism.//
!!! Peter
* Jesus' own prophecy
* &lt;&lt;Bbl 1Pt 4:1 &gt;&gt;
* &lt;&lt;Bbl 1Pt 5:10 &gt;&gt; // ...after you have suffered a little while, perfect, establish, strengthen, and settle you.//  When the believer is being attacked by Satan, he is being perfected by the Lord.</pre>
</div>
<div title="Suppressing Formatting" creator="psd" modifier="psd" created="201102161122" modified="201102161122" tags="formatting">
<pre>Wiki markup rules can be suppressed for any given section of text by enclosing it in 3 ''double'' quotes:
{{{
&quot;&quot;&quot;//WikiWord//&quot;&quot;&quot;
}}}
Displays as:
&quot;&quot;&quot;//WikiWord//&quot;&quot;&quot;

WikiWords can also be suppressed by prefixing the WikiWord with ''~'':
{{{
~WikiWord
}}}
Displays as:
~WikiWord
!!Also See
[[Code formatting]]</pre>
</div>
<div title="Sword" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Ps 7:12 &gt;&gt;; &lt;&lt;Bbl Heb 4:12 &gt;&gt;; &lt;&lt;Bbl Lk 2:35 &gt;&gt;; &lt;&lt;Bbl Rev 1:16 &gt;&gt;; &lt;&lt;Bbl Josh 5:13 &gt;&gt; (God is evidently not a pacifist); &lt;&lt;Bbl Is 1:20 &gt;&gt;; &lt;&lt;Bbl Jer 25:16 &gt;&gt;; &lt;&lt;Bbl Eph 6:17 &gt;&gt;; &lt;&lt;Bbl Gn 3:24 &gt;&gt;; &lt;&lt;Bbl Lv 26:25 &gt;&gt;; &lt;&lt;Bbl Mt 10:34 &gt;&gt;.</pre>
</div>
<div title="TabAll shadows" creator="matt" modifier="matt" created="201102111614" modified="201102151513" tags="shadow">
<pre>The TabAll tiddler contains a command to list all of the tiddler in your TiddlyWiki.
{{{
&lt;&lt;list all&gt;&gt;
}}}
In TiddlyWiki this list appears as default in the {{{All}}} tab on the right-hand menu.</pre>
</div>
<div title="TabMoreMissing shadows" creator="matt" modifier="matt" created="201102111614" modified="201102151514" tags="shadow">
<pre>The TabMoreMissing tiddler contains a command to list all of the tiddlers that have links to them but are undefined.
{{{
&lt;&lt;list missing&gt;&gt;
}}}
In TiddlyWiki this list appears as default in the {{{Missing}}} tab on the right-hand menu.</pre>
</div>
<div title="TabMoreOrphans shadows" creator="matt" modifier="matt" created="201102111615" modified="201102151514" tags="shadow">
<pre>The TabMoreOrphans tiddler contains a command that lists all the tiddlers that are not linked to from any other tidder.
{{{
&lt;&lt;list orphans&gt;&gt;
}}}
In TiddlyWiki this list appears as default in the {{{Orphans}}} tab on the right-hand menu.</pre>
</div>
<div title="TabMoreShadowed shadows" creator="matt" modifier="matt" created="201102111615" modified="201102151514" tags="shadow">
<pre>The TabMoreShadowed tiddler contains a command that displays a list of all tiddlers shadowed with default content in them
{{{
&lt;&lt;list shadowed&gt;&gt;
}}}
In TiddlyWiki this list appears as default in the {{{Shadows}}} tab on the right-hand menu.</pre>
</div>
<div title="TabTimeline shadows" creator="matt" modifier="matt" created="201102111616" modified="201102151514" tags="shadow">
<pre>The TabTimeline tiddler contains a command to list in reverse chronological the tiddlers in your TiddlyWiki
{{{
&lt;&lt;timeline&gt;&gt;
}}}
In TiddlyWiki this list appears as default in the {{{Recent}}} tab on the right-hand menu.</pre>
</div>
<div title="TabTopicEntries" modifier="SDM" created="201012202058" modified="201212191905" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:44em;overflow:auto;
&lt;&lt;matchTags &quot;%0&quot; &quot; \n &quot; NOT excludeLists AND NOT Scriptr AND NOT Comment &gt;&gt;</pre>
</div>
<div title="Tabernacle" modifier="SDM" created="201112262230" modified="201211161315" tags="House" book_key="">
<pre>!!! of David
* &lt;&lt;Bbl Psalm 95:2 &gt;&gt;
* &lt;&lt;Bbl Psalm 100:4 &gt;&gt;
* &lt;&lt;Bbl Psalm 141:2 &gt;&gt;
* &lt;&lt;Bbl Amos 9:11 &gt;&gt;
* &lt;&lt;Bbl Acts 15:14  &gt;&gt;-16
* There is no chair in the Tabernacle!  Heb 10:11-12.</pre>
</div>
<div title="Tables Formatting" creator="matt" modifier="psd" created="201102111433" modified="201102151517" tags="formatting">
<pre>!Simple Tables
{{{
|North West|North|North East|
|West|Here|East|
|South West|South|South East|
}}}
Displays as:
|North West|North|North East|
|West|Here|East|
|South West|South|South East|
!Cell Formatting
*Insert a space before cell content to right justify cell
*Insert a space after cell content to left justify cell
*Insert spaces before and after cell content to centre justify cell
*Insert an exclamation mark ({{{!}}}) as the first non-space character of a cell to turn it into a header cell
For example:
{{{
|!First column|!Second column|!Third column|
|left | centre | right|
}}}
Displays as:
|!First column|!Second column|!Third column|
|left | centre | right|
!Table Headers and Footers
* Mark a table row as a header by adding an 'h' to the end
* Mark a table row as a footer by adding an 'f' to the end
For example:
{{{
|North West|North|North East|h
|West|Here|East|
|South West|South|South East|f
}}}
Displays as:
|North West|North|North East|h
|West|Here|East|
|South West|South|South East|f
!Table Caption
A caption can be added above or below a table by adding a special row marked with a 'c':
{{{
|A caption above the table|c
|North West|North|North East|
|West|Here|East|
|South West|South|South East|
}}}
{{{
|North West|North|North East|
|West|Here|East|
|South West|South|South East|
|A caption below the table|c
}}}
Displays as:
|A caption above the table|c
|North West|North|North East|h
|West|Here|East|
|South West|South|South East|f

|North West|North|North East|h
|West|Here|East|
|South West|South|South East|f
|A caption below the table|c
!Mergine Table Cells
A cell can be merged horizontally with the cell to its right by giving it the text {{{&gt;}}}:
{{{
|North West|North|North East|
|&gt;|&gt;|West and Here and East|
|South West|South|South East|
}}}
Displays as:
|North West|North|North East|
|&gt;|&gt;|West and Here and East|
|South West|South|South East|
A cell can be merged vertically with the cell in the row above by giving it the text {{{~}}}:
{{{
|Westerly|North|North East|
|~|Here|East|
|~|South|South East|
}}}
Displays as:
|Westerly|North|North East|
|~|Here|East|
|~|South|South East|
!Table CSS Formatting
A CSS class can be added to an entire table by adding a special row tagged with a 'k':
{{{
|myClass|k
|North West|North|North East|
|West|Here|East|
|South West|South|South East|
}}}
CSS properties can be added to a table cell by preceding the cell content with CSS name/value pairs. There are two alternative forms of syntax:
{{{
|color:red; North West|opacity:0.5;North|North East|
|color(green):West|Here|East|
|South West|South|South East|
}}}
Displays as:
|color:red; North West|opacity:0.5;North|North East|
|color(green):West|Here|East|
|South West|South|South East|
!Alternating Rows
TiddlyWiki automatically assigns the classes {{{oddRow}}} and {{{evenRow}}} to table rows {{{&lt;TR&gt;}}} elements. These can then be styled via the StyleSheet:
{{{
.viewer tr.oddRow { background-color: #fff; }
.viewer tr.evenRow { background-color: #ffc; }
}}}
</pre>
</div>
<div title="TaggedTemplateTweak" modifier="ELSDesignStudios" created="200706181748" tags="systemConfig excludeLists">
<pre>/***
|Name|TaggedTemplateTweak|
|Source|http://www.TiddlyTools.com/#TaggedTemplateTweak|
|Documentation|http://www.TiddlyTools.com/#TaggedTemplateTweakInfo|
|Version|1.6.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides|Story.prototype.chooseTemplateForTiddler()|
|Description|use alternative ViewTemplate/EditTemplate for specific tiddlers|
This plugin extends the core function, story.chooseTemplateForTiddler(), so that any given tiddler can be viewed and/or edited using alternatives to the standard tiddler templates.
!!!!!Documentation
&gt;see [[TaggedTemplateTweakInfo]]
!!!!!Revisions
&lt;&lt;&lt;
2009.07.31 [1.6.0] added support for using custom field value as prefix
| please see [[TaggedTemplateTweakInfo]] for previous revision details |
2007.06.11 [1.0.0] initial release
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.TaggedTemplateTweak= {major: 1, minor: 6, revision: 0, date: new Date(2009,7,31)};

if (!config.options.txtTemplateTweakFieldname)
    config.options.txtTemplateTweakFieldname='template';

Story.prototype.taggedTemplate_chooseTemplateForTiddler = Story.prototype.chooseTemplateForTiddler
Story.prototype.chooseTemplateForTiddler = function(title,template)
{
    // get core template and split into theme and template name
    var coreTemplate=this.taggedTemplate_chooseTemplateForTiddler.apply(this,arguments);
    var theme=&quot;&quot;; var template=coreTemplate;
    var parts=template.split(config.textPrimitives.sectionSeparator);
    if (parts[1]) { theme=parts[0]; template=parts[1]; }
    else theme=config.options.txtTheme||&quot;&quot;; // if theme is not specified
    theme+=config.textPrimitives.sectionSeparator;

    // look for template using title as prefix
    if (!store.getTaggedTiddlers(title).length) { // if tiddler is not a tag
        if (store.getTiddlerText(theme+title+template))
            { return theme+title+template; } // theme##TitleTemplate
        if (store.getTiddlerText(title+template))
            { return title+template; }   // TitleTemplate
    }

    // look for template using tags as prefix
    var tiddler=store.getTiddler(title);
    if (!tiddler) return coreTemplate; // tiddler doesn't exist... use core result
    for (i=0; i&lt;tiddler.tags.length; i++) {
        var t=tiddler.tags[i]+template; // add tag prefix to template
        var c=t.substr(0,1).toUpperCase()+t.substr(1); // capitalized for WikiWord title
        if (store.getTiddlerText(theme+t))  { return theme+t; } // theme##tagTemplate
        if (store.getTiddlerText(theme+c))  { return theme+c; } // theme##TagTemplate
        if (store.getTiddlerText(t))        { return t; }       // tagTemplate
        if (store.getTiddlerText(c))        { return c; }       // TagTemplate
    }

    // look for templates using custom field value as prefix
    var v=store.getValue(title,config.options.txtTemplateTweakFieldname);
    if (store.getTiddlerText(theme+v+template))
        { return theme+v+template; }    // theme##valueTemplate
    if (store.getTiddlerText(v+template))
        { return v+template; }      // valueTemplate

    // no match... use core result
    return coreTemplate;
}
//}}}</pre>
</div>
<div title="Tags" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="features gettingstarted terminology">
<pre>You can categorise a tiddler by assigning it with one or more special keywords called tags.

Tiddlers which have been assigned tags can be accessed using the tagging menu that appears at the top right of each tiddler (when in read mode). For instance, this tiddler is tagged with &quot;features&quot;, &quot;terminology&quot; and &quot;gettingstarted&quot;. If you click on these tag names in the tagging menu, you get access to all the other tiddlers that have been given the same tag.

You can see a whole list of tags by looking in the [[SideBarTabs]], and selecting the Tags tab.

This site uses the standard convention that the names of tags start with a lower case letter, and tiddlers with an upper case letter, but this is not actually enforced.

Tags can be tiddlers themselves, with their own tags, so you can have hierarchies of tiddlers.  This is a surprisingly useful and powerful technique has been dubbed ~TagglyTagging by the [[Community]].</pre>
</div>
<div title="Teacher" modifier="SDM" created="201004120330" modified="201201130339" book_key="">
<pre>* &lt;&lt;Bbl Is 30:20 &gt;&gt;-21 -- //your ears will hear a voice behind you, saying,  -- This is the way. Walk in it. -- //
* Instructions to Timothy
* &lt;&lt;Bbl Pr 15:2 &gt;&gt;  //the tongue of the wise makes knowledge acceptable//</pre>
</div>
<div title="TemporaryTiddlersPlugin" modifier="SDM" created="201211260121" tags="systemConfig excludeLists" book_key="">
<pre>/***
|Name|TemporaryTiddlersPlugin|
|Source|http://www.TiddlyTools.com/#TemporaryTiddlersPlugin|
|Version|1.1.2|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Description|blocks tiddlers tagged with &quot;temporary&quot; from being saved into the TW file|
!!!!!Usage
&lt;&lt;&lt;
When the TW document is saved (either to local disk or remote URL), any tiddlers tagged with &quot;temporary&quot; will be skipped over, so that they are not written to the file.  To keep a temporary tiddler, simply edit it and remove the tag before saving the file.  This feature can be combined with various plugins that can automatically create new tiddlers, such as [[SearchOptionsPlugin]] ([[SearchResults]]) and [[ImportTiddlersPlugin]] ([[ImportedTiddlers]]) so that these transient results are not retained when you save you document.

You can also use this tag with the {{{&lt;&lt;loadTiddlers&gt;&gt;}}} macro and the //auto-tagging// features provided by [[ImportTiddlersPlugin]], so that each time you open your document, you can automatically retrieve an up-to-date set of common tiddlers that are stored in another document (either local or via remote URL), without those tiddlers being retained when you save your document.
&lt;&lt;&lt;
!!!!!Configuration
&lt;&lt;&lt;
When saving the document:
&lt;&lt;option chkTemporaryQuiet&gt;&gt; Suppress reporting of individual temporary tiddlers that have not been saved
&lt;&lt;option chkTemporaryKeep&gt;&gt; Keep temporary tiddlers (i.e., ignore the 'temporary' tag)
Enter a tag value to use when marking tiddlers as temporary: &lt;&lt;option txtTemporaryTag&gt;&gt;
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2008.11.14 [1.1.2] added &quot;nnn temporary tiddlers not saved&quot; summary message
2008.04.08 [1.1.1] don't automatically add configuration options to AdvancedOptions tiddler
2008.03.01 [1.1.0] added support for recognizing 'temporary' flag stored as a tiddler *field* (as an optional alternative to using a tag)
2007.02.08 [1.0.0] initial release
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.TemporaryTiddlersPlugin= {major: 1, minor: 1, revision: 2, date: new Date(2008,11,14)};

// configuration defaults
if (config.options.chkTemporaryKeep ==undefined) config.options.chkTemporaryKeep =false;
if (config.options.chkTemporaryQuiet==undefined) config.options.chkTemporaryQuiet=true;
if (config.options.txtTemporaryTag==undefined) config.options.txtTemporaryTag=&quot;temporary&quot;;
// lingo
config.messages.TemporaryWarning = &quot;'%0' ...temporary tiddler&quot;;
config.messages.TemporarySummary = &quot;%0 temporary tiddlers will not be saved&quot;;
// core override
SaverBase.prototype.externalize = function(store)
{
    var results=[]; var totaltemps=0;
    var tiddlers=store.getTiddlers(&quot;title&quot;);
    for (var t=0; t&lt;tiddlers.length; t++) {
        if (config.options.chkTemporaryKeep||!(tiddlers[t].fields['temporary']||tiddlers[t].isTagged(config.options.txtTemporaryTag)))
            results.push(this.externalizeTiddler(store, tiddlers[t]));
        else {
            if (!config.options.chkTemporaryQuiet) // notify user that tiddler won't be saved
                displayMessage(config.messages.TemporaryWarning.format([tiddlers[t].title]));
            totaltemps++;
        }
    }
    if (totaltemps) displayMessage(config.messages.TemporarySummary.format([totaltemps]));
    return results.join(&quot;\n&quot;);
}
//}}}</pre>
</div>
<div title="Temptation" modifier="SDM" created="201004120330" modified="201304262159" book_key="" changecount="1">
<pre>!! External
* [[Testing]]
* &lt;&lt;Bbl Lk 22:28&gt;&gt; presents us with a wonderful title.  Oh, to fulfill it!
* &lt;&lt;Bbl 1Thes 3:5&gt;&gt;, [[Satan]] the Tempter.
* &lt;&lt;Bbl 1Cor 10:13&gt;&gt; //No temptation has taken you except what is common to man. God is faithful ...//
* Job
* @@color:darkgreen;You can't keep birds from flying overhead, but you do not need to let them build nests in your hair.@@ // -- Martin Luther//
* [[Stealing]] from need
!! Internal
* &lt;&lt;Bbl Jms 1:13 &gt;&gt;-15
* &lt;&lt;Bbl Gn 4:7 &gt;&gt;
* &lt;&lt;Bbl Mt 26:41 &gt;&gt; //Watch and pray//
* [[Sin]], [[Backsliding]]
* [[Trust]]
| [[World]] | [[Satan]] | [[Flesh]] |h
| &quot;love not&quot; | [[Truth]] | [[SelfControl]], &quot;crucify&quot;&lt;br&gt;[[SelfControl]] |</pre>
</div>
<div title="Tent" modifier="SDM" created="201004120330" tags="House">
<pre>* &lt;&lt;Bbl 2Sam 7:5&gt;&gt;-7, &lt;&lt;Bbl 2Sam 11:11 &gt;&gt;; &lt;&lt;Bbl Job 4:21 &gt;&gt;, &lt;&lt;Bbl Job 5:24 &gt;&gt;, &lt;&lt;Bbl Job 8:22 &gt;&gt;; &lt;&lt;Bbl Ps 119:54 &gt;&gt; (house of my pilgrimage ); &lt;&lt;Bbl 2Cor 5:1 &gt;&gt;
* Not related to the //tentative.//  But good for preaching.</pre>
</div>
<div title="Testing" modifier="SDM" created="201105091822" modified="201301141554" book_key="">
<pre>* //Do not lead us into temptation// -- I want to give this word temptation the largest scope possible, and to avoid invoking it for petty acts when a deep-seated ritual or transaction of the soul may really be at stake.
* In reality a test is a double-bind -- a situation that pulls us in two directions.
* Instances in the Bible
** Abraham ascending Moriah
** Christ in the garden
** Peter at the warming fire
** Peter later in Jerusalem
** other points of stress and conflict in the book of Acts.
* &lt;&lt;Bbl Rev 3:10 &gt;&gt;
* [[Trial]]
* [[Temptation]]
* [[Perseverance]]
!!! Grace after testing
* &lt;&lt;Bbl Mt 4:11 &quot;&quot; note &gt;&gt;//And angels came and ministered to Him//
* &lt;&lt;Bbl 1Pt 5:10 &gt;&gt;
* &lt;&lt;Bbl Lk 22:31 &gt;&gt;
* //but will provide a way of escape//

 </pre>
</div>
<div title="TextAreaPlugin" creator="SDM" modifier="ELSDesignStudios" created="200512242341" tags="systemConfig excludeLists">
<pre>/***
|Name|TextAreaPlugin|
|Source|http://www.TiddlyTools.com/#TextAreaPlugin|
|Documentation|http://www.TiddlyTools.com/#TextAreaPluginInfo|
|Version|2.2.1|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides|Story.prototype.focusTiddler|
|Options|##Configuration|
|Description|Adds Find/Again keyboard search, autosize, and 'stretch bar' resize for textarea controls|
!!!!!Documentation
&gt;see [[TextAreaPluginInfo]]
!!!!!Configuration
&lt;&lt;&lt;
&lt;&lt;option chkTextAreaExtensions&gt;&gt; use control-f (find), control-g (find again) inside text area
&lt;&lt;option chkDisableAutoSelect&gt;&gt; place cursor at start of textarea instead of pre-selecting content
&lt;&lt;option chkResizeEditor&gt;&gt; modify shadow EditTemplate to add resizeable text area (and autosize command)
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2009.04.08 [2.2.1] added autosizeEditor macro to enable automatic autosizing without using toolbar command
2009.04.06 [2.2.0] added resizeListbox macro definition and adjusted dragbar width calculation.
|please see [[TextAreaPluginInfo]] for additional revision details|
2006.01.22 [1.0.0] Moved from temporary &quot;System Tweaks&quot; tiddler into 'real' TextAreaPlugin tiddler.
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.TextAreaPlugin= {major: 2, minor: 2, revision: 1, date: new Date(2009,4,8)};

if (config.options.chkTextAreaExtensions===undefined) config.options.chkTextAreaExtensions=true;
if (config.options.chkDisableAutoSelect===undefined) config.options.chkDisableAutoSelect=true;
if (config.options.chkResizeEditor===undefined) config.options.chkResizeEditor=true;

// automatically tweak shadow EditTemplate to add &quot;autosizeEditor&quot; toolbar command
if (config.options.chkResizeEditor)
    config.shadowTiddlers.EditTemplate=config.shadowTiddlers.EditTemplate.replace(/deleteTiddler/,&quot;deleteTiddler autosizeEditor&quot;);
// automatically tweak shadow EditTemplate to add &quot;resizeEditor&quot; macro
if (config.options.chkResizeEditor)
    config.shadowTiddlers.EditTemplate+=&quot;&lt;span macro='resizeEditor'&gt;&lt;/span&gt;&quot;;

// Put focus in a specified tiddler field
Story.prototype.TextAreaExtensions_focusTiddler=Story.prototype.focusTiddler;
Story.prototype.focusTiddler = function(title,field)
{
    this.TextAreaExtensions_focusTiddler.apply(this,arguments); // first call core
    var e = this.getTiddlerField(title,field);
    if (e &amp;&amp; config.options.chkDisableAutoSelect) {
        if (e.setSelectionRange) // FF
            e.setSelectionRange(0,0);
        else if (e.createTextRange) // IE
            { var r=e.createTextRange(); r.collapse(true); r.select(); }
    }
    if (e &amp;&amp; config.options.chkTextAreaExtensions) addKeyDownHandlers(e);
}
//}}}

//{{{
function addKeyDownHandlers(e)
{
    // exit if not textarea or element doesn't allow selections
    if (e.tagName.toLowerCase()!=&quot;textarea&quot;||!e.setSelectionRange||e.initialized) return;

    // utility function: exits keydown handler and prevents browser from processing the keystroke
    var processed=function(ev) {
        ev.cancelBubble=true; // IE4+
        try{event.keyCode=0;}catch(e){}; // IE5
        if (window.event) ev.returnValue=false; // IE6
        if (ev.preventDefault) ev.preventDefault(); // moz/opera/konqueror
        if (ev.stopPropagation) ev.stopPropagation(); // all
        return false;
    }
    // capture keydown in edit field
    e.saved_onkeydown=e.onkeydown; // save current keydown handler (if any)
    e.onkeydown=function(ev) { if (!ev) var ev=window.event;
        var key=ev.keyCode;
        if (!key) {
            var char=event.which?event.which:event.charCode;
            if (char==102) key=70;
            if (char==103) key=71;
        }
        // process CTRL-F (find matching text) or CTRL-G (find next match)
        if (ev.ctrlKey &amp;&amp; (key==70||key==71)) {

            // prompt for text to find
            var defFind=e.findText?e.findText:e.value.substring(e.selectionStart,e.selectionEnd);
            if (key==70||!e.findText||!e.findText.length) // ctrl-f or no saved search text
                { var f=prompt(&quot;find:&quot;, defFind); e.focus(); if (f) e.findText=f; }
            if (!e.findText||!e.findText.length) return processed(ev); //  if no search text, exit

            // do case-insensitive match with 'wraparound'...  if not found, alert and exit
            var newstart=e.value.toLowerCase().indexOf(e.findText.toLowerCase(),e.selectionStart+1);
            if (newstart==-1) newstart=e.value.toLowerCase().indexOf(e.findText.toLowerCase());
            if (newstart==-1) { alert(&quot;'&quot;+e.findText+&quot;' not found&quot;); e.focus(); return processed(ev); }

            // set new selection, scroll it into view, and report line position in status bar
            e.setSelectionRange(newstart,newstart+e.findText.length);
            var linecount=e.value.split('\n').length;
            var thisline=e.value.substr(0,e.selectionStart).split('\n').length;
            e.scrollTop=Math.floor((thisline-1-e.rows/2)*e.scrollHeight/linecount);
            window.status=&quot;line: &quot;+thisline+&quot;/&quot;+linecount;
            return processed(ev);
        }
        if (e.saved_onkeydown) // call previous keydown handler (if any)
            e.saved_onkeydown(ev);
    }
    e.initialized=true;
}
//}}}

// // 'autosize' toolbar command
//{{{
config.commands.autosizeEditor = {
    text: 'autosize',
    tooltip: 'automatically adjust the editor height to fit the contents',
    text_alt: '\u221Aautosize',
    hideReadOnly: false,
    handler: function(event,src,title) {
        var here=story.findContainingTiddler(src); if (!here) return;
        var ta=here.getElementsByTagName('textarea'); if (!ta) return;
        for (i=0;i&lt;ta.length;i++) {
            // only autosize textareas actually used to edit tiddler fields
            if (ta[i].getAttribute(&quot;edit&quot;)==undefined) continue;
            ta[i].button=src;
            if (!ta[i].maxed)
                config.commands.autosizeEditor.on(ta[i]);
            else
                config.commands.autosizeEditor.off(ta[i],true);
        }
        return false;
    },
    on: function(e) {
        if (e.maxed) return; // already autosizing!
        if (e.savedheight==undefined)
            e.savedheight=e.style.height;
        if (e.savedkeyup==undefined) {
            e.savedkeyup=e.onkeyup;
            e.onkeyup=function(ev) {
                if (!ev) var ev=window.event; var e=resolveTarget(ev);
                e.style.height=e.scrollHeight+'px';
                if (e.savedkeyup) e.savedkeyup();
            }
        }
        // IE reports error: &quot;not implemented&quot; for onkeypress
        if (!config.browser.isIE &amp;&amp; e.savedkeypress==undefined) {
            e.savedkeypress=e.onkeypress;
            e.onkeypress=function(ev) {
                if (!ev) var ev=window.event; var e=resolveTarget(ev);
                if (ev.keyCode==33) { // PGUP
                    if (window.scrollByPages) window.scrollByPages(-1);
                    return false;
                }
                if (ev.keyCode==34) { // PGDN
                    if (window.scrollByPages) window.scrollByPages(1);
                    return false;
                }
                if (e.savedkeypress) e.savedkeypress();
            }
        }
        e.style.height=e.scrollHeight+'px';
        if (e.button) e.button.innerHTML=config.commands.autosizeEditor.text_alt;
        e.maxed=true;
    },
    off: function(e,resetHeight) {
        if (resetHeight) e.style.height=e.savedheight;
        e.onkeyup=e.savedkeyup;
        // IE reports error: &quot;not implemented&quot; for onkeypress
        if (!config.browser.isIE) e.onkeypress=e.savedkeypress;
        if (e.button) e.button.innerHTML=config.commands.autosizeEditor.text;
        e.maxed=false;
    }
};

config.macros.autosizeEditor={
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var here=story.findContainingTiddler(place); if (!here) return;
        var ta=here.getElementsByTagName('textarea'); if (!ta) return;
        for (i=0;i&lt;ta.length;i++) {
            // only autosize textareas actually used to edit tiddler fields
            if (ta[i].getAttribute(&quot;edit&quot;)==undefined) continue;
            config.commands.autosizeEditor.on(ta[i]);
        }
        return false;
    }
}
//}}}

// // grab-and-stretch handle
//{{{
config.macros.resizeEditor = { // add stretch bar to editor textarea
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var here=story.findContainingTiddler(place); if (!here) return;
        var ta=here.getElementsByTagName('textarea');
        if (ta) for (i=0;i&lt;ta.length;i++) {
            // only resize tiddler editor textareas
            if (ta[i].getAttribute(&quot;edit&quot;)==undefined) continue;
            new window.TextAreaResizer(ta[i]);
        }
    }
}

config.macros.resizeTiddler = { // add stretch bar to tiddler viewer element
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var here=story.findContainingTiddler(place); if (!here) return;
        var elems=here.getElementsByTagName('div');
        if (elems) for (i=0;i&lt;elems.length;i++) if (hasClass(elems[i],'viewer')) break;
        if (i&lt;elems.length) new window.TextAreaResizer(elems[i]);
    }
}

config.macros.resizeFrame = { // add stretch bar to iframes
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var here=story.findContainingTiddler(place); if (!here) return;
        var fr=here.getElementsByTagName('iframe');
        if (fr) for (i=0;i&lt;fr.length;i++) new window.TextAreaResizer(fr[i]);
    }
}

config.macros.resizeListbox = { // add stretch bar to listbox controls
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var here=story.findContainingTiddler(place); if (!here) here=place;
        var fr=here.getElementsByTagName('select');
        if (fr) for (i=0;i&lt;fr.length;i++) new window.TextAreaResizer(fr[i]);
    }
}

// TextAreaResizer script by Jason Johnston (jj@lojjic.net)
// Created August 2003.  Use freely, but give me credit.
// adds a handle below textareas that the user can drag with the mouse to resize the textarea.
// MODIFIED by ELS for cross-browser (IE) compatibility, including:

window.TextAreaResizer = function(elt) {
    this.element = elt;
    this.create();
}
window.TextAreaResizer.prototype = {
    create : function() {
        var elt = this.element;
        var thisRef = this;
        var h = this.handle = document.createElement(&quot;div&quot;);
        h.style.height = &quot;2px&quot;; // was 4px... looked too fat!
        h.style.overflow = &quot;hidden&quot;; // ELS: force IE to trim height to &lt; 1em
        var adjust=elt.nodeName=='textarea'?4:0;  // 4 pixels for textarea border edge
//      h.style.width=(elt.offsetWidth-adjust)+&quot;px&quot;;
        h.style.width=&quot;auto&quot;;
        h.style.backgroundColor = &quot;#999&quot;; // ELS: standard mid-tone (dark) gray
        h.style.cursor = &quot;s-resize&quot;;
        h.title = &quot;Drag to resize text box&quot;;
        h.onmousedown=function(evt){thisRef.dragStart(evt)};
        elt.parentNode.insertBefore(h, elt.nextSibling);
    },
    dragStart : function(evt) {
        if (!evt) var evt=window.event;
        this.dragStop(evt); // ELS: stop any current drag processing first
        var thisRef = this;
        this.dragStartY = evt.clientY;
        this.dragStartH = this.element.offsetHeight;
        document.savedmousemove=document.onmousemove;
        document.onmousemove=this.dragMoveHdlr=function(evt){thisRef.dragMove(evt)};
        document.savedmouseup=document.onmouseup;
        document.onmouseup=this.dragStopHdlr=function(evt){thisRef.dragStop(evt)};
    },
    dragMove : function(evt) {
        if (!evt) var evt=window.event;
        // ELS: make sure height is at least 10px
        var h=this.dragStartH+evt.clientY-this.dragStartY;
        if (h&lt;10) h=10; this.element.style.height=h+&quot;px&quot;;
        // ELS: match handle to textarea width (which may have changed due to document scrollbars)
//      var adjust=this.element.nodeName.toLowerCase()=='textarea'?4:0; // 4 pixels for textarea
//      this.handle.style.width=(this.element.offsetWidth-adjust)+&quot;px&quot;;
        // ELS: when manually resizing, disable autoresizing (without restoring saved height)
        if (this.element.maxed!=undefined &amp;&amp; this.element.maxed)
            config.commands.autosizeEditor.off(this.element,false);
    },
    dragStop : function(evt) {
        if (!evt) var evt=window.event;
        document.onmousemove=(document.savedmousemove!=undefined)?document.savedmousemove:null;
        document.onmousemove=(document.savedmouseup!=undefined)?document.savedmouseup:null;
    },
    destroy : function() {
        var elt = this.element;
        elt.parentNode.removeChild(this.handle);
        elt.style.height = &quot;&quot;;
    }
};
//}}}</pre>
</div>
<div title="Thanks" modifier="SDM" created="201004120330" modified="201210091518" book_key="">
<pre>&quot;Of the forms of [[Prayer]], only [[Worship]] and gratitude will continue eternally.&quot;  &lt;&lt;Bbl Mt 8:15 &gt;&gt;; &lt;&lt;Bbl Lk 17:16 &gt;&gt;; &lt;&lt;Bbl Php 4:6 &gt;&gt;; &lt;&lt;Bbl Col 2:7 &gt;&gt;, &lt;&lt;Bbl Col 3:15 &gt;&gt;, &lt;&lt;Bbl Col 4:2 &gt;&gt;; &lt;&lt;Bbl 1Tim 2:1 &gt;&gt;; &lt;&lt;Bbl 2Tim 3:2 &gt;&gt;; &lt;&lt;Bbl Rev 4:9 &gt;&gt;,&lt;&lt;Bbl Rev 7:12 &gt;&gt;.
* //thanksgiving, gratitude//
* [[Attitude]]</pre>
</div>
<div title="Theology" modifier="SDM" created="201009302022" modified="201009302331">
<pre>| Theol'cal approach | Word picture | Visual aid |h
|Biblical  |Foot-path |Loose row of pebbles |
|Systematic  |Database |Array of 3x5 cards |
@@color:brown;... conceived in eternity and revealed in time...@@  // -- C.K. Cummings, The Covenant of Grace //
@@color:indigo;We have chosen to begin with a statement about God and then a statement about Scripture, reversing the existing order ... we have placed statements of systematic theology in a framework of biblical theology, providing a narrative for that theology.@@ // -- Greg Strand, EFCA//  In other words, they wanted an approach that was more of a story-line.
----
A great value of BT is that ideas and historical events become fresh and meaningful.  To appreciate God's promise to Abraham, you have to imagine life without that promise.  Of course this requires two things: a knowledge of the information available before it came, and  a great deal of imagination.
----
Suppose you met a person who has no previous understanding or concept of God, the Bible, religions or morals or world-views of any sort. Suppose you had the privilege of teaching about your faith in Christ to this person. What is the very first thing you would explain?  //(People will tend to answer 'the Bible,'  which is the systematic impulse as well as tuned to pluralistic society.  Of course the Bible is the unique resource for all that follows, so this is not an answer to discount.  Starting with God is more natural, however; less mechanical.)//
!! How Theology Works
# Systematic Theology
## Display the Statement of Faith.  Note the division into Articles.
## Lay out 3x5 cards.  Explain logic-based organization.  Background of full knowledge.
## Compare to a database.   //Schema// = plan.
## Note that no one proposes using this approach without total reliance on the Bible.
# Biblical Theology
## Explain simple chronological approach.
## How do ideas and truths emerge?  Lay out pebbles.
## Compare to a foot path.
## Apology for the term //Biblical Theology.//
## What happens if you spend your time in ST, and then attempt BT?
### You must unlearn alot -- at least, you must suspend your knowledge.
### You must see what insights were available for the time you are studying.
### You must use your imagination.
## Thus a great value of BT is that ideas become fresh.
## None of this is new to you, but the definition of BT is often new, and people often haven't taken it deliberately as their approach to reading the Bible.
# The Statement of Faith as BT.</pre>
</div>
<div title="ThoughtLife" modifier="SDM" created="201012111924" modified="201211250314" book_key="">
<pre>* Rom 12:1
* //Bringing every thought captive//
* Loving the Lord your God with all //your mind//
* [[SelfControl]] starts here
* [[Attitude]]</pre>
</div>
<div title="TidW-Text-HowTo" modifier="SDM" created="201009262345" modified="201211121505" tags="howto excludeLists" book_key="">
<pre>You can get dashes @@color:#F00; --@@ like @@color:#F00;these -- @@ by making sure you have spaces.  Otherwise you will have strike-through.
|&gt;|&gt;| !Text Formating |
|Bold   |dbl single quotes | ''Shadrach'' |
|Strike |dbl hyphen | --Meshach-- |
|Under |dbl under | __Abednego__ |
| Italic |dbl slash | //Beltshazzar// |
|Hi Lite |dbl @ | @@Daniel@@ |
|Mono |3 curly | {{{Ezekiel}}} |
|Color |dbl @color: | @@color:#F00;Hosea@@ |
|BG |dbl @bgcolor: | @@bgcolor:#CCC;Amos@@ |
|Super |dbl ^ | 12^^3^^=1728 |
|Sub |dbl ~ | C~~3~~H~~5~~ |

|&gt;| !Links |
|[[source|http://tiddlywiki.com]] for ~TiddlyWiki online |{{{[[Link A|http://tiddlywiki.com]]}}} |
|[[Link B|./computer_wiki.htm]] for local reference wiki |{{{[[Link B|./computer_wiki.htm]]}}} |
|[[Link C|GettingStarted]] for Tiddler (~GettingStarted, very useful) |{{{[[Link C|GettingStarted]]}}} |
|[[more|./scott_wiki_docs/BlytheCoMarketingLaughable.pdf]] for supporting PDF |{{{[[Link D|./scott_wiki_docs/BlytheCoMarketingLaughable.pdf]]}}} |
|[[Link E |.././Personal_USB/ComputerGeek/www/codeigniter_guide/helpers/directory_helper.html]] for local in another directory |{{{[[Link E |.././Personal_USB/ComputerGeek/www/codeigniter_guide/helpers/directory_helper.html]]}}} |
|[[Open folder|./]] |{{{[[Open folder|./]] }}} |
!Tables
This is a mark-up demo; not intended for theological instruction.
{{textleft{
|bgcolor:#F7D8A0;vertical-align:middle;  Humanity |bgcolor:#abf; The Lord |bgcolor:#F7D8A0;vertical-align:middle;  Non-humanity|
|~|bgcolor:#94EDD6; The Angels |~|
|~|bgcolor:#cfc; {{twLink{[[Creation/Internet]]}}} |~|
{{scripture{&lt;&lt;gradient horiz  #ffc #F7D8A0 #ffc #ffc &gt;&gt;Cool gradients -- a bit code intensive.  &gt;&gt;}}}</pre>
</div>
<div title="Tiddler" creator="psd" modifier="jermolene" created="201102111107" modified="201110201351" tags="concepts history terminology">
<pre>A 'tiddler' is the name given to a unit of MicroContent in TiddlyWiki.

Tiddlers are pervasive in TiddlyWiki. The MainMenu is defined by a tiddler, plugins are delivered in tiddlers, there are special StyleSheet tiddlers, and so on.

Other systems have analogous concepts with more prosaic names: like &quot;items&quot;, &quot;entries&quot;, &quot;entities&quot;. Even though &quot;tiddler&quot; is a vaguely preposterous name it at least has the virtue of being confusingly distinctive rather than confusingly generic.
</pre>
</div>
<div title="TiddlerComments" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="formatting">
<pre>To hide text within a tiddler so that it is not displayed you can wrap it in {{{/%}}} and {{{%/}}}. It can be a useful trick for hiding drafts or annotating complex markup. Edit this tiddler to see an example.
/%This text is not displayed
until you try to edit %/</pre>
</div>
<div title="TiddlerMap" creator="SDM" modifier="SDM" created="201012202310" modified="201212141602" tags="menu">
<pre>//SDM// lots of tweaking in the code at bottom
/%
AB:/%%/ &lt;&lt;tiddler TiddlerMap##Col2 with: A B&gt;&gt;

/%
CD:/%%/ &lt;&lt;tiddler TiddlerMap##Col2 with: C D&gt;&gt;

/%
EF:/%%/ &lt;&lt;tiddler TiddlerMap##Col2 with: E F&gt;&gt;

/%
GH:/%%/ &lt;&lt;tiddler TiddlerMap##Col2 with: G H&gt;&gt;

/%
IJKL:/%%/ &lt;&lt;tiddler TiddlerMap##Col2 with: I J K L&gt;&gt;

/%
MNO:/%%/ &lt;&lt;tiddler TiddlerMap##Col with: M N O&gt;&gt;

/%
PQ:/%%/ &lt;&lt;tiddler TiddlerMap##Col2 with: P Q&gt;&gt;

/%
R:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: R&gt;&gt;

/%
S:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: S&gt;&gt;

/%
T:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: T&gt;&gt;

/%
UVW:/%%/ &lt;&lt;tiddler TiddlerMap##Col3 with: U V W&gt;&gt;

/%
XYZ:/%%/ &lt;&lt;tiddler TiddlerMap##Col3 with: X Y Z&gt;&gt;

/%
0to9:/%%/ &lt;&lt;tiddler TiddlerMap##Col3 with: '0-3' '4-6' '7-9'&gt;&gt;

// /%
// 0to9:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: '0-9'&gt;&gt;

/%
!!!Col
{{mapH1{$1}}}{{dp33{&lt;&lt;list noCase title '[$1]'&gt;&gt;}}} {{mapH1{$2}}}{{dp33{&lt;&lt;list noCase title '[$2]'&gt;&gt;}}} {{mapH1{$3}}}{{dp33{&lt;&lt;list noCase title '[$3]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}

!!!Col1
{{mapH1{$1}}}{{dp100{ &lt;&lt;list noCase title '[$1]'&gt;&gt;}}}
!!!end

!!!Col1_backup
&lt;hr&gt;
{{dp100{&lt;&lt;list noCase title '[$1]'&gt;&gt;}}}
&lt;hr&gt;
!!!end

!!!Col2
{{dp50{ {{mapH1{$1}}}&lt;&lt;list noCase title '[$1]'&gt;&gt;}}} {{dp50{ {{mapH1{$2}}}&lt;&lt;list noCase title '[$2]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}
!!!end

*Col3
!!!Col3
{{mapH1{$1}}}{{dp33{&lt;&lt;list noCase title '[$1]'&gt;&gt;}}} {{mapH1{$2}}}{{dp33{&lt;&lt;list noCase title '[$2]'&gt;&gt;}}} {{mapH1{$3}}}{{dp33{&lt;&lt;list noCase title '[$3]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}
!!!end

*Col4
!!!Col4
{{mapH1{$1}}}{{dp25{&lt;&lt;list noCase title '[$1]'&gt;&gt;}}} {{mapH1{$2}}}{{dp25{&lt;&lt;list noCase title '[$2]'&gt;&gt;}}} {{mapH1{$3}}}{{dp25{&lt;&lt;list noCase title '[$3]'&gt;&gt;}}} {{mapH1{$4}}}{{dp25{&lt;&lt;list noCase title '[$4]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}
!!!end

!!!ColAZ3
{{dp33{''$1''-[$2]
&lt;&lt;list noCase title '$1[$2]'&gt;&gt;}}} {{dp33{''$1''-[$3]
&lt;&lt;list noCase title '$1[$3]'&gt;&gt;}}} {{dp33{''$1''-[$4]
&lt;&lt;list noCase title '$1[$4]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}
!!!end

!!!ColAZ4
{{dp25{''$1''-[$2]
&lt;&lt;list noCase title '$1[$2]'&gt;&gt;}}} {{dp25{''$1''-[$3]
&lt;&lt;list noCase title '$1[$3]'&gt;&gt;}}} {{dp25{''$1''-[$4]
&lt;&lt;list noCase title '$1[$4]'&gt;&gt;}}} {{dp25{''$1''-[$5]
&lt;&lt;list noCase title '$1[$5]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}
!!!end

!!!Col0to9
{{dp33{''$1''&lt;&lt;list noCase title '[$1]'&gt;&gt;}}} {{dp33{''$2''
&lt;&lt;list noCase title '[$2]'&gt;&gt;}}} {{dp33{''$3''
&lt;&lt;list noCase title '[$3]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}
!!!end
%/</pre>
</div>
<div title="TiddlerMapCol1" creator="SDM" modifier="SDM" created="201012202059" modified="201101061958">
<pre>/%
A:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: A&gt;&gt;
/%
B:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: B&gt;&gt;
/%
C:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: C&gt;&gt;
/%
D:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: D&gt;&gt;
/%
E:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: E&gt;&gt;
/%
F:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: F&gt;&gt;
/%
G:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: G&gt;&gt;
/%
H:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: H&gt;&gt;
/%
I:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: I&gt;&gt;
/%
J:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: J&gt;&gt;
/%
K:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: K&gt;&gt;
/%
L:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: L&gt;&gt;
/%
M:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: M&gt;&gt;
/%
N:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: N&gt;&gt;
/%
O:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: O&gt;&gt;
/%
P:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: P&gt;&gt;
/%
Q:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: Q&gt;&gt;
/%
R:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: R&gt;&gt;
/%
S:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: S&gt;&gt;
/%
T:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: T&gt;&gt;
/%
U:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: U&gt;&gt;
/%
V:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: V&gt;&gt;
/%
W:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: W&gt;&gt;
/%
X:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: X&gt;&gt;
/%
Y:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: Y&gt;&gt;
/%
Z:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: Z&gt;&gt;
/%
0to9:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: '0-9'&gt;&gt;
/%
0:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: 0&gt;&gt;
/%
1:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: 1&gt;&gt;
/%
2:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: 2&gt;&gt;
/%
3:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: 3&gt;&gt;
/%
4:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: 4&gt;&gt;
/%
5:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: 5&gt;&gt;
/%
6:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: 6&gt;&gt;
/%
7:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: 7&gt;&gt;
/%
8:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: 8&gt;&gt;
/%
9:/%%/ &lt;&lt;tiddler TiddlerMap##Col1 with: 9&gt;&gt;</pre>
</div>
<div title="TiddlerMapX" creator="SDM" modifier="SDM" created="201211112217" modified="201211120200" tags="menu excludeLists" book_key="">
<pre>//SDM// lots of tweaking in the code at bottom
/%
AB:/%%/ &lt;&lt;tiddler TiddlerMapX##Col2 with: A B&gt;&gt;

/%
CD:/%%/ &lt;&lt;tiddler TiddlerMapX##Col2 with: C D&gt;&gt;

/%
EF:/%%/ &lt;&lt;tiddler TiddlerMapX##Col2 with: E F&gt;&gt;

/%
GH:/%%/ &lt;&lt;tiddler TiddlerMapX##Col2 with: G H&gt;&gt;

/%
IJKL:/%%/ &lt;&lt;tiddler TiddlerMapX##Col4 with: I J K L&gt;&gt;

/%
MNO:/%%/ &lt;&lt;tiddler TiddlerMapX##Col3 with: M N O&gt;&gt;

/%
PQ:/%%/ &lt;&lt;tiddler TiddlerMapX##Col2 with: P Q&gt;&gt;

/%
R:/%%/ &lt;&lt;tiddler TiddlerMapX##Col1 with: R&gt;&gt;

/%
S:/%%/ &lt;&lt;tiddler TiddlerMapX##Col1 with: S&gt;&gt;

/%
TUV:/%%/ &lt;&lt;tiddler TiddlerMapX##Col3 with: T U V&gt;&gt;

/%
W:/%%/ &lt;&lt;tiddler TiddlerMapX##Col1 with: W&gt;&gt;

/%
XYZ:/%%/ &lt;&lt;tiddler TiddlerMapX##Col3 with: X Y Z&gt;&gt;

/%
0to9:/%%/ &lt;&lt;tiddler TiddlerMapX##Col3 with: '0-3' '4-6' '7-9'&gt;&gt;

/%
!!!Col
{{mapH1{$1}}}{{dp33{&lt;&lt;list noCase title '[$1]'&gt;&gt;}}} {{mapH1{$2}}}{{dp33{&lt;&lt;list noCase title '[$2]'&gt;&gt;}}} {{mapH1{$3}}}{{dp33{&lt;&lt;list noCase title '[$3]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}

!!!Col1
{{dp100{&lt;&lt;list xCase title '[$1]' filter '[tag[NOT Comment AND NOT Scriptr]]'&gt;&gt;}}}
!!!end

!!!Col1_backup
&lt;hr&gt;
{{dp100{&lt;&lt;list noCase title '[$1]'&gt;&gt;}}}
&lt;hr&gt;
!!!end

*Col2
!!!Col2
{{fourcolumns{''$1'' &lt;&lt;list xCase title '[$1]' [tag[(NOT Comment AND NOT Scriptr)]]&gt;&gt; ''$2''&lt;&lt;list xCase title '[$2]' [tag[(NOT Comment AND NOT Scriptr)]]&gt;&gt;}}}
!!!end

*Col3
!!!Col3
{{mapH1{$1}}}{{dp33{&lt;&lt;list xCase title '[$1]' '[tag[NOT Comment AND NOT Scriptr]]'&gt;&gt;}}} {{mapH1{$2}}}{{dp33{&lt;&lt;list noCase title '[$2]' '[tag[NOT Comment AND NOT Scriptr]]'&gt;&gt;}}} {{mapH1{$3}}}{{dp33{&lt;&lt;list noCase title '[$3]' '[tag[NOT Comment AND NOT Scriptr]]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}
!!!end

*Col4
!!!Col4
{{fourcolumns{
{{mapH1{$1}}}&lt;&lt;list xCase title '[$1]' '[tag[NOT Comment]]'&gt;&gt; {{mapH1{$2}}}&lt;&lt;list xCase title '[$2]' '[tag[NOT Comment]]'&gt;&gt; {{mapH1{$3}}}&lt;&lt;list xCase title '[$3]' '[tag[NOT Comment]]'&gt;&gt; {{mapH1{$4}}}&lt;&lt;list xCase title '[$4]' '[tag[NOT Comment]]'&gt;&gt;
}}}
!!!end

!!!ColAZ3
{{dp33{''$1''-[$2]
&lt;&lt;list noCase title '$1[$2]'&gt;&gt;}}} {{dp33{''$1''-[$3]
&lt;&lt;list noCase title '$1[$3]'&gt;&gt;}}} {{dp33{''$1''-[$4]
&lt;&lt;list noCase title '$1[$4]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}
!!!end

!!!ColAZ4
{{dp25{''$1''-[$2]
&lt;&lt;list noCase title '$1[$2]'&gt;&gt;}}} {{dp25{''$1''-[$3]
&lt;&lt;list noCase title '$1[$3]'&gt;&gt;}}} {{dp25{''$1''-[$4]
&lt;&lt;list noCase title '$1[$4]'&gt;&gt;}}} {{dp25{''$1''-[$5]
&lt;&lt;list noCase title '$1[$5]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}
!!!end

!!!Col0to9
{{dp33{''$1''&lt;&lt;list noCase title '[$1]'&gt;&gt;}}} {{dp33{''$2''
&lt;&lt;list noCase title '[$2]'&gt;&gt;}}} {{dp33{''$3''
&lt;&lt;list noCase title '[$3]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}
!!!end
%/</pre>
</div>
<div title="TiddlerSlicing" creator="psd" modifier="psd" created="201102111107" modified="201102161116">
<pre>TiddlerSlicing allows you to use special notation to pull out a chunk of specially marked text from within a tiddler. Each slice has a name and a value which can be specified anywhere within a tiddler in any of these formats:
{{{
    theName:  textSlice
    |theName:| textSlice |
    |theName| textSlice |
}}}
The name may contain any of the characters &quot;a-ZA-Z_0-9&quot;, and may also be decorated with {{{''}}} or {{{//}}} markers for ''bold'' and //italic// formatting that are ignored. For example:
{{{
    |''theName:''| textSlice |
}}}
Slices can be then be referenced by qualifying the parent tiddler name with the symbols &quot;::&quot; and the name of the slice. For example:
{{{
ColorPalette::PrimaryLight
}}}
TiddlerSlicing doesn't work eveywhere; at this point it is mainly intended to support the ColorPalette and similar usages.

Finally, here's an example of some more complex slice formatting:
{{{
version: 1.2.3.4
Author: Joe Brown
''Credits:'' ~ASmith ~BBrown ~CCalony
//~SeeAlso:// The rise and fall of the M-perium
|!Name|!Value|
|Name:|TextSlice Tester|
|URL:|http:\\sample.com\TestSliced |
|''Type:''| Plugin |
|//Source//| http:\\sample.com\TestSliced\src\text.js |
}}}
The slices defined in that example are:
|version|1.2.3.4|
|Author|Joe Brown|
|Credits|~ASmith ~BBrown ~CCalony|
|~SeeAlso|The rise and fall of the M-perium|
|Name|TextSlice Tester|
|URL|http:\\sample.com\TestSliced|
|Type|Plugin|
|Source|http:\\sample.com\TestSliced\src\text.js|</pre>
</div>
<div title="TiddlerTweakerPlugin" modifier="SDM" created="200708032311" modified="201211211521" tags="systemConfig excludeLists" book_key="">
<pre>/***
|Name|TiddlerTweakerPlugin|
|Source|http://www.TiddlyTools.com/#TiddlerTweakerPlugin|
|Version|2.4.2|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides||
|Description|select multiple tiddlers and modify author, created, modified and/or tag values|
~TiddlerTweaker is a tool for TiddlyWiki authors.  It allows you to select multiple tiddlers from a listbox, either by direct interaction or automatically matching specific criteria.  You can then modify the creator, author, created, modified and/or tag values of those tiddlers using a compact set of form fields.  The values you enter into the fields simultantously overwrite the existing values in all tiddlers you have selected.
!!!!!Usage
&lt;&lt;&lt;
{{{&lt;&lt;tiddlerTweaker&gt;&gt;}}}
{{smallform{&lt;&lt;tiddlerTweaker&gt;&gt;}}}
By default, any tags you enter into the TiddlerTweaker will //replace// the existing tags in all the tiddlers you have selected.  However, you can also use TiddlerTweaker to quickly filter specified tags from the selected tiddlers, while leaving any other tags assigned to those tiddlers unchanged:
&gt;Any tag preceded by a &quot;+&quot; (plus) or &quot;-&quot; (minus), will be added or removed from the existing tags //instead of replacing the entire tag definition// of each tiddler (e.g., enter &quot;-excludeLists&quot; to remove that tag from all selected tiddlers.  When using this syntax, care should be taken to ensure that //every// tag is preceded by &quot;+&quot; or &quot;-&quot;, to avoid inadvertently overwriting any other existing tags on the selected tiddlers.  (note: the &quot;+&quot; or &quot;-&quot; prefix on each tag value is NOT part of the tag value, and is only used by TiddlerTweaker to control how that tag value is processed)
Important Notes:
* Inasmuch as TiddlerTweaker is a 'power user' tool that can perform 'batch' functions (operating on many tiddlers at once), you should always have a recent backup of your document (or &quot;save changes&quot; just *before* tweaking the tiddlers), just in case you &quot;shoot yourself in the foot&quot;.
* The date and author information on any tiddlers you tweak will ONLY be updated if the corresponding  TiddlyTweaker checkboxes have been selected.  As a general rule, after using TiddlerTweaker, always ''//remember to save your document//'' when you are done, even though the tiddler timeline tab may not show any recently modified tiddlers.
* Selecting and updating all tiddlers in a document can take a while.  Your browser may warn about an &quot;unresponsive script&quot;.  Usually, if you allow it to continue, it should complete the processing... eventually.  Nonetheless, be sure to save your work before you begin tweaking lots of tiddlers, just in case something does get 'stuck'.
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2009.06.26 [2.4.2] only add brackets around tags containing spaces
2009.06.22 [2.4.1] in setFields(), add brackets around all tags shown tweaker edit field
2009.03.30 [2.4.0] added 'sort by modifier'
2009.01.22 [2.3.0] added support for text pattern find/replace
2008.10.27 [2.2.3] in setTiddlers(), fixed Safari bug by replacing static Array.concat(...) with new Array().concat(...)
2008.09.07 [2.2.2] added removeCookie() function for compatibility with [[CookieManagerPlugin]]
2008.05.12 [2.2.1] replace built-in backstage &quot;tweak&quot; task with tiddler tweaker control panel (moved from BackstageTweaks)
2008.01.13 [2.2.0] added &quot;auto-selection&quot; links: all, changed, tags, title, text
2007.12.26 [2.1.0] added support for managing 'creator' custom field (see [[CoreTweaks]])
2007.11.01 [2.0.3] added config.options.txtTweakerSortBy for cookie-based persistence of list display order preference setting.
2007.09.28 [2.0.2] in settiddlers() and deltiddlers(), added suspend/resume notification handling (improves performance when operating on multiple tiddlers)
2007.08.03 [2.0.1] added shadow definition for [[TiddlerTweaker]] tiddler for use as parameter references with {{{&lt;&lt;tiddler&gt;&gt;, &lt;&lt;slider&gt;&gt; or &lt;&lt;tabs&gt;&gt;}}} macros.
2007.08.03 [2.0.0] converted from inline script
2006.01.01 [1.0.0] initial release
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.TiddlerTweakerPlugin= {major: 2, minor: 4, revision: 1, date: new Date(2009,6,22)};

// shadow tiddler
config.shadowTiddlers.TiddlerTweaker=&quot;&lt;&lt;tiddlerTweaker&gt;&gt;&quot;;

/// backstage task
if (config.tasks) { // for TW2.2b3 or above
    config.tasks.tweak.tooltip=&quot;review/modify tiddler internals: dates, authors, tags, etc.&quot;;
    config.tasks.tweak.content=&quot;{{smallform small groupbox{&lt;&lt;tiddlerTweaker&gt;&gt;}}}&quot;;
}

if (config.options.txtTweakerSortBy==undefined) config.options.txtTweakerSortBy=&quot;modified&quot;;

// if removeCookie() function is not defined by TW core, define it here.
if (window.removeCookie===undefined) {
    window.removeCookie=function(name) {
        document.cookie = name+'=; expires=Thu, 01-Jan-1970 00:00:01 UTC; path=/;';
    }
}

config.macros.tiddlerTweaker = {
    html: '&lt;form style=&quot;display:inline&quot;&gt;&lt;!--\
        --&gt;&lt;table style=&quot;padding:0;margin:0;border:0;width:100%&quot;&gt;&lt;tr valign=&quot;top&quot; style=&quot;padding:0;margin:0;border:0&quot;&gt;&lt;!--\
        --&gt;&lt;td style=&quot;text-align:center;white-space:nowrap;width:99%;padding:0;margin:0;border:0&quot;&gt;&lt;!--\
            --&gt;&lt;font size=-2&gt;&lt;div style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;float:right&quot;&gt;&lt;!--\
            --&gt;&amp;nbsp; &lt;a href=&quot;javascript:;&quot; \
                title=&quot;select all tiddlers&quot;\
                onclick=&quot;\
                var f=this; while (f&amp;&amp;f.nodeName.toLowerCase()!=\'form\')f=f.parentNode;\
                for (var t=0; t&lt;f.list.options.length; t++)\
                    if (f.list.options[t].value.length) f.list.options[t].selected=true;\
                config.macros.tiddlerTweaker.selecttiddlers(f.list);\
                return false&quot;&gt;all&lt;/a&gt;&lt;!--\
            --&gt;&amp;nbsp; &lt;a href=&quot;javascript:;&quot; \
                title=&quot;select tiddlers that are new/changed since the last file save&quot;\
                onclick=&quot;\
                var lastmod=new Date(document.lastModified);\
                var f=this; while (f&amp;&amp;f.nodeName.toLowerCase()!=\'form\')f=f.parentNode;\
                for (var t=0; t&lt;f.list.options.length; t++) {\
                    var tid=store.getTiddler(f.list.options[t].value);\
                    f.list.options[t].selected=tid&amp;&amp;tid.modified&gt;lastmod;\
                }\
                config.macros.tiddlerTweaker.selecttiddlers(f.list);\
                return false&quot;&gt;changed&lt;/a&gt;&lt;!--\
            --&gt;&amp;nbsp; &lt;a href=&quot;javascript:;&quot; \
                title=&quot;select tiddlers with at least one matching tag&quot;\
                onclick=&quot;\
                var t=prompt(\'Enter space-separated tags (match ONE)\');\
                if (!t||!t.length) return false;\
                var tags=t.readBracketedList();\
                var f=this; while (f&amp;&amp;f.nodeName.toLowerCase()!=\'form\')f=f.parentNode;\
                for (var t=0; t&lt;f.list.options.length; t++) {\
                    f.list.options[t].selected=false;\
                    var tid=store.getTiddler(f.list.options[t].value);\
                    if (tid&amp;&amp;tid.tags.containsAny(tags)) f.list.options[t].selected=true;\
                }\
                config.macros.tiddlerTweaker.selecttiddlers(f.list);\
                return false&quot;&gt;tags&lt;/a&gt;&lt;!--\
            --&gt;&amp;nbsp; &lt;a href=&quot;javascript:;&quot; \
                title=&quot;select tiddlers whose titles include matching text&quot;\
                onclick=&quot;\
                var txt=prompt(\'Enter a title (or portion of a title) to match\');\
                if (!txt||!txt.length) return false;\
                var f=this; while (f&amp;&amp;f.nodeName.toLowerCase()!=\'form\')f=f.parentNode;\
                for (var t=0; t&lt;f.list.options.length; t++) {\
                    f.list.options[t].selected=f.list.options[t].value.indexOf(txt)!=-1;\
                }\
                config.macros.tiddlerTweaker.selecttiddlers(f.list);\
                return false&quot;&gt;titles&lt;/a&gt;&lt;!--\
            --&gt;&amp;nbsp; &lt;a href=&quot;javascript:;&quot; \
                title=&quot;select tiddlers containing matching text&quot;\
                onclick=&quot;\
                var txt=prompt(\'Enter tiddler text (content) to match\');\
                if (!txt||!txt.length) return false;\
                var f=this; while (f&amp;&amp;f.nodeName.toLowerCase()!=\'form\')f=f.parentNode;\
                for (var t=0; t&lt;f.list.options.length; t++) {\
                    var tt=store.getTiddlerText(f.list.options[t].value,\'\');\
                    f.list.options[t].selected=(tt.indexOf(txt)!=-1);\
                }\
                config.macros.tiddlerTweaker.selecttiddlers(f.list);\
                return false&quot;&gt;text&lt;/a&gt; &amp;nbsp;&lt;!--\
            --&gt;&lt;/span&gt;&lt;span&gt;select tiddlers&lt;/span&gt;&lt;!--\
            --&gt;&lt;/div&gt;&lt;!--\
            --&gt;&lt;/font&gt;&lt;select multiple name=list size=&quot;30&quot; style=&quot;width:99.99%&quot; \
                title=&quot;use click, shift-click and/or ctrl-click to select multiple tiddler titles&quot; \
                onclick=&quot;config.macros.tiddlerTweaker.selecttiddlers(this)&quot; \
                onchange=&quot;config.macros.tiddlerTweaker.setfields(this)&quot;&gt;&lt;!--\
            --&gt;&lt;/select&gt;&lt;br&gt;&lt;!--\
            --&gt;show&lt;input type=text size=1 value=&quot;30&quot; \
                onchange=&quot;this.form.list.size=this.value; this.form.list.multiple=(this.value&gt;1);&quot;&gt;&lt;!--\
            --&gt;by&lt;!--\
            --&gt;&lt;select name=sortby size=1 \
                onchange=&quot;config.macros.tiddlerTweaker.init(this.form,this.value)&quot;&gt;&lt;!--\
            --&gt;&lt;option value=&quot;title&quot;&gt;title&lt;/option&gt;&lt;!--\
            --&gt;&lt;option value=&quot;size&quot;&gt;size&lt;/option&gt;&lt;!--\
            --&gt;&lt;option value=&quot;modified&quot;&gt;modified&lt;/option&gt;&lt;!--\
            --&gt;&lt;option value=&quot;created&quot;&gt;created&lt;/option&gt;&lt;!--\
            --&gt;&lt;option value=&quot;modifier&quot;&gt;modifier&lt;/option&gt;&lt;!--\
            --&gt;&lt;/select&gt;&lt;!--\
            --&gt;&lt;input type=&quot;button&quot; value=&quot;refresh&quot; \
                onclick=&quot;config.macros.tiddlerTweaker.init(this.form,this.form.sortby.value)&quot;&lt;!--\
            --&gt; &lt;input type=&quot;button&quot; name=&quot;stats&quot; disabled value=&quot;totals...&quot; \
                onclick=&quot;config.macros.tiddlerTweaker.stats(this)&quot;&gt;&lt;!--\
        --&gt;&lt;/td&gt;&lt;td style=&quot;white-space:nowrap;padding:0;margin:0;border:0;width:1%&quot;&gt;&lt;!--\
            --&gt;&lt;div style=&quot;text-align:left&quot;&gt;&lt;font size=-2&gt;&amp;nbsp;modify values&lt;/font&gt;&lt;/div&gt;&lt;!--\
            --&gt;&lt;table border=0 style=&quot;width:100%;padding:0;margin:0;border:0;&quot;&gt;&lt;tr style=&quot;padding:0;border:0;&quot;&gt;&lt;!--\
            --&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=checkbox name=settitle unchecked \
                    title=&quot;allow changes to tiddler title (rename tiddler)&quot; \
                    onclick=&quot;this.form.title.disabled=!this.checked&quot;&gt;title&lt;!--\
            --&gt;&lt;/td&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=text name=title size=35 style=&quot;width:98%&quot; disabled&gt;&lt;!--\
            --&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;padding:0;border:0;&quot;&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=checkbox name=setcreator unchecked \
                    title=&quot;allow changes to tiddler creator&quot; \
                    onclick=&quot;this.form.creator.disabled=!this.checked&quot;&gt;created by&lt;!--\
            --&gt;&lt;/td&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=text name=creator size=35 style=&quot;width:98%&quot; disabled&gt;&lt;!--\
            --&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;padding:0;border:0;&quot;&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=checkbox name=setwho unchecked \
                    title=&quot;allow changes to tiddler author&quot; \
                    onclick=&quot;this.form.who.disabled=!this.checked&quot;&gt;modified by&lt;!--\
            --&gt;&lt;/td&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=text name=who size=35 style=&quot;width:98%&quot; disabled&gt;&lt;!--\
            --&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;padding:0;border:0;&quot;&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=checkbox name=setcdate unchecked \
                    title=&quot;allow changes to created date&quot; \
                    onclick=&quot;var f=this.form; f.cm.disabled=f.cd.disabled=f.cy.disabled=f.ch.disabled=f.cn.disabled=!this.checked&quot;&gt;&lt;!--\
                --&gt;created on&lt;!--\
            --&gt;&lt;/td&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=text name=cm size=2 style=&quot;width:2em;padding:0;text-align:center&quot; disabled&gt;&lt;!--\
                --&gt; / &lt;input type=text name=cd size=2 style=&quot;width:2em;padding:0;text-align:center&quot; disabled&gt;&lt;!--\
                --&gt; / &lt;input type=text name=cy size=4 style=&quot;width:3em;padding:0;text-align:center&quot; disabled&gt;&lt;!--\
                --&gt; at &lt;input type=text name=ch size=2 style=&quot;width:2em;padding:0;text-align:center&quot; disabled&gt;&lt;!--\
                --&gt; : &lt;input type=text name=cn size=2 style=&quot;width:2em;padding:0;text-align:center&quot; disabled&gt;&lt;!--\
            --&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;padding:0;border:0;&quot;&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=checkbox name=setmdate unchecked \
                    title=&quot;allow changes to modified date&quot; \
                    onclick=&quot;var f=this.form; f.mm.disabled=f.md.disabled=f.my.disabled=f.mh.disabled=f.mn.disabled=!this.checked&quot;&gt;&lt;!--\
                --&gt;modified on&lt;!--\
            --&gt;&lt;/td&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=text name=mm size=2 style=&quot;width:2em;padding:0;text-align:center&quot; disabled&gt;&lt;!--\
                --&gt; / &lt;input type=text name=md size=2 style=&quot;width:2em;padding:0;text-align:center&quot; disabled&gt;&lt;!--\
                --&gt; / &lt;input type=text name=my size=4 style=&quot;width:3em;padding:0;text-align:center&quot; disabled&gt;&lt;!--\
                --&gt; at &lt;input type=text name=mh size=2 style=&quot;width:2em;padding:0;text-align:center&quot; disabled&gt;&lt;!--\
                --&gt; : &lt;input type=text name=mn size=2 style=&quot;width:2em;padding:0;text-align:center&quot; disabled&gt;&lt;!--\
            --&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;padding:0;border:0;&quot;&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=checkbox name=replacetext unchecked\
                    title=&quot;find/replace matching text&quot; \
                    onclick=&quot;this.form.pattern.disabled=this.form.replacement.disabled=!this.checked&quot;&gt;replace text&lt;!--\
            --&gt;&lt;/td&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=text name=pattern size=15 value=&quot;&quot; style=&quot;width:40%&quot; disabled \
                    title=&quot;enter TEXT PATTERN (regular expression)&quot;&gt; with &lt;!--\
                --&gt;&lt;input type=text name=replacement size=15 value=&quot;&quot; style=&quot;width:40%&quot; disabled \
                    title=&quot;enter REPLACEMENT TEXT&quot;&gt;&lt;!--\
            --&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;padding:0;border:0;&quot;&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=checkbox name=settags checked \
                    title=&quot;allow changes to tiddler tags&quot; \
                    onclick=&quot;this.form.tags.disabled=!this.checked&quot;&gt;tags&lt;!--\
            --&gt;&lt;/td&gt;&lt;td style=&quot;padding:1px;border:0;white-space:nowrap&quot;&gt;&lt;!--\
                --&gt;&lt;input type=text name=tags size=35 value=&quot;&quot; style=&quot;width:98%&quot; \
                    title=&quot;enter new tags or use \'+tag\' and \'-tag\' to add/remove tags from existing tags&quot;&gt;&lt;!--\
            --&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;!--\
            --&gt;&lt;div style=&quot;text-align:center&quot;&gt;&lt;!--\
            --&gt;&lt;nobr&gt;&lt;input type=button name=display disabled style=&quot;width:32%&quot; value=&quot;display tiddlers&quot; \
                onclick=&quot;config.macros.tiddlerTweaker.displaytiddlers(this)&quot;&gt;&lt;!--\
            --&gt; &lt;input type=button name=del disabled style=&quot;width:32%&quot; value=&quot;delete tiddlers&quot; \
                onclick=&quot;config.macros.tiddlerTweaker.deltiddlers(this)&quot;&gt;&lt;!--\
            --&gt; &lt;input type=button name=set disabled style=&quot;width:32%&quot; value=&quot;update tiddlers&quot; \
                onclick=&quot;config.macros.tiddlerTweaker.settiddlers(this)&quot;&gt;&lt;/nobr&gt;&lt;!--\
            --&gt;&lt;/div&gt;&lt;!--\
        --&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;!--\
        --&gt;&lt;/form&gt;&lt;span style=&quot;display:none&quot;&gt;&lt;!--content replaced by tiddler &quot;stats&quot;--&gt;&lt;/span&gt;\
    ',
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var span=createTiddlyElement(place,&quot;span&quot;);
        span.innerHTML=this.html;
        this.init(span.firstChild,config.options.txtTweakerSortBy);
    },
    init: function(f,sortby) { // initialize form controls
        if (!f) return; // form might not be rendered yet...
        while (f.list.options[0]) f.list.options[0]=null; // empty current list content
        var tids=store.getTiddlers(sortby);
        if (sortby=='size') // descending order
            tids.sort(function(a,b) {return a.text.length &gt; b.text.length ? -1 : (a.text.length == b.text.length ? 0 : +1);});
        var who='';
        for (i=0; i&lt;tids.length; i++) { var t=tids[i];
            var label=t.title; var value=t.title;
            switch (sortby) {
                case 'modified':
                case 'created':
                    var t=tids[tids.length-i-1]; // reverse order
                    var when=t[sortby].formatString('YY.0MM.0DD 0hh:0mm ');
                    label=when+t.title;
                    value=t.title;
                    break;
                case 'size':
                    label='['+t.text.length+'] '+label;
                    break;
                case 'modifier':
                case 'creator':
                    if (who!=t[sortby]) {
                        who=t[sortby];
                        f.list.options[f.list.length]=new Option('by '+who+':','',false,false);
                    }
                    label='\xa0\xa0\xa0'+label; // indent
                    break;
            }
            f.list.options[f.list.length]=new Option(label,value,false,false);
        }
        f.title.value=f.who.value=f.creator.value=f.tags.value=&quot;&quot;;
        f.cm.value=f.cd.value=f.cy.value=f.ch.value=f.cn.value=&quot;&quot;;
        f.mm.value=f.md.value=f.my.value=f.mh.value=f.mn.value=&quot;&quot;;
        f.stats.disabled=f.set.disabled=f.del.disabled=f.display.disabled=true;
        f.settitle.disabled=false;
        config.options.txtTweakerSortBy=sortby; // remember current setting
        f.sortby.value=sortby; // sync droplist selection with current setting
        if (sortby!=&quot;modified&quot;) // non-default preference... save cookie
            saveOptionCookie(&quot;txtTweakerSortBy&quot;);
        else removeCookie(&quot;txtTweakerSortBy&quot;); // default preference... clear cookie
    },
    selecttiddlers: function(here) { // enable/disable tweaker fields based on number of items selected
        // count how many tiddlers are selected
        var f=here.form; var list=f.list;
        var c=0; for (i=0;i&lt;list.length;i++) if (list.options[i].selected) c++;
        if (c&gt;1) f.title.disabled=true;
        if (c&gt;1) f.settitle.checked=false;
        f.set.disabled=(c==0);
        f.del.disabled=(c==0);
        f.display.disabled=(c==0);
        f.settitle.disabled=(c&gt;1);
        f.stats.disabled=(c==0);
        var msg=(c==0)?'select tiddlers':(c+' tiddler'+(c!=1?'s':'')+' selected');
        here.previousSibling.firstChild.firstChild.nextSibling.innerHTML=msg;
        if (c) clearMessage(); else displayMessage(&quot;no tiddlers selected&quot;);
    },
    setfields: function(here) { // set tweaker edit fields from first selected tiddler
        var f=here.form;
        if (!here.value.length) {
            f.title.value=f.who.value=f.creator.value=f.tags.value=&quot;&quot;;
            f.cm.value=f.cd.value=f.cy.value=f.ch.value=f.cn.value=&quot;&quot;;
            f.mm.value=f.md.value=f.my.value=f.mh.value=f.mn.value=&quot;&quot;;
            return;
        }
        var tid=store.getTiddler(here.value); if (!tid) return;
        f.title.value=tid.title;
        f.who.value=tid.modifier;
        f.creator.value=tid.fields['creator']||''; // custom field - might not exist
        f.tags.value=tid.tags.map(function(t){return String.encodeTiddlyLink(t)}).join(' ');
        var c=tid.created; var m=tid.modified;
        f.cm.value=c.getMonth()+1;
        f.cd.value=c.getDate();
        f.cy.value=c.getFullYear();
        f.ch.value=c.getHours();
        f.cn.value=c.getMinutes();
        f.mm.value=m.getMonth()+1;
        f.md.value=m.getDate();
        f.my.value=m.getFullYear();
        f.mh.value=m.getHours();
        f.mn.value=m.getMinutes();
    },
    settiddlers: function(here) {
        var f=here.form; var list=f.list;
        var tids=[];
        for (i=0;i&lt;list.length;i++) if (list.options[i].selected) tids.push(list.options[i].value);
        if (!tids.length) { alert(&quot;please select at least one tiddler&quot;); return; }
        var cdate=new Date(f.cy.value,f.cm.value-1,f.cd.value,f.ch.value,f.cn.value);
        var mdate=new Date(f.my.value,f.mm.value-1,f.md.value,f.mh.value,f.mn.value);
        if (tids.length&gt;1 &amp;&amp; !confirm(&quot;Are you sure you want to update these tiddlers:\n\n&quot;+tids.join(', '))) return;
        store.suspendNotifications();
        for (t=0;t&lt;tids.length;t++) {
            var tid=store.getTiddler(tids[t]); if (!tid) continue;
            var title=!f.settitle.checked?tid.title:f.title.value;
            var who=!f.setwho.checked?tid.modifier:f.who.value;
            var text=tid.text;
            if (f.replacetext.checked) text=text.replace(new RegExp(f.pattern.value,'mg'),f.replacement.value);
            var tags=tid.tags;
            if (f.settags.checked) {
                var intags=f.tags.value.readBracketedList();
                var addtags=[]; var deltags=[]; var reptags=[];
                for (i=0;i&lt;intags.length;i++) {
                    if (intags[i].substr(0,1)=='+')
                        addtags.push(intags[i].substr(1));
                    else if (intags[i].substr(0,1)=='-')
                        deltags.push(intags[i].substr(1));
                    else
                        reptags.push(intags[i]);
                }
                if (reptags.length)
                    tags=reptags;
                if (addtags.length)
                    tags=new Array().concat(tags,addtags);
                if (deltags.length)
                    for (i=0;i&lt;deltags.length;i++)
                        { var pos=tags.indexOf(deltags[i]); if (pos!=-1) tags.splice(pos,1); }
            }
            if (!f.setcdate.checked) cdate=tid.created;
            if (!f.setmdate.checked) mdate=tid.modified;
            store.saveTiddler(tid.title,title,text,who,mdate,tags,tid.fields);
            if (f.setcreator.checked) store.setValue(tid.title,'creator',f.creator.value); // set creator
            if (f.setcdate.checked) tid.assign(null,null,null,null,null,cdate); // set create date
        }
        store.resumeNotifications();
        this.init(f,f.sortby.value);
    },
    displaytiddlers: function(here) {
        var f=here.form; var list=f.list;
        var tids=[];
        for (i=0; i&lt;list.length;i++) if (list.options[i].selected) tids.push(list.options[i].value);
        if (!tids.length) { alert(&quot;please select at least one tiddler&quot;); return; }
        story.displayTiddlers(story.findContainingTiddler(f),tids)
    },
    deltiddlers: function(here) {
        var f=here.form; var list=f.list;
        var tids=[];
        for (i=0;i&lt;list.length;i++) if (list.options[i].selected) tids.push(list.options[i].value);
        if (!tids.length) { alert(&quot;please select at least one tiddler&quot;); return; }
        if (!confirm(&quot;Are you sure you want to delete these tiddlers:\n\n&quot;+tids.join(', '))) return;
        store.suspendNotifications();
        for (t=0;t&lt;tids.length;t++) {
            var tid=store.getTiddler(tids[t]); if (!tid) continue;
            if (tid.tags.contains(&quot;systemConfig&quot;))
                if (!confirm(&quot;'&quot;+tid.title+&quot;' is tagged with 'systemConfig'.\n\nRemoving this tiddler may cause unexpected results.  Are you sure?&quot;))
                    continue;
            store.removeTiddler(tid.title);
            story.closeTiddler(tid.title);
        }
        store.resumeNotifications();
        this.init(f,f.sortby.value);
    },
    stats: function(here) {
        var f=here.form; var list=f.list; var tids=[]; var out=''; var tot=0;
        var target=f.nextSibling;
        for (i=0;i&lt;list.length;i++) if (list.options[i].selected) tids.push(list.options[i].value);
        if (!tids.length) { alert(&quot;please select at least one tiddler&quot;); return; }
        for (t=0;t&lt;tids.length;t++) {
            var tid=store.getTiddler(tids[t]); if (!tid) continue;
            out+='[['+tid.title+']] '+tid.text.length+'\n'; tot+=tid.text.length;
        }
        var avg=tot/tids.length;
        out=tot+' bytes in '+tids.length+' selected tiddlers ('+avg+' bytes/tiddler)\n&lt;&lt;&lt;\n'+out+'&lt;&lt;&lt;\n';
        removeChildren(target);
        target.innerHTML=&quot;&lt;hr&gt;&lt;font size=-2&gt;&lt;a href='javascript:;' style='float:right' &quot;
            +&quot;onclick='this.parentNode.parentNode.style.display=\&quot;none\&quot;'&gt;close&lt;/a&gt;&lt;/font&gt;&quot;;
        wikify(out,target);
        target.style.display=&quot;block&quot;;
    }
};
//}}}</pre>
</div>
<div title="TiddlyBookmarklets" creator="psd" modifier="jermolene" created="201102111107" modified="201110201351" tags="community help">
<pre>[[Bookmarklets|http://en.wikipedia.org/wiki/Bookmarklet]] can be useful for TiddlyWiki hackers. They are browser bookmarks that contain embedded ~JavaScript that can reach into the currently loaded TiddlyWiki page to manipulate them and extract data.

Drag these links to your bookmark/favourites bar, or right click on them and choose &quot;add to bookmarks&quot; or &quot;add to favourites&quot;:
* [[Scrub shadow tiddlers|javascript:(function(){if(window.version&amp;&amp;window.version.title=='TiddlyWiki'){for(var s in config.shadowTiddlers){store.removeTiddler(s);}refreshDisplay();}})()]] - deletes any overridden shadow tiddlers, reverting them to their default values. Handy when you’ve gone mad with PageTemplate customisations and your ~TiddlyWiki document won’t display properly
* [[Scrub tiddler fields|javascript:(function(){if(window.version&amp;&amp;window.version.title=='TiddlyWiki'){store.forEachTiddler(function(title,tiddler){tiddler.fields={};});refreshDisplay();}})()]] - all the extended fields from a ~TiddlyWiki document, including that pesky “changecount” field
* [[Rescue raw TiddlyWiki content|javascript:(function(){if(window.version&amp;&amp;window.version.title=='TiddlyWiki'){var w=window.open();w.document.open();w.document.write('&lt;html&gt;&lt;body&gt;&lt;pre&gt;');w.document.write(store.allTiddlersAsHtml().htmlEncode());w.document.write('&lt;/pre&gt;&lt;/body&gt;&lt;/html&gt;');w.document.close();}})()]] - opens a new window containing the raw content of a ~TiddlyWiki.  Handy when you’ve inadvertently been editing an online version of TiddlyWiki that isn’t letting you save changes in the usual way

If you're creating your own bookmarklets, this [[editor|http://subsimple.com/bookmarklets/jsbuilder.htm]] and these [[tips|http://subsimple.com/bookmarklets/tips.asp]] are useful resources.
</pre>
</div>
<div title="TiddlySaver" creator="psd" modifier="jermolene" created="201102111107" modified="201111031645" tags="features">
<pre>The ~TiddlySaver Java applet allows ~TiddlyWiki to save changes in a local version (from a file:// URL) of Safari, Opera and other browsers. It is a small file named [[&quot;TiddlySaver.jar&quot;|TiddlySaver.jar]] that must be placed in the same directory as your ~TiddlyWiki file. As of August 2008, when an empty ~TiddlyWiki file is downloaded using either Safari or Opera, it is bundled with a copy of the ~TiddlySaver.jar file in a zip file - both files must be in the same directory ''whenever the ~TiddlyWiki file is opened'' in order to work.

[[&quot;TiddlySaver.jar&quot;|TiddlySaver.jar]]  is signed by [[UnaMesa Association|UnaMesa]]. The [[UnaMesa Association|UnaMesa]] certificate is signed by the ''Thawte Code Signing CA'' intermediate certificate which is chained to the ''Thawte Premium Server CA'' root certificate. You need to trust this certificate Chain to be able to use the applet.

Note that there is currently [[a bug|http://trac.tiddlywiki.org/ticket/172]] that prevents ~TiddlySaver from working if you have specified a backup directory in AdvancedOptions and the directory doesn't exist.

Thanks to Andrew Gregory for the original TiddlySaver code, and ~BidiX for arranging all the certificate magic.</pre>
</div>
<div title="TiddlyStylesServer" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="systemServer">
<pre>|''URL:''|http://tiddlystyles.com/|</pre>
</div>
<div title="TiddlyToolsServer" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="systemServer">
<pre>|''URL:''|http://www.tiddlytools.com/|
|''Description:''|Small Tools for Big Ideas!|
|''Author:''|EricShulman|</pre>
</div>
<div title="TiddlyWiki" creator="psd" modifier="jermolene" created="201102111107" modified="201203201034" tags="concepts">
<pre>~TiddlyWiki is a complete [[wiki|WikiWikiWeb]] in a single HTML file. It contains the entire text of the wiki, and all the ~JavaScript, CSS and HTML machinery to be able to display it, and let you edit it or search it - without needing a server. Of course, there are also some useful ServerSide adaptations out there.

Unlike most wikis, TiddlyWiki isn't about group collaboration; it is a wiki in the sense of elevating linking be a part of the punctuation of writing. You can easily publish a TiddlyWiki you have created by placing the single file on a web server (for instance the homepage hosting provided by many ISPs). If you need full  group collaboration features, there are several HostedOptions to choose from.

~TiddlyWiki was originally created by JeremyRuston and is now a thriving [[open source|OpenSourceLicense]] project with a busy [[Community]] of independent developers. [[Osmosoft]], part of [[BT|http://btplc.com]], is the leading contributor to the project.
</pre>
</div>
<div title="TiddlyWiki Browser Compatibility" creator="jon" modifier="ericshulman" created="201110041247" modified="201212180119" tags="browsers issues">
<pre>Recent updates to Firefox and Chrome include tighter default security settings that can interfere with the operation of TiddlyWiki. The main cause is restrictions on the ability of TiddlyWiki running from a {{{file://}}} URI to obtain permission to access local files as well as files stored remotely on other servers.
!!!Known Problems with Local File Saving in TiddlyWiki
* Firefox version 14 and below asked the user for permission to access the local file system, both for reading and writing files, with an option to retain and re-use that setting whenever the associated ~TiddlyWiki document is loaded into the browser.  Unfortunately, FireFox version 15 and above no longer allows requests to access the local file system, and produces an error instead (note: existing TiddlyWiki documents that were //already approved for local file access in a prior version of Firefox// will continue to work as before).   Fortunately there is a ''fix'' for this problem: Jeremy Ruston has written a small, easy-to-install FireFox extension called TiddlyFox that provides replacements for the necessary file I/O functions, allowing new TiddlyWiki documents to be saved locally.
** You can obtain the TiddlyFox extension here: https://addons.mozilla.org/en-US/firefox/addon/tiddlyfox/
** If you'd rather not install an extension -- ''//and you are using FireFox 16 or below//'' -- you can also edit your Firefox preferences files to re-enable saving for specific TiddlyWiki files as discussed in this [[GoogleGroups message|https://groups.google.com/d/msg/tiddlywikidev/1Em8cJviVKk/LVGKpu2LzeAJ]].&lt;br&gt;//note: this trick does not work with FireFox 17+, which completely removes support for privilegeManager functions//
** Another alternative is to re-install an older version of FireFox (v14.x or earlier).  There are numerous web sites that maintain archived copies of the previous installation files.
** You could also install a [[portable version of FireFox 3.6.x|http://portableapps.com/apps/internet/firefox_portable/localization#legacy36]] directly onto a USB stick, solely for use with TiddlyWiki documents, while still using the current version of FireFox for all your other web browsing activities.
!!!Known Problems with Upgrading TiddlyWiki
* Versions of TiddlyWiki before and including 2.6.3 are known to have an issue with the upgrade function. To upgrade these versions you will need to [[download|Downloading]] the latest version of an empty TiddlyWiki and import your content into it using the [[import function|Import Tiddlers]] in the backstage.
!!!Known Problems with Importing in TiddlyWiki
* It is not possible to import from TiddlyWiki's on servers which are not [[CORS|http://en.wikipedia.org/wiki/Cross-Origin_Resource_Sharing]] enabled.  Although many popular sites, such as [[TiddlyTools|http://tiddlytools.com]], are currently CORS enabled, some are not. Fortunately this is fixable - webmasters can enable CORS on their sites by following the instructions [[here|http://enable-cors.org]] and if a website is not CORS enabled you can e-mail the owner to tell them the problem.
* Some browsers will only allow you to import from other TiddlyWikis in the same directory as your TiddlyWiki. If you use Chrome you can enable this by modifying the Chrome shortcut to include the following parameter
{{{
--allow-file-access-from-files
}}}
* In Opera you can enable this by entering the following into your address bar and ticking the checkbox.
{{{
opera:config#UserPrefs|AllowFileXMLHttpRequest
}}}
* Note some browsers, do not support import / upgrade in any form.
</pre>
</div>
<div title="TiddlyWiki5" creator="jermolene" modifier="jermolene" created="201203201042" modified="201203201042">
<pre>TiddlyWiki5 is a complete rewrite of TiddlyWiki to take advantage of HTML5 and node.js. It is under development on GitHub:

https://github.com/Jermolene/TiddlyWiki5

There is also an online demo you can play with:

http://tiddlywiki.com/tiddlywiki5
</pre>
</div>
<div title="TiddlyWikiAdaptations" creator="psd" modifier="jermolene" created="201102111107" modified="201111031823" tags="community history">
<pre>Before TiddlyWiki supported [[Plugins]], several independent developers created their own extended adaptations to support new features. These can be considered forks of the original core code, and won't necessarily be based on the latest version. For that reason, the trend more recently has been for developers to release new features as [[Plugins]] that can be readily mixed and matched and upgraded to the latest version.

Here's a list of known adaptations - note that many of these are quite old, and the links may be dead (all working as at 10 July 2008):
* Bram Chen's [[PrinceTiddlyWiki|http://ptw.sourceforge.net/]]
* Jacques Turbé's [[TidliPo|http://avm.free.fr/tidlipo.html]] (in French)
* Jároli József's [[MagyarTiddlyWiki|http://innen.hu/MagyarTiddlyWiki]] (in Hungarian)
* Yoshimov's [[EncryptedTiddlyWiki|http://wiki.yoshimov.com/?page=EncryptedTiddlyWiki]] (in Japanese)
* Nathan Bower's [[GTDTiddlyWiki|http://shared.snapgrid.com/gtd_tiddlywiki.html]]
* Jonny ~LeRoy's [[TiddlyTagWiki|http://www.digitaldimsum.co.uk/tiddlywiki/]]
* Christian Hauck's [[CompleXimple InDeed|http://www.christianhauck.net/html/14300.html]]
* Tim Cuthbertson and Matt Giuca's [[TiddlyWikiCSS|http://codestar.lidonet.net/misc/tiddlywikicss.html]]
* Patrick Curry and Gabriel Jeffrey's [[PhpTiddlyWiki|http://www.patrickcurry.com/tiddly/]]
* Henrik Aasted Sorensen's [[server side adaptation|http://aasted.org/wiki]]
* [[KamiWiki|http://rakusai.org/kamiwiki/]]
* Kevem Buangga's [[TiddlyWikiClone|http://www.kevembuangga.com/hwk/hailiwiki.htm]]
* Andre Nho's [[StickWiki|http://stickwiki.sourceforge.net/]]
* [[MessageVault|http://www.kokogiak.com/gedankengang/2007/03/introducing-message-vault.html]], a personal password store built on some ~TiddlyWiki technology
There's also some TiddlyWikiTools that extend ~TiddlyWiki.
</pre>
</div>
<div title="TiddlyWikiFiction" creator="psd" modifier="jermolene" created="201102111107" modified="201102111620" tags="community">
<pre>~TiddlyWiki has been used as the basis of a few experiments in hypertext fiction.
*&quot;[[Bibliotheca Caelestis. Tiddlywikiroman|http://bc.etkbooks.com/opac/]]&quot; from Hartmut Abendschein
*&quot;[[Die, Vampire! Die!|http://www.davidvanwert.com/wiki/dievampiredie.html]]&quot; from David Van Wert
*&quot;[[Rose|http://www.emacswiki.org/alex/rose.html]]&quot; from Alex Schroeder</pre>
</div>
<div title="Tithe" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Gn 14:20 &gt;&gt;; &lt;&lt;Bbl Mal 3:6 &gt;&gt;-12 ; &lt;&lt;Bbl Mt 23:16 &gt;&gt;-24 ; &lt;&lt;Bbl Heb 7:1 &gt;&gt;-6
* [[Wealth]]</pre>
</div>
<div title="Title" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Mt 23:7 &gt;&gt;-10
* [[Name]]</pre>
</div>
<div title="Titus-01-01-note" modifier="SDM" created="201010310249" modified="201211250322" tags="Comment" book_key="201001a">
<pre>{{hilite_2{
For the grace of God has appeared, bringing salvation to all men, instructing us to the intent that, denying ungodliness and worldly lusts, we would live soberly, righteously, and godly in this present world;
}}}
&lt;&lt;Bbl Titus 2:12 &gt;&gt;    The exhortation to [[SelfControl]] is embedded in the grace of God, and accompanied by a comprehensive strategy that addresses how to live in a dissolute culture (1:12) //-- Edward Welch, A Banquet in the Grave, 214//
&lt;&lt;Bbl Titus 2:15 abbr &gt;&gt;   This verse should properly open the next chapter.

3:1 This mention of good works  opens a theme which climaxes in vss 8-9 and is reiterated finally in vs 14.  This theme has been foreshadowed as well:  1:16, 2:7, possibly 2:10.
&lt;&lt;Bbl Titus 3:1 abbr &gt;&gt;-8  This passage evocative of &lt;&lt;Bbl Ex 23:9 &gt;&gt;.
&lt;&lt;Bbl Titus 3:3 abbr &gt;&gt;    The we , and the ourselves  giving emphases, could refer to those who now lead the church, if that is to whom the exhortation is directed.  It seems more likely that Paul has temporarily changed the grammatical person.  By shifting to the first person he carefully identifies himself, Titus, and leaders in general as sinful, redeemed men.  In vs 8 he resumes the third person.
3:4 Kindness of God   --  compare &lt;&lt;Bbl Rom 2:4 &gt;&gt;, &lt;&lt;Bbl 1Pt 2:3 &gt;&gt;.  The structure seems almost to make this phrase a title of the Christ.
3:8-9   Here good works is presented in it very best and worst aspects.  There is a direct, strong parallelism between good and profitable, unprofitable and worthless.    </pre>
</div>
<div title="ToggleLinks" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="features options">
<pre>If your press the command key on the Mac or the control key on the PC while clicking on a link to a tiddler, the tiddler will be opened as usual if it isn't already open, but if //is// open, it will be closed. It makes a handy way to review links without having to move the mouse around to re-close tiddlers.

You can make this behaviour the default under AdvancedOptions (you can override back to the normal behaviour with the same command/control key).</pre>
</div>
<div title="ToggleSliders" modifier="SDM" created="201012281830" modified="201211212012" tags="macro excludeLists" book_key="">
<pre>/%
!info
|Name|ToggleSliders|
|Source|http://www.TiddlyTools.com/#ToggleSliders|
|Version|2.0.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|transclusion|
|Description|toggle (expand/collapse) all sliders in a tiddler (or ID'd DOM element)|
Usage
&lt;&lt;&lt;
{{{
&lt;&lt;tiddler ToggleSliders with: elementID expandlabel collapselabel&gt;&gt;
}}}
*''elementID'' is one of:
**&quot;&quot; (empty quotes) = the current tiddler
**''here'' = the current container
**''ID'' = specific DOM element ID (e.g., &quot;mainMenu&quot;)
*''expandlabel/collapselabel'' (optional)&lt;br&gt;are alternative link text to display when sliders are closed (expandlabel) or opened (collapselabel)
&lt;&lt;&lt;
Example
&lt;&lt;&lt;
{{{
&lt;&lt;tiddler ToggleSliders with: &quot;&quot; &quot;open all&quot; &quot;close all&quot;&gt;&gt;
}}}
with sample sliders:
{{{
&lt;&lt;slider chkExample ToggleSliders::slider1 Example1 Example1&gt;&gt;
&lt;&lt;slider chkExample ToggleSliders::slider2 Example2 Example2&gt;&gt;
Example1: |This is example slider 1|
Example2: |This is example slider 2|
}}}
&lt;&lt;tiddler ToggleSliders##show with: &quot;&quot; &quot;open all&quot; &quot;close all&quot;&gt;&gt;
&lt;&lt;slider chkExample1 ToggleSliders::Example1 Example1 Example1&gt;&gt;
&lt;&lt;slider chkExample2 ToggleSliders::Example2 Example2 Example2&gt;&gt;
&lt;&lt;&lt;
!end

!show
&lt;html&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;TiddlyLink&quot; title=&quot;toggle sliders&quot;
onclick=&quot;
    if ('$1'=='here') var here=this.parentNode.parentNode.parentNode.parentNode; // container
    else if ('$1'!='$'+'1' &amp;&amp; '$1'.length) here=document.getElementById('$1'); // ID
    else var here=story.findContainingTiddler(this); // tiddler
    if (!here) return false;
    var elems=here.getElementsByTagName('*');
    var state=(this.innerHTML.toLowerCase()=='$2')?'none':'block';
    for (var e=0; e&lt;elems.length; e++) { var p=elems[e];
        if (p.className!='sliderPanel' || p.style.display!=state) continue;
        if (p.button) window.onClickNestedSlider({target:p.button}); // see NestedSlidersPlugin
        else p.previousSibling.onclick();
    }
    this.innerHTML=state=='none'?'$3':'$2';
    return false;
&quot;&gt;$2&lt;/a&gt;&lt;nowiki&gt;&lt;/html&gt;
!end
%/&lt;&lt;tiddler {{ var src='ToggleSliders'; src+(tiddler&amp;&amp;tiddler.title==src?'##info':'##show')}}
    with:   [[$1]]
        {{'$2'!='$'+'2'?'$2':'expand'}}
        {{'$3'!='$'+'3'?'$3':'collapse'}}
        {{'$4'!='$'+'4'?'$4':'toggle sliders'}}
&gt;&gt;</pre>
</div>
<div title="ToolbarButtons" creator="psd" modifier="jermolene" created="201102111107" modified="201110201351" tags="features">
<pre>A row of ToolbarButtons appears to the right of a tiddler title when the mouse is hovered over it. The buttons are:
* ''close'' - close the current tiddler
* ''edit'' - edit the current tiddler
* ''fields'' - show the custom fields attached to the current tiddler
* ''syncing'' - shows the server synchronisation status of the current tiddler
* ''jump'' - jump straight to another open tiddler
* ''permalink'' - puts a link direct to the current tiddler into the address bar
* ''references'' - displays all the tiddlers that link to the current tiddler
* ''done'' - save changes to a tiddler being editted
* ''cancel'' - cancel changes to a tiddler being editted
* ''delete'' - delete the current tiddler

The shadow tiddler ToolbarCommands allows these commands to customised and reordered.

</pre>
</div>
<div title="ToolbarCommands" modifier="SDM" created="200809201212" tags="macro excludeLists">
<pre>!!!!!toolbar definitions for templates
&lt;&lt;&lt;
Uses CoreTweaks (#609/#610) for extended &quot;!&quot; and 'toolbar include' syntax
See also [[ToolbarCommands-AttemptMaybeDangerous]] and [[ToolbarCommandsInfy]]

|~ViewToolbar|closeTiddler ~ToolbarCommands##spacer ~ToolbarCommands##spacer ~ToolbarCommands##spacer collapseTiddler ! ~ToolbarCommands##editTiddler collapseOthers closeOthers ! ~ToolbarCommands##related ~ToolbarCommands##goto ! ~ToolbarCommands##deleteTiddler ! ~ToolbarCommands##spacer &gt; &lt; * ~ToolbarCommands##copyTiddler ~ToolbarCommands##snapshotSave ~ToolbarCommands##snapshotPrint ~ToolbarCommands##refreshTiddler ~ToolbarCommands##spacer ! ~ToolbarCommands##permalink ~ToolbarCommands##revertTiddler |
|~CollapsedToolbar|closeTiddler expandTiddler ! ~ToolbarCommands##editTiddler collapseOthers closeOthers ! ~ToolbarCommands##related ~ToolbarCommands##goto ! ~ToolbarCommands##deleteTiddler ! ~ToolbarCommands##spacer &gt; &lt; * ~ToolbarCommands##copyTiddler ~ToolbarCommands##deleteTiddler ! ~ToolbarCommands##fields |
|~EditToolbar|~ToolbarCommands##saveTiddler ~ToolbarCommands##saveCloseTiddler ~ToolbarCommands##cancelTiddler ~ToolbarCommands##spacer ! ~ToolbarCommands##spacer ~ToolbarCommands##options ~ToolbarCommands##autosizeCheckbox ~ToolbarCommands##quickeditCheckbox ToolbarCommands##minorchangesCheckbox ! ~ToolbarCommands##spacer &gt; &lt; * ~ToolbarCommands##copyTiddler ~ToolbarCommands##deleteTiddler ! ~ToolbarCommands##fields |
|~EditToolbarReadOnly|~ToolbarCommands##spacer closeTiddler ! ~ToolbarCommands##fields  |
&lt;&lt;&lt;
!!!!! wiki-syntax toolbar commands+++
&lt;&lt;&lt;
!!!!!spacer
{{{
/% force whitespace separation and baseline alignment of toolbar with tiddler title %/@@font-size:12pt;&amp;nbsp;@@
}}}
!!!!!goto
{{{
@@position:static;+++^25em^*[goto|view another tiddler]...
    {{fine{
    {{floatright{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}}}/%
    %/&lt;&lt;tiddler SiteMenuGoto&gt;&gt;}}}===@@
}}}
!!!!!editTiddler
{{{
&lt;script&gt;
    if (readOnly) return &quot;&lt;&lt;toolbar +editTiddler&gt;&gt;&quot;; // view
    else return &quot;&lt;&lt;toolbar +editTiddler&gt;&gt;&quot;; // edit
&lt;/script&gt;
}}}
!!!!!refreshTiddler
{{{
&lt;script label=&quot;refresh&quot; title=&quot;redisplay the contents of this tiddler&quot;&gt;
    story.refreshTiddler(story.findContainingTiddler(place).getAttribute(&quot;tiddler&quot;),null,true);
&lt;/script&gt;&lt;script&gt;
    place.lastChild.style.fontWeight=&quot;normal&quot;;
&lt;/script&gt;
}}}
!!!!!related
{{{
@@position:static;+++^65em^[related|show list/tree view of tiddlers related to the current tiddler]...
    {{smallform{
    {{floatright{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}}}/%
    %/&lt;&lt;relatedTiddlers here hideform&gt;&gt;}}}===@@
}}}
!!!!!permalink
{{{
&lt;&lt;toolbar permalink&gt;&gt;
}}}
!!!!!copyTiddler
{{{
&lt;script&gt; if (!readOnly) return &quot;&lt;&lt;toolbar copyTiddler&gt;&gt;&quot;; &lt;/script&gt;
}}}
!!!!!snapshotSave
{{{
&lt;&lt;toolbar snapshotSave&gt;&gt;
}}}
!!!!!snapshotPrint
{{{
&lt;&lt;toolbar snapshotPrint&gt;&gt;
}}}
!!!!!saveTiddlerToFile
{{{
&lt;&lt;toolbar saveTiddlerToFile&gt;&gt;
}}}
!!!!!sendTiddler
{{{
&lt;&lt;toolbar sendTiddler&gt;&gt;
}}}
!!!!!runTiddler
{{{
&lt;&lt;toolbar runTiddler&gt;&gt;
}}}
!!!!!revertTiddler
{{{
&lt;html&gt;&lt;hide linebreaks&gt;&lt;a href=&quot;javascript:;&quot;
    title=&quot;reload the last SAVED version of this tiddler&quot;
    onclick=&quot;
        var here=story.findContainingTiddler(this); if (!here) return;
        var tid=here.getAttribute('tiddler');
        var t='\&lt;\&lt;loadTiddlers [[tiddler:'+tid+']] '+document.location.href+' confirm force noreport\&gt;\&gt;';
        var e=document.getElementById('executeRevertTiddler');
        if (e) e.parentNode.removeChild(e);
        e=document.createElement('span'); e.id='executeRevertTiddler';
        wikify(t,e);
    &quot;&gt;revert&lt;/a&gt;
&lt;/html&gt;
}}}
!!!!!saveTiddler
{{{
&lt;&lt;toolbar +saveTiddler&gt;&gt;
}}}
!!!!!saveCloseTiddler
{{{
&lt;&lt;toolbar +saveCloseTiddler&gt;&gt;
}}}
!!!!!cancelTiddler
{{{
&lt;script&gt; return &quot;&lt;&lt;toolbar -cancelTiddler&gt;&gt;&quot;; &lt;/script&gt;
}}}
!!!!!deleteTiddler
{{{
&lt;&lt;toolbar deleteTiddler&gt;&gt;
}}}
!!!!!fields
{{{
&lt;&lt;toolbar fields&gt;&gt;
}}}
!!!!!options
{{{
&amp;nbsp;{{fine{//options://}}}&amp;nbsp;
}}}
!!!!!autosizeCheckbox
{{{
&lt;script label=&quot;autosize&quot; title=&quot;automatically resize editor to fit contents&quot;&gt;
    var txt=&quot;&lt;input type='checkbox' style='padding:0;margin:0;' %0&gt;autosize&quot;;
    var chk=place.innerHTML.toLowerCase().indexOf(&quot;checked&quot;)==-1?&quot;checked&quot;:&quot;&quot;;
    config.commands.autosizeEditor.handler(null,place,null);
    place.innerHTML=txt.format([chk]);
&lt;/script&gt;&lt;script&gt;
    place.lastChild.innerHTML=&quot;&lt;input type='checkbox' style='padding:0;margin:0;'&gt;autosize&quot;;
    place.lastChild.style.fontWeight=&quot;normal&quot;;
    place.lastChild.style.fontSize=&quot;90%&quot;;
&lt;/script&gt;
}}}
!!!!!previewCheckbox
{{{
&lt;script label=&quot;preview&quot; title=&quot;show key-by-key preview&quot;&gt;
    var txt=&quot;&lt;input type='checkbox' style='padding:0;margin:0;' %0&gt;preview&quot;;
    var chk=place.innerHTML.toLowerCase().indexOf(&quot;checked&quot;)==-1?&quot;checked&quot;:&quot;&quot;;
    config.commands.previewTiddler.handler(null,place,null);
    place.innerHTML=txt.format([chk]);
&lt;/script&gt;&lt;script&gt;
    place.lastChild.innerHTML=&quot;&lt;input type='checkbox' style='padding:0;margin:0;'&gt;preview&quot;;
    place.lastChild.style.fontWeight=&quot;normal&quot;;
    place.lastChild.style.fontSize=&quot;90%&quot;;
&lt;/script&gt;
}}}
!!!!!quickeditCheckbox
{{{
&lt;script label=&quot;quickedit&quot; title=&quot;show QuickEdit toolbar buttons&quot;&gt;
    var opt=&quot;chkShowQuickEdit&quot;;
    config.commands.toggleQuickEdit.handler(null,place,null);
    var chk=config.options[opt]?&quot;CHECKED&quot;:&quot;&quot;;
    var txt=&quot;&lt;input type='checkbox' style='padding:0;margin:0;' option='%0' %1&gt;quickedit&quot;;
    place.innerHTML=txt.format([opt,chk]);
&lt;/script&gt;&lt;script&gt;
    var opt=&quot;chkShowQuickEdit&quot;;
    var chk=config.options[opt]?&quot;CHECKED&quot;:&quot;&quot;;
    var txt=&quot;&lt;input type='checkbox' style='padding:0;margin:0;' option='%0' %1&gt;quickedit&quot;;
    place.lastChild.innerHTML=txt.format([opt,chk]);
    place.lastChild.style.fontWeight=&quot;normal&quot;;
    place.lastChild.style.fontSize=&quot;90%&quot;;
&lt;/script&gt;
}}}
!!!!!minorchangesCheckbox
{{{
&lt;script label=&quot;minor changes&quot;&gt;
    var opt=&quot;chkForceMinorUpdate&quot;;
    config.options[opt]=!config.options[opt];
    config.macros.option.propagateOption(opt,&quot;checked&quot;, config.options[opt],&quot;input&quot;);
    var chk=config.options[opt]?&quot;CHECKED&quot;:&quot;&quot;;
    var txt=&quot;&lt;input type='checkbox' style='padding:0;margin:0;' option='%0' %1&gt;minor changes&quot;;
    place.innerHTML=txt.format([opt,chk]);
&lt;/script&gt;&lt;script&gt;
    var opt=&quot;chkForceMinorUpdate&quot;;
    var chk=config.options[opt]?&quot;CHECKED&quot;:&quot;&quot;;
    var txt=&quot;&lt;input type='checkbox' style='padding:0;margin:0;' option='%0' %1&gt;minor changes&quot;;
    place.lastChild.innerHTML=txt.format([opt,chk]);
    place.lastChild.style.fontWeight=&quot;normal&quot;;
    place.lastChild.style.fontSize=&quot;90%&quot;;
    place.lastChild.title=config.optionsDesc[opt];
&lt;/script&gt;
}}}
!!!!!end of extra commands
&lt;&lt;&lt;
===</pre>
</div>
<div title="Topic-Index" modifier="SDM" created="201012202031" modified="201304262159" book_key="" changecount="1">
<pre>&lt;&lt;tabs txtTopic-IndexTabs
AB 'list &quot;A/B&quot; tiddlers' [[Topic-Index::AB]]
C 'list &quot;C&quot; tiddlers' [[Topic-Index::C]]
DEF 'list &quot;D/E/F&quot; tiddlers' [[Topic-Index::DEF]]
GHI 'list &quot;G/H/I&quot; tiddlers' [[Topic-Index::GHI]]
JKL 'list &quot;J/K/L&quot; tiddlers' [[Topic-Index::JKL]]
MNO 'list &quot;M/N/O&quot; tiddlers' [[Topic-Index::MNO]]
P 'list &quot;P&quot; tiddlers' [[Topic-Index::P]]
QR 'list &quot;Q/R&quot; tiddlers' [[Topic-Index::QR]]
S 'list &quot;S&quot; tiddlers' [[Topic-Index::S]]
T 'list &quot;T&quot; tiddlers' [[Topic-Index::T]]
UVW 'list &quot;U/V/W&quot; tiddlers' [[Topic-Index::UVW]]
etc 'list &quot;X/Y/Z/0-9&quot; tiddlers' [[Topic-Index::XYZ09]]
&gt;&gt; {{hidden{

/%
AB:/%%/ &lt;&lt;tiddler Topic-Index##Col2 with: A B&gt;&gt;

/%
C:/%%/ &lt;&lt;tiddler Topic-Index##Col3-span with: C&gt;&gt;

/%
DEF:/%%/ &lt;&lt;tiddler Topic-Index##Col3 with: D E F&gt;&gt;

/%
GHI:/%%/ &lt;&lt;tiddler Topic-Index##Col3 with: G H I&gt;&gt;

/%
JKL:/%%/ &lt;&lt;tiddler Topic-Index##Col3 with: J K L&gt;&gt;

/%
MNO:/%%/ &lt;&lt;tiddler Topic-Index##Col3 with: M N O&gt;&gt;

/%
P:/%%/ &lt;&lt;tiddler Topic-Index##Col3-span with: P&gt;&gt;

/%
QR:/%%/ &lt;&lt;tiddler Topic-Index##Col2 with: Q R&gt;&gt;

/%
S:/%%/ &lt;&lt;tiddler Topic-Index##Col3-span with: S&gt;&gt;

/%
T:/%%/ &lt;&lt;tiddler Topic-Index##Col3-span with: T&gt;&gt;

/%
UVW:/%%/ &lt;&lt;tiddler Topic-Index##Col3 with: U V W&gt;&gt;

/%
XYZ:/%%/ &lt;&lt;tiddler Topic-Index##Col3 with: X Y Z&gt;&gt;

/%
XYZ09:/%%/ &lt;&lt;tiddler Topic-Index##Col4 with: X Y Z '0-9'&gt;&gt;

/%
0to9:/%%/ &lt;&lt;tiddler Topic-Index##Col3 with: '0-3' '4-6' '7-9'&gt;&gt;

// /%
// 0to9:/%%/ &lt;&lt;tiddler Topic-Index##Col1 with: '0-9'&gt;&gt;

/%
*Col
!!!Col
{{mapH1{$1}}}{{dp33{&lt;&lt;list noCase title '[$1]'&gt;&gt;}}} {{mapH1{$2}}}{{dp33{&lt;&lt;list noCase title '[$2]'&gt;&gt;}}} {{mapH1{$3}}}{{dp33{&lt;&lt;list noCase title '[$3]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}

!!!Col1
{{mapH1{$1}}}{{dp100{ &lt;&lt;list noCase title '[$1]'&gt;&gt;}}}
!!!end

*Col2
!!!Col2
{{dp50{ {{mapH1{$1}}}
&lt;&lt;forEachTiddler
 where
 '! tiddler.tags.contains(&quot;Comment&quot;) &amp;&amp; ! tiddler.tags.contains(&quot;excludeLists&quot;) &amp;&amp; tiddler.title.startsWith(&quot;$1&quot;)'
    write
        '&quot;* [[&quot;+tiddler.title+&quot;]]\n&quot;'
&gt;&gt;
}}} {{dp50{ {{mapH1{$2}}}
&lt;&lt;forEachTiddler
 where
 '! tiddler.tags.contains(&quot;Comment&quot;) &amp;&amp; ! tiddler.tags.contains(&quot;excludeLists&quot;) &amp;&amp; tiddler.title.startsWith(&quot;$2&quot;)'
    write
        '&quot;* [[&quot;+tiddler.title+&quot;]]\n&quot;'
&gt;&gt;
}}}
{{dp100{&lt;br&gt;}}}
!!!end

*Col3
!!!Col3
{{dp33{ {{mapH1{$1}}}
&lt;&lt;forEachTiddler
 where
 '! tiddler.tags.contains(&quot;Comment&quot;) &amp;&amp; ! tiddler.tags.contains(&quot;excludeLists&quot;) &amp;&amp; tiddler.title.startsWith(&quot;$1&quot;)'
    write
        '&quot;* [[&quot;+tiddler.title+&quot;]]\n&quot;'
&gt;&gt;
}}} {{dp33{ {{mapH1{$2}}}
&lt;&lt;forEachTiddler
 where
 '! tiddler.tags.contains(&quot;Comment&quot;) &amp;&amp; ! tiddler.tags.contains(&quot;excludeLists&quot;) &amp;&amp; tiddler.title.startsWith(&quot;$2&quot;)'
    write
        '&quot;* [[&quot;+tiddler.title+&quot;]]\n&quot;'
&gt;&gt;
}}} {{dp33{ {{mapH1{$3}}}
&lt;&lt;forEachTiddler
 where
 '! tiddler.tags.contains(&quot;Comment&quot;) &amp;&amp; ! tiddler.tags.contains(&quot;excludeLists&quot;) &amp;&amp; tiddler.title.startsWith(&quot;$3&quot;)'
    write
        '&quot;* [[&quot;+tiddler.title+&quot;]]\n&quot;'
&gt;&gt;
}}}
{{dp100{&lt;br&gt;}}}
!!!end

*Col3-span
!!!Col3-span
{{threecolumns{ {{mapH1{$1}}}
&lt;&lt;forEachTiddler
 where
 '! tiddler.tags.contains(&quot;Comment&quot;) &amp;&amp; ! tiddler.tags.contains(&quot;excludeLists&quot;) &amp;&amp; tiddler.title.startsWith(&quot;$1&quot;)'
    write
        '&quot;* [[&quot;+tiddler.title+&quot;]]\n&quot;'
&gt;&gt;
}}}
{{dp100{&lt;br&gt;}}}
!!!end

*Col4
!!!Col4
{{dp25{ {{mapH1{$1}}}
&lt;&lt;forEachTiddler
 where
 '! tiddler.tags.contains(&quot;Comment&quot;) &amp;&amp; ! tiddler.tags.contains(&quot;excludeLists&quot;) &amp;&amp; tiddler.title.startsWith(&quot;$1&quot;)'
    write
        '&quot;* [[&quot;+tiddler.title+&quot;]]\n&quot;'
&gt;&gt;
}}} {{dp25{ {{mapH1{$2}}}
&lt;&lt;forEachTiddler
 where
 '! tiddler.tags.contains(&quot;Comment&quot;) &amp;&amp; ! tiddler.tags.contains(&quot;excludeLists&quot;) &amp;&amp; tiddler.title.startsWith(&quot;$2&quot;)'
    write
        '&quot;* [[&quot;+tiddler.title+&quot;]]\n&quot;'
&gt;&gt;
}}} {{dp25{ {{mapH1{$3}}}
&lt;&lt;forEachTiddler
 where
 '! tiddler.tags.contains(&quot;Comment&quot;) &amp;&amp; ! tiddler.tags.contains(&quot;excludeLists&quot;) &amp;&amp; tiddler.title.startsWith(&quot;$3&quot;)'
    write
        '&quot;* [[&quot;+tiddler.title+&quot;]]\n&quot;'
&gt;&gt;
}}} {{dp25{ {{mapH1{$4}}}
&lt;&lt;forEachTiddler
 where
 '! tiddler.tags.contains(&quot;Comment&quot;) &amp;&amp; ! tiddler.tags.contains(&quot;excludeLists&quot;) &amp;&amp; tiddler.title.startsWith(&quot;$4&quot;)'
    write
        '&quot;* [[&quot;+tiddler.title+&quot;]]\n&quot;'
&gt;&gt;
}}}
{{dp100{&lt;br&gt;}}}
!!!end

!!!ColAZ3
{{dp33{''$1''-[$2]
&lt;&lt;list noCase title '$1[$2]'&gt;&gt;}}} {{dp33{''$1''-[$3]
&lt;&lt;list noCase title '$1[$3]'&gt;&gt;}}} {{dp33{''$1''-[$4]
&lt;&lt;list noCase title '$1[$4]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}
!!!end

!!!ColAZ4
{{dp25{''$1''-[$2]
&lt;&lt;list noCase title '$1[$2]'&gt;&gt;}}} {{dp25{''$1''-[$3]
&lt;&lt;list noCase title '$1[$3]'&gt;&gt;}}} {{dp25{''$1''-[$4]
&lt;&lt;list noCase title '$1[$4]'&gt;&gt;}}} {{dp25{''$1''-[$5]
&lt;&lt;list noCase title '$1[$5]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}
!!!end

!!!Col0to9
{{dp33{''$1''&lt;&lt;list noCase title '[$1]'&gt;&gt;}}} {{dp33{''$2''
&lt;&lt;list noCase title '[$2]'&gt;&gt;}}} {{dp33{''$3''
&lt;&lt;list noCase title '[$3]'&gt;&gt;}}}
{{dp100{&lt;br&gt;}}}
!!!end
%/

 &lt;&lt;tiddler HideTiddlerTags&gt;&gt;
}}}</pre>
</div>
<div title="Tower" modifier="SDM" created="201004120330" tags="House">
<pre>* Matthew's cost-counting,
* the tower of Babel,
* and &quot;unless the LORD builds the house...&quot;
* &lt;&lt;Bbl Pr 18:10 &gt;&gt;  --  a strong tower</pre>
</div>
<div title="Transformation" modifier="SDM" created="201205280249" modified="201208241435" book_key="">
<pre>* &lt;&lt;Bbl Mk 2:21 &gt;&gt;, &lt;&lt;Bbl Mt 9:16 &gt;&gt; -- cool preaching illustration featuring processing of cloth over a couple of sermons, and a woman sewing during the sermon. I think we call pre-shrinking sizing; we do it even for thread.
* Nestle company provides a big refrigerator magnet, &quot;Quick Conversions&quot;.  What does it offer?  A set of formulas.  The purpose of a formula is to convert; but for the big matters of life, this approach is not adequate, however tempting it may be to try.  </pre>
</div>
<div title="Treasure" modifier="SDM" created="201004120330" modified="201211181851" book_key="">
<pre>* &lt;&lt;Bbl Ex 19:5 &gt;&gt;
* &lt;&lt;Bbl Pr 2:4 &gt;&gt;
* &lt;&lt;Bbl Pr 21:20 &gt;&gt;
* &lt;&lt;Bbl Mt 12:35 &gt;&gt;
* &lt;&lt;Bbl 2Cor 4:6 &gt;&gt;-7
* &lt;&lt;Bbl Col 2:3 &gt;&gt;
* &lt;&lt;Bbl 2Tim 1:14 &gt;&gt;
* [[Colors]]
* [[Wealth]], [[Gold]]
* [[Refining]]
* [[Witness]]
! Hidden treasure
* The finders of the steamboat Arabia knew to keep quiet while gathering their resources.
* In &lt;&lt;Bbl Ruth 3:14 &gt;&gt; Boaz &quot;found and hid&quot; the treasure, and then out of joy went and bought the field.  &lt;&lt;Bbl Mt 13:44 &quot;&quot; note &gt;&gt;
* [[Invisible-Visible]]</pre>
</div>
<div title="Tree" modifier="SDM" created="201010271710" modified="201211250029" tags="Living-Plant" book_key="">
<pre>!!! Tree of Life
[Pro 3:18 NIV] - //a tree of life to those who embrace her//
[Pro 11:30 NIV] - //The fruit of the righteous is a tree of life, and he who wins souls is wise//
[Pro 13:12 NIV] - //a longing fulfilled is a tree of life//
[Pro 15:4 NIV] - //The tongue that brings healing is a tree of life, but a deceitful tongue//</pre>
</div>
<div title="Trial" modifier="SDM" created="201207062100" modified="201304262158" book_key="" changecount="1">
<pre>* Some ancient saint (says Peggy Noonan) described life as //a bad night in a bad inn.//
* [[Exigency]]
* [[Testing]]
* [[Temptation]]</pre>
</div>
<div title="Triumphalism" modifier="SDM" created="201202192112" book_key="">
<pre>* @@color:darkgreen;[[Suffering]] is the thread from which the stuff of [[Joy]] is woven.  Never will the optimimist know joy,@@ // -- Henri de Lubac//  (I would substitute //triumphalist// for //optimist.//</pre>
</div>
<div title="Trumpet" modifier="SDM" created="201004120330" modified="201211170227" book_key="">
<pre>Warning, [[Judgment]], [[Proclamation]].
&lt;&lt;Bbl 1Cor 14:8 &gt;&gt;, &lt;&lt;Bbl Ez 3:17 &gt;&gt;</pre>
</div>
<div title="Trust" modifier="SDM" created="201011072248" modified="201211250020" book_key="">
<pre>* &lt;&lt;Bbl Dt 1:30 &gt;&gt;-33 ; &lt;&lt;Bbl Is 50:10 &gt;&gt;-11 ; &lt;&lt;Bbl Dt 31:2 &gt;&gt;-3
* &lt;&lt;Bbl 2Tim 1:12 &gt;&gt; //For I know in Whom I have trusted...//
* &lt;&lt;Bbl 1Pt 4:19&gt;&gt; //...entrust their souls to him, as to a faithful Creator.//
* [[Faithfulness]]
* [[Confidence]]
* &lt;&lt;Bbl Jn 2:23 &quot;&quot; note &gt;&gt;-24
!!! Trust in God: Four Supporting Truths
# His [[Faithfulness]]
** [[Stability]]
# His [[Power]]
** [[Sovereignty]]
** [[God-Sees-All]]
# His [[Love]]
** [[Grace]]
# His [[Promise-of-God]] by which we avail
** [[Rescue]]
</pre>
</div>
<div title="Truth" modifier="SDM" created="201004120330" modified="201211201339" tags="my_life" book_key="">
<pre>* It is only controversial to (or, it is controverted by) those who will not accept it.
* &lt;&lt;Bbl Jn 18:37 &gt;&gt;-38 //Everyone who is of the truth listens to my voice.//
* &lt;&lt;Bbl Pr 8:6 &gt;&gt;-9 ; &lt;&lt;Bbl Jn 14:6 &gt;&gt;
* {{anti{[[Deceit]]}}}
* {{anti{[[Error]]}}}
* [[God-Sees-All]]
* Mike Reed informing me, //Somebody lied to you, brother.//</pre>
</div>
<div title="TutorialsAndGuides" creator="blaine" modifier="jermolene" created="201102111259" modified="201110201351" tags="community help">
<pre>The ~TiddlyWiki community have created several tutorials and guides. Here are some of the most popular ones:
* Dave Gifford's [[TiddlyWiki for the Rest of Us|http://www.giffmex.org/twfortherestofus.html]]
* Morris Gray's [[TW Help - TiddlyWiki help file for beginners|http://tiddlyspot.com/twhelp/]]
* Julie Starr's [[Tiddler Toddler|http://tiddlertoddler.tiddlyspot.com/]], documenting the learning curve from a beginner's perspective
* Screencasts from [[JimVentola|http://faculty.massasoit.mass.edu/jventola/videocasts/tidhelp2/tidhelp2.html]] and [[Phil Whitehouse|http://www.youtube.com/watch?v=ezNScBd7_h4]]
</pre>
</div>
<div title="UnaMesa" creator="psd" modifier="blaine" created="201102111107" modified="201102111310">
<pre>[[UnaMesa|http://www.unamesa.org/]] is a non-profit organisation that owns and holds the IPR for TiddlyWiki in trust for the public.</pre>
</div>
<div title="Unity" modifier="SDM" created="201004120330" modified="201211161328" book_key="">
<pre>[[Heart]], [[Integrity]], {{anti{[[Disunity]]}}}
* &lt;&lt;Bbl Rom 8:1 &gt;&gt;, &lt;&lt;Bbl Rom 12:5 &gt;&gt;; &lt;&lt;Bbl 1Cor 1:12 &gt;&gt;; &lt;&lt;Bbl 1Cor 12:13 &gt;&gt;; &lt;&lt;Bbl 1Cor 12:25 &gt;&gt;; &lt;&lt;Bbl 2Cor 13:14 &gt;&gt;; &lt;&lt;Bbl Eph 4:3 &gt;&gt;; &lt;&lt;Bbl Php 1:27 &gt;&gt; - 2:4; &lt;&lt;Bbl Col 3:14 &gt;&gt;
* &lt;&lt;Bbl Ps 133:1 &gt;&gt; -- [[Anointing]]</pre>
</div>
<div title="UnsavedChangesPlugin" modifier="ELSDesignStudios" created="200708030219" tags="systemConfig excludeLists">
<pre>/***
|Name|UnsavedChangesPlugin|
|Source|http://www.TiddlyTools.com/#UnsavedChangesPlugin|
|Version|3.3.3|
|Author|Eric Shulman - ELS Design Studios|
|License|http://www.TiddlyTools.com/#LegalStatements &lt;br&gt;and [[Creative Commons Attribution-ShareAlike 2.5 License|http://creativecommons.org/licenses/by-sa/2.5/]]|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides|TiddlyWiki.prototype.setDirty,store.saveTiddler,store.removeTiddler|
|Description|show droplist of tiddlers that have changed since the last time the document was saved|
Display a list of tiddlers that have been changed since the last time the document was saved.  The list includes all new/modified tiddlers as well as those changed with &quot;minor edits&quot; enabled and any tiddlers that you import during the session, regardless of their modification date.
!!!!!Usage
&lt;&lt;&lt;
{{{
&lt;&lt;unsavedChanges panel&gt;&gt; or &lt;&lt;unsavedChanges&gt;&gt;
}}}
{{indent{
the ''panel'' keyword displays a 'control panel' interface containing a droplist of unsaved tiddlers and a 'goto' button, along with a command link to 'save changes'.  Depending upon what other plugins are installed, several additional elements will also be displayed: When [[NestedSlidersPlugin]] is installed, the entire control panel is contained within a ''SLIDER''.  When [[LoadTiddlersPlugin]] is installed, a ''REVERT'' button is added.  When [[SaveAsPlugin]] is installed, a ''SAVE AS'' link is added.  When [[UploadPlugin]] is installed, an ''UPLOAD'' (or ''save to web'') link is added.  When [[TrashPlugin]] is installed and there are tiddlers tagged with&lt;&lt;tag Trash&gt;&gt;, an ''EMPTY TRASH'' link is added.
}}}
{{{
&lt;&lt;unsavedChanges list separator&gt;&gt;
}}}
{{indent{
the ''list'' keyword displays a simple space-separated list of unsaved tiddlers without any other command links.  You can specify an optional ''separator'' value that can be used in place of the default space character.  For example, you can specify {{{&quot;&lt;br&gt;&quot;}}} as the separator in order to display each link, one per line.
}}}
{{{
&lt;&lt;unsavedChanges command label tip&gt;&gt;
}}}
{{indent{
the ''command'' keyword displays a single 'command link' that, when clicked, displays a ~TiddlyWiki popup containing the list of unsaved tiddlers, the 'save changes' command and, depending upon what other plugins are installed, additional commands for 'save as', 'upload', and 'empty trash' (similar to the panel display described above).

You can specify optional ''label'' and ''tip'' parameters in the macro to customize the command link text and tooltip.  The default label for the command link is: &quot;There %1 %0 unsaved tiddler%2...&quot;, where:
* %0 is automatically replaced with the number of unsaved changes
* %1 is either &quot;is&quot; (if changes=1) or &quot;are&quot; (if changes&gt;1)
* %2 is either blank (if changes=1) or &quot;s&quot; (if changes&gt;1)
resulting in the text: //&quot;There is 1 unsaved tiddler...&quot;, &quot;There are 2 unsaved tiddlers...&quot;, etc.//
}}}
&lt;&lt;&lt;
!!!!!Examples
&lt;&lt;&lt;
^^//note: the following examples will not display any output unless you have already created/modified tiddlers in the current document.//^^
{{{&lt;&lt;unsavedChanges&gt;&gt;}}}
&lt;&lt;unsavedChanges&gt;&gt;
----
{{{&lt;&lt;unsavedChanges command&gt;&gt;}}}
&lt;&lt;unsavedChanges command&gt;&gt;
----
{{{&lt;&lt;unsavedChanges list&gt;&gt;}}}
&lt;&lt;unsavedChanges list&gt;&gt;
----
{{{&lt;&lt;unsavedChanges list &quot;&lt;br&gt;&quot;&gt;&gt;}}}
&lt;&lt;unsavedChanges list &quot;&lt;br&gt;&quot;&gt;&gt;
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2009.03.02 [3.3.3] fix handling for titles that contain HTML special chars (lt,gt,quot,amp)
2008.09.02 [3.3.2] cleanup popup list output generation and added timestamps/sizes to popup display
2008.08.23 [3.3.1] added optional custom 'label' and 'tip' params to 'command' mode and defined default values for mode, label, tip, and separator as object properties for I18N/L10N-readiness.
2008.08.21 [3.3.0] complete re-write of rendering and refresh processing to support multiple instances and automatic self-refresh (no longer depends upon core refresh notifications)
2008.08.21 [3.2.0] added 'command' option for link+popup as alternative to 'control panel' interface
2008.04.22 [3.1.2] use SaveAsPlugin instead of obsolete NewDocumentPlugin to add &quot;save as&quot; link
2007.12.22 [3.1.1] hijack removeTiddler() instead of low-level deleteTiddler() to correct tracking and refresh handling issues.  in saveTiddler(), check for 'tiddler rename' (title!=newtitle) and adjust list accordingly.
2007.12.21 [3.1.0] added support for {{{&lt;&lt;unsavedChanges list separator&gt;&gt;}}} usage to unsaved tiddlers as a simple list of links, embedded in tiddler content (e.g., [[MainMenu]])
2007.12.20 [3.0.0] rewrite to track ALL changed tiddlers, including imports and minor edits, regardless of saved modification dates.  Also, rewrote display logic to directly refresh macro output instead of triggering a page refresh.  The entire process is MUCH more efficient now.
2007.08.02 [2.0.0] converted from inline script
2007.01.01 [1.0.0] initial release
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.UnsavedChangesPlugin= {major: 3, minor: 3, revision: 3, date: new Date(2009,3,2)};

config.macros.unsavedChanges = {
    changed: [], // list of currently unsaved tiddler titles
    defMode: &quot;panel&quot;,
    defSep: &quot; &quot;,
    defLabel: &quot;There %1 %0 unsaved tiddler%2...&quot;,
    defTip: &quot;view a list of unsaved tiddler changes&quot;,
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var wrapper=createTiddlyElement(place,&quot;span&quot;,null,&quot;unsavedChanges&quot;);
        wrapper.setAttribute(&quot;mode&quot;,params[0]||this.defMode);
        wrapper.setAttribute(&quot;sep&quot;,params[1]||this.defSep); // for 'list' mode
        wrapper.setAttribute(&quot;label&quot;,params[1]||this.defLabel); // for 'command' mode
        wrapper.setAttribute(&quot;tip&quot;,params[2]||this.defTip); // for 'command' mode
        this.render(wrapper);
    },
    render: function(wrapper) {
        removeChildren(wrapper); // make sure its empty
        if (!this.changed.length) return; // no changes = no output
        switch (wrapper.getAttribute(&quot;mode&quot;)) {
            case &quot;command&quot;: this.command(wrapper); break;
            case &quot;list&quot;: this.list(wrapper); break;
            case &quot;panel&quot;: default: this.panel(wrapper); break;
        }
    },
    refresh: function() {
        var wrappers=document.getElementsByTagName(&quot;span&quot;);
        for (var w=0; w&lt;wrappers.length; w++)
            if (hasClass(wrappers[w],&quot;unsavedChanges&quot;))
                this.render(wrappers[w]);
    },
    list: function(place) { // show simple list of unsaved tiddlers
        wikify(&quot;[[&quot;+this.changed.join(&quot;]]&quot;+place.getAttribute(&quot;sep&quot;)+&quot;[[&quot;)+&quot;]]&quot;,place);
    },
    command: function(place) { // show command link with popup list
        var c=this.changed.length;
        var txt=place.getAttribute(&quot;label&quot;).format([c,c==1?'is':'are',c==1?'':'s']);
        var tip=place.getAttribute(&quot;tip&quot;);
        var action=function(ev) { if (!ev) var ev=window.event;
            var p=Popup.create(this); if (!p) return false;
            var d=createTiddlyElement(p,&quot;div&quot;);
            d.style.whiteSpace=&quot;normal&quot;; d.style.width=&quot;auto&quot;; d.style.padding=&quot;2px&quot;;
            // gather pretty links for changed tiddlers
            var list=[]; var item=&quot; &amp;nbsp;[[%1 - %0 (%2 bytes)|%0]]&amp;nbsp; &quot;;
            for (var i=config.macros.unsavedChanges.changed.length-1; i&gt;=0; i--) {
                var tid=store.getTiddler(config.macros.unsavedChanges.changed[i]);
                if (!tid) continue;
                var when=tid.modified.formatString('YYYY.0MM.0DD 0hh:0mm:0ss');
                list.push(item.format([tid.title,when,tid.text.length]));
            }
            wikify(&quot;@@white-space:nowrap;&quot;+list.join(&quot;&lt;br&gt;&quot;)+&quot;@@&quot;,d);
            if (!readOnly) {
                var t=&quot;\n----\n&quot;;
                t+=&quot;@@white-space:nowrap;display:block;text-align:center; &amp;nbsp;&quot;;
                t+=&quot;&lt;&lt;saveChanges&gt;&gt;&quot;;
                t+=config.macros.saveAs?&quot; | &lt;&lt;saveAs&gt;&gt;&quot;:&quot;&quot;;
                t+=config.macros.upload?&quot; | &lt;&lt;upload&gt;&gt;&quot;:&quot;&quot;;
                t+=(config.macros.emptyTrash&amp;&amp;store.getTaggedTiddlers(&quot;Trash&quot;).length)?&quot; | &lt;&lt;emptyTrash&gt;&gt;&quot;:&quot;&quot;;
                t+=&quot;&amp;nbsp; @@&quot;;
                wikify(t,d);
            }
            Popup.show(p,false);
            ev.cancelBubble=true; if(ev.stopPropagation)ev.stopPropagation();
            return(false);
        }
        createTiddlyButton(place,txt,tip,action,&quot;button&quot;);
    },
    panel: function(place) { // show composite droplist+buttons+commands
        // gather changed tiddlers (in reverse order by date - most recent first)
        var tids=[]; for (var i=this.changed.length-1; i&gt;=0; i--)
            { var t=store.getTiddler(this.changed[i]); if (t) tids.push(t); }
        tids.sort(function(a,b){return a.modified&lt;b.modified?-1:(a.modified==b.modified?0:1);});
        // generate droplist items
        var list=[]; var item='&lt;option value=&quot;%0&quot;&gt;%1 - %0 (%2 bytes)&lt;/option&gt;';
        for (var i=tids.length-1; i&gt;=0; i--) {
            var when=tids[i].modified.formatString('YYYY.0MM.0DD 0hh:0mm:0ss');
            list.push(item.format([tids[i].title.htmlEncode(),when,tids[i].text.length]));
        }
        // display droplist, buttons, and command links
        var out=''; var c=this.changed.length;
        var NSP=config.formatters.findByField(&quot;name&quot;,&quot;nestedSliders&quot;);
        var summary=this.defLabel.format([c,c==1?'is':'are',c==1?'':'s'])
        out+=NSP?'+++(unsaved)['+summary+'|'+this.defTip+']...':(summary+&quot;\n&quot;);
        out+='&lt;html&gt;&lt;form style=&quot;display:inline&quot;&gt;&lt;!--\
            --&gt;&lt;select size=&quot;1&quot; name=&quot;list&quot; \
                title=&quot;select a tiddler to view&quot; \
                onchange=&quot;var v=this.value; if (v.length) story.displayTiddler(null,v);&quot;&gt;&lt;!--\
            --&gt;'+list.join('')+'&lt;!--\
            --&gt;&lt;/select&gt;&lt;!--\
            --&gt;&lt;input type=&quot;button&quot; value=&quot;goto&quot; onclick=&quot;this.form.list.onchange();&quot;&gt;';
        if (config.macros.loadTiddlers)  {
            out+='&lt;input type=&quot;button&quot; value=&quot;revert&quot; \
                title=&quot;import the last saved version of this tiddler&quot; \
                onclick=&quot;var v=this.form.list.value; if (!v.length) return; \
                    var t=\'&lt;\'+\'&lt;loadTiddlers [[tiddler:\'+v+\']] \'; \
                    t+=document.location.href; \
                    t+=\' confirm force noreport&gt;\'+\'&gt;\'; \
                    var e=document.getElementById(\'executeRevert\'); \
                    if (e) e.parentNode.removeChild(e); \
                    e=document.createElement(\'span\'); \
                    e.id=\'executeRevert\'; \
                    wikify(t,e);&quot;&gt;';
        }
        out+='&lt;/form&gt;&lt;/html&gt;';
        if (!readOnly) {
            out+='\n{{small nowrap{';
            out+=&quot;&lt;&lt;saveChanges&gt;&gt;&quot;;
            out+=config.macros.saveAs?&quot; | &lt;&lt;saveAs&gt;&gt;&quot;:&quot;&quot;;
            out+=config.macros.upload?&quot; | &lt;&lt;upload&gt;&gt;&quot;:&quot;&quot;;
            out+=(config.macros.emptyTrash&amp;&amp;store.getTaggedTiddlers(&quot;Trash&quot;).length)?&quot; | &lt;&lt;emptyTrash&gt;&gt;&quot;:&quot;&quot;;
            out+='}}}';
        }
        out+=NSP?'===':'';
        wikify(out,place);
    }
};

// hijack store.saveTiddler() to track changes to tiddlers
if (store.showUnsaved_saveTiddler==undefined) {
    store.showUnsaved_saveTiddler=store.saveTiddler;
    store.saveTiddler=function(title,newtitle) {
        if (title!=newtitle) {
            var i=config.macros.unsavedChanges.changed.indexOf(title);
            if (i!=-1) config.macros.unsavedChanges.changed.splice(i,1); // remove old from list
        }
        var i=config.macros.unsavedChanges.changed.indexOf(newtitle);
        if (i!=-1) config.macros.unsavedChanges.changed.splice(i,1); // remove new title from list
        config.macros.unsavedChanges.changed.push(newtitle); // add new title to END of list
        var t=this.showUnsaved_saveTiddler.apply(this,arguments);
        if (!this.notificationLevel) config.macros.unsavedChanges.refresh();
        return t;
    }
}

// hijack store.removeTiddler() to track changes to tiddlers
if (store.showUnsaved_removeTiddler==undefined) {
    store.showUnsaved_removeTiddler=store.removeTiddler;
    store.removeTiddler=function(title) {
        var i=config.macros.unsavedChanges.changed.indexOf(title);
        if (i!=-1) config.macros.unsavedChanges.changed.splice(i,1); // remove from list
        this.showUnsaved_removeTiddler.apply(this,arguments);
        if (!this.notificationLevel) config.macros.unsavedChanges.refresh();
    }
}

// hijack store.setDirty() function to reset change list after file save
// note: do NOT hijack the prototype function.  This hijack should only be applied to
// the main 'store' instance only (i.e., don't refresh when loading temporary store
// as part of ImportTiddlers processing)
if (store.showUnsaved_setDirty==undefined) {
    store.showUnsaved_setDirty=store.setDirty;
    store.setDirty = function(flag) {
        var refresh=this.isDirty() &amp;&amp; !flag; // 'dirty' to 'clean', force a refresh...
        this.showUnsaved_setDirty.apply(this,arguments); // but change the flag first.
        if (refresh) {
            config.macros.unsavedChanges.changed=[]; // clear changed list
            config.macros.unsavedChanges.refresh();
        }
    }
}
//}}}</pre>
</div>
<div title="Uprightness" modifier="SDM" created="201208081614" modified="201208081617" book_key="">
<pre>* //Rectitude//
* &lt;&lt;Bbl Heb 1:8 &gt;&gt;
* &lt;&lt;Bbl Amos 7:7 &gt;&gt; //plumb line// -- building construction, [[House]]</pre>
</div>
<div title="Value" modifier="SDM" created="201201282114" modified="201211181613" book_key="">
<pre>* [[Redemption]], //worth//
!!! Coin Illustration
To teach this, purchase a junction box
| Medium | Literal value | Application |h
|slug from a junction box | 0.05|Reductionist view (chemicals only) |
|quarter | 0.25|Man in God's image |
|Susan B Anthony dollar | 1.00|Redeemed value (hard to notice) |
|Real silver dollar | 1.00|Manifest value -- God glorified |
!!! Ministry
* Don't undervalue your ministry.  Above all, don't undervalue the people to whom you minister.  If you undervalue them, you're inevitably going to undervalue your ministry.  This has a practical application for [[Marriage]]:  If I view my wife as God's treasure, having inestimably high value, then I will treat my responsibilities as sacred and important.</pre>
</div>
<div title="Veil" modifier="SDM" created="201202291305" modified="201212211607" book_key="">
<pre>* Moses used a veil to cover over God's glory shining on his face.  But ... outrageously ... the Bible appears to say that he actually used the veil to keep people from noticing it was fading. Could it be true?
* So Christ used the veil //of His flesh// (&lt;&lt;Bbl Heb 10:20&gt;&gt;) to cover His Lordship.  As the veil in the Temple was torn, that veil of His flesh was torn.
* see [[Christ]] -&gt; Kenosis
* [[Invisible-Visible]]
* [[Revelation]]</pre>
</div>
<div title="Versus" modifier="SDM" created="201211252006" book_key="">
<pre>Conflict of the soul, or in the soul, or in the creation.
* 1Jn 4:18  Fear VS Love
* Jms 2:12-13  Judgement VS Mercy
* James 1:25  Freedom VS Law</pre>
</div>
<div title="Vessel" modifier="SDM" created="201004120330" modified="201211250029" tags="my_life" book_key="">
<pre>* N.T. study from Vine's, 12/'83.  [a Gr. term translated, vessel]; &lt;&lt;Bbl Heb 9:21 &gt;&gt;; &lt;&lt;Bbl Mt 12:29 &gt;&gt;; &lt;&lt;Bbl Act 9:15 &gt;&gt;; &lt;&lt;Bbl 2Cor 4:7 &gt;&gt;; &lt;&lt;Bbl Rev 2:27 &gt;&gt; (&lt;&lt;Bbl Ps 2:9 &gt;&gt;, &lt;&lt;Bbl Ps 31:12 &gt;&gt;); &lt;&lt;Bbl Rom 9:20 &gt;&gt;-21 ; &lt;&lt;Bbl 2Tim 2:20 &gt;&gt;-21 ;  &lt;&lt;Bbl 1Pt 3:7 &gt;&gt;
* &lt;&lt;Bbl Is 66:20 abbr &gt;&gt;.
* [[Broken]]
* [[Water]]
* [[Purity]] --  &lt;&lt;Bbl 1Sam 21:5 &gt;&gt;; &lt;&lt;Bbl 1Thes 4:4 &gt;&gt; (possibly referring to body, likely to wife; Vine's presents arguments);
{{annotation{The note just above is from my original alphabet-indexed study.  I wrote it in 1983.}}}</pre>
</div>
<div title="Victory" modifier="SDM" created="201012301944">
<pre>* &lt;&lt;Bbl Col 2:15&gt;&gt;
* [[Sovereignty]]
* [[War]]
* //conquest, triumph, success, overcoming//</pre>
</div>
<div title="ViewTemplate" modifier="SDM" created="200903111549" modified="201211211957" tags="template excludeLists" book_key="">
<pre>&lt;!--{{{--&gt;
&lt;div class='toolbar' macro='toolbar [[ToolbarCommands::ViewToolbar]]'&gt;&lt;/div&gt;
&lt;span class='title' macro='view title'&gt;&lt;/span&gt;
&lt;!-- &lt;div class='subtitle fine'&gt;
&lt;span macro='view modifier link'&gt;&lt;/span&gt;, &lt;span macro='view modified date'&gt;&lt;/span&gt; (&lt;span macro='message views.wikified.createdPrompt'&gt;&lt;/span&gt; &lt;span macro='view created date'&gt;&lt;/span&gt;)&lt;/div&gt; --&gt;
&lt;div class='subtitle fine'&gt;
&lt;!-- &lt;span macro='view modified date'&gt;&lt;/span&gt; --&gt; &lt;/div&gt;
&lt;div class='tagClear'&gt;&lt;/div&gt;
&lt;!--- &lt;div class='tagging' macro='tagging'&gt;&lt;/div&gt; //SDM --&gt;
&lt;div class='tagged' macro='tags'&gt;&lt;/div&gt;
&lt;div class='viewer' macro='view text wikified'&gt;&lt;/div&gt;
&lt;div class='tagClear'&gt;&lt;/div&gt;
&lt;div class='toolbar' style='line-height:100%;margin-top:.5em;'&gt;&lt;a href=&quot;javascript:;&quot;
    onclick=&quot;window.scrollTo(0,ensureVisible(story.findContainingTiddler(this)));return false;&quot;
    onmouseover=&quot;this.title='scroll to top of '+story.findContainingTiddler(this).getAttribute('tiddler')&quot;&gt;&amp;#x25b2;&lt;/a&gt;
&lt;/div&gt;
&lt;div class='tagClear'&gt;&lt;/div&gt;
&lt;!--}}}--&gt;</pre>
</div>
<div title="ViewTemplate shadows" creator="matt" modifier="matt" created="201102111439" modified="201102151515" tags="shadow">
<pre>This tiddler contains the mark up to display tiddlers.  You can change the mark up to create a custom view of a tiddler.

By default it contains the following markup:

{{{
&lt;div class='toolbar'
	macro='toolbar [[ToolbarCommands::ViewToolbar]] icons:yes height:16 width:16 more:popup'&gt;
&lt;/div&gt;
&lt;div class='heading'&gt;
	&lt;span class='spaceSiteIcon'
		macro='tiddlerOrigin label:no spaceLink:yes height:48 width:48 preserveAspectRatio:yes'&gt;
	&lt;/span&gt;
	&lt;span class=&quot;titleBar&quot;&gt;
		&lt;div class='title' macro='view title text'&gt;&lt;/div&gt;
		&lt;div class=&quot;subtitle&quot; macro='viewRevisions page:5'&gt;
			last modified on
			&lt;span macro=&quot;view modified date&quot;&gt;&lt;/span&gt;
		&lt;/div&gt;
	&lt;/span&gt;
	&lt;span class='followPlaceHolder' macro='followTiddlers'&gt;&lt;/span&gt;
	&lt;span class='modifierIcon'
		macro='view modifier SiteIcon label:no spaceLink:yes height:48 width:48 preserveAspectRatio:yes'&gt;
	&lt;/span&gt;
	&lt;div class='tagClear'&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class='content'&gt;
	&lt;div class='viewer' macro='view text wikified'&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class='tagInfo'&gt;
	&lt;div class='tidTags' macro='tags'&gt;&lt;/div&gt;
	&lt;div class='tagging' macro='tagging'&gt;&lt;/div&gt;
&lt;/div&gt;
}}}</pre>
</div>
<div title="Vigilance" modifier="SDM" created="201211250331" modified="201212211607" book_key="">
<pre>* //Watchfulness, alertness//, [[Waiting]]
* &lt;&lt;Bbl Neh 4:23&gt;&gt;</pre>
</div>
<div title="Vineyard" modifier="SDM" created="201010291350" modified="201210212128" tags="Harvest Living-Plant" book_key="">
<pre>* [[Living-Plant]],  [[Wine]], //grape, vintage//
* &lt;&lt;Bbl Ps 80:8 &gt;&gt;-16 ; &lt;&lt;Bbl Is 5:1 &gt;&gt;-7 , &lt;&lt;Bbl Is 27:2 &gt;&gt;-6 ; &lt;&lt;Bbl Jer 2:21 &gt;&gt;, &lt;&lt;Bbl Jer 12:10 &gt;&gt;,&lt;&lt;Bbl Ez 17:3 &gt;&gt;-10 , &lt;&lt;Bbl Ez 19:10 &gt;&gt;-14 ; &lt;&lt;Bbl Hos 10:1 &gt;&gt;; &lt;&lt;Bbl Mt 21:28 &gt;&gt;-45 ; &lt;&lt;Bbl Jn 15:1 &gt;&gt;-6 </pre>
</div>
<div title="Violence" modifier="SDM" created="201004120330" modified="201202040009" book_key="">
<pre>* &lt;&lt;Bbl Gn 6:11 &gt;&gt;
* &lt;&lt;Bbl Ez 33:26 &gt;&gt;; &lt;&lt;Bbl Ez 34:4 &gt;&gt;
* &lt;&lt;Bbl Dan 11:14 &gt;&gt;
* &lt;&lt;Bbl Mal 2:16 &gt;&gt; //a man covers himself with violence//
* [[War]]</pre>
</div>
<div title="Virtue" modifier="SDM" created="201004120330" modified="201301091604" book_key="">
<pre>* Virtue is simply power.  A fairly non-literate man told me this when I was about 19.  This is specifically helpful for understanding the KJV ... but it seems to be edifying on a more purely philosophical level as well.
* Patience, humility, and confidence: these spring from a true faith in God's sovereignty.
* [[SanctifiedProgressive]], [[Power]], [[Godliness]], [[Purity]].
* [[Benefit]]
* [[Gold]] in Exodus is a symbol.</pre>
</div>
<div title="VistaIssues" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="browsers issues">
<pre>TiddlyWiki works fine under Internet Explorer on Windows Vista, although you may run into the blocking problem described in ServicePack2Problems.

Under Vista, TiddlyWiki will not save changes correctly if you are viewing the TiddlyWiki file in Vista's file preview pane.</pre>
</div>
<div title="VisualTWServer" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="systemServer">
<pre>|''URL:''|http://visualtw.ouvaton.org/VisualTW.html|
|''Author:''|Pascal|</pre>
</div>
<div title="Vow" modifier="SDM" created="201004120330" modified="201010071912">
<pre>* &lt;&lt;Bbl Ex 20:7 &gt;&gt;; &lt;&lt;Bbl Lv 5:4 &gt;&gt;,&lt;&lt;Bbl Lv 19:12 &gt;&gt;; &lt;&lt;Bbl Num 6:13 &gt;&gt;, &lt;&lt;Bbl Num 30:1 &gt;&gt;-16 ; &lt;&lt;Bbl Dt 6:13 &gt;&gt;, &lt;&lt;Bbl Dt 23:21 &gt;&gt;-23 ; &lt;&lt;Bbl Jud 11:30 &gt;&gt;-36 ; &lt;&lt;Bbl Neh 10:29 &gt;&gt;; &lt;&lt;Bbl Ps 15:4 &gt;&gt;; &lt;&lt;Bbl Ps 56:12 &gt;&gt;, &lt;&lt;Bbl Ps 63:11 &gt;&gt;; &lt;&lt;Bbl Pr 20:25 &gt;&gt;; &lt;&lt;Bbl Eccl 5:4 &gt;&gt;-6 , &lt;&lt;Bbl Eccl 8:2 &gt;&gt;; &lt;&lt;Bbl Dan 6:8 &gt;&gt;; &lt;&lt;Bbl Mt 5:33 &gt;&gt;-37 , &lt;&lt;Bbl Mt 12:34 &gt;&gt;-37 , &lt;&lt;Bbl Mt 14:7 &gt;&gt;-11 , &lt;&lt;Bbl Mt 23:16 &gt;&gt;-22 , &lt;&lt;Bbl Mk 6:22 &gt;&gt;-28 ; &lt;&lt;Bbl Jms 5:12 &gt;&gt;.
* The Hebrew word for swear comes from a root meaning &quot;seven&quot;, referring to the act of prostrating oneself seven times.
* Latin //adjurare// -- thus to //adjure// is to ask or request in a way that puts the receiver under oath (//jury//).
* The purpose of an oath is to eliminate all doubt, which also ends all argument.
* The essence of swearing is liability, as the swearer invokes a kind of collateral.  He is bonded, shackled as it were to a tangible or at least specific penalty.  If one's word is one's bond, this is a way of saying no extra collateral is needed.
* &lt;&lt;Bbl Gn 22:16 &gt;&gt; -- God swears, and the collateral is Himself.
* The pharisaic error therefore seems to have been an attempt at limited liability, a less-binding oath.  This was always implied in that one chooses one's penalty, whether more or less extreme; but the Pharisees had it down to a rule-book, and the motive was ultimately dishonest.  Jesus says it's a false and wicked gambit.
* God speaks, and it IS; His Word does not return to Him void.  We are destined to also have continually effectual words.
* Bad vows:     &lt;&lt;Bbl Jos 9:6 &gt;&gt; (but in 10:1-11, God sanctions the vow); &lt;&lt;Bbl Jud 21:1 &gt;&gt;-7 ; &lt;&lt;Bbl 1Sam 15:24 &gt;&gt;-46 ; &lt;&lt;Bbl Jer 44:24 &gt;&gt;-28 </pre>
</div>
<div title="Waiting" modifier="SDM" created="201010071828" modified="201211281915" book_key="">
<pre>* &lt;&lt;Bbl Gn 49:18 &gt;&gt; Israel's personal testimony, and the testimony of God's people named Israel.
* &lt;&lt;Bbl Job 14:14 &gt;&gt;;
* &lt;&lt;Bbl Ps 25:5 &gt;&gt;, &lt;&lt;Bbl Ps 27:14 &gt;&gt;, &lt;&lt;Bbl Ps 37:7 &gt;&gt;-9 , &lt;&lt;Bbl Ps 40:1 &gt;&gt;, &lt;&lt;Bbl Ps 119:81 &gt;&gt;, &lt;&lt;Bbl Ps 130:5 &gt;&gt;-6 ;
* &lt;&lt;Bbl Judges 16:22 &quot;&quot; note &gt;&gt; -- Samson patiently and painfully seeking his opportunity.
*  &lt;&lt;Bbl Is 25:9 &gt;&gt;,  &lt;&lt;Bbl Is 26:8 &gt;&gt;
* &lt;&lt;Bbl Is 30:18 &gt;&gt; //Yahweh waits, we wait//
* &lt;&lt;Bbl Is 40:31 &gt;&gt; //will renew their [[Strength]]//
* &lt;&lt;Bbl Dan 12:12 &gt;&gt; [[Perseverance]]
* &lt;&lt;Bbl Hab 2:3 &gt;&gt; //wait for it; because it will surely come. It won't delay.//
* &lt;&lt;Bbl Mk 15:43 &gt;&gt; //Joseph of Arimethea was waiting// (often translated looking)
* &lt;&lt;Bbl Lk 2:25 &gt;&gt; Simeon
* &lt;&lt;Bbl Lk 12:36 &gt;&gt; Like men on vigil during a marriage.
* &lt;&lt;Bbl Rom 8:23 &gt;&gt;; &lt;&lt;Bbl Gal 5:5 &gt;&gt;; &lt;&lt;Bbl Php 3:20 &gt;&gt;
* The devil, after the temptation in the desert.
* [[Expectation]], [[Vigilance]]
!!! in the Letter to the Hebrews
* Sarah, of course, for her child.
* Abraham, owning nothing of the promised land but that bargain cafe.
* Hebrews 1 -- apart from us, they waited, those prophets.
* [[Joseph]] in the matter of his bones.  Indeed Hebrews 11 is a record of waiting as well as faith; for [[Faith]] is expressed in waiting.
</pre>
</div>
<div title="Walk" modifier="SDM" created="201208032034" modified="201211250330" book_key="">
<pre>* [[Road]]
* [[Conduct]]
*  Prov 4.25-27 //Let your eyes look straight ahead. Fix your gaze directly before you. 4.26 Make the path of your feet level. Let all of your ways be established. 4.27 Don't turn to the right hand nor to the left. Remove your foot from evil.//
* &lt;&lt;Bbl Eph 2:10 &gt;&gt; //which God prepared beforehand so that we would walk in them//
* &lt;&lt;Bbl Eph 4:1 &gt;&gt;  //I...implore you to walk in a manner worthy of the calling with which you have been called//  @@color:darkred;Unfortunately the NIV translates //walk// as //live//.@@
* &lt;&lt;Bbl Eph 4:17 &gt;&gt; //walk no longer just as the Gentiles also walk, in the futility of their mind//
* &lt;&lt;Bbl Eph 5:2 &gt;&gt;  //and walk in love, just as Christ also loved you//
* &lt;&lt;Bbl Eph 5:8 &gt;&gt;  //walk as children of Light//
* &lt;&lt;Bbl Eph 5:15 &gt;&gt; //Therefore be careful how you walk, not as unwise men but as wise//</pre>
</div>
<div title="Wall" modifier="SDM" created="201211281901" modified="201211281901" book_key="">
<pre>* //He tore down the dividing wall//
* //barrier//
* [[Division]]
* {{anti{[[Gate]],[[Door]]}}}</pre>
</div>
<div title="War" modifier="SDM" created="201004120330" modified="201205280159" book_key="">
<pre>* &lt;&lt;Bbl Ex 13:17 &gt;&gt;-18 , &lt;&lt;Bbl Ps 149:5 &gt;&gt;-9 ; &lt;&lt;Bbl 2Tim 2:22 &gt;&gt;; &lt;&lt;Bbl 1Pt 2:11 &gt;&gt;
* [[Soldier]], [[Sword]], [[Violence]], [[Victory]]
* [[David]]</pre>
</div>
<div title="Washing" modifier="SDM" created="201208061611" modified="201208061611" book_key="">
<pre>* [[Water]]
* [[Baptism]]
* &lt;&lt;Bbl Eph 5:26 &gt;&gt;
!!! Foot washing
* A ceremony that for us suggests intimacy rather than servanthood.
* &lt;&lt;Bbl 1Sam 25:41 &gt;&gt; provides the original perspective.</pre>
</div>
<div title="Water" modifier="SDM" created="201009300228" modified="201301091623" book_key="">
<pre>* Water as a symbol of life could comprise as extensive a study as that of [[Resurrection]] life after death.
* //Cistern, well, [[Vessel]], [[River]], spring.//
* [[Baptism]], [[Washing]]
* Also see listing in Moody Bible Atlas, p. 51.
* A well is a live spring.
* I'm too used to a faucet.
* Preach with reference to an exacting and awe-inspiring description of the Edwards Aquifer.
* &lt;&lt;Bbl Gn 21:19 &gt;&gt;        Hagar's deliverance.
* &lt;&lt;Bbl Lv 11:34 &gt;&gt;-36
* &lt;&lt;Bbl Num 21:16 &gt;&gt;-18     Israel's song.  The scepter and staff refer to Moses' staff.
* &lt;&lt;Bbl Is 12:3 &gt;&gt;     drawing  &quot;...water from the wells of salvation.&quot;
* &lt;&lt;Bbl Jer 2:13 &gt;&gt;).  Broken cisterns is a powerful image of men's attempt to organize God's appointments, e.g. in forming big denominations.  see vs. 18.
* &lt;&lt;Bbl Jer 14:3 &gt;&gt;         the shame of Israel, empty cisterns.
* &lt;&lt;Bbl Ecc 12:3 &gt;&gt;         the pitcher by the well, the wheel (windlass) by the cistern: within the analogy of this passage, this could refer to losing your intellectual (and, in some sense, spiritual?) capacity with old age.
* &lt;&lt;Bbl Ps 36:8 &gt;&gt;-9   &quot;...river of Thy delights...fountain of life.&quot;
* &lt;&lt;Bbl Ps 63:1 &gt;&gt;     &quot;...my soul thirsts for You...in a dry and thirsty land...&quot;
* &lt;&lt;Bbl Pr 4:23 &gt;&gt;        &quot;...the springs of life...&quot;
* &lt;&lt;Bbl Pr 5:15 &gt;&gt;-18     Mike Birch has proposes the husband is the spring and the stream, the source of water, while the wife is the receptacle or reservoir.
* &lt;&lt;Bbl Pr 14:27 &gt;&gt;       the fear of the Lord is a fountain of life.
* &lt;&lt;Bbl Pr 23:27 &gt;&gt;       the inevitable shabbiness of an adulterous relationship.  An adulterous woman has no spiritual capacity.
* &lt;&lt;Bbl Pr 20:5 &gt;&gt;        &quot;...like deep water, but a man of understanding...&quot;
* &lt;&lt;Bbl Pr 20:26 &gt;&gt;       [[Compromise]]
* &lt;&lt;Bbl Pr 22:14 &quot;&quot; note &gt;&gt;
* &lt;&lt;Bbl Song 4:12 &gt;&gt;     in describing his lover.
* &lt;&lt;Bbl Is 58:11 &gt;&gt;         &quot;...a spring that does not fail.&quot;
* &lt;&lt;Bbl Hos 13:15 &gt;&gt;        Samaria's dry spring
* &lt;&lt;Bbl Jn 4:7 &gt;&gt;-1 5  the Samaritan woman</pre>
</div>
<div title="Weakness" modifier="SDM" created="201202032341" modified="201211250347" book_key="">
<pre>* [[Frailty]]
* [[Addiction]]
* [[Servitude]]
* &lt;&lt;Bbl Pr 25:28&gt;&gt; -- //broken down walls//
* {{anti{ [[Strength]]}}}</pre>
</div>
<div title="Wealth" modifier="SDM" created="201004120330" modified="201211161340" book_key="">
<pre>* &lt;&lt;Bbl 2Cor 4:17 &gt;&gt;
* dishonest:  &lt;&lt;Bbl Job 27:16 &gt;&gt;-17 ; &lt;&lt;Bbl Pr 1:13 &gt;&gt;; &lt;&lt;Bbl 1Tim 3:8 &gt;&gt;
* [[Tithe]]
* {{anti{[[Poverty]]}}}
* [[Treasure]]
* [[Resources-Personal]]
!!! Deceitfulness of riches
* 'Money talks' - well, don't let it start talking to you!
* &lt;&lt;Bbl Ps.49 &gt;&gt;
* &lt;&lt;Bbl Pr 11:4 &gt;&gt;, &lt;&lt;Bbl Pr 18:11 &gt;&gt;, &lt;&lt;Bbl Pr 23:4 &gt;&gt;-5 , &lt;&lt;Bbl Pr 28:20 &gt;&gt;; &lt;&lt;Bbl Ecc 5:10 &gt;&gt;, &lt;&lt;Bbl Ecc 6:2 &gt;&gt;; &lt;&lt;Bbl Ez 7:19 &gt;&gt;; &lt;&lt;Bbl Mt 6:24 &gt;&gt;, &lt;&lt;Bbl Mt 19:16 &gt;&gt;-26 ; &lt;&lt;Bbl Mk 4:19 &gt;&gt;; &lt;&lt;Bbl Lk 12:15 &gt;&gt;; &lt;&lt;Bbl 1Tim 6:5 &gt;&gt;-10 ; &lt;&lt;Bbl Heb 13:5 &gt;&gt;
!!!! Buffer - less digested - often about [[Contentment]]
[Pro 30:7 NASB] - Two things I asked of You, Do not refuse me before I die:  Keep deception and lies far from me, Give me neither poverty nor riches; Feed me with the food that is my portion,  That I not be full and deny {You} and say, &quot;Who is the LORD?&quot; Or that I not be in want and steal, And profane the name of my God.

[Pro 11:28 NIV] - Whoever trusts in his riches will fall, but the righteous will thrive like a green leaf.

[Pro 23:4-5 NIV] - Do not wear yourself out to get rich; have the wisdom to show restraint.  Cast but a glance at riches, and they are gone, for they will surely sprout wings and fly off to the sky like an eagle.

[Pro 27:24 NIV] - for riches do not endure forever, and a crown is not secure for all generations.

[Pro 28:6 NIV] - Better a poor man whose walk is blameless than a rich man whose ways are perverse.

[Pro 28:11 NIV] - A rich man may be wise in his own eyes, but a poor man who has discernment sees through him.

[Pro 28:22 NIV] - A stingy man is eager to get rich and is unaware that poverty awaits him.

[Pro 13:7 NASB] - There is one who pretends to be rich, but has nothing; Another pretends to be poor, but has great wealth.

[Pro 13:8 NASB] -  The ransom of a man's life is his wealth, But the poor hears no rebuke.
        [NIV] -  A man's riches may ransom his life, but a poor man hears no threat.
</pre>
</div>
<div title="WhatsNew" creator="ericshulman" modifier="ericshulman" created="201209160311" modified="201303112252" tags="gettingstarted welcome">
<pre>The following is a summary of notable changes between ~TiddlyWiki v2.7.0 and v2.7.1.
*''jQuery update''&lt;br&gt;The jQuery library embedded in ~TiddlyWiki has been updated from v1.8.1 to v1.8.3.  This corrects a &quot;~UTF-8 character encoding&quot; problem that was causing errors when saving/loading documents containing multi-byte &quot;international&quot; character sets, resulting in 'mangled' binary-valued content.</pre>
</div>
<div title="Wickedness" modifier="SDM" created="201004120330" modified="201211230341" book_key="">
<pre>* &lt;&lt;Bbl Ps 92:7 &gt;&gt;; &lt;&lt;Bbl Ez 18:23 &gt;&gt;; &lt;&lt;Bbl Ez 33:7 &gt;&gt;-20 ; &lt;&lt;Bbl Mic 2:1 &gt;&gt;
* [[Depravity]], [[Subversion]], [[Sin]]
* The [[World]], the [[Flesh]] and [[Satan]] -- See &lt;&lt;Bbl Eph 2:1&gt;&gt;-3</pre>
</div>
<div title="Wii" creator="psd" modifier="blaine" created="201102111107" modified="201102111310">
<pre>TiddlyWiki seems to [[work fine on the Wii browser|http://blog.deuceofalltrades.com/2007/02/wii-browser-meets-microcontent.html]], at least for browsing -- it doesn't appear that you can save or upload changes.</pre>
</div>
<div title="Wiki-Dev-Brainstorming" modifier="SDM" created="201111292312" modified="201212150236" tags="wiki resource wiki-link excludeLists" book_key="">
<pre>* [[ListPassages-Demo-Using-Fields]]
* iFrames. &lt;&lt;option txtFramedLinksTag&gt;&gt;
* http://tiddlywiki.abego-software.de/#PartTiddlerPlugin
* http://tiddlywiki.abego-software.de/#[[Automatically%20create%20tabs%20from%20a%20set%20of%20Tiddlers]]</pre>
</div>
<div title="Wiki-FunctionalGoals" modifier="SDM" created="201004142203" modified="201212150212" tags="wiki user-function excludeLists" book_key="">
<pre>!! Goals
* Non-linear wiki for insights, ideas, anything that needs remembering.
## a scratch-pad for less-formed ideas, teaching plans
## an archive for codified conclusions
* Future //&quot;extensibility&quot;//
## This is a normalized form of storage that can be squirted into future applications.
* Portable application
## USB drive
## works on any operating system
## works without Internet access
* Allows access to complete Bible text
## for reference
## for search
!! Stumbling points for others
# Bible books sometimes follow my preferred order and grouping.  For example, the Gospel accounts are re-ordered with Mark first and Luke last; and Acts is grouped with the Gospels following Luke.
# &quot;Chunking&quot; of passages follows my determinations.  See [[Wiki-ScriptureChunking]].
# Translation is --fixed on the WEB.-- ''This is uncertain''  Also, the WEB version is not updated to current.
# --Margin notes and such are omitted.-- ''This is uncertain''</pre>
</div>
<div title="Wiki-LEB-Import" modifier="SDM" created="201212150151" modified="201212150236" tags="wiki todo resource wiki-link excludeLists" book_key="">
<pre>Working on it.  The XML is better than WEB.</pre>
</div>
<div title="Wiki-Link-Scripture--Methods" modifier="SDM" created="201212211613" modified="201303010246" tags="wiki todo wiki-link" book_key="">
<pre>{|
! Method
! Open/Save
! Retrieve
! Dependency
! Rebuild
! Precision
|-
| One doc
| Slow
| Fast &lt;br&gt;Searchable
|
| Extra Hard
| Bad
|-
| Helper TW
| ''?''
| ''?''
| [[SharedTiddlersPlugin]]&lt;br&gt;other code
| Hard
| Bad
|-
| Helper HTM
| Fast
| Slow &lt;br&gt;NOT Searchable
| ExternalTiddler &lt;br&gt;Framed Link
| Easy
| Good
|}
!!! Helper HTM or TW
Content can be presented as framed link OR temporary tiddler.
!!! ~SharedTiddlersPlugin
* One can include on a per-tiddler basis, using a line like {{{ &lt;&lt;include &quot;./Bbl/bible_txt.htm&quot; filters:&quot;[[Matthew-07-01]]&quot;&gt;&gt; }}}.  But this presents a challenge in listing Scripture tiddlers, necessary for the [[BibleHyperlink]] macro.  This can almost certainly be met using Yakov's various methods for [[SharedTiddlersPlugin]].  But the easy immediate solution is to import all //Text// tiddlers.  This is done with a macro in the tiddler [[About These Notes]].</pre>
</div>
<div title="Wiki-ScriptureChunking" modifier="SDM" created="201201222307" modified="201212150206" tags="wiki excludeLists" book_key="">
<pre>* Chapter
* Paragraph division
* Internal tags
* Delimiters I can spot (ex, quote marks)</pre>
</div>
<div title="Wiki-Tagged" modifier="SDM" created="201211121416" modified="201211121519" tags="excludeLists" book_key="">
<pre>&lt;&lt;matchTags &quot;* %0&quot; &quot;\n&quot; wiki &gt;&gt;</pre>
</div>
<div title="Wiki-ToDo" modifier="SDM" created="201004201338" modified="201301071305" tags="wiki wiki-link excludeLists" book_key="">
<pre>&lt;&lt;matchTags &quot;* %0&quot; &quot;\n&quot; todo &gt;&gt;
!! Finish out book index keys
# Find: {{{ (&lt;div title.*Kings.*)(&gt;) }}}
# Replace: {{{ \1 book_key=&quot;540000&quot;\2 }}}
!! Miscellaneous
* Insert leading zero for chapter numbers in Psalms.
* Improve format for h1 through h6.  See [[StylesheetAdjustments]]:  {{{.tiddler .title    { color: [[ColorPalette::PrimaryDark]];}}}
!! Improve Scripture links in Notes tiddlers
* Python to go through {{{Comment}}} tiddlers and fix erroneous references.  This is where an outside reference was erroneously carried forward and used for the next reference (the outside reference closed a line, the next reference opened a new line).
* Python to go through {{{Comment}}} tiddlers and replace every reference with a link. </pre>
</div>
<div title="Wiki-Usage-Tags" modifier="SDM" created="201004201343" modified="201212150212" tags="wiki howto user-function excludeLists" book_key="">
<pre>! the TAG is for SPOTTING
* is ''temporary''.   Two purposes:
## Retaining results of new brain-storming, insights, research -- non-linear, unorganized connections.  // I'm not sure how these all fit together, but they seem interesting.//  Mind-mapping.
## Recording an isolated new insight (saves time)
## Fast-indexing for a specific purpose such as  teaching study.  // I'm piling up resources, working fast.//
* Tiddly-Tagging approach is deprecated here.  Instead, use {{{ &lt;&lt;matchTags '* %0' '\n' House &gt;&gt; }}} (see [[House]] as example).
! the TIDDLER is for THINKING (building in)
* has a LINK to a related Tiddler.
* has a discrete entry (a quoted statement, anecdote).
* has an outline structure, to facilitate organizing.
* has synonyms, to facilitate Search.
* has no TAG (except temporary).
* OR, is a stub for future building.  No blame.
!!! Idea
* For each major Topic:
## add guiding metaphors
## add earliest reference
! the LINK is for PUSHING (building out)
# to a Scripture page or TIDDLER
# Says:  //Don't forget to think about this.//
# Says:  //This may be a better location for your next recorded insight.//
# //References// lets you see where the 'pushes' are coming from.
! the Search is for PULLING
# ... and especially brain-storming and initiating.
# It finds Links.
# It does NOT find Tags.</pre>
</div>
<div title="Wiki-UserTasks" modifier="SDM" created="201112151806" modified="201212150215" tags="wiki user-function excludeLists" book_key="">
<pre>* There are three kinds of content tiddlers:
** Topic
** Passage of Scripture (tagged ''Scriptr'')
** Note about Scripture (tagged ''Comment'')
!!! ~Passage-Note tiddler
* From passage-note, click to next passage-note (should open below)
* From passage-note, click to preceding passage-note (should open above)
* From passage-note, click to relevant passage
| Go to Text | Preceding Note |
|&gt;| &amp;nbsp;  &lt;br&gt; Bible notes &lt;br&gt; &amp;nbsp; |
| | Next Note |
!!! Passage tiddler
* From passage, click to next passage (should open below)
* From passage, click to preceding passage (should open above)
* From passage, click to relevant passage-note
| Go to Note | Preceding Text |
|&gt;| &amp;nbsp;  &lt;br&gt; Passage of text &lt;br&gt; &amp;nbsp; |
| Go to online text | Next Text |
* From passage-note, click to referenced other passage-note
* From passage-note, click to referenced other passage
!!! Combination tiddler
Here's an idea for a tiddler that puts the text at top, notes below.
| &amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp; | Preceding Text |
|&gt;| &amp;nbsp;  &lt;br&gt; Passage of text &lt;br&gt; &amp;nbsp; |
|&gt;| &amp;nbsp;  &lt;br&gt; Bible notes &lt;br&gt; &amp;nbsp; |
| &amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp;-&amp;nbsp; | Next Text |</pre>
</div>
<div title="Wiki-WEB-Import" modifier="SDM" created="201211281934" modified="201212150236" tags="wiki todo resource wiki-link excludeLists" book_key="">
<pre>* WEB offers a version in USFX format, which is well-formed XML at the expense of goodies aimed at print publication.
* I can use python to convert it into a pure store format TW.
* Stay aware that Tiddler content in the storeArea uses [[HtmlEntities]]:
{{{
    &lt;   &amp;lt;
    &gt;   &amp;gt;
    &quot;   &amp;quot;
    &amp;   &amp;amp;
}}}
** see http://wiki.python.org/moin/EscapingHtml
* [[SplitTiddler]]
* I am now remembering I have quite a store of notes on this project...
!! XML weirdness
Unfortunately, the {{{USFX}}} format places all the actual text in a sort of tag limbo.
{{{
&lt;p&gt;
&lt;v id=&quot;30&quot;/&gt;The king rose up with the governor, and Bernice... &lt;ve/&gt;
&lt;v id=&quot;31&quot;/&gt;When they had withdrawn, they spoke to one another... &lt;ve/&gt;
&lt;v id=&quot;32&quot;/&gt;Agrippa said to Festus, This man might have been set free ... &lt;ve/&gt;
&lt;/p&gt;
}}}
I'm thinking it's possible to just make these replacements:
* {{{ &lt;v id=&quot;n&quot;/&gt; }}} to {{{ &lt;v id=&quot;n&quot;&gt; }}}
* {{{ &lt;ve/&gt; }}} to {{{ &lt;v/&gt; }}}
One hopes this will result in a well-formed as well as usable document.
----
* Then there are those awkward Psalm introductions...
* Let's make a provision for footnotes this time.
!! Chunking
!!!! In this Wiki
 Unfortunately, chunks are found in two states:
# Careful and considered
# Automatic and appalling
I think I should do some sorting.  I can add tag to passages that are well-formed.
## the NT
## sections of Isaiah I have reviewed
## Other such sections, and the way to spot these perhaps is by searching the notes.
## My divisions for Notes tiddlers may be normative.
!!!! In the WEB
* I don't want to follow chapter divisions outright because occasionally they are poorly chosen; and at least for passages subject to study, a chapter makes too long a tiddler.
* The {{{&lt;p&gt;}}} tags provide paragraph divisions that are probably astute; but their usage varies by the shape of the literature.
* Perhaps to start, I could say that chapters in the OT are divided in half or thirds, depending on length; {{{&lt;p&gt;}}} tags
!!!! Synthesis
Insert {{{demarc}}} tags over successive runs as follows:
# book divisions
# my explicit declared divisions
# my Notes tiddler divisions
# book chapters, where a tiddler is too long (but taking care with the Psalms!)
# paragraphs, where a tiddler is too long and paragraphs are suitable

</pre>
</div>
<div title="WikiOnAStick" creator="psd" modifier="jermolene" created="201102111107" modified="201110201351" tags="concepts">
<pre>Putting ~TiddlyWiki on a USB stick lets you carry around a self contained notebook that you can update wherever there's a computer, whether it's a Mac, Linux or a PC.

To be even more independent you can [[install FireFox on the drive|http://portableapps.com/apps/internet/firefox_portable]] as well!
</pre>
</div>
<div title="WikiTextContent" creator="colmbritton" modifier="matt" created="201102111446" modified="201102151540">
<pre>[[Basic|Basic Formatting]]
[[CSS|CSS Formatting]]
[[Code|Code Formatting]]
[[HTML Entities|HTML Entities Formatting]]
[[HTML|HTML Formatting]]
[[Headings|Headings Formatting]]
[[Horizontal Rules|Horizontal Rule Formatting]]
[[Images|Image Formatting]]
[[Line Breaks|Line Break Formatting]]
[[Links|Link Formatting]]
[[Lists|List Formatting]]
[[Quotations|Quotations Formatting]]
[[Suppressing|Suppressing Formatting]]
[[Tables|Tables Formatting]]</pre>
</div>
<div title="WikiWikiWeb" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="concepts">
<pre>A wiki (derived from the Hawaiian word for &quot;fast&quot;) is a popular way of building collaborative websites. It's based on the two ideas of allowing users to easily edit any page and the use of special formatting to create links between pages. See Wikipedia for [[more details|http://en.wikipedia.org/wiki/Wiki]].

~TiddlyWiki is fundamentally different from a conventional Wiki because it is not based on separate, entire pages of content, but rather items of MicroContent referred to as [[Tiddlers|Tiddler]] that live together on the same page.

Out of the box, ~TiddlyWiki is also different because it doesn't support public editing - or indeed any persistent editing when viewed over the web. However, there are ServerSide editions, TiddlyWikiAdaptations and [[Plugins]] that provide these features in a wide range of different configurations.</pre>
</div>
<div title="WikiWord" creator="blaine" modifier="blaine" created="201102111510" modified="201102111510">
<pre>A WikiWord is a word composed of a bunch of other words slammed together with each of their first letters capitalised. WikiWord notation in a conventional WikiWikiWeb is used to name individual pages while TiddlyWiki uses WikiWord titles for smaller chunks of MicroContent. Referring to a page with a WikiWord automatically creates a link to it. Clicking on a link jumps to that page or, if it doesn't exist, to an editor to create it. It's also easy to have NonWikiWordLinks, and there's a WikiWordEscape for situations where you don't want a WikiWord to be interpreted as a link.</pre>
</div>
<div title="Wiki_Resources" modifier="SDM" created="201201041519" modified="201212150202" tags="wiki resource excludeLists" book_key="">
<pre>* http://www.headjump.de/article/arrows-and-boxes
* In November 2010 I found the [[Quickstart Basics version|http://www.tiddlytools.com/quickstart/basics.html]] of ~TiddlyWiki.  These plug-ins really made things exciting.
* Thrills of late December 2010 are from http://apm-plugins.tiddlyspot.com.
</pre>
</div>
<div title="WikifyPlugin" modifier="ELSDesignStudios" created="200706230458" tags="systemConfig excludeLists">
<pre>/***
|Name|WikifyPlugin|
|Source|http://www.TiddlyTools.com/#WikifyPlugin|
|Documentation|http://www.TiddlyTools.com/#WikifyPluginInfo|
|Version|1.1.4|
|Author|Eric Shulman - ELS Design Studios|
|License|http://www.TiddlyTools.com/#LegalStatements &lt;br&gt;and [[Creative Commons Attribution-ShareAlike 2.5 License|http://creativecommons.org/licenses/by-sa/2.5/]]|
|~CoreVersion|2.1|
|Type|plugin|
|Requires||
|Overrides||
|Description|substitute fields, slices, or computed values into a wiki-syntax format string and render results dynamically|
The {{{&lt;&lt;wikify&gt;&gt;}}} macro allows you to easily retrieve values from custom tiddler fields, tiddler slices, computed values (using javascript) or just plain old literals, and assemble them into small bits of generated wiki-syntax text content that can be rendered directly into a tiddler, or used in the ViewTemplate or EditTemplate to add dynamically-generated content to each tiddler.

The {{{&lt;&lt;wikiCalc&gt;&gt;}}} macro performs the same processing as {{{&lt;&lt;wikify&gt;&gt;}}} and, in addition, passes the assembled text content through javascript's {{{eval()}}} function before rendering the results.  This allows you to, for example, construct and compute mathematical expressions that use input values extracted from tiddler fields or slices.
!!!!!Documentation
&gt; see [[WikifyPluginInfo]]
!!!!!Revisions
&lt;&lt;&lt;
2009.03.29 [1.1.4] in handler(), pass 'tiddler' value to wikify() to fix macro errors in rendered content
|please see [[WikifyPluginInfo]] for additional revision details|
2007.06.22 [1.0.0] initial release
&lt;&lt;&lt;
!!!!!Code
***/
//{{{
version.extensions.WikifyPlugin= {major: 1, minor: 1, revision: 4, date: new Date(2009,3,29)};

config.macros.wikify={
    handler: function(place,macroName,params,wikifier,paramString,tiddler) {
        var fmt=params.shift();
        var values=[];
        var out=&quot;&quot;;
        if (!fmt.match(/\%[0-9]/g) &amp;&amp; params.length) // format has no markers, just join all params with spaces
            out=fmt+&quot; &quot;+params.join(&quot; &quot;);
        else { // format param has markers, get values and perform substitution
            while (p=params.shift()) values.push(this.getFieldReference(place,p));
            out=fmt.format(values);
        }
        if (macroName==&quot;wikiCalc&quot;) out=eval(out).toString();
        wikify(out.unescapeLineBreaks(),place,null,tiddler);
    },
    getFieldReference: function(place,p) { // &quot;slicename::tiddlername&quot; or &quot;fieldname@tiddlername&quot; or &quot;fieldname&quot;
        if (typeof p != &quot;string&quot;) return p; // literal non-string value... just return it...
        var parts=p.split(config.textPrimitives.sliceSeparator);
        if (parts.length==2) {// maybe a slice reference?
            var tid=parts[0]; var slice=parts[1];
            if (!tid || !tid.length || tid==&quot;here&quot;) { // no target (or &quot;here&quot;), use containing tiddler
                tid=story.findContainingTiddler(place);
                if (tid) tid=tid.getAttribute(&quot;tiddler&quot;)
                else tid=&quot;SiteSlices&quot;; // fallback for 'non-tiddler' areas (e.g, header, sidebar, etc.)
            }
            var val=store.getTiddlerSlice(tid,slice);  // get tiddler slice value
        }
        if (val==undefined) {// not a slice, or slice not found, maybe a field reference?
            var parts=p.split(&quot;@&quot;);
            var field=parts[0];
            if (!field || !field.length) field=&quot;checked&quot;; // missing fieldname, fallback: checked@tiddlername
            var tid=parts[1];
            if (!tid || !tid.length || tid==&quot;here&quot;) { // no target (or &quot;here&quot;), use containing tiddler
                tid=story.findContainingTiddler(place);
                if (tid) tid=tid.getAttribute(&quot;tiddler&quot;)
                else tid=&quot;SiteFields&quot;; // fallback for 'non-tiddler' areas (e.g, header, sidebar, etc.)
            }
            var val=store.getValue(tid,field);
        }
        // not a slice or field, or slice/field not found... return value unchanged
        return val===undefined?p:val;
    }
}
//}}}
//{{{
// define alternative macroName for triggering pre-rendering call to eval()
config.macros.wikiCalc=config.macros.wikify;
//}}}</pre>
</div>
<div title="WikifyPluginInfo" modifier="ELSDesignStudios" created="200706230458" modified="201103071455" tags="howto excludeLists">
<pre>/***
|Name|WikifyPlugin|
|Source|http://www.TiddlyTools.com/#WikifyPlugin|
|Documentation|http://www.TiddlyTools.com/#WikifyPluginInfo|
|Version|1.2.0|
|Author|Eric Shulman|
|License|http://www.TiddlyTools.com/#LegalStatements|
|~CoreVersion|2.1|
|Type|documentation|
|Description|documentation for WikifyPlugin|
The {{{&lt;&lt;wikify&gt;&gt;}}} macro retrieves values from tiddler slices, sections, or fields and then inserts those values into wiki-formatted output.  The {{{&lt;&lt;wikiCalc&gt;&gt;}}} macro performs the same processing as {{{&lt;&lt;wikify&gt;&gt;}}} and, in addition, passes the assembled text content through javascript's {{{eval()}}} function before rendering the results.  This allows you to, for example, construct and compute mathematical expressions that use input values extracted from tiddler fields or slices.
!!!!!Usage
&lt;&lt;&lt;
{{{
&lt;&lt;wikify &quot;format&quot; value value value value ...&gt;&gt;
&lt;&lt;wikiCalc &quot;format&quot; value value value value ...&gt;&gt;
}}}
* ''format'' specifies the output format of the wiki-syntax content (or javascript expression, if using {{{&lt;&lt;wikiCalc&gt;&gt;}}}).  Use //substitution markers// &quot;%0&quot; through &quot;%9&quot; to insert each value parameter into the formatted content, replacing its corresponding marker.  If the ''format'' is blank (or does //not// contain any substitution markers), then all values are simply joined together (with spaces) for output.  If {{{&lt;&lt;wikiCalc&gt;&gt;}}} is used, the formatted output is evaluated as a javascript expression before rendering.
* ''value'' parameters (space-separated), specified using any of:
** slices:&lt;br&gt;''::slicename'' or ''tiddlername::slicename'' or ''here::slicename''
** sections:&lt;br&gt;''##sectionname'' or ''tiddlername##sectionname'' or ''here##sectionname''
** fields:&lt;br&gt;''fieldname'' or ''fieldname@tiddlername'' or ''fieldname@here''
** evaluated javascript:&lt;br&gt;''&quot;&quot;&quot;{{...}}&quot;&quot;&quot;''
** literal text:&lt;br&gt;''&quot;...&quot;''
Note: if a slice/section/field reference omits the tiddlername (or uses the special keyword, ''here''), the current tiddler is implied.
&lt;&lt;&lt;
!!!!!Examples
&lt;&lt;&lt;
{{{
&lt;&lt;wikify [[This tiddler is: %0 using %1 bytes (last author: %2)]] title {{tiddler.text.length}} modifier&gt;&gt;
&lt;&lt;wikify [[The source URL for this plugin is: %0]] 'here::Source'&gt;&gt;
&lt;&lt;wikify [[The tiddler has been changed %0 times]] changecount@here&gt;&gt;
&lt;&lt;wikify [[The Primary Mid color is: @@background:%0;%0@@]] 'ColorPalette::PrimaryMid'&gt;&gt;
&lt;&lt;wikify [[This current user is: %0]] {{config.options.txtUserName}}&gt;&gt;
}}}
&lt;&lt;wikify [[This tiddler is: %0 using %1 bytes (last author: %2)]] title {{tiddler.text.length}} modifier&gt;&gt;
&lt;&lt;wikify [[The source URL for this plugin is: %0]] 'here::Source'&gt;&gt;
&lt;&lt;wikify [[The tiddler has been changed %0 times]] changecount@here&gt;&gt;
&lt;&lt;wikify [[The Primary Mid color is: @@background:%0;%0@@]] 'ColorPalette::PrimaryMid'&gt;&gt;
&lt;&lt;wikify [[This current user is: %0]] {{config.options.txtUserName}}&gt;&gt;
&lt;&lt;&lt;
!!!!!Revisions
&lt;&lt;&lt;
2011.03.07 1.2.0 added handling in getFieldReference() for retrieving section values and eliminated ~SiteSlices, ~SiteFields and 'checked' (fieldname) fallbacks.
2009.03.29 1.1.4 in handler(), pass 'tiddler' value to wikify() to fix macro errors in rendered content
2009.03.26 1.1.3 unescape output before wikify so that \n can be used in formatting string
2008.11.16 1.1.2 in getFieldReference(), if not a field/slice reference (or field/slice is not found), return string input unchanged instead of returning a blank string.
2008.03.08 1.1.1 size reduction: documentation moved to [[WikifyPluginInfo]]
2008.03.07 1.1.0 added {{{&lt;&lt;wikicalc&gt;&gt;}}} variant for evaluating assembled output as javascript before rendering the result
2007.11.11 1.0.1 in handler(), fixed problem where a trailing space was created when no substitution markers were present in the format param.
2007.06.22 1.0.0 initial release
&lt;&lt;&lt;</pre>
</div>
<div title="WindowTitle" modifier="SDM" created="201012062142" modified="201211211958" tags="template excludeLists" book_key="">
<pre>&lt;&lt;tiddler SiteTitle&gt;&gt;</pre>
</div>
<div title="WindowTitle shadows" creator="matt" modifier="matt" created="201102111440" modified="201102151515" tags="shadow">
<pre>In this tiddler you put the text you wish to be displayed as the title of the page in the browser.
By default it is set to:
{{{
&lt;&lt;tiddler SiteTitle&gt;&gt; - &lt;&lt;tiddler SiteSubtitle&gt;&gt;
}}}
which could display something like:
{{{
shadowtiddlers - a tiddlywiki
}}}

You can change this at any time. For example:
{{{
Shadow Tiddlers Documentation | TiddlyWiki.com
}}}</pre>
</div>
<div title="Wine" modifier="SDM" created="201004120330" modified="201211200334" book_key="">
<pre>!!! First references:
# &lt;&lt;Bbl Gn 14:18 &gt;&gt; -- //Then Melchizedek king of Salem brought out bread and wine.//
# &lt;&lt;Bbl Gn 9:21 &gt;&gt; -- //... he became drunk and lay uncovered ...//
# &lt;&lt;Bbl Gn 19:33 &gt;&gt; -- //... they got their father to drink wine, and the older daughter went in ...//
# &lt;&lt;Bbl Gn 27:25 &gt;&gt;-11; &lt;&lt;Bbl Num 6:3 &gt;&gt;-4 ; &lt;&lt;Bbl Ps 104:15 &gt;&gt;; &lt;&lt;Bbl Pr 31:4 &gt;&gt;-7  (note parallel with &lt;&lt;Bbl Eph 5:18 &gt;&gt;); &lt;&lt;Bbl Is 25:6 &gt;&gt;.
* &lt;&lt;Bbl Jn 2:1 &gt;&gt;-11 -- At His opening, Jesus gave the world wine; at His closing, the world gave him vinegar (Tony Edridge).
* &lt;&lt;Bbl Amos 9:13 &gt;&gt; //sweet wine will drip from the mountains//
* Wine delights the righteous and snares the intemperate.
* If &quot;new wine&quot; means unfermented, why &lt;&lt;Bbl Jud 9:13 &gt;&gt;?
* I am told //Gethsemane// means wine press.  &lt;&lt;Bbl Mt 26:36 &quot;&quot; note &gt;&gt;
* [[Cup]], [[Drunkenness]]
!!! Filled with the Spirit, not with wine
* 1Sam 1:15
* Eph 5:18
* Luke 1:15
* Acts 2:4,13</pre>
</div>
<div title="Wisdom" modifier="SDM" created="201004120330" modified="201302121404" book_key="">
<pre>* [[Guidance]], //Understanding.//
* [[Counsel]] provides wisdom; wisdom solicits counsel.
* The Queen of Sheba is won to righteousness (so Jesus attests) by Solomon's wisdom -- she being wise herself.
* &lt;&lt;Bbl Dt 4:5 &gt;&gt;-6 ; &lt;&lt;Bbl Pr 9:10 &gt;&gt;, &lt;&lt;Bbl Pr 21:30 &gt;&gt;, &lt;&lt;Bbl Pr 25:2 &gt;&gt;, &lt;&lt;Bbl Pr 28:5 &gt;&gt;; &lt;&lt;Bbl Mt 11:25 &gt;&gt;; &lt;&lt;Bbl Jn 15:15 &gt;&gt;; &lt;&lt;Bbl Jms 3:13 &gt;&gt;-18 .
* of the world:  &lt;&lt;Bbl Pr 14:12 &gt;&gt;; &lt;&lt;Bbl Jer 8:9 &gt;&gt;; &lt;&lt;Bbl Lk 9:45 &gt;&gt;, &lt;&lt;Bbl Lk 10:21 &gt;&gt;; &lt;&lt;Bbl 1Cor 1:18 &gt;&gt;-29 , &lt;&lt;Bbl 1Cor 3:18 &gt;&gt;-20 ; &lt;&lt;Bbl Jms 3:15 &gt;&gt;
* of &lt;&lt;Bbl Pr 1:2 &gt;&gt;:  Wisdom is the key word of Proverbs.  The Hebrew word is ['xokma] and Bruce * Waltke gives it the following meanings:
## Skill.  Used for coping survival.  22:17-19; 30:24-28
## Technical skill, used of tailors, carpenters, metallurgists.  &lt;&lt;Bbl Ex 28:3 &gt;&gt;; &lt;&lt;Bbl Ex 35:1 &gt;&gt;; &lt;&lt;Bbl Ex 36:1 &gt;&gt;.
## Judicial and administrative skill.  &lt;&lt;Bbl Dt 1:15 &gt;&gt;, Solomon's prayer, &lt;&lt;Bbl Is 11:2 &gt;&gt;.
* @@color:brown;When a man is getting better, he understands more and more clearly the evil that is still left in him. When a man is getting worse, he understands his own badness less and less. A moderately bad man knows he is not very good: a thoroughly bad man thinks he is all right. This is common sense, really. You understand sleep when you are awake, not while you are sleeping. You can see mistakes in arithmetic when your mind is working properly: while you are making them you cannot see them. You can understand the nature of drunkenness when you are sober, not when you are drunk. Good people know about both good and evil: bad people do not know about either.@@ // -- C.S. Lewis //</pre>
</div>
<div title="Witness" modifier="SDM" created="201004120330" modified="201211181851" book_key="">
<pre>* Solomon showed the [[Treasure]]s to the Queen of Sheba.  Hezekiah showed the treasures too.  But Sheba gave glory to God -- so wonderfully that Jesus calls on her as a witness against //this generation.//.  Hezekiah's guests were merely dazzled, and Hezekiah incurred a terrifying rebuke from the Lord.
* //Do not cast your pearls out to swine//
* 1Kng 8:42-43; &lt;&lt;Bbl Ps 69:6 &gt;&gt;,&lt;&lt;Bbl Ps 89:13 &gt;&gt;; &lt;&lt;Bbl Is 30:8 &gt;&gt;, &lt;&lt;Bbl Is 41:17 &gt;&gt;-20 , &lt;&lt;Bbl Is 43:10 &gt;&gt;-12 ; &lt;&lt;Bbl Jer 22:9 &gt;&gt;; &lt;&lt;Bbl 1Pt 2:12 &gt;&gt;-15 ; &lt;&lt;Bbl Ez 33:7 &gt;&gt;-9 ; &lt;&lt;Bbl Eph 6:12 &gt;&gt;; &lt;&lt;Bbl Pr 13:7 &gt;&gt;; &lt;&lt;Bbl Jn 5:31 &gt;&gt;-47 ; &lt;&lt;Bbl Jn 18:37 &gt;&gt;; &lt;&lt;Bbl Jms 4:19 &gt;&gt;-20
* Andrew:         &lt;&lt;Bbl Jn 1:14 &gt;&gt;, &lt;&lt;Bbl Jn 12:22 &gt;&gt;
* door to door:   &lt;&lt;Bbl Acts 5:42 &gt;&gt;; &lt;&lt;Bbl Acts 20:20 &gt;&gt;1
!! Legal
* testimony of 2 or 3:  &lt;&lt;Bbl Num 35:30 &gt;&gt;; &lt;&lt;Bbl Dt 17:6 &gt;&gt;; &lt;&lt;Bbl Dt 19:15 &gt;&gt;; &lt;&lt;Bbl 1Tim 5:19 &gt;&gt;</pre>
</div>
<div title="Word" modifier="SDM" created="201004120330" modified="201004150402">
<pre>not to change the written word, &lt;&lt;Bbl Dt 4:2 &gt;&gt;; &lt;&lt;Bbl Pr 30:6 &gt;&gt;; &lt;&lt;Bbl Rev 22:18 &gt;&gt;-19 .
&lt;&lt;Bbl Jer 23:29 abbr &gt;&gt;, &lt;&lt;Bbl Is 40:8 &gt;&gt;, &lt;&lt;Bbl Is 66:10 &gt;&gt;; &lt;&lt;Bbl Pr 13:13 &gt;&gt;; Zch 1:4-6; &lt;&lt;Bbl Mt 22:24 &gt;&gt;; &lt;&lt;Bbl Rom 15:4 &gt;&gt;; &lt;&lt;Bbl Col 1:25 &gt;&gt;-26 ; &lt;&lt;Bbl 2Tim 3:15 &gt;&gt;-17 .
The Word of God in Seven Editions (Thompson Chain Ref. Bible):
1.  written on nature           &lt;&lt;Bbl Ps 19:1 &gt;&gt;.  written on the natural conscience   &lt;&lt;Bbl Rom 2:15 &gt;&gt;.  written on tablets of stone     &lt;&lt;Bbl Ex 24:12 &gt;&gt;. the Scriptures          &lt;&lt;Bbl Rom 15:4 &gt;&gt;.  Christ, the Word made flesh, &quot;Illustrated Edition&quot;            &lt;&lt;Bbl Jn 1:14 &gt;&gt;.  written on the heart            &lt;&lt;Bbl Heb 8:10 &gt;&gt;.  outward Christian life (living epistles)            &lt;&lt;Bbl 2Cor 3:2 &gt;&gt;-3 </pre>
</div>
<div title="Workaholics" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Ps 127:2 &gt;&gt;</pre>
</div>
<div title="Working" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Act 20:35 &gt;&gt;; &lt;&lt;Bbl Eph 4:28 &gt;&gt;; &lt;&lt;Bbl 1Tim 5:8 &gt;&gt;; &lt;&lt;Bbl 2The 3:7 &gt;&gt;-14 </pre>
</div>
<div title="Works" modifier="SDM" created="201004120330" modified="201305051922" book_key="" changecount="1">
<pre> &lt;&lt;Bbl Jn 6:28 &gt;&gt;-29 note the sing. and plu. forms of the word
!!! True, good:
* &lt;&lt;Bbl Ps 90:17 &gt;&gt;; &lt;&lt;Bbl Heb 6:10 &gt;&gt;
* [[Faith]]
!!! Dead:
* &lt;&lt;Bbl Gn 3:7 &gt;&gt;, &lt;&lt;Bbl Gn 4:4 &gt;&gt;
* &lt;&lt;Bbl Ex 5:4&gt;&gt; Assigned by the enemy.  
* &lt;&lt;Bbl Is 1:31 &gt;&gt;, &lt;&lt;Bbl Is 26:12 &gt;&gt;, &lt;&lt;Bbl Is 57:12 &gt;&gt;, &lt;&lt;Bbl Is 59:6 &gt;&gt;, &lt;&lt;Bbl Is 64:6 &gt;&gt;
* &lt;&lt;Bbl Ez 3:20 &gt;&gt;
* &lt;&lt;Bbl Rom 3:19 &gt;&gt; - 4.6
* &lt;&lt;Bbl Heb 4:9 &gt;&gt;-10 ; &lt;&lt;Bbl Heb 6:1 &gt;&gt;; &lt;&lt;Bbl Heb 9:14 &gt;&gt;</pre>
</div>
<div title="World" modifier="SDM" created="201004120330" modified="201010252059">
<pre>Do not love it.  &lt;&lt;Bbl Est 3:8 &gt;&gt;; &lt;&lt;Bbl Jn 3:19 &gt;&gt;, &lt;&lt;Bbl Jn 7:7 &gt;&gt;, &lt;&lt;Bbl Jn 15:18 &gt;&gt;-19 , &lt;&lt;Bbl Jn 17:14 &gt;&gt;-16 ; &lt;&lt;Bbl 1Jn 5:19 &gt;&gt;
hates Christ and Christians:    &lt;&lt;Bbl Jn 18:23 &gt;&gt;, &lt;&lt;Bbl 1Jn 3:12 &gt;&gt;-13 , &lt;&lt;Bbl 1Jn 4:5 &gt;&gt;
elementary principles of:   &lt;&lt;Bbl Col 2:8 &gt;&gt;
sinful imitation of:            &lt;&lt;Bbl 1Sam 8:19 &gt;&gt;-20
passing away:               &lt;&lt;Bbl 1Cor 7:31 &gt;&gt;</pre>
</div>
<div title="World English Bible" modifier="SDM" created="201004201400" modified="201212150236" tags="wiki resource wiki-link" book_key="">
<pre>* Find it on-line at [[World English Bible|http://ebible.org/web/]]
* Find it locally [[here|./Bbl/web.htm]].  This is the no-frames page, and I think it isn't very nice looking; so I intend to [[change the CSS|Wiki-ToDo]].
* This Bible wiki will let you reference the entire Bible, stored as local HTML files.
* Link: {{{ [[16:8-11|./Bbl/John.htm#C16V8]] }}} yields [[16:8-11|./Bbl/John.htm#C16V8]]</pre>
</div>
<div title="Worship" modifier="SDM" created="201201061509" modified="201208021839" book_key="">
<pre>* [[Praise]]
* @@color:darkgreen;Worship is the submission of all of our nature to God. It is the quickening of conscience by His holiness, nourishment of mind by His truth, purifying of imagination by His beauty, opening of the heart to His love, and submission of will to His purpose. And all this gathered up in adoration is the greatest of human expressions of which we are capable.@@ //William Temple, Archbishop of Canterbury//
* Hallelujah is a call for others to praise: &quot;Praise the Lord!&quot;.  D. Gifford points out it is a great one-word summary of the evangelistic message, by which we call the world to worship God.
* [[Scott Wiki#WorshipMusic|./scott_wiki.htm#WorshipMusic]]</pre>
</div>
<div title="Wrath" modifier="SDM" created="201010252102">
<pre>* The opposite would not be love, but indifference.
* @@color:brown;If it is felt that the word 'wrath' is scarcely suitable to be used in relation to God, it is probably because wrath as we know it in human life so constantly involves sinful, self-regarding passion.  Not so with God:  his 'wrath' is the response of his holiness to wickedness and rebellion@@  // -- F.F. Bruce, Romans, p. 79//
* Geno observes that while God's grace sets up before us roadblocks to sin, His wrath removes them.
* &lt;&lt;Bbl Ez 16:42 &gt;&gt;; &lt;&lt;Bbl Jn 3:36 &gt;&gt;.
* [[Cup]] as symbol.</pre>
</div>
<div title="WritingStyle" creator="psd" modifier="blaine" created="201102111107" modified="201102111310" tags="concepts">
<pre>I'm hoping that after using TiddlyWiki for a while a new WritingStyle will emerge that is appropriate for this medium.				Jakob Neilsen wrote an article about [[writing styles|http://www.useit.com/alertbox/980906.html]] for MicroContent back in 1998 that still seems surprisingly relevant.</pre>
</div>
<div title="XCaseListPlugin" modifier="SDM" created="201211112310" modified="201211121421" tags="systemConfig excludeLists" book_key="">
<pre>/***
|''Name:''|XCaseListPlugin|
|''Description:''|Adds a new command ''xCase'' to the core list macro|
|''Author:''|Mario Pietsch|
|''Version:''|0.3|
|''Date:''|2010.08.03|
|''Status:''|''beta''|
|''Source:''|http://apm-plugins.tiddlyspot.com/#XCaseListPlugin|
|''License''|[[MIT License]]|
|''CoreVersion:''|2.5.0|
|''Requires:''||
|''Documentation:''|this file|
|''Keywords:''|list, sort, not case sensitive, filter|

!Description
This plugin performs a alphabetical sort for tiddlers. Default it is not case sensitive. That means ab = AB = aB = Ab! And it does some little more filtering using the RegExp syntax. The RegExp Syntax can be a little bit tricky to read and configure. But the best description I have found is at [[regular-expressions.info]]

!!!Example
{{{
&lt;&lt;list xCase title '[m]'&gt;&gt;
}}}
&lt; &lt;list xCase title '[m]'&gt;&gt;

!Default Format
{{{
&lt;&lt;list xCase&gt;&gt;
}}}

!More Possibilities
&lt;&lt;&lt;
!!!Reverse sort order
{{{
&lt;&lt;list xCase -title &gt;&gt;
}}}

!!!Some basic filtering
*Every tiddler title, that starts with a number from 0 to 9.
{{{
&lt;&lt;list xCase title '[0-9]'&gt;&gt;
}}}

*Every tiddler title, that starts with an ''&quot;a&quot;'' or ''&quot;b&quot;'' or ''&quot;c&quot;''.
{{{
&lt;&lt;list xCase title '[abc]'&gt;&gt;
}}}

*Every tiddler title, that starts with exactly ''abc''.
{{{
&lt;&lt;list xCase title 'abc'&gt;&gt;
}}}
&lt;&lt;&lt;

!!!Some advanced filtering
&lt;&lt;&lt;
*same as above but with a tagList for additional filtering.
*adding the tag filter will disable the &quot;excludeLists&quot; setting !!
**If you need excludeLists, than you have to define it with the expression.
*XCaseListPlugin should be compatible to [[MatchTagsPlugin]] from TiddlyTools!

{{{
&lt;&lt;list xCase title '[a]' &quot;[tag[MyTag]]&quot;&gt;&gt;
}}}

!!!Global / Local Settings
|&lt;&lt;option chkXCaseListCaseSensitive&gt;&gt; Global sort case sensitive |Sets case sensitiv sort globally|
|&lt;&lt;option chkXCaseListCheckField&gt;&gt; Sortfield defines case sensitive |Ignores global setting. Evaluates sortField and sets the value everytime &lt;br&gt; {{{&lt;&lt;list xCase sortField ..&gt;&gt;}}} is executed.|

If sortField is eg: 'title' .. not case sensitive (default).
if sortField is eg: 'Title' or 'TITLE' .. case sesitive sort is active.

&lt;&lt;&lt;

!Code
***/

/*{{{*/

if(!version.extensions.XCaseListPlugin) { //# ensure that the plugin is only installed once
version.extensions.XCaseListPlugin = { installed: true };

config.macros.list.xCase = {};
config.macros.list.xCase.handler = function(params){

    var lookupField = 'tags';
    var lookupValue = 'excludeLists';
    var lookupMatch = false;

    var sortField = params[1] || '+title';

    // global setting for case sensitive search
    var caseSensitive = config.options.chkXCaseListCaseSensitive || false;
    var chkSortField = config.options.chkXCaseListCheckField || false;

    // if this option is active the macro parameter sortField is parsed
    // global setting is ignored !!
    if (chkSortField) caseSensitive = (sortField != sortField.toLowerCase());
    sortField = sortField.toLowerCase();

    // check if numberedText called this macro.
    // this parameter is used by &lt;&lt;list numberedText ..&gt;&gt; macro
    // if you directly use it, it will return an unsorted list !!!
    var numberedText = false;
    if (sortField.substr(0, 1)== '#') {
        numberedText = true;
        sortField = sortField.substr(1);
        caseSensitive = false;
    }

    // check for ascending or descending sort order
    var asc = 1;
    switch (sortField.substr(0, 1)) {
        case &quot;-&quot;:
            asc = -1;
        case &quot;+&quot;:
            sortField = sortField.substr(1);
            break;
        default:    ;
    }

    var results = [];
    var tmpResults = [];

    // set the default for regExp filtering
    var regSnip = params[2] || '.';
    var regExp = new RegExp('^' + regSnip, 'im');
    var match = null;

    // check if [tag[...]] is set
    var tagList = params[3] || '';
    var tagMatch = tagList.length != 0;     // if list is empty everything is valid.

    if (tagMatch) {
        tmpResults = store.filterTiddlers(params[3]);
        for (var i=0, max=tmpResults.length; i&lt;max; i++){
//          match = tmpResults[i][sortField].match(regExp);
            match = tmpResults[i].title.match(regExp);
            if (match) results.push(tmpResults[i]);
        }; // for ..
    }
    else {
        store.forEachTiddler(function(title, tiddler){
            var f = !lookupMatch;
            for (var lookup = 0; lookup &lt; tiddler[lookupField].length; lookup++) {
                if (tiddler[lookupField][lookup] == lookupValue) {
                    f = lookupMatch;
                }
            }; // for..
            if (f) {
//              match = tiddler[sortField].match(regExp);
                match = tiddler.title.match(regExp);
                if (match) results.push(tiddler);
            }; // if (f) ..
        }); // store.forEach ..
    }; // else ..

    if (TiddlyWiki.isStandardField(sortField)) {

        if (caseSensitive) {
            results.sort(function(a, b){
                return a[sortField] &lt; b[sortField] ? -asc : a[sortField] == b[sortField] ? 0 : asc;
            }); // results.sort
        }
        else if (numberedText) {
            // do nothing, return the list, for further processing !
        }
        else {
            results.sort(function(a, b){
                return a[sortField].toLowerCase() &lt; b[sortField].toLowerCase() ? -asc : a[sortField].toLowerCase() == b[sortField].toLowerCase() ? 0 : asc;
            }); // results.sort
        }; // if
    }
    else {
        results.sort(function (a, b) {
            var aField = (a.fields[sortField]) ? a.fields[sortField] : 'zzz';
            var bField = (b.fields[sortField]) ? b.fields[sortField] : 'zzz';

            return aField.toLowerCase() &lt; bField.toLowerCase() ? -asc : aField.toLowerCase() == bField.toLowerCase() ? 0 : +asc;
            });
    }
    return results;
}
} //# end of &quot;install only once&quot;

/*}}}*/</pre>
</div>
<div title="Youth" modifier="SDM" created="201004120330">
<pre>&lt;&lt;Bbl Jer 1:6 &gt;&gt;-7 ; &lt;&lt;Bbl Lam 3:27 &gt;&gt;; &lt;&lt;Bbl 1Tim 4:12 &gt;&gt;</pre>
</div>
<div title="Zeal" modifier="SDM" created="201010270140" modified="201211250633" book_key="">
<pre>Zeal, false
&lt;&lt;Bbl Mt 23:15 &gt;&gt;.   @@color:indigo;Fanaticism is when you redouble your efforts and forget your goal.@@ // -- George Santayana//</pre>
</div>
<div title="allTags macro" creator="colmbritton" modifier="colmbritton" created="201102111439" modified="201102111446" tags="macro">
<pre>At it's most basic this macro lists all the tags used in you tiddlywiki as dropdown lists of all the tiddlers which have that tag
For example
{{{
&lt;&lt;allTags&gt;&gt;
}}}

Displays as:
&lt;&lt;allTags&gt;&gt;</pre>
</div>
<div title="anotherTiddlerToTransclude" creator="jermolene" modifier="jermolene" created="201102281439" modified="201102281439">
<pre>Hello $1, welcome to $2</pre>
</div>
<div title="closeAll macro" creator="colmbritton" modifier="colmbritton" created="201102111439" modified="201102111446" tags="macro">
<pre>To close all open tiddlers:
{{{
&lt;&lt;closeAll&gt;&gt;
}}}
Displays as:

&lt;&lt;closeAll&gt;&gt;</pre>
</div>
<div title="cookieJar" creator="SDM" modifier="ELSDesignStudios" created="200903121822" tags="systemConfig excludeLists">
<pre>//{{{
readOnly=false; // TW core setting
config.options.chkInsertTabs=true; // TW core option
config.options.txtMaxEditRows=&quot;20&quot;; // TW core option
config.options.chkShowLeftSidebar=true; // ToggleLeftSidebar
config.options.chkShowRightSidebar=true; // ToggleRightSidebar
config.options.chkSliderunsaved=true; // UnsavedChangesPlugin
config.options.chkStoryFold=false; // StorySaverPlugin
//}}}</pre>
</div>
<div title="example" creator="psd" modifier="blaine" created="201102111107" modified="201102111310">
<pre>You just clicked on an example link, which was created by putting the word 'example' in double square brackets. You can now close this tiddler by clicking on the 'close' link above, and return to the guidelines.</pre>
</div>
<div title="favicon.ico" creator="jon" modifier="jon" created="201102111115" modified="201102111115" type="image/x-icon">
<pre>AAABAAEAEBAAAAAAGABoAwAAFgAAACgAAAAQAAAAIAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD////////////////////////////////////////////////a2tra2tra2tra2tr///////////+fn5+fn5+fn5+fn5+fn5+fn5/////////////a2tra2tra2tra2tr////MzMz////////////////////////////////////////a2tra2tra2tra2tr///////////+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5/////a2tra2tra2tra2tr////MzMz////////////////////////////////////////a2tra2tra2tra2tr///////////+fn5+fn5+fn5+fn5/////////////////////a2tra2tra2tra2tr////MzMz///+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5/////a2tra2tra2tra2tr///////////+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5/////////////////////////MzMz////////////////////////////////////////a2tra2tra2tra2tr///////////+fn5+fn5+fn5+fn5+fn5+fn5+fn5/////////////////////////////MzMz///+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5/////a2tra2tra2tra2tr////////////////////////////////////////////////////////////////ETQPETQPETQPETQPETQPETQPETQPETQPETQPETQPETQPETQPETQPETQPETQPETQPVXgfVXgfVXgfVXgfVXgfVXgfVXgfVXgfVXgfVXgfVXgfVXgfVXgfVXgfVXgfVXgfmbwvmbwvmbwvmbwvmbwvmbwvmbwvmbwvmbwvmbwvmbwvmbwvmbwvmbwvmbwvmbwv2fw/2fw/2fw/2fw/2fw/2fw/2fw/2fw/2fw/2fw/2fw/2fw/2fw/2fw/2fw/2fw8AAOLpAADg6QAAf18AAP//AAD//wAA//8AAP//AAD//wAAAIAAAP//AAD/fwAA//8AAACAAAD//wAA//8AAOHp</pre>
</div>
<div title="iPhone" creator="blaine" modifier="blaine" created="201102111259" modified="201102111310">
<pre>Community member ~BidiX has created an adaptation of the ~TiddlyWiki user interface [[specially for the iPhone|http://www.apple.com/webapps/productivity/itwatiddlywikiforiphone.html]]</pre>
</div>
<div title="list macro" creator="colmbritton" modifier="jermolene" created="201102111439" modified="201112141644" tags="macro">
<pre>The {{{&lt;&lt;list&gt;&gt;}}} macro creates a list of tiddlers of a given type. It takes the following parameters:

{{{
&lt;&lt;list {type} [template:&lt;templateTiddlerName&gt;] [emptyMessage:&quot;&lt;message for when the list is empty&gt;&quot;]&gt;&gt;
}}}

The template tiddlers allows you to customise the text that is displayed about each tiddler. If it is not provided, then the default of &quot;{{{&lt;&lt;view title link&gt;&gt;}}}&quot; is used, which just includes the title of the tiddler as a link. You could add the author to each entry in the list by setting the template to a tiddler with the text &quot;{{{&lt;&lt;view title link&gt;&gt; by &lt;&lt;view modified link&gt;&gt;}}}&quot;.

The empty message parameter allows you to specify text to be displayed if the list of tiddlers is empty.

The following types are supported:

!all
To list all tiddlers
{{{
&lt;&lt;list all&gt;&gt;
}}}
!filter
List tiddlers that match a certain [[filter|filters syntax]]. The following example lists all plugins.
{{{
&lt;&lt;list filter [tag[systemConfig]]&gt;&gt;
}}}
!Missing
To list tiddlers that have links to them but are not defined:
{{{
&lt;&lt;list missing&gt;&gt;
}}}
!Orphans
To list tiddlers that are not linked to from any other tiddlers:
{{{
&lt;&lt;list orphans&gt;&gt;
}}}
!Shadowed
To list tiddlers shadowed with default contents:
{{{
&lt;&lt;list shadowed&gt;&gt;
}}}
!Touched
Show tiddlers that have been modified locally:
{{{
&lt;&lt;list touched&gt;&gt;
}}}</pre>
</div>
<div title="luakit" creator="jermolene" modifier="jermolene" created="201203071602" modified="201203071602">
<pre>[[luakit|http://luakit.org/]] is a powerful customizable web browser for Linux. In their own words:
&lt;&lt;&lt;
Luakit is a highly configurable, micro-browser framework based on the WebKit web content engine and the GTK+ toolkit. It is very fast, extensible by Lua and licensed under the GNU GPLv3 license.

It is primarily targeted at power users, developers and any people with too much time on their hands who want to have fine-grained control over their web browsers behaviour and interface.
&lt;&lt;&lt;
'perlguy' has written up his customizations to get TiddlyWiki working: https://github.com/perlguy/luakit-tiddlywiki
</pre>
</div>
<div title="newJournal macro" creator="colmbritton" modifier="colmbritton" created="201102111439" modified="201102111446" tags="macro">
<pre>To create a new tiddler from the current date and time:
{{{
&lt;&lt;newJournal&gt;&gt;
}}}
Displays as:

&lt;&lt;newJournal&gt;&gt;</pre>
</div>
<div title="newTiddler macro" creator="colmbritton" modifier="colmbritton" created="201102111439" modified="201102111446" tags="macro">
<pre>Using the following you get a new tiddler button:
{{{
&lt;&lt;newTiddler&gt;&gt;
}}}
Displays as:

&lt;&lt;newTiddler&gt;&gt;

Certain attributes can also be attached, such as a label, default text, tags and fields:
{{{
&lt;&lt;newTiddler label:WikiWord text:&quot;text&quot; tag:tag tag:tag accessKey:key focus:field&gt;&gt;
}}}
Displays as:

&lt;&lt;newTiddler label:WikiWord text:&quot;text&quot; tag:tag tag:tag accessKey:key focus:field&gt;&gt;</pre>
</div>
<div title="options macro" creator="colmbritton" modifier="jermolene" created="201102211421" modified="201111031822" tags="macro">
<pre>The options macro, used predominately in the backstage, allows the user to set a number of cookie based options that affect the enabled features of the Tiddlywiki.  These settings can be trivial, such as do you want animations enabled, or can be used for more complex things, such as enable regular expressions searches.
It is used as below:
{{{
&lt;&lt;options&gt;&gt;
}}}

Options can be used by plugin developers to add settings that can be used by their plugin.

Displays as:
&lt;&lt;options&gt;&gt;</pre>
</div>
<div title="permaview macro" creator="colmbritton" modifier="colmbritton" created="201102111439" modified="201102111446" tags="macro">
<pre>To create a permaview URL for all open tiddlers:
{{{
&lt;&lt;permaview&gt;&gt;
}}}
Displays as:

&lt;&lt;permaview&gt;&gt;</pre>
</div>
<div title="saveChanges macro" creator="colmbritton" modifier="colmbritton" created="201102111439" modified="201102111446" tags="macro">
<pre>Using the following creates a save changes button
{{{
&lt;&lt;saveChanges&gt;&gt;
}}}

Displays as:

&lt;&lt;saveChanges&gt;&gt;

The button label can also be changed and a tooltip added:
{{{
&lt;&lt;saveChanges [label] [tip]&gt;&gt;
}}}
Displays as:

&lt;&lt;saveChanges [label] [tip]&gt;&gt;</pre>
</div>
<div title="search macro" creator="colmbritton" modifier="colmbritton" created="201102111439" modified="201102111446" tags="macro">
<pre>Search fields can be created using:
{{{
&lt;&lt;search&gt;&gt;
}}}
Displays as:

&lt;&lt;search&gt;&gt;

A default search term can also be added:
{{{
&lt;&lt;search [term]&gt;&gt;
}}}
Displays as:

&lt;&lt;search [term]&gt;&gt;</pre>
</div>
<div title="slider macro" creator="colmbritton" modifier="colmbritton" created="201102111439" modified="201102111446" tags="macro">
<pre>The slider macro allows embedding tiddlers within another tiddler, with the option to toggle the visibility of the [[transclusion|transcluded]] content:
{{{
&lt;&lt;slider cookie tiddler label tooltip&gt;&gt;
}}}
* {{{cookie}}}: variable to save the state of the slider (e.g. {{{chkFooSlider}}})
* {{{tiddler}}}: name of the tiddler to include in the slider
* {{{label}}}: title text of the slider
* {{{tooltip}}}: tooltip text of the slider

For example:
{{{
&lt;&lt;slider chkTestSlider [[OptionsPanel]] &quot;Options&quot; &quot;Open advanced options&quot;&gt;&gt;
}}}</pre>
</div>
<div title="systemServer" creator="psd" modifier="blaine" created="201102111107" modified="201102111310">
<pre>Tiddlers tagged {{{systemServer}}} wrap up all the connection details of a particular server so that they can be accessed quickly.

A list of available {{{systemServer}}} tiddlers is presented at the start of the ImportTiddlers macro. Selecting one of them pre-selects the relevant fields in the wizard. After a successful import operation, ImportTiddlers also offers the opportunity to automatically create a {{{systemServer}}} tiddler with the details of the server that was used. {{{systemServer}}} tiddlers are also used by the [[syncing]] command.

Here's an example {{{systemServer}}} tiddler:

&lt;&lt;&lt;
|''Description:''|My example server|
|''Type:''|mediawiki|
|''URL:''|http://www.myexampleserver.org/x/|
|''Workspace:''|Main|
|''~TiddlerFilter:''|[tags[important unpluggable]]|
&lt;&lt;&lt;

The fields are as follows:

|!Field |!Description |!Status |
|Description |Brief description of the server |Optional |
|Type |Type of server connection eg {{{file}}} or {{{mediawiki}}} |Optional - defaults to {{{file}}} |
|URL |Host URL of the server |Mandatory |
|Workspace |Name of the workspace |Optional |
|TiddlerFilter |Specifies which tiddlers are to be imported |Optional |</pre>
</div>
<div title="tab1Chron" modifier="SDM" created="201211170217" modified="201211170217" tags="menu excludeLists" book_key="580001a">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''1Chron'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title '1Chron.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '1Chron' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tab1Chron]] }}}
}}} </pre>
</div>
<div title="tab1Kings" modifier="SDM" created="201211170143" modified="201211170208" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''1Kings'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title '1Kings.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '1Kings' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tab1Kings]] }}}
}}} </pre>
</div>
<div title="tab1Sam" modifier="SDM" created="201211170157" modified="201211170206" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''1Sam'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title '1Sam.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '1Sam' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tab1Sam]] }}}
}}} </pre>
</div>
<div title="tab2Chron" modifier="SDM" created="201211170114" modified="201211170217" tags="menu excludeLists" book_key="580001a">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''2Chron'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title '2Chron.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '2Chron' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tab2Chron]] }}}
}}} </pre>
</div>
<div title="tab2Corinthians" modifier="SDM" created="201210290226" modified="201211110254" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''2Corinthians'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title '2Cor.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '2Cor' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tab2Corinthians]] }}}
}}} </pre>
</div>
<div title="tab2Kings" modifier="SDM" created="201211240408" modified="201211250038" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''2Kings'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title '2Kings.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '2Kings' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tab2Kings]] }}}
}}} </pre>
</div>
<div title="tab2Sam" modifier="SDM" created="201211170206" modified="201211170206" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''2Sam'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title '2Sam.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '2Sam' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tab2Sam]] }}}
}}} </pre>
</div>
<div title="tab2Thessalonians" modifier="SDM" created="201210290226" modified="201211110525" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''2Thessalonians'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title '2Thes.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '2Thes' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tab2Thessalonians]] }}}
}}} </pre>
</div>
<div title="tab2Timothy" modifier="SDM" created="201210290226" modified="201211110254" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''2Timothy'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title '2Tim.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '2Tim' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tab2Timothy]] }}}
}}} </pre>
</div>
<div title="tabActs" modifier="SDM" created="201210290225" modified="201211110257" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Acts.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Acts' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabActs]] }}}
}}}

</pre>
</div>
<div title="tabColossians" modifier="SDM" created="201210290226" modified="201211110518" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;
{{medium{ ''Colossians'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Col.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Col' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabColossians]] }}}</pre>
</div>
<div title="tabCorinthians" modifier="SDM" created="201210290226" modified="201211110520" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{threecolumns{
{{medium{ ''1Corinthians'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title '1Cor.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '1Cor' '[tag[Scriptr]]'&gt;&gt;

@@color:brown;''Notes''
&lt;&lt;list noCase title '2Cor.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '2Cor' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabCorinthians]] }}}
}}} </pre>
</div>
<div title="tabEphesians" modifier="SDM" created="201210290226" modified="201211110519" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{twocolumns{
{{medium{ ''Ephesians'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Eph.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Eph' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabEphesians]] }}}
}}} </pre>
</div>
<div title="tabGalatians" modifier="SDM" created="201210290226" modified="201211110519" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{twocolumns{
{{medium{ ''Galatians'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Gal.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Gal' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabGalatians]] }}}
}}} </pre>
</div>
<div title="tabGospels" modifier="SDM" created="201210251959" modified="201212051315" tags="menu excludeLists" book_key="">
<pre>{{ floatright tiny { [[tabGospels]] }}}&lt;&lt;tabs &quot;Gospels&quot;
&quot;John&quot; &quot;John's Gospel&quot; tabJohn
&quot;Mark&quot; &quot;Mark's Gospel&quot; tabMark
&quot;Matthew&quot; &quot;Matthew's Gospel&quot; tabMatthew
&quot;Luke&quot; &quot;Luke's Gospel&quot; tabLuke
&quot;Acts&quot; &quot;Acts&quot; tabActs
&gt;&gt;</pre>
</div>
<div title="tabHistories" modifier="SDM" created="201211042224" modified="201211230024" tags="menu excludeLists" book_key="">
<pre>{{big{ ''The Histories'' }}}{{ floatright tiny { [[tabHistories]] }}}
&lt;&lt;tabs &quot;Joshua&quot;
&quot;Joshua&quot; &quot;&quot; tabJoshua
&quot;Judges&quot; &quot;&quot; tabJudges
&quot;Ruth&quot; &quot;&quot; tabRuth
&quot;1Sam&quot; &quot;&quot; tab1Sam
&quot;2Sam&quot; &quot;&quot; tab2Sam
&quot;1Kings&quot; &quot;&quot; tab1Kings
&quot;2Kings&quot; &quot;&quot; tab2Kings
&quot;1Chron&quot; &quot;&quot; tab1Chron
&quot;2Chron&quot; &quot;&quot; tab2Chron
&quot;Post Exile&quot; &quot;&quot; tabPostExile
&gt;&gt;</pre>
</div>
<div title="tabHistoriesOld" modifier="SDM" created="201211042231" modified="201211170110" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;
{{fourcolumns{
&lt;&lt;list noCase title 'Joshua'&gt;&gt;
&lt;&lt;list noCase title 'Judges'&gt;&gt;
&lt;&lt;list noCase title 'Ruth'&gt;&gt;
&lt;&lt;list noCase title '1Sam'&gt;&gt;
&lt;&lt;list noCase title '2Sam'&gt;&gt;
&lt;&lt;list noCase title '1Kings'&gt;&gt;
&lt;&lt;list noCase title '2Kings'&gt;&gt;
&lt;&lt;list noCase title 'Nehemiah'&gt;&gt;
&lt;&lt;list noCase title 'Esther'&gt;&gt;
{{ floatright tiny { [[tabHistories]] }}}
}}} </pre>
</div>
<div title="tabIsaiah" modifier="SDM" created="201211170157" modified="201211170220" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''Isaiah'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Isaiah.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Isaiah' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabIsaiah]] }}}
}}} </pre>
</div>
<div title="tabJeremiah" modifier="SDM" created="201211170157" modified="201211170225" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''Jeremiah'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Jeremiah.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Jeremiah' '[tag[Scriptr]]'&gt;&gt;
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Lament.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Lament' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabJeremiah]] }}}
}}} </pre>
</div>
<div title="tabJohn" modifier="SDM" created="201210251944" modified="201303041602" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
@@color:brown;
''Notes''
&lt;&lt;list noCase title 'John.*note'&gt;&gt;
@@
''Text''
&lt;&lt;list noCase title 'John' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabJohn]] }}}
}}}
</pre>
</div>
<div title="tabJoshua" modifier="SDM" created="201210290226" modified="201211170114" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''Joshua'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Joshua.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Joshua' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabJoshua]] }}}
}}} </pre>
</div>
<div title="tabJudges" modifier="SDM" created="201211170114" modified="201211170157" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''Judges'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Judges.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Judges' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabJudges]] }}}
}}} </pre>
</div>
<div title="tabLetters" modifier="SDM" created="201210252011" modified="201211220147" tags="menu excludeLists" book_key="">
<pre>{{big{ ''Other letters and the Book of Revelation'' }}}{{ floatright tiny { [[tabLetters]] }}}
@@display:block;height:32em;overflow:auto;
&lt;&lt;tabs &quot;James&quot;
&quot;James&quot; &quot;&quot; [[tabLetters##James]]
&quot;Hebrews&quot; &quot;&quot; [[tabLetters##Hebrews]]
&quot;1/2 Peter&quot; &quot;&quot; [[tabLetters##Peter]]
&quot;1/2/3 John&quot; &quot;&quot; [[tabLetters##John]]
&quot;Jude&quot; &quot;&quot; [[tabLetters##Jude]]
&quot;Revelation&quot; &quot;&quot; [[tabLetters##Revelation]]
&gt;&gt;
{{hidden{
!!! James
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title 'James.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title 'James' '[tag[Scriptr]]'&gt;&gt;
}}}

!!! Hebrews
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title 'Hebrews.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title 'Hebrews' '[tag[Scriptr]]'&gt;&gt;
}}}

!!! Peter
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title '1Peter.*note'&gt;&gt;
&lt;&lt;list noCase title '2Peter.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title '1Peter' '[tag[Scriptr]]'&gt;&gt;
&lt;&lt;list xCase title '2Peter' '[tag[Scriptr]]'&gt;&gt;
}}}

!!! John
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title '1John.*note'&gt;&gt;
&lt;&lt;list noCase title '2John.*note'&gt;&gt;
&lt;&lt;list noCase title '3John.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title '1John' '[tag[Scriptr]]'&gt;&gt;
&lt;&lt;list xCase title '2John' '[tag[Scriptr]]'&gt;&gt;
&lt;&lt;list xCase title '3John' '[tag[Scriptr]]'&gt;&gt;
}}}

!!! Jude
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title 'Jude.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title 'Jude' '[tag[Scriptr]]'&gt;&gt;
}}}

!!! Revelation
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title 'Rev.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title 'Rev' '[tag[Scriptr]]'&gt;&gt;
}}}</pre>
</div>
<div title="tabLuke" modifier="SDM" created="201210290224" modified="201211110257" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Luke.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Luke' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabLuke]] }}}
}}}

</pre>
</div>
<div title="tabMark" modifier="SDM" created="201210290225" modified="201211110257" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Mark.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Mark' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabMark]] }}}
}}}

</pre>
</div>
<div title="tabMatthew" modifier="SDM" created="201210252003" modified="201303041559" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Matthew.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Matthew' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabMatthew]] }}}
}}}

</pre>
</div>
<div title="tabPaul" modifier="SDM" created="201210252013" modified="201211250320" tags="menu excludeLists" book_key="">
<pre>{{ floatright tiny { [[tabPaul]] }}}&lt;&lt;tabs &quot;Romans&quot;
&quot;Romans&quot; &quot;John's Gospel&quot; tabRomans
&quot;Corinth&quot; &quot;Corinthians&quot; tabCorinthians
&quot;Gal&quot; &quot;Galatians&quot; tabGalatians
&quot;Eph&quot; &quot;Ephesians&quot; tabEphesians
&quot;Philip&quot; &quot;Philippians&quot; tabPhilippians
&quot;Col&quot; &quot;Colossians&quot; tabColossians
&quot;Timothy&quot; &quot;Timothy&quot; &quot;tabTimothy&quot;
&quot;Thess&quot; &quot;Thess&quot; &quot;tabThessalonians&quot;
&quot;Philemon, Titus&quot; &quot;Philemon and Titus&quot; tabPhilemon
&gt;&gt;</pre>
</div>
<div title="tabPhilemon" modifier="SDM" created="201210290226" modified="201211250321" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;
{{fourcolumns{
{{medium{ ''Philemon'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Philemon.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Philemon' '[tag[Scriptr]]'&gt;&gt;
{{medium{ ''Titus'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Titus.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Titus' '[tag[Scriptr]]'&gt;&gt;
}}}
{{ floatright tiny { [[tabPhilemon]] }}}</pre>
</div>
<div title="tabPhilippians" modifier="SDM" created="201210290226" modified="201211141349" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{twocolumns{
{{medium{ ''Philippians'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Philip.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Philip' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabPhilippians]] }}}
}}} </pre>
</div>
<div title="tabPoetry" modifier="SDM" created="201211042228" modified="201211220151" tags="menu excludeLists" book_key="">
<pre>{{big{ ''the books of Poetry'' }}}{{ floatright tiny { [[tabPoetry]] }}}
@@display:block;height:32em;overflow:auto;
&lt;&lt;tabs &quot;Psalms&quot;
&quot;Psalms&quot; &quot;&quot; [[tabPoetry##Psalms]]
&quot;Proverbs&quot; &quot;&quot; [[tabPoetry##Proverbs]]
&quot;Eccl&quot; &quot;&quot; [[tabPoetry##Eccl_Song]]
&quot;Job&quot; &quot;&quot; [[tabPoetry##Job]]
&gt;&gt;
{{hidden{
!!! Psalms
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title 'Psalms.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title 'Psalms' '[tag[Scriptr]]'&gt;&gt;
}}}

!!! Proverbs
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title 'Proverbs.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title 'Proverbs' '[tag[Scriptr]]'&gt;&gt;
}}}

!!! Eccl_Song
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title 'Eccl.*note'&gt;&gt;
&lt;&lt;list noCase title 'Song.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title 'Eccl' '[tag[Scriptr]]'&gt;&gt;
&lt;&lt;list xCase title 'Song' '[tag[Scriptr]]'&gt;&gt;
}}}

!!! Job
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title 'Job.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title 'Job' '[tag[Scriptr]]'&gt;&gt;
}}}
</pre>
</div>
<div title="tabPostExile" modifier="SDM" created="201211170143" modified="201211170218" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;
{{fourcolumns{
&lt;&lt;list noCase title 'Ezra'&gt;&gt;
&lt;&lt;list noCase title 'Nehemiah'&gt;&gt;
&lt;&lt;list noCase title 'Esther'&gt;&gt;
{{ floatright tiny { [[tabPostExile]] }}}
}}} </pre>
</div>
<div title="tabProphets" modifier="SDM" created="201211042215" modified="201211170224" tags="menu excludeLists" book_key="">
<pre>{{big{ ''The Prophets'' }}}{{ floatright tiny { [[tabProphets]] }}}
&lt;&lt;tabs &quot;Genesis&quot;
&quot;Isaiah&quot; &quot;&quot; tabIsaiah
&quot;Jeremiah&quot; &quot;&quot; tabJeremiah
&quot;Other&quot; &quot;&quot; tabProphetsOther
&gt;&gt;</pre>
</div>
<div title="tabProphetsOther" modifier="SDM" created="201211170221" modified="201211170222" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''ProphetsOther'' }}}
Here for [[Notes|MinorProphets-note]]
&lt;&lt;list noCase title 'Zech'&gt;&gt;
----
&lt;&lt;list noCase title 'Amos'&gt;&gt;
----
&lt;&lt;list noCase title 'Daniel'&gt;&gt;
----
&lt;&lt;list noCase title 'Obadiah'&gt;&gt;
----
&lt;&lt;list noCase title 'Jonah'&gt;&gt;
----
&lt;&lt;list noCase title 'Habakkuk'&gt;&gt;
----
&lt;&lt;list noCase title 'Haggai'&gt;&gt;
----
&lt;&lt;list noCase title 'Hosea'&gt;&gt;
----
&lt;&lt;list noCase title 'Joel'&gt;&gt;
----
&lt;&lt;list noCase title 'Malachi'&gt;&gt;
----
&lt;&lt;list noCase title 'Micah'&gt;&gt;
----
&lt;&lt;list noCase title 'Nahum'&gt;&gt;
{{ floatright tiny { [[tabProphetsOther]] }}}
}}} </pre>
</div>
<div title="tabRomans" modifier="SDM" created="201210290226" modified="201303041506" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{threecolumns{
{{medium{ ''Romans'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Romans.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Romans' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabRomans]] }}}
}}} </pre>
</div>
<div title="tabRuth" modifier="SDM" created="201211170157" modified="201303041507" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''Ruth'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Ruth.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Ruth' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabRuth]] }}}
}}} </pre>
</div>
<div title="tabThessalonians" modifier="SDM" created="201210290226" modified="201303041508" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''1Thessalonians'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title '1Thes.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '1Thes' '[tag[Scriptr]]'&gt;&gt;
@@color:brown;''Notes''
&lt;&lt;list noCase title '2Thes.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '2Thes' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabThessalonians]] }}}
}}} </pre>
</div>
<div title="tabTimothy" modifier="SDM" created="201210290226" modified="201211110529" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''1Timothy'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title '1Tim.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '1Tim' '[tag[Scriptr]]'&gt;&gt;
@@color:brown;''Notes''
&lt;&lt;list noCase title '2Tim.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title '2Tim' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabTimothy]] }}}
}}} </pre>
</div>
<div title="tabTitus" modifier="SDM" created="201210290226" modified="201211110254" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto;{{fourcolumns{
{{medium{ ''Titus'' }}}
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Titus.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Titus' '[tag[Scriptr]]'&gt;&gt;
{{ floatright tiny { [[tabTitus]] }}}
}}} </pre>
</div>
<div title="tabTopicIndex" modifier="SDM" created="201211112206" modified="201211112336" tags="menu excludeLists" book_key="">
<pre>&lt;&lt;tabs txtTiddlerMapTabs
AB 'list &quot;A/B&quot; tiddlers' [[TiddlerMapX::AB]]
CD 'list &quot;C/D&quot; tiddlers' [[TiddlerMapX::CD]]
EF 'list &quot;E/F&quot; tiddlers' [[TiddlerMapX::EF]]
GH 'list &quot;G/H/I&quot; tiddlers' [[TiddlerMapX::GH]]
IJKL 'list &quot;J/K/L&quot; tiddlers' [[TiddlerMapX::IJKL]]
MNO 'list &quot;M/N/O&quot; tiddlers' [[TiddlerMapX::MNO]]
PQ 'list &quot;P/Q&quot; tiddlers' [[TiddlerMapX::PQ]]
R 'list &quot;R&quot; tiddlers' [[TiddlerMapX::R]]
S 'list &quot;S&quot; tiddlers' [[TiddlerMapX::S]]
TUV  'list &quot;T/U/V&quot; tiddlers' [[TiddlerMapX::TUV]]
W 'list &quot;W&quot; tiddlers' [[TiddlerMapX::W]]
XYZ 'list &quot;X/Y/Z&quot; tiddlers' [[TiddlerMapX::XYZ]]
0-9 'list &quot;0-9&quot; tiddlers' [[TiddlerMapX::0to9]]
&gt;&gt;
&lt;&lt;tiddler HideTiddlerTags&gt;&gt; </pre>
</div>
<div title="tabTopics" modifier="SDM" created="201210252036" modified="201211112211" tags="menu excludeLists" book_key="">
<pre>@@display:block;height:32em;overflow:auto; {{fourcolumns{
&lt;&lt;matchTags &quot;%0&quot; &quot; \n &quot; NOT excludeLists AND NOT Scriptr AND NOT Comment &gt;&gt;
}}}</pre>
</div>
<div title="tabTorah" modifier="SDM" created="201211031818" modified="201303041559" tags="menu excludeLists" book_key="">
<pre>{{big{ ''The TORAH'' }}}{{ floatright tiny { [[tabTorah]] }}}
@@display:block;height:32em;overflow:auto;
&lt;&lt;tabs &quot;Genesis&quot;
&quot;Genesis&quot; &quot;&quot; [[tabTorah##Genesis]]
&quot;Exodus&quot; &quot;&quot; [[tabTorah##Exodus]]
&quot;Leviticus&quot; &quot;&quot; [[tabTorah##Leviticus]]
&quot;Numbers&quot; &quot;&quot; [[tabTorah##Numbers]]
&quot;Deuteronomy&quot; &quot;&quot; [[tabTorah##Deuteronomy]]
&gt;&gt;
{{hidden{
!!! Genesis
{{fourcolumns{
@@color:brown;''Notes''
&lt;&lt;list noCase title 'Genesis.*note'&gt;&gt;@@
''Text''
&lt;&lt;list xCase title 'Genesis' '[tag[Scriptr]]'&gt;&gt;
}}}

!!! Exodus
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title 'Exodus.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title 'Exodus' '[tag[Scriptr]]'&gt;&gt;
}}}

!!! Leviticus
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title 'Lev.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title 'Lev' '[tag[Scriptr]]'&gt;&gt;
}}}

!!! Numbers
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title 'Num.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title 'Num' '[tag[Scriptr]]'&gt;&gt;
}}}

!!! Deuteronomy
{{fourcolumns{
''Notes''
&lt;&lt;list noCase title 'Deut.*note'&gt;&gt;
''Text''
&lt;&lt;list xCase title 'Deut' '[tag[Scriptr]]'&gt;&gt;
}}}</pre>
</div>
<div title="tabs macro" creator="colmbritton" modifier="jermolene" created="201102111531" modified="201111031823" tags="macro">
<pre>The tab macro lets you create tab interfaces such as the one used for the timeline in the sidebar.
You use it as follows:
{{{
&lt;&lt;tabs theCookieName
nameOfFirstTab &quot;HoverValueOfFirstTab&quot; TiddlerToShowInTab(or content)
nameOfSecondTab &quot;HoverValueOfSecondTab&quot; TiddlerToShowInTab(or content)
...
&gt;&gt;
}}}
''theCookieName'' is used to store the name of the tab you currently have open. It does this so that when you return the tiddler will still be displaying the last tab you had selected.

Example use of the tab macro:
{{{
&lt;&lt;tabs txtFavourite
tags &quot;First tab&quot; &quot;tags macro&quot;
tag &quot;Second tab&quot; &quot;tag macro&quot;
&gt;&gt;
}}}</pre>
</div>
<div title="tag macro" creator="colmbritton" modifier="colmbritton" created="201102111439" modified="201102111446" tags="macro">
<pre>The tag macro generates a button with the named [[tag]] which when clicked provides a drop-down list of [[tiddlers]] tagged with the given tag along with an option to open all of the tagged tiddlers.
{{{
&lt;&lt;tag tagName [label] [tooltip]&gt;&gt;
}}}
For example
{{{
&lt;&lt;tag macro&gt;&gt;
}}}
Which displays
&lt;&lt;tag macro&gt;&gt;</pre>
</div>
<div title="tagging macro" creator="colmbritton" modifier="colmbritton" created="201102111439" modified="201102111446" tags="macro">
<pre>The tagging macro lists all the tiddlers that have a given tag. You set the tag you are looking for as the first parameter. E.g. to look for all tiddlers tagged with ''transclude'' you need to do the following:
{{{
&lt;&lt;tagging transclude&gt;&gt;
}}}
Displays as:
&lt;&lt;tagging transclude&gt;&gt;
This macro also accepts a 2nd parameter which allows you to define a separator.
{{{
&lt;&lt;tagging transclude sep:____&gt;&gt; e.g. &lt;&lt;tagging transclude sep:----------&gt;&gt;
}}}
Displays as:
&lt;&lt;tagging transclude sep:----------&gt;&gt;</pre>
</div>
<div title="tags macro" creator="colmbritton" modifier="colmbritton" created="201102111439" modified="201102111446" tags="macro">
<pre>To generate a list of [[tags]] applied to the current [[tiddler]]:
{{{
&lt;&lt;tags [tiddler]&gt;&gt;
}}}

Note this will not display any tags that are themselves tagged excludeLists.
For instance if there is a tiddler called &quot;foo&quot; tagged excludeLists and the tags macro is run on a tiddler with the tag foo, this tag will not be displayed.</pre>
</div>
<div title="tiddler macro" creator="colmbritton" modifier="jermolene" created="201102111439" modified="201102281441" tags="macro">
<pre>The tiddler macro allows you to [[transclude|Tranclusion]] the text of other tidders, or sections of other tiddlers, into your current tiddler.
!!Basic Usage
The basic usage is:
{{{
&lt;&lt;tiddler tiddlerToTransclude&gt;&gt;
}}}

This displays as:
&lt;&lt;&lt;
&lt;&lt;tiddler tiddlerToTransclude&gt;&gt;
&lt;&lt;&lt;
Have a look at the actual [[tiddlerToTransclude]] tiddler.
!!Transcluding Sections and Slices
Instead of transcluding an entire tiddler, you can also transclude individual [[slices|Tiddler Slices]]  or [[sections|Tiddler Sections]]:
{{{
&lt;&lt;tiddler [[Title::sliceLabel]]&gt;&gt;
&lt;&lt;tiddler [[Title##sectionHeading]]&gt;&gt;
}}}
!!Parameterised Transclusion
Using the {{{with:}}} parameter, placeholders in the transcluded content can be replaced with a desired value. For example:
{{{
&lt;&lt;tiddler anotherTiddlerToTransclude with:&quot;Jim&quot; &quot;Oz&quot;&gt;&gt;
}}}
Which displays as:
&lt;&lt;&lt;
&lt;&lt;tiddler anotherTiddlerToTransclude with:&quot;Jim&quot; &quot;Oz&quot;&gt;&gt;
&lt;&lt;&lt;
Have a look at the actual [[anotherTiddlerToTransclude]].</pre>
</div>
<div title="tiddlerToTransclude" creator="colmbritton" modifier="colmbritton" created="201102161153" modified="201102161153">
<pre>This text has been transcluded from another tidder.</pre>
</div>
<div title="timeline macro" creator="colmbritton" modifier="jermolene" created="201102111439" modified="201112161648" tags="macro">
<pre>To create a chronological list of recent edits:
{{{
&lt;&lt;timeline field maxlength dateformat template:title groupTemplate:title filter:filter&gt;&gt;
}}}
All the parameters are optional:
* ''field'' determines which field to use as the basis for the list. It is usually {{{modified}}} or {{{created}}}
* ''maxlength'' is an integer that limits the maximum number of tiddlers to include in the list
* ''dateformat'' is a [[date format string|Date Formats]] that determines the format of the dates
* ''template'' names the tiddler to use as the template for list entries
** The default template is {{{&lt;&lt;view title link&gt;&gt;}}} to cause the display of the tiddler title as a link to the tiddler
* ''groupTemplate'' names the tiddler to use as the template for grouping entries in the list
** The default groupTemplate is {{{&lt;&lt;view %0 date '%1'&gt;&gt;}}}, where {{{%0}}} is the name of the field being displayed and {{{%1}}} is the ''dateformat'' selected in the third argument
* ''filter'' is a tiddler filter that is used to filter the tiddlers that appear in the list

For example:
{{{
&lt;&lt;timeline created 5&gt;&gt;&gt;
}}}
displays as:
&lt;&lt;timeline created 5&gt;&gt;
{{{
&lt;&lt;timeline modified 5&gt;&gt;
}}}
displays as:
&lt;&lt;timeline modified 5&gt;&gt;</pre>
</div>
<div title="today macro" creator="colmbritton" modifier="colmbritton" created="201102111439" modified="201102111446" tags="macro">
<pre>The date macro will display the current date and time:
{{{
&lt;&lt;today&gt;&gt;
}}}
Displays as:
&lt;&lt;today&gt;&gt;

This macro accepts one parameter - a date format. Such as:
{{{
&lt;&lt;today DD/MM/YYYY&gt;&gt;
}}}
Displays as:
&lt;&lt;today DD/MM/YYYY&gt;&gt;
Read more about [[Date Formats]]</pre>
</div>
<div title="translations" creator="psd" modifier="jermolene" created="201102111107" modified="201111031643" tags="features translations">
<pre>~TiddlyWiki is available in 17 other languages languages.

Translations are packaged as plugins which are stored at https://github.com/TiddlyWiki/translations</pre>
</div>
<div title="version macro" creator="colmbritton" modifier="colmbritton" created="201102111439" modified="201102111446" tags="macro">
<pre>This is a simple macro that outputs the version of TiddlyWiki that is being used.
{{{
&lt;&lt;version&gt;&gt;
}}}
Displays as:
&lt;&lt;version&gt;&gt;</pre>
</div>
<div title="view macro" creator="colmbritton" modifier="psd" created="201102111439" modified="201102151557" tags="macro">
<pre>The view macro is a powerful macro that allows you to access fields on a given tiddler and format them.

The first parameter is the field to access (note tags does not work).
The second parameter defines a [[view type|view macro types]] which defines how the value of that field should be rendered.

{{{
&lt;&lt;view title link&gt;&gt;
}}}
renders the link of the current tiddler i.e. &lt;&lt;view title link&gt;&gt;</pre>
</div>
<div title="view macro types" creator="psd" modifier="jermolene" created="201102151603" modified="201112141557">
<pre>!Text
Renders the field exactly how it is stored.
For example
{{{
&lt;&lt;view modified text&gt;&gt;
&lt;&lt;view title text&gt;&gt;
}}}
gives:
* &lt;&lt;view modified text&gt;&gt;
* &lt;&lt;view title text&gt;&gt;

!Link
Renders the value of the field as a link
{{{
&lt;&lt;view title link&gt;&gt;
}}}
gives
* &lt;&lt;view title link&gt;&gt;

!Date
Applicable to the modified and created fields. Note a further parameter - a date format can be used.
{{{
&lt;&lt;view created date&gt;&gt;
&lt;&lt;view modified date &quot;YYYY&quot;&gt;&gt;
}}}
gives:
* &lt;&lt;view created date&gt;&gt;
* &lt;&lt;view modified date &quot;YYYY&quot;&gt;&gt;
See [[Date Formats]] for possible date format strings.

!Wikified
Treats the string as wikitext.
e.g.
{{{
&lt;&lt;view customfield wikified&gt;&gt;
}}}

An optional third parameter can be used to transform the text before it is wikified. For example:

{{{
&lt;&lt;view customfield wikified &quot;//$1//&quot;
}}}

The result of this example would be to make the field display in italics.

!TiddlySpace specific
See [[TiddlySpace View Types]]</pre>
</div>
<div title="wiki-tags-Admin" modifier="SDM" created="201012221503" modified="201211121420" tags="stylesheet excludeLists" book_key="">
<pre>BasicsPkg EmasticSystem bookmarklet excludeLists excludeSearch html journal menu script settings setup story stylesheet systemConfig template wiki EFCA_Statement Comment</pre>
</div>
<div title="wiki-tags-Favorite" modifier="SDM" created="201012142259" modified="201211121420" tags="stylesheet excludeLists" book_key="">
<pre>Abraham Atonement Authority Broken Clothing Covenant Faith Faithfulness Family God Humility Priest Shame Sin Virtue Freedom Harvest House Living-Animal Living-Plant Redemption assembly attitude building evil money order
Anointing Christ Food House Image_Metaphor Individual Need</pre>
</div>
<div title="zHoverMenuPlugin-MayInflenceCSS" modifier="SDM" created="201012220216" modified="201211301337" tags="systemConfigDisable macro" book_key="">
<pre>/***
|Name|HoverMenuPlugin|
|Created by|SaqImtiaz|
|Location|http://tw.lewcid.org/#HoverMenuPlugin|
@@color:brown;''Notes'':
* Provides a hovering menu on the edge of the screen for commonly used commands, that scrolls with the page.
* To customize whether the menu sticks to the right or left edge of the screen, and its start position, edit the HoverMenu configuration settings part of the code below. The menu has an id of hoverMenu, in case you want to style the buttons in it using css.
* ToggleSideBarMacro, JumpMacro and JumpToTopMacro are included in this tiddler, so you dont need to install them separately. Having them installed separately as well could lead to complications.  If you dont intend to use these three macros at all, feel free to remove those sections of code in this tiddler.

!Code
***/

/***
start HoverMenu plugin code
***/
//{{{
config.hoverMenu={};
//}}}

/***
HoverMenu configuration settings
***/
//{{{
config.hoverMenu.settings={
               align: 'right',    //align menu to right or left side of screen, possible values are 'right' and 'left'
               x: 1,              // horizontal distance of menu from side of screen, increase to your liking.
               y: 158            //vertical distance of menu from top of screen at start, increase or decrease to your liking
               };
//}}}

//{{{
//continue HoverMenu plugin code
config.hoverMenu.handler=function()
{
               if (!document.getElementById(&quot;hoverMenu&quot;))
               {
               var theMenu = createTiddlyElement(document.getElementById(&quot;contentWrapper&quot;), &quot;div&quot;,&quot;hoverMenu&quot;);
               theMenu.setAttribute(&quot;refresh&quot;,&quot;content&quot;);
               theMenu.setAttribute(&quot;tiddler&quot;,&quot;HoverMenu&quot;);
               var menuContent = store.getTiddlerText(&quot;HoverMenu&quot;);
               wikify(menuContent,theMenu);
              }

           var Xloc = this.settings.x;
           Yloc =this.settings.y;
           var ns = (navigator.appName.indexOf(&quot;Netscape&quot;) != -1);
           function SetMenu(id)
                        {
                var GetElements=document.getElementById?document.getElementById(id):document.all?document.all[id]:document.layers[id];
                if(document.layers)GetElements.style=GetElements;
                GetElements.sP=function(x,y){this.style[config.hoverMenu.settings.align]=x +&quot;px&quot;;this.style.top=y +&quot;px&quot;;};
                GetElements.x = Xloc;
                GetElements.y = findScrollY();
                GetElements.y += Yloc;
                return GetElements;
                    }
               window.LoCate_XY=function()
                        {
                var pY =  findScrollY();
                        ftlObj.y += (pY + Yloc - ftlObj.y)/15;
                ftlObj.sP(ftlObj.x, ftlObj.y);
                setTimeout(&quot;LoCate_XY()&quot;, 10);
                    }
               ftlObj = SetMenu(&quot;hoverMenu&quot;);
           LoCate_XY();
};

window.old_lewcid_hovermenu_restart = restart;
restart = function()
{
               window.old_lewcid_hovermenu_restart();
               config.hoverMenu.handler();
};

setStylesheet(
&quot;#hoverMenu .imgLink, #hoverMenu .imgLink:hover {border:none; padding:0px; float:right; margin-bottom:2px; margin-top:0px;}\n&quot;+
&quot;#hoverMenu  .button, #hoverMenu  .tiddlyLink {border:none; font-weight:bold; background:#18f; color:#FFF; padding:0 5px; float:right; margin-bottom:4px;}\n&quot;+
&quot;#hoverMenu .button:hover, #hoverMenu .tiddlyLink:hover {font-weight:bold; border:none; color:#fff; background:#000; padding:0 5px; float:right; margin-bottom:4px;}\n&quot;+
&quot;#hoverMenu .button {width:100%; text-align:center}&quot;+
&quot;#hoverMenu { position:absolute; width:7px;}\n&quot;+
&quot;\n&quot;,&quot;hoverMenuStyles&quot;);



config.shadowTiddlers[&quot;HoverMenu&quot;]=&quot;&lt;&lt;top&gt;&gt;\n&lt;&lt;closeAll&gt;&gt;&lt;&lt;renameButton c 'Close all tiddlers'&gt;&gt;&lt;&lt;toggleSideBar '' '' hide&gt;&gt;&lt;&lt;renameButton '&gt;' &gt;&gt;\n&lt;&lt;jump j '' top&gt;&gt;\n&lt;&lt;saveChanges&gt;&gt;&lt;&lt;renameButton s 'Save TiddlyWiki'&gt;&gt;\n&lt;&lt;newTiddler&gt;&gt;&lt;&lt;renameButton n&gt;&gt;\n&quot;;
//}}}
//end HoverMenu plugin code

</pre>
</div>
</div>
<!--POST-STOREAREA-->
<!--POST-BODY-START-->

<!--POST-BODY-END-->
<script id="jsArea" type="text/javascript">
//<![CDATA[

//
// Please note:
//
// * This code is designed to be readable but for compactness it only includes brief comments. You can see fuller comments
//   in the project repository at https://github.com/TiddlyWiki/tiddlywiki
//
// * You should never need to modify this source code directly. TiddlyWiki is carefully designed to allow deep customisation
//   without changing the core code. Please consult the development group at http://groups.google.com/group/TiddlyWikiDev
//
// JSLint directives
/*global jQuery:false, version:false */
/*jslint bitwise:true, browser:true, confusion:true, eqeq:true, evil:true, forin:true, maxerr:100, plusplus:true, regexp:true, sloppy:true, sub:true, undef:true, unparam:true, vars:true, white:true */
//--
//-- Configuration repository
//--

// Miscellaneous options
var config = {
	numRssItems: 20, // Number of items in the RSS feed
	animDuration: 400, // Duration of UI animations in milliseconds
	cascadeFast: 20, // Speed for cascade animations (higher == slower)
	cascadeSlow: 60, // Speed for EasterEgg cascade animations
	cascadeDepth: 5, // Depth of cascade animation
	locale: "en" // W3C language tag
};

// Hashmap of alternative parsers for the wikifier
config.parsers = {};

// Adaptors
config.adaptors = {};
config.defaultAdaptor = null;

// Backstage tasks
config.tasks = {};

// Annotations
config.annotations = {};

// Custom fields to be automatically added to new tiddlers
config.defaultCustomFields = {};

// Messages
config.messages = {
	messageClose: {},
	dates: {},
	tiddlerPopup: {}
};

// Options that can be set in the options panel and/or cookies
config.options = {
	chkRegExpSearch: false,
	chkCaseSensitiveSearch: false,
	chkIncrementalSearch: true,
	chkAnimate: true,
	chkSaveBackups: true,
	chkAutoSave: false,
	chkGenerateAnRssFeed: false,
	chkSaveEmptyTemplate: false,
	chkOpenInNewWindow: true,
	chkToggleLinks: false,
	chkHttpReadOnly: true,
	chkForceMinorUpdate: false,
	chkConfirmDelete: true,
	chkInsertTabs: false,
	chkUsePreForStorage: true, // Whether to use <pre> format for storage
	chkDisplayInstrumentation: false,
	txtBackupFolder: "",
	txtEditorFocus: "text",
	txtMainTab: "tabTimeline",
	txtMoreTab: "moreTabAll",
	txtMaxEditRows: "30",
	txtFileSystemCharSet: "UTF-8",
	txtTheme: ""
	};
config.optionsDesc = {};

config.optionsSource = {};

// Default tiddler templates
var DEFAULT_VIEW_TEMPLATE = 1;
var DEFAULT_EDIT_TEMPLATE = 2;
config.tiddlerTemplates = {
	1: "ViewTemplate",
	2: "EditTemplate"
};

// More messages (rather a legacy layout that should not really be like this)
config.views = {
	wikified: {
		tag: {}
	},
	editor: {
		tagChooser: {}
	}
};

// Backstage tasks
config.backstageTasks = ["save","importTask","tweak","upgrade","plugins"];

// Extensions
config.extensions = {};

// Macros; each has a 'handler' member that is inserted later
config.macros = {
	today: {},
	version: {},
	search: {sizeTextbox: 15},
	tiddler: {},
	tag: {},
	tags: {},
	tagging: {},
	timeline: {},
	allTags: {},
	list: {
		all: {},
		missing: {},
		orphans: {},
		shadowed: {},
		touched: {},
		filter: {}
	},
	closeAll: {},
	permaview: {},
	saveChanges: {},
	slider: {},
	option: {},
	options: {},
	newTiddler: {},
	newJournal: {},
	tabs: {},
	gradient: {},
	message: {},
	view: {defaultView: "text"},
	edit: {},
	tagChooser: {},
	toolbar: {},
	plugins: {},
	refreshDisplay: {},
	importTiddlers: {},
	upgrade: {
		source: "http://tiddlywiki-releases.tiddlyspace.com/upgrade",
		backupExtension: "pre.core.upgrade"
	},
	sync: {},
	annotations: {}
};

// Commands supported by the toolbar macro
config.commands = {
	closeTiddler: {},
	closeOthers: {},
	editTiddler: {},
	saveTiddler: {hideReadOnly: true},
	cancelTiddler: {},
	deleteTiddler: {hideReadOnly: true},
	permalink: {},
	references: {type: "popup"},
	jump: {type: "popup"},
	syncing: {type: "popup"},
	fields: {type: "popup"}
};

// Control of macro parameter evaluation
config.evaluateMacroParameters = "all";

// Basic regular expressions
config.textPrimitives = {
	upperLetter: "[A-Z\u00c0-\u00de\u0150\u0170]",
	lowerLetter: "[a-z0-9_\\-\u00df-\u00ff\u0151\u0171]",
	anyLetter:   "[A-Za-z0-9_\\-\u00c0-\u00de\u00df-\u00ff\u0150\u0170\u0151\u0171]",
	anyLetterStrict: "[A-Za-z0-9\u00c0-\u00de\u00df-\u00ff\u0150\u0170\u0151\u0171]"
};
if(!((new RegExp("[\u0150\u0170]","g")).test("\u0150"))) {
	config.textPrimitives = {
		upperLetter: "[A-Z\u00c0-\u00de]",
		lowerLetter: "[a-z0-9_\\-\u00df-\u00ff]",
		anyLetter:   "[A-Za-z0-9_\\-\u00c0-\u00de\u00df-\u00ff]",
		anyLetterStrict: "[A-Za-z0-9\u00c0-\u00de\u00df-\u00ff]"
	};
}
config.textPrimitives.sliceSeparator = "::";
config.textPrimitives.sectionSeparator = "##";
config.textPrimitives.urlPattern = "(?:file|http|https|mailto|ftp|irc|news|data):[^\\s'\"]+(?:/|\\b)";
config.textPrimitives.unWikiLink = "~";
config.textPrimitives.wikiLink = "(?:(?:" + config.textPrimitives.upperLetter + "+" +
	config.textPrimitives.lowerLetter + "+" +
	config.textPrimitives.upperLetter +
	config.textPrimitives.anyLetter + "*)|(?:" +
	config.textPrimitives.upperLetter + "{2,}" +
	config.textPrimitives.lowerLetter + "+))";

config.textPrimitives.cssLookahead = "(?:(" + config.textPrimitives.anyLetter + "+)\\(([^\\)\\|\\n]+)(?:\\):))|(?:(" + config.textPrimitives.anyLetter + "+):([^;\\|\\n]+);)";
config.textPrimitives.cssLookaheadRegExp = new RegExp(config.textPrimitives.cssLookahead,"mg");

config.textPrimitives.brackettedLink = "\\[\\[([^\\]]+)\\]\\]";
config.textPrimitives.titledBrackettedLink = "\\[\\[([^\\[\\]\\|]+)\\|([^\\[\\]\\|]+)\\]\\]";
config.textPrimitives.tiddlerForcedLinkRegExp = new RegExp("(?:" + config.textPrimitives.titledBrackettedLink + ")|(?:" +
	config.textPrimitives.brackettedLink + ")|(?:" +
	config.textPrimitives.urlPattern + ")","mg");
config.textPrimitives.tiddlerAnyLinkRegExp = new RegExp("("+ config.textPrimitives.wikiLink + ")|(?:" +
	config.textPrimitives.titledBrackettedLink + ")|(?:" +
	config.textPrimitives.brackettedLink + ")|(?:" +
	config.textPrimitives.urlPattern + ")","mg");

config.glyphs = {
	currBrowser: null,
	browsers: [],
	codes: {}
};

//--
//-- Shadow tiddlers
//--

config.shadowTiddlers = {
	StyleSheet: "",
	MarkupPreHead: "",
	MarkupPostHead: "",
	MarkupPreBody: "",
	MarkupPostBody: "",
	TabTimeline: '<<timeline>>',
	TabAll: '<<list all>>',
	TabTags: '<<allTags excludeLists>>',
	TabMoreMissing: '<<list missing>>',
	TabMoreOrphans: '<<list orphans>>',
	TabMoreShadowed: '<<list shadowed>>',
	AdvancedOptions: '<<options>>',
	PluginManager: '<<plugins>>',
	SystemSettings: '',
	ToolbarCommands: '|~ViewToolbar|closeTiddler closeOthers +editTiddler > fields syncing permalink references jump|\n|~EditToolbar|+saveTiddler -cancelTiddler deleteTiddler|',
	WindowTitle: '<<tiddler SiteTitle>> - <<tiddler SiteSubtitle>>'
};

// Browser detection... In a very few places, there's nothing else for it but to know what browser we're using.
config.userAgent = navigator.userAgent.toLowerCase();
config.browser = {
	isIE: config.userAgent.indexOf("msie") != -1 && config.userAgent.indexOf("opera") == -1,
	isGecko: navigator.product == "Gecko" && config.userAgent.indexOf("WebKit") == -1,
	ieVersion: /MSIE (\d.\d)/i.exec(config.userAgent), // config.browser.ieVersion[1], if it exists, will be the IE version string, eg "6.0"
	isSafari: config.userAgent.indexOf("applewebkit") != -1,
	isBadSafari: !((new RegExp("[\u0150\u0170]","g")).test("\u0150")),
	firefoxDate: /gecko\/(\d{8})/i.exec(config.userAgent), // config.browser.firefoxDate[1], if it exists, will be Firefox release date as "YYYYMMDD"
	isOpera: config.userAgent.indexOf("opera") != -1,
	isChrome: config.userAgent.indexOf('chrome') > -1,
	isLinux: config.userAgent.indexOf("linux") != -1,
	isUnix: config.userAgent.indexOf("x11") != -1,
	isMac: config.userAgent.indexOf("mac") != -1,
	isWindows: config.userAgent.indexOf("win") != -1
};

merge(config.glyphs,{
	browsers: [
		function() {return config.browser.isIE;},
		function() {return true;}
		],
	codes: {
		downTriangle: ["\u25BC","\u25BE"],
		downArrow: ["\u2193","\u2193"],
		bentArrowLeft: ["\u2190","\u21A9"],
		bentArrowRight: ["\u2192","\u21AA"]
	}
});

//--
//-- Translateable strings
//--

// Strings in "double quotes" should be translated; strings in 'single quotes' should be left alone

merge(config.options,{
	txtUserName: "YourName"});

merge(config.tasks,{
	save: {text: "save", tooltip: "Save your changes to this TiddlyWiki"},
	importTask: {text: "import", tooltip: "Import tiddlers and plugins from other TiddlyWiki files and servers", content: '<<importTiddlers>>'},
	tweak: {text: "tweak", tooltip: "Tweak the appearance and behaviour of TiddlyWiki", content: '<<options>>'},
	upgrade: {text: "upgrade", tooltip: "Upgrade TiddlyWiki core code", content: '<<upgrade>>'},
	plugins: {text: "plugins", tooltip: "Manage installed plugins", content: '<<plugins>>'}
});

// Options that can be set in the options panel and/or cookies
merge(config.optionsDesc,{
	txtUserName: "Username for signing your edits",
	chkRegExpSearch: "Enable regular expressions for searches",
	chkCaseSensitiveSearch: "Case-sensitive searching",
	chkIncrementalSearch: "Incremental key-by-key searching",
	chkAnimate: "Enable animations",
	chkSaveBackups: "Keep backup file when saving changes",
	chkAutoSave: "Automatically save changes",
	chkGenerateAnRssFeed: "Generate an RSS feed when saving changes",
	chkSaveEmptyTemplate: "Generate an empty template when saving changes",
	chkOpenInNewWindow: "Open external links in a new window",
	chkToggleLinks: "Clicking on links to open tiddlers causes them to close",
	chkHttpReadOnly: "Hide editing features when viewed over HTTP",
	chkForceMinorUpdate: "Don't update modifier username and date when editing tiddlers",
	chkConfirmDelete: "Require confirmation before deleting tiddlers",
	chkInsertTabs: "Use the tab key to insert tab characters instead of moving between fields",
	txtBackupFolder: "Name of folder to use for backups",
	txtMaxEditRows: "Maximum number of rows in edit boxes",
	txtTheme: "Name of the theme to use",
	txtFileSystemCharSet: "Default character set for saving changes (Firefox/Mozilla only)"});

merge(config.messages,{
	customConfigError: "Problems were encountered loading plugins. See PluginManager for details",
	pluginError: "Error: %0",
	pluginDisabled: "Not executed because disabled via 'systemConfigDisable' tag",
	pluginForced: "Executed because forced via 'systemConfigForce' tag",
	pluginVersionError: "Not executed because this plugin needs a newer version of TiddlyWiki",
	nothingSelected: "Nothing is selected. You must select one or more items first",
	savedSnapshotError: "It appears that this TiddlyWiki has been incorrectly saved. Please see http://www.tiddlywiki.com/#Download for details",
	subtitleUnknown: "(unknown)",
	undefinedTiddlerToolTip: "The tiddler '%0' doesn't yet exist",
	shadowedTiddlerToolTip: "The tiddler '%0' doesn't yet exist, but has a pre-defined shadow value",
	tiddlerLinkTooltip: "%0 - %1, %2",
	externalLinkTooltip: "External link to %0",
	noTags: "There are no tagged tiddlers",
	notFileUrlError: "You need to save this TiddlyWiki to a file before you can save changes",
	cantSaveError: "It's not possible to save changes. Possible reasons include:\n- your browser doesn't support saving (Firefox, Internet Explorer, Safari and Opera all work if properly configured)\n- the pathname to your TiddlyWiki file contains illegal characters\n- the TiddlyWiki HTML file has been moved or renamed",
	invalidFileError: "The original file '%0' does not appear to be a valid TiddlyWiki",
	backupSaved: "Backup saved",
	backupFailed: "Failed to save backup file",
	rssSaved: "RSS feed saved",
	rssFailed: "Failed to save RSS feed file",
	emptySaved: "Empty template saved",
	emptyFailed: "Failed to save empty template file",
	mainSaved: "Main TiddlyWiki file saved",
	mainFailed: "Failed to save main TiddlyWiki file. Your changes have not been saved",
	macroError: "Error in macro <<%0>>",
	macroErrorDetails: "Error while executing macro <<%0>>:\n%1",
	missingMacro: "No such macro",
	overwriteWarning: "A tiddler named '%0' already exists. Choose OK to overwrite it",
	unsavedChangesWarning: "WARNING! There are unsaved changes in TiddlyWiki\n\nChoose OK to save\nChoose CANCEL to discard",
	confirmExit: "--------------------------------\n\nThere are unsaved changes in TiddlyWiki. If you continue you will lose those changes\n\n--------------------------------",
	saveInstructions: "SaveChanges",
	unsupportedTWFormat: "Unsupported TiddlyWiki format '%0'",
	tiddlerSaveError: "Error when saving tiddler '%0'",
	tiddlerLoadError: "Error when loading tiddler '%0'",
	wrongSaveFormat: "Cannot save with storage format '%0'. Using standard format for save.",
	invalidFieldName: "Invalid field name %0",
	fieldCannotBeChanged: "Field '%0' cannot be changed",
	loadingMissingTiddler: "Attempting to retrieve the tiddler '%0' from the '%1' server at:\n\n'%2' in the workspace '%3'",
	upgradeDone: "The upgrade to version %0 is now complete\n\nClick 'OK' to reload the newly upgraded TiddlyWiki",
	invalidCookie: "Invalid cookie '%0'"});

merge(config.messages.messageClose,{
	text: "close",
	tooltip: "close this message area"});

config.messages.backstage = {
	open: {text: "backstage", tooltip: "Open the backstage area to perform authoring and editing tasks"},
	close: {text: "close", tooltip: "Close the backstage area"},
	prompt: "backstage: ",
	decal: {
		edit: {text: "edit", tooltip: "Edit the tiddler '%0'"}
	}
};

config.messages.listView = {
	tiddlerTooltip: "Click for the full text of this tiddler",
	previewUnavailable: "(preview not available)"
};

config.messages.dates.months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November","December"];
config.messages.dates.days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
config.messages.dates.shortMonths = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
config.messages.dates.shortDays = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
// suffixes for dates, eg "1st","2nd","3rd"..."30th","31st"
config.messages.dates.daySuffixes = ["st","nd","rd","th","th","th","th","th","th","th",
		"th","th","th","th","th","th","th","th","th","th",
		"st","nd","rd","th","th","th","th","th","th","th",
		"st"];
config.messages.dates.am = "am";
config.messages.dates.pm = "pm";

merge(config.messages.tiddlerPopup,{
	});

merge(config.views.wikified.tag,{
	labelNoTags: "no tags",
	labelTags: "tags: ",
	openTag: "Open tag '%0'",
	tooltip: "Show tiddlers tagged with '%0'",
	openAllText: "Open all",
	openAllTooltip: "Open all of these tiddlers",
	popupNone: "No other tiddlers tagged with '%0'"});

merge(config.views.wikified,{
	defaultText: "The tiddler '%0' doesn't yet exist. Double-click to create it",
	defaultModifier: "(missing)",
	shadowModifier: "(built-in shadow tiddler)",
	dateFormat: "DD MMM YYYY",
	createdPrompt: "created"});

merge(config.views.editor,{
	tagPrompt: "Type tags separated with spaces, [[use double square brackets]] if necessary, or add existing",
	defaultText: "Type the text for '%0'"});

merge(config.views.editor.tagChooser,{
	text: "tags",
	tooltip: "Choose existing tags to add to this tiddler",
	popupNone: "There are no tags defined",
	tagTooltip: "Add the tag '%0'"});

merge(config.messages,{
	sizeTemplates:
		[
		{unit: 1024*1024*1024, template: "%0\u00a0GB"},
		{unit: 1024*1024, template: "%0\u00a0MB"},
		{unit: 1024, template: "%0\u00a0KB"},
		{unit: 1, template: "%0\u00a0B"}
		]});

merge(config.macros.search,{
	label: "search",
	prompt: "Search this TiddlyWiki",
	placeholder: "",
	accessKey: "F",
	successMsg: "%0 tiddlers found matching %1",
	failureMsg: "No tiddlers found matching %0"});

merge(config.macros.tagging,{
	label: "tagging: ",
	labelNotTag: "not tagging",
	tooltip: "List of tiddlers tagged with '%0'"});

merge(config.macros.timeline,{
	dateFormat: "DD MMM YYYY"});

merge(config.macros.allTags,{
	tooltip: "Show tiddlers tagged with '%0'",
	noTags: "There are no tagged tiddlers"});

config.macros.list.all.prompt = "All tiddlers in alphabetical order";
config.macros.list.missing.prompt = "Tiddlers that have links to them but are not defined";
config.macros.list.orphans.prompt = "Tiddlers that are not linked to from any other tiddlers";
config.macros.list.shadowed.prompt = "Tiddlers shadowed with default contents";
config.macros.list.touched.prompt = "Tiddlers that have been modified locally";

merge(config.macros.closeAll,{
	label: "close all",
	prompt: "Close all displayed tiddlers (except any that are being edited)"});

merge(config.macros.permaview,{
	label: "permaview",
	prompt: "Link to an URL that retrieves all the currently displayed tiddlers"});

merge(config.macros.saveChanges,{
	label: "save changes",
	prompt: "Save all tiddlers to create a new TiddlyWiki",
	accessKey: "S"});

merge(config.macros.newTiddler,{
	label: "new tiddler",
	prompt: "Create a new tiddler",
	title: "New Tiddler",
	accessKey: "N"});

merge(config.macros.newJournal,{
	label: "new journal",
	prompt: "Create a new tiddler from the current date and time",
	accessKey: "J"});

merge(config.macros.options,{
	wizardTitle: "Tweak advanced options",
	step1Title: "These options are saved in cookies in your browser",
	step1Html: "<input type='hidden' name='markList'></input><br><input type='checkbox' checked='false' name='chkUnknown'>Show unknown options</input>",
	unknownDescription: "//(unknown)//",
	listViewTemplate: {
		columns: [
			{name: 'Option', field: 'option', title: "Option", type: 'String'},
			{name: 'Description', field: 'description', title: "Description", type: 'WikiText'},
			{name: 'Name', field: 'name', title: "Name", type: 'String'}
			],
		rowClasses: [
			{className: 'lowlight', field: 'lowlight'}
			]}
	});

merge(config.macros.plugins,{
	wizardTitle: "Manage plugins",
	step1Title: "Currently loaded plugins",
	step1Html: "<input type='hidden' name='markList'></input>", // DO NOT TRANSLATE
	skippedText: "(This plugin has not been executed because it was added since startup)",
	noPluginText: "There are no plugins installed",
	confirmDeleteText: "Are you sure you want to delete these plugins:\n\n%0",
	removeLabel: "remove systemConfig tag",
	removePrompt: "Remove systemConfig tag",
	deleteLabel: "delete",
	deletePrompt: "Delete these tiddlers forever",
	listViewTemplate: {
		columns: [
			{name: 'Selected', field: 'Selected', rowName: 'title', type: 'Selector'},
			{name: 'Tiddler', field: 'tiddler', title: "Tiddler", type: 'Tiddler'},
			{name: 'Description', field: 'Description', title: "Description", type: 'String'},
			{name: 'Version', field: 'Version', title: "Version", type: 'String'},
			{name: 'Size', field: 'size', tiddlerLink: 'size', title: "Size", type: 'Size'},
			{name: 'Forced', field: 'forced', title: "Forced", tag: 'systemConfigForce', type: 'TagCheckbox'},
			{name: 'Disabled', field: 'disabled', title: "Disabled", tag: 'systemConfigDisable', type: 'TagCheckbox'},
			{name: 'Executed', field: 'executed', title: "Loaded", type: 'Boolean', trueText: "Yes", falseText: "No"},
			{name: 'Startup Time', field: 'startupTime', title: "Startup Time", type: 'String'},
			{name: 'Error', field: 'error', title: "Status", type: 'Boolean', trueText: "Error", falseText: "OK"},
			{name: 'Log', field: 'log', title: "Log", type: 'StringList'}
			],
		rowClasses: [
			{className: 'error', field: 'error'},
			{className: 'warning', field: 'warning'}
			]},
	listViewTemplateReadOnly: {
		columns: [
			{name: 'Tiddler', field: 'tiddler', title: "Tiddler", type: 'Tiddler'},
			{name: 'Description', field: 'Description', title: "Description", type: 'String'},
			{name: 'Version', field: 'Version', title: "Version", type: 'String'},
			{name: 'Size', field: 'size', tiddlerLink: 'size', title: "Size", type: 'Size'},
			{name: 'Executed', field: 'executed', title: "Loaded", type: 'Boolean', trueText: "Yes", falseText: "No"},
			{name: 'Startup Time', field: 'startupTime', title: "Startup Time", type: 'String'},
			{name: 'Error', field: 'error', title: "Status", type: 'Boolean', trueText: "Error", falseText: "OK"},
			{name: 'Log', field: 'log', title: "Log", type: 'StringList'}
			],
		rowClasses: [
			{className: 'error', field: 'error'},
			{className: 'warning', field: 'warning'}
			]}
	});

merge(config.macros.toolbar,{
	moreLabel: "more",
	morePrompt: "Show additional commands",
	lessLabel: "less",
	lessPrompt: "Hide additional commands",
	separator: "|"
	});

merge(config.macros.refreshDisplay,{
	label: "refresh",
	prompt: "Redraw the entire TiddlyWiki display"
	});

merge(config.macros.importTiddlers,{
	readOnlyWarning: "You cannot import into a read-only TiddlyWiki file. Try opening it from a file:// URL",
	wizardTitle: "Import tiddlers from another file or server",
	step1Title: "Step 1: Locate the server or file (Note SDM, CoreTweaks must be disabled or receive ~PrivilegeManager error)",
	step1Html: "Specify the type of the server: <select name='selTypes'><option value=''>Choose...</option></select><br>Enter the URL or pathname here: <input type='text' size=50 name='txtPath'><br>...or browse for a file: <input type='file' size=50 name='txtBrowse'><br><hr>...or select a pre-defined feed: <select name='selFeeds'><option value=''>Choose...</option></select>",
	openLabel: "open",
	openPrompt: "Open the connection to this file or server",
	statusOpenHost: "Opening the host",
	statusGetWorkspaceList: "Getting the list of available workspaces",
	step2Title: "Step 2: Choose the workspace",
	step2Html: "Enter a workspace name: <input type='text' size=50 name='txtWorkspace'><br>...or select a workspace: <select name='selWorkspace'><option value=''>Choose...</option></select>",
	cancelLabel: "cancel",
	cancelPrompt: "Cancel this import",
	statusOpenWorkspace: "Opening the workspace",
	statusGetTiddlerList: "Getting the list of available tiddlers",
	errorGettingTiddlerList: "Error getting list of tiddlers, click Cancel to try again",
	errorGettingTiddlerListHttp404: "Error retrieving tiddlers from url, please ensure the url exists. Click Cancel to try again.",
	errorGettingTiddlerListHttp: "Error retrieving tiddlers from url, please ensure this url exists and is <a href='http://enable-cors.org/'>CORS</a> enabled",
	errorGettingTiddlerListFile: "Error retrieving tiddlers from local file, please make sure the file is in the same directory as your TiddlyWiki. Click Cancel to try again.",
	step3Title: "Step 3: Choose the tiddlers to import",
	step3Html: "<input type='hidden' name='markList'></input><br><input type='checkbox' checked='true' name='chkSync'>Keep these tiddlers linked to this server so that you can synchronise subsequent changes</input><br><input type='checkbox' name='chkSave'>Save the details of this server in a 'systemServer' tiddler called:</input> <input type='text' size=25 name='txtSaveTiddler'>",
	importLabel: "import",
	importPrompt: "Import these tiddlers",
	confirmOverwriteText: "Are you sure you want to overwrite these tiddlers:\n\n%0",
	step4Title: "Step 4: Importing %0 tiddler(s)",
	step4Html: "<input type='hidden' name='markReport'></input>", // DO NOT TRANSLATE
	doneLabel: "done",
	donePrompt: "Close this wizard",
	statusDoingImport: "Importing tiddlers",
	statusDoneImport: "All tiddlers imported",
	systemServerNamePattern: "%2 on %1",
	systemServerNamePatternNoWorkspace: "%1",
	confirmOverwriteSaveTiddler: "The tiddler '%0' already exists. Click 'OK' to overwrite it with the details of this server, or 'Cancel' to leave it unchanged",
	serverSaveTemplate: "|''Type:''|%0|\n|''URL:''|%1|\n|''Workspace:''|%2|\n\nThis tiddler was automatically created to record the details of this server",
	serverSaveModifier: "(System)",
	listViewTemplate: {
		columns: [
			{name: 'Selected', field: 'Selected', rowName: 'title', type: 'Selector'},
			{name: 'Tiddler', field: 'tiddler', title: "Tiddler", type: 'Tiddler'},
			{name: 'Size', field: 'size', tiddlerLink: 'size', title: "Size", type: 'Size'},
			{name: 'Tags', field: 'tags', title: "Tags", type: 'Tags'}
			],
		rowClasses: [
			]}
	});

merge(config.macros.upgrade,{
	wizardTitle: "Upgrade TiddlyWiki core code",
	step1Title: "Update or repair this TiddlyWiki to the latest release",
	step1Html: "You are about to upgrade to the latest release of the TiddlyWiki core code (from <a href='%0' class='externalLink' target='_blank'>%1</a>). Your content will be preserved across the upgrade.<br><br>Note that core upgrades have been known to interfere with older plugins. If you run into problems with the upgraded file, see <a href='http://www.tiddlywiki.org/wiki/CoreUpgrades' class='externalLink' target='_blank'>http://www.tiddlywiki.org/wiki/CoreUpgrades</a>",
	errorCantUpgrade: "Unable to upgrade this TiddlyWiki. You can only perform upgrades on TiddlyWiki files stored locally",
	errorNotSaved: "You must save changes before you can perform an upgrade",
	step2Title: "Confirm the upgrade details",
	step2Html_downgrade: "You are about to downgrade to TiddlyWiki version %0 from %1.<br><br>Downgrading to an earlier version of the core code is not recommended",
	step2Html_restore: "This TiddlyWiki appears to be already using the latest version of the core code (%0).<br><br>You can continue to upgrade anyway to ensure that the core code hasn't been corrupted or damaged",
	step2Html_upgrade: "You are about to upgrade to TiddlyWiki version %0 from %1",
	upgradeLabel: "upgrade",
	upgradePrompt: "Prepare for the upgrade process",
	statusPreparingBackup: "Preparing backup",
	statusSavingBackup: "Saving backup file",
	errorSavingBackup: "There was a problem saving the backup file",
	statusLoadingCore: "Loading core code",
	errorLoadingCore: "Error loading the core code",
	errorCoreFormat: "Error with the new core code",
	statusSavingCore: "Saving the new core code",
	statusReloadingCore: "Reloading the new core code",
	startLabel: "start",
	startPrompt: "Start the upgrade process",
	cancelLabel: "cancel",
	cancelPrompt: "Cancel the upgrade process",
	step3Title: "Upgrade cancelled",
	step3Html: "You have cancelled the upgrade process"
	});

merge(config.macros.annotations,{
	});

merge(config.commands.closeTiddler,{
	text: "close",
	tooltip: "Close this tiddler"});

merge(config.commands.closeOthers,{
	text: "close others",
	tooltip: "Close all other tiddlers"});

merge(config.commands.editTiddler,{
	text: "edit",
	tooltip: "Edit this tiddler",
	readOnlyText: "view",
	readOnlyTooltip: "View the source of this tiddler"});

merge(config.commands.saveTiddler,{
	text: "done",
	tooltip: "Save changes to this tiddler"});

merge(config.commands.cancelTiddler,{
	text: "cancel",
	tooltip: "Undo changes to this tiddler",
	warning: "Are you sure you want to abandon your changes to '%0'?",
	readOnlyText: "done",
	readOnlyTooltip: "View this tiddler normally"});

merge(config.commands.deleteTiddler,{
	text: "delete",
	tooltip: "Delete this tiddler",
	warning: "Are you sure you want to delete '%0'?"});

merge(config.commands.permalink,{
	text: "permalink",
	tooltip: "Permalink for this tiddler"});

merge(config.commands.references,{
	text: "references",
	tooltip: "Show tiddlers that link to this one",
	popupNone: "No references"});

merge(config.commands.jump,{
	text: "jump",
	tooltip: "Jump to another open tiddler"});

merge(config.commands.fields,{
	text: "fields",
	tooltip: "Show the extended fields of this tiddler",
	emptyText: "There are no extended fields for this tiddler",
	listViewTemplate: {
		columns: [
			{name: 'Field', field: 'field', title: "Field", type: 'String'},
			{name: 'Value', field: 'value', title: "Value", type: 'String'}
			],
		rowClasses: [
			],
		buttons: [
			]}});

merge(config.shadowTiddlers,{
	DefaultTiddlers: "[[GettingStarted]]",
	MainMenu: "[[GettingStarted]]",
	SiteTitle: "My TiddlyWiki",
	SiteSubtitle: "a reusable non-linear personal web notebook",
	SiteUrl: "",
	SideBarOptions: '<<search>><<closeAll>><<permaview>><<newTiddler>><<newJournal "DD MMM YYYY" "journal">><<saveChanges>><<slider chkSliderOptionsPanel OptionsPanel "options \u00bb" "Change TiddlyWiki advanced options">>',
	SideBarTabs: '<<tabs txtMainTab "Timeline" "Timeline" TabTimeline "All" "All tiddlers" TabAll "Tags" "All tags" TabTags "More" "More lists" TabMore>>',
	TabMore: '<<tabs txtMoreTab "Missing" "Missing tiddlers" TabMoreMissing "Orphans" "Orphaned tiddlers" TabMoreOrphans "Shadowed" "Shadowed tiddlers" TabMoreShadowed>>'
	});

merge(config.annotations,{
	AdvancedOptions: "This shadow tiddler provides access to several advanced options",
	ColorPalette: "These values in this shadow tiddler determine the colour scheme of the ~TiddlyWiki user interface",
	DefaultTiddlers: "The tiddlers listed in this shadow tiddler will be automatically displayed when ~TiddlyWiki starts up",
	EditTemplate: "The HTML template in this shadow tiddler determines how tiddlers look while they are being edited",
	GettingStarted: "This shadow tiddler provides basic usage instructions",
	ImportTiddlers: "This shadow tiddler provides access to importing tiddlers",
	MainMenu: "This shadow tiddler is used as the contents of the main menu in the left-hand column of the screen",
	MarkupPreHead: "This tiddler is inserted at the top of the <head> section of the TiddlyWiki HTML file",
	MarkupPostHead: "This tiddler is inserted at the bottom of the <head> section of the TiddlyWiki HTML file",
	MarkupPreBody: "This tiddler is inserted at the top of the <body> section of the TiddlyWiki HTML file",
	MarkupPostBody: "This tiddler is inserted at the end of the <body> section of the TiddlyWiki HTML file immediately after the script block",
	OptionsPanel: "This shadow tiddler is used as the contents of the options panel slider in the right-hand sidebar",
	PageTemplate: "The HTML template in this shadow tiddler determines the overall ~TiddlyWiki layout",
	PluginManager: "This shadow tiddler provides access to the plugin manager",
	SideBarOptions: "This shadow tiddler is used as the contents of the option panel in the right-hand sidebar",
	SideBarTabs: "This shadow tiddler is used as the contents of the tabs panel in the right-hand sidebar",
	SiteSubtitle: "This shadow tiddler is used as the second part of the page title",
	SiteTitle: "This shadow tiddler is used as the first part of the page title",
	SiteUrl: "This shadow tiddler should be set to the full target URL for publication",
	StyleSheetColors: "This shadow tiddler contains CSS definitions related to the color of page elements. ''DO NOT EDIT THIS TIDDLER'', instead make your changes in the StyleSheet shadow tiddler",
	StyleSheet: "This tiddler can contain custom CSS definitions",
	StyleSheetLayout: "This shadow tiddler contains CSS definitions related to the layout of page elements. ''DO NOT EDIT THIS TIDDLER'', instead make your changes in the StyleSheet shadow tiddler",
	StyleSheetLocale: "This shadow tiddler contains CSS definitions related to the translation locale",
	StyleSheetPrint: "This shadow tiddler contains CSS definitions for printing",
	SystemSettings: "This tiddler is used to store configuration options for this TiddlyWiki document",
	TabAll: "This shadow tiddler contains the contents of the 'All' tab in the right-hand sidebar",
	TabMore: "This shadow tiddler contains the contents of the 'More' tab in the right-hand sidebar",
	TabMoreMissing: "This shadow tiddler contains the contents of the 'Missing' tab in the right-hand sidebar",
	TabMoreOrphans: "This shadow tiddler contains the contents of the 'Orphans' tab in the right-hand sidebar",
	TabMoreShadowed: "This shadow tiddler contains the contents of the 'Shadowed' tab in the right-hand sidebar",
	TabTags: "This shadow tiddler contains the contents of the 'Tags' tab in the right-hand sidebar",
	TabTimeline: "This shadow tiddler contains the contents of the 'Timeline' tab in the right-hand sidebar",
	ToolbarCommands: "This shadow tiddler determines which commands are shown in tiddler toolbars",
	ViewTemplate: "The HTML template in this shadow tiddler determines how tiddlers look"
	});
//--
//-- Main
//--

var params = null; // Command line parameters
var store = null; // TiddlyWiki storage
var story = null; // Main story
var formatter = null; // Default formatters for the wikifier
var anim = typeof Animator == "function" ? new Animator() : null; // Animation engine
var readOnly = false; // Whether we're in readonly mode
var highlightHack = null; // Embarrassing hack department...
var hadConfirmExit = false; // Don't warn more than once
var safeMode = false; // Disable all plugins and cookies
var showBackstage; // Whether to include the backstage area
var installedPlugins = []; // Information filled in when plugins are executed
var startingUp = false; // Whether we're in the process of starting up
var pluginInfo,tiddler; // Used to pass information to plugins in loadPlugins()

// Whether this file can be saved back to the same location [Preemption]
window.allowSave = window.allowSave || function(l)
{
	return (document.location.protocol == "file:");
}

// Whether to use the JavaSaver applet
var useJavaSaver = window.allowSave() && (config.browser.isSafari || config.browser.isOpera);

// Allow preemption code a chance to tweak config and useJavaSaver [Preemption]
if (window.tweakConfig) window.tweakConfig();

if(!window || !window.console) {
	console = {tiddlywiki:true,log:function(message) {displayMessage(message);}};
}

// Starting up
function main()
{
	var t10,t9,t8,t7,t6,t5,t4,t3,t2,t1,t0 = new Date();
	startingUp = true;
	var doc = jQuery(document);
	jQuery.noConflict();
	window.onbeforeunload = function(e) {if(window.confirmExit) return confirmExit();};
	params = getParameters();
	if(params)
		params = params.parseParams("open",null,false);
	store = new TiddlyWiki({config:config});
	invokeParamifier(params,"oninit");
	story = new Story("tiddlerDisplay","tiddler");
	addEvent(document,"click",Popup.onDocumentClick);
	saveTest();
	var s;
	for(s=0; s<config.notifyTiddlers.length; s++)
		store.addNotification(config.notifyTiddlers[s].name,config.notifyTiddlers[s].notify);
	t1 = new Date();
	loadShadowTiddlers();
	doc.trigger("loadShadows");
	t2 = new Date();
	store.loadFromDiv("storeArea","store",true);
	doc.trigger("loadTiddlers");
	loadOptions();
	t3 = new Date();
	invokeParamifier(params,"onload");
	t4 = new Date();
	readOnly = window.allowSave() ? false : config.options.chkHttpReadOnly;
	var pluginProblem = loadPlugins("systemConfig");
	doc.trigger("loadPlugins");
	t5 = new Date();
	formatter = new Formatter(config.formatters);
	invokeParamifier(params,"onconfig");
	story.switchTheme(config.options.txtTheme);
	showBackstage = showBackstage !== undefined ? showBackstage : !readOnly;
	t6 = new Date();
	var m;
	for(m in config.macros) {
		if(config.macros[m].init)
			config.macros[m].init();
	}
	t7 = new Date();
	store.notifyAll();
	t8 = new Date();
	restart();
	refreshDisplay();
	t9 = new Date();
	if(pluginProblem) {
		story.displayTiddler(null,"PluginManager");
		displayMessage(config.messages.customConfigError);
	}
	if(showBackstage)
		backstage.init();
	t10 = new Date();
	if(config.options.chkDisplayInstrumentation) {
		displayMessage("LoadShadows " + (t2-t1) + " ms");
		displayMessage("LoadFromDiv " + (t3-t2) + " ms");
		displayMessage("LoadPlugins " + (t5-t4) + " ms");
		displayMessage("Macro init " + (t7-t6) + " ms");
		displayMessage("Notify " + (t8-t7) + " ms");
		displayMessage("Restart " + (t9-t8) + " ms");
		displayMessage("Total: " + (t10-t0) + " ms");
	}
	startingUp = false;
	doc.trigger("startup");
}

// Called on unload. All functions called conditionally since they themselves may have been unloaded.
function unload()
{
	if(window.checkUnsavedChanges)
		checkUnsavedChanges();
	if(window.scrubNodes)
		scrubNodes(document.body);
}

// Restarting
function restart()
{
	invokeParamifier(params,"onstart");
	if(story.isEmpty()) {
		story.displayDefaultTiddlers();
	}
	window.scrollTo(0,0);
}

function saveTest()
{
	var s = document.getElementById("saveTest");
	if(s.hasChildNodes())
		alert(config.messages.savedSnapshotError);
	s.appendChild(document.createTextNode("savetest"));
}

function loadShadowTiddlers()
{
	var shadows = new TiddlyWiki();
	shadows.loadFromDiv("shadowArea","shadows",true);
	shadows.forEachTiddler(function(title,tiddler){config.shadowTiddlers[title] = tiddler.text;});
}

function loadPlugins(tag)
{
	if(safeMode)
		return false;
	var tiddlers = store.getTaggedTiddlers(tag);
	tiddlers.sort(function(a,b) {return a.title < b.title ? -1 : (a.title == b.title ? 0 : 1);});
	var toLoad = [];
	var nLoaded = 0;
	var map = {};
	var nPlugins = tiddlers.length;
	installedPlugins = [];
	var i;
	for(i=0; i<nPlugins; i++) {
		var p = getPluginInfo(tiddlers[i]);
		installedPlugins[i] = p;
		var n = p.Name || p.title;
		if(n)
			map[n] = p;
		n = p.Source;
		if(n)
			map[n] = p;
	}
	var visit = function(p) {
		if(!p || p.done)
			return;
		p.done = 1;
		var reqs = p.Requires;
		if(reqs) {
			reqs = reqs.readBracketedList();
			var i;
			for(i=0; i<reqs.length; i++)
				visit(map[reqs[i]]);
		}
		toLoad.push(p);
	};
	for(i=0; i<nPlugins; i++)
		visit(installedPlugins[i]);
	for(i=0; i<toLoad.length; i++) {
		p = toLoad[i];
		pluginInfo = p;
		tiddler = p.tiddler;
		if(isPluginExecutable(p)) {
			if(isPluginEnabled(p)) {
				p.executed = true;
				var startTime = new Date();
				try {
					if(tiddler.text)
						window.eval(tiddler.text);
					nLoaded++;
				} catch(ex) {
					p.log.push(config.messages.pluginError.format([exceptionText(ex)]));
					p.error = true;
					if(!console.tiddlywiki) {
						console.log("error evaluating " + tiddler.title, ex);
					}
				}
				pluginInfo.startupTime = String((new Date()) - startTime) + "ms";
			} else {
				nPlugins--;
			}
		} else {
			p.warning = true;
		}
	}
	return nLoaded != nPlugins;
}

function getPluginInfo(tiddler)
{
	var p = store.getTiddlerSlices(tiddler.title,["Name","Description","Version","Requires","CoreVersion","Date","Source","Author","License","Browsers"]);
	p.tiddler = tiddler;
	p.title = tiddler.title;
	p.log = [];
	return p;
}

// Check that a particular plugin is valid for execution
function isPluginExecutable(plugin)
{
	if(plugin.tiddler.isTagged("systemConfigForce")) {
		plugin.log.push(config.messages.pluginForced);
		return true;
	}
	if(plugin["CoreVersion"]) {
		var coreVersion = plugin["CoreVersion"].split(".");
		var w = parseInt(coreVersion[0],10) - version.major;
		if(w == 0 && coreVersion[1])
			w = parseInt(coreVersion[1],10) - version.minor;
		if(w == 0 && coreVersion[2])
			w = parseInt(coreVersion[2],10) - version.revision;
		if(w > 0) {
			plugin.log.push(config.messages.pluginVersionError);
			return false;
		}
	}
	return true;
}

function isPluginEnabled(plugin)
{
	if(plugin.tiddler.isTagged("systemConfigDisable")) {
		plugin.log.push(config.messages.pluginDisabled);
		return false;
	}
	return true;
}

//--
//-- Paramifiers
//--

function getParameters()
{
	var p = null;
	if(window.location.hash) {
		p = decodeURIComponent(window.location.hash.substr(1));
		if(config.browser.firefoxDate != null && config.browser.firefoxDate[1] < "20051111")
			p = convertUTF8ToUnicode(p);
	}
	return p;
}

function invokeParamifier(params,handler)
{
	if(!params || params.length == undefined || params.length <= 1)
		return;
	var i;
	for(i=1; i<params.length; i++) {
		var p = config.paramifiers[params[i].name];
		if(p && p[handler] instanceof Function)
			p[handler](params[i].value);
		else {
			var h = config.optionHandlers[params[i].name.substr(0,3)];
			if(h && h.set instanceof Function)
				h.set(params[i].name,params[i].value);
		}
	}
}

config.paramifiers = {};

config.paramifiers.start = {
	oninit: function(v) {
		safeMode = v.toLowerCase() == "safe";
	}
};

config.paramifiers.open = {
	onstart: function(v) {
		if(!readOnly || store.tiddlerExists(v) || store.isShadowTiddler(v))
			story.displayTiddler("bottom",v,null,false,null);
	}
};

config.paramifiers.story = {
	onstart: function(v) {
		var list = store.getTiddlerText(v,"").parseParams("open",null,false);
		invokeParamifier(list,"onstart");
	}
};

config.paramifiers.search = {
	onstart: function(v) {
		story.search(v,false,false);
	}
};

config.paramifiers.searchRegExp = {
	onstart: function(v) {
		story.prototype.search(v,false,true);
	}
};

config.paramifiers.tag = {
	onstart: function(v) {
		story.displayTiddlers(null,store.filterTiddlers("[tag["+v+"]]"),null,false,null);
	}
};

config.paramifiers.newTiddler = {
	onstart: function(v) {
		var args = v.parseParams("anon", null, null)[0];
		var title = args.title ? args.title[0] : v;
		var customFields = args.fields ? args.fields[0] : null;
		if(!readOnly) {
			story.displayTiddler(null,title,DEFAULT_EDIT_TEMPLATE,false,null,customFields);
			story.focusTiddler(title,"text");
			var i,tags = args.tag || [];
			for(i=0;i<tags.length;i++) {
				story.setTiddlerTag(title,tags[i],+1);
			}
		}
	}
};

config.paramifiers.newJournal = {
	onstart: function(v) {
		if(!readOnly) {
			var now = new Date();
			var title = now.formatString(v.trim());
			story.displayTiddler(null,title,DEFAULT_EDIT_TEMPLATE);
			story.focusTiddler(title,"text");
		}
	}
};

config.paramifiers.readOnly = {
	onconfig: function(v) {
		var p = v.toLowerCase();
		readOnly = p == "yes" ? true : (p == "no" ? false : readOnly);
	}
};

config.paramifiers.theme = {
	onconfig: function(v) {
		story.switchTheme(v);
	}
};

config.paramifiers.upgrade = {
	onstart: function(v) {
		upgradeFrom(v);
	}
};

config.paramifiers.recent= {
	onstart: function(v) {
		var titles=[];
		var i,tiddlers=store.getTiddlers("modified","excludeLists").reverse();
		for(i=0; i<v && i<tiddlers.length; i++)
			titles.push(tiddlers[i].title);
		story.displayTiddlers(null,titles);
	}
};

config.paramifiers.filter = {
	onstart: function(v) {
		story.displayTiddlers(null,store.filterTiddlers(v),null,false);
	}
};

//--
//-- Formatter helpers
//--

function Formatter(formatters)
{
	var n;
	this.formatters = [];
	var pattern = [];
	for(n=0; n<formatters.length; n++) {
		pattern.push("(" + formatters[n].match + ")");
		this.formatters.push(formatters[n]);
	}
	this.formatterRegExp = new RegExp(pattern.join("|"),"mg");
}

config.formatterHelpers = {

	createElementAndWikify: function(w)
	{
		w.subWikifyTerm(createTiddlyElement(w.output,this.element),this.termRegExp);
	},

	inlineCssHelper: function(w)
	{
		var styles = [];
		config.textPrimitives.cssLookaheadRegExp.lastIndex = w.nextMatch;
		var lookaheadMatch = config.textPrimitives.cssLookaheadRegExp.exec(w.source);
		while(lookaheadMatch && lookaheadMatch.index == w.nextMatch) {
			var s,v;
			if(lookaheadMatch[1]) {
				s = lookaheadMatch[1].unDash();
				v = lookaheadMatch[2];
			} else {
				s = lookaheadMatch[3].unDash();
				v = lookaheadMatch[4];
			}
			if(s=="bgcolor")
				s = "backgroundColor";
			if(s=="float")
				s = "cssFloat";
			styles.push({style: s, value: v});
			w.nextMatch = lookaheadMatch.index + lookaheadMatch[0].length;
			config.textPrimitives.cssLookaheadRegExp.lastIndex = w.nextMatch;
			lookaheadMatch = config.textPrimitives.cssLookaheadRegExp.exec(w.source);
		}
		return styles;
	},

	applyCssHelper: function(e,styles)
	{
		var t;
		for(t=0; t< styles.length; t++) {
			try {
				e.style[styles[t].style] = styles[t].value;
			} catch (ex) {
			}
		}
	},

	enclosedTextHelper: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch && lookaheadMatch.index == w.matchStart) {
			var text = lookaheadMatch[1];
			if(config.browser.isIE)
				text = text.replace(/\n/g,"\r");
			createTiddlyElement(w.output,this.element,null,null,text);
			w.nextMatch = lookaheadMatch.index + lookaheadMatch[0].length;
		}
	},

	isExternalLink: function(link)
	{
		if(store.tiddlerExists(link) || store.isShadowTiddler(link)) {
			return false;
		}
		var urlRegExp = new RegExp(config.textPrimitives.urlPattern,"mg");
		if(urlRegExp.exec(link)) {
			return true;
		}
		if(link.indexOf(".")!=-1 || link.indexOf("\\")!=-1 || link.indexOf("/")!=-1 || link.indexOf("#")!=-1) {
			return true;
		}
		return false;
	}

};

//--
//-- Standard formatters
//--

config.formatters = [
{
	name: "table",
	match: "^\\|(?:[^\\n]*)\\|(?:[fhck]?)$",
	lookaheadRegExp: /^\|([^\n]*)\|([fhck]?)$/mg,
	rowTermRegExp: /(\|(?:[fhck]?)$\n?)/mg,
	cellRegExp: /(?:\|([^\n\|]*)\|)|(\|[fhck]?$\n?)/mg,
	cellTermRegExp: /((?:\x20*)\|)/mg,
	rowTypes: {"c":"caption", "h":"thead", "":"tbody", "f":"tfoot"},
	handler: function(w)
	{
		var table = createTiddlyElement(w.output,"table",null,"twtable");
		var prevColumns = [];
		var currRowType = null;
		var rowContainer;
		var rowCount = 0;
		var onmouseover = function() {jQuery(this).addClass("hoverRow");};
		var onmouseout = function() {jQuery(this).removeClass("hoverRow");};
		w.nextMatch = w.matchStart;
		this.lookaheadRegExp.lastIndex = w.nextMatch;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		while(lookaheadMatch && lookaheadMatch.index == w.nextMatch) {
			var nextRowType = lookaheadMatch[2];
			if(nextRowType == "k") {
				table.className = lookaheadMatch[1];
				w.nextMatch += lookaheadMatch[0].length+1;
			} else {
				if(nextRowType != currRowType) {
					rowContainer = createTiddlyElement(table,this.rowTypes[nextRowType]);
					currRowType = nextRowType;
				}
				if(currRowType == "c") {
					// Caption
					w.nextMatch++;
					if(rowContainer != table.firstChild)
						table.insertBefore(rowContainer,table.firstChild);
					rowContainer.setAttribute("align",rowCount == 0?"top":"bottom");
					w.subWikifyTerm(rowContainer,this.rowTermRegExp);
				} else {
					var theRow = createTiddlyElement(rowContainer,"tr",null,rowCount%2?"oddRow":"evenRow");
					theRow.onmouseover = onmouseover;
					theRow.onmouseout = onmouseout;
					this.rowHandler(w,theRow,prevColumns);
					rowCount++;
				}
			}
			this.lookaheadRegExp.lastIndex = w.nextMatch;
			lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		}
	},
	rowHandler: function(w,e,prevColumns)
	{
		var col = 0;
		var colSpanCount = 1;
		var prevCell = null;
		this.cellRegExp.lastIndex = w.nextMatch;
		var cellMatch = this.cellRegExp.exec(w.source);
		while(cellMatch && cellMatch.index == w.nextMatch) {
			if(cellMatch[1] == "~") {
				// Rowspan
				var last = prevColumns[col];
				if(last) {
					last.rowSpanCount++;
					last.element.setAttribute("rowspan",last.rowSpanCount);
					last.element.setAttribute("rowSpan",last.rowSpanCount); // Needed for IE
					last.element.valign = "center";
					if(colSpanCount > 1) {
						last.element.setAttribute("colspan",colSpanCount);
						last.element.setAttribute("colSpan",colSpanCount); // Needed for IE
						colSpanCount = 1;
					}
				}
				w.nextMatch = this.cellRegExp.lastIndex-1;
			} else if(cellMatch[1] == ">") {
				// Colspan
				colSpanCount++;
				w.nextMatch = this.cellRegExp.lastIndex-1;
			} else if(cellMatch[2]) {
				// End of row
				if(prevCell && colSpanCount > 1) {
					prevCell.setAttribute("colspan",colSpanCount);
					prevCell.setAttribute("colSpan",colSpanCount); // Needed for IE
				}
				w.nextMatch = this.cellRegExp.lastIndex;
				break;
			} else {
				// Cell
				w.nextMatch++;
				var styles = config.formatterHelpers.inlineCssHelper(w);
				var spaceLeft = false;
				var chr = w.source.substr(w.nextMatch,1);
				while(chr == " ") {
					spaceLeft = true;
					w.nextMatch++;
					chr = w.source.substr(w.nextMatch,1);
				}
				var cell;
				if(chr == "!") {
					cell = createTiddlyElement(e,"th");
					w.nextMatch++;
				} else {
					cell = createTiddlyElement(e,"td");
				}
				prevCell = cell;
				prevColumns[col] = {rowSpanCount:1,element:cell};
				if(colSpanCount > 1) {
					cell.setAttribute("colspan",colSpanCount);
					cell.setAttribute("colSpan",colSpanCount); // Needed for IE
					colSpanCount = 1;
				}
				config.formatterHelpers.applyCssHelper(cell,styles);
				w.subWikifyTerm(cell,this.cellTermRegExp);
				if(w.matchText.substr(w.matchText.length-2,1) == " ") // spaceRight
					cell.align = spaceLeft ? "center" : "left";
				else if(spaceLeft)
					cell.align = "right";
				w.nextMatch--;
			}
			col++;
			this.cellRegExp.lastIndex = w.nextMatch;
			cellMatch = this.cellRegExp.exec(w.source);
		}
	}
},

{
	name: "heading",
	match: "^!{1,6}",
	termRegExp: /(\n)/mg,
	handler: function(w)
	{
		w.subWikifyTerm(createTiddlyElement(w.output,"h" + w.matchLength),this.termRegExp);
	}
},

{
	name: "list",
	match: "^(?:[\\*#;:]+)",
	lookaheadRegExp: /^(?:(?:(\*)|(#)|(;)|(:))+)/mg,
	termRegExp: /(\n)/mg,
	handler: function(w)
	{
		var stack = [w.output];
		var currLevel = 0, currType = null;
		var listLevel, listType, itemType, baseType;
		w.nextMatch = w.matchStart;
		this.lookaheadRegExp.lastIndex = w.nextMatch;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		while(lookaheadMatch && lookaheadMatch.index == w.nextMatch) {
			if(lookaheadMatch[1]) {
				listType = "ul";
				itemType = "li";
			} else if(lookaheadMatch[2]) {
				listType = "ol";
				itemType = "li";
			} else if(lookaheadMatch[3]) {
				listType = "dl";
				itemType = "dt";
			} else if(lookaheadMatch[4]) {
				listType = "dl";
				itemType = "dd";
			}
			if(!baseType)
				baseType = listType;
			listLevel = lookaheadMatch[0].length;
			w.nextMatch += lookaheadMatch[0].length;
			var t;
			if(listLevel > currLevel) {
				for(t=currLevel; t<listLevel; t++) {
					var target = (currLevel == 0) ? stack[stack.length-1] : stack[stack.length-1].lastChild;
					stack.push(createTiddlyElement(target,listType));
				}
			} else if(listType!=baseType && listLevel==1) {
				w.nextMatch -= lookaheadMatch[0].length;
				return;
			} else if(listLevel < currLevel) {
				for(t=currLevel; t>listLevel; t--)
					stack.pop();
			} else if(listLevel == currLevel && listType != currType) {
				stack.pop();
				stack.push(createTiddlyElement(stack[stack.length-1].lastChild,listType));
			}
			currLevel = listLevel;
			currType = listType;
			var e = createTiddlyElement(stack[stack.length-1],itemType);
			w.subWikifyTerm(e,this.termRegExp);
			this.lookaheadRegExp.lastIndex = w.nextMatch;
			lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		}
	}
},

{
	name: "quoteByBlock",
	match: "^<<<\\n",
	termRegExp: /(^<<<(\n|$))/mg,
	element: "blockquote",
	handler: config.formatterHelpers.createElementAndWikify
},

{
	name: "quoteByLine",
	match: "^>+",
	lookaheadRegExp: /^>+/mg,
	termRegExp: /(\n)/mg,
	element: "blockquote",
	handler: function(w)
	{
		var stack = [w.output];
		var currLevel = 0;
		var newLevel = w.matchLength;
		var t,matched;
		do {
			if(newLevel > currLevel) {
				for(t=currLevel; t<newLevel; t++)
					stack.push(createTiddlyElement(stack[stack.length-1],this.element));
			} else if(newLevel < currLevel) {
				for(t=currLevel; t>newLevel; t--)
					stack.pop();
			}
			currLevel = newLevel;
			w.subWikifyTerm(stack[stack.length-1],this.termRegExp);
			createTiddlyElement(stack[stack.length-1],"br");
			this.lookaheadRegExp.lastIndex = w.nextMatch;
			var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
			matched = lookaheadMatch && lookaheadMatch.index == w.nextMatch;
			if(matched) {
				newLevel = lookaheadMatch[0].length;
				w.nextMatch += lookaheadMatch[0].length;
			}
		} while(matched);
	}
},

{
	name: "rule",
	match: "^----+$\\n?|<hr ?/?>\\n?",
	handler: function(w)
	{
		createTiddlyElement(w.output,"hr");
	}
},

{
	name: "monospacedByLine",
	match: "^(?:/\\*\\{\\{\\{\\*/|\\{\\{\\{|//\\{\\{\\{|<!--\\{\\{\\{-->)\\n",
	element: "pre",
	handler: function(w)
	{
		switch(w.matchText) {
		case "/*{{{*/\n": // CSS
			this.lookaheadRegExp = /\/\*\{\{\{\*\/\n*((?:^[^\n]*\n)+?)(\n*^\f*\/\*\}\}\}\*\/$\n?)/mg;
			break;
		case "{{{\n": // monospaced block
			this.lookaheadRegExp = /^\{\{\{\n((?:^[^\n]*\n)+?)(^\f*\}\}\}$\n?)/mg;
			break;
		case "//{{{\n": // plugin
			this.lookaheadRegExp = /^\/\/\{\{\{\n\n*((?:^[^\n]*\n)+?)(\n*^\f*\/\/\}\}\}$\n?)/mg;
			break;
		case "<!--{{{-->\n": //template
			this.lookaheadRegExp = /<!--\{\{\{-->\n*((?:^[^\n]*\n)+?)(\n*^\f*<!--\}\}\}-->$\n?)/mg;
			break;
		default:
			break;
		}
		config.formatterHelpers.enclosedTextHelper.call(this,w);
	}
},

{
	name: "wikifyComment",
	match: "^(?:/\\*\\*\\*|<!---)\\n",
	handler: function(w)
	{
		var termRegExp = (w.matchText == "/***\n") ? (/(^\*\*\*\/\n)/mg) : (/(^--->\n)/mg);
		w.subWikifyTerm(w.output,termRegExp);
	}
},

{
	name: "macro",
	match: "<<",
	lookaheadRegExp: /<<([^>\s]+)(?:\s*)((?:[^>]|(?:>(?!>)))*)>>/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch && lookaheadMatch.index == w.matchStart && lookaheadMatch[1]) {
			w.nextMatch = this.lookaheadRegExp.lastIndex;
			invokeMacro(w.output,lookaheadMatch[1],lookaheadMatch[2],w,w.tiddler);
		}
	}
},

{
	name: "prettyLink",
	match: "\\[\\[",
	lookaheadRegExp: /\[\[(.*?)(?:\|(~)?(.*?))?\]\]/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch && lookaheadMatch.index == w.matchStart) {
			var e;
			var text = lookaheadMatch[1];
			if(lookaheadMatch[3]) {
				// Pretty bracketted link
				var link = lookaheadMatch[3];
				e = (!lookaheadMatch[2] && config.formatterHelpers.isExternalLink(link)) ?
						createExternalLink(w.output,link) : createTiddlyLink(w.output,link,false,null,w.isStatic,w.tiddler);
			} else {
				// Simple bracketted link
				e = createTiddlyLink(w.output,text,false,null,w.isStatic,w.tiddler);
			}
			createTiddlyText(e,text);
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "wikiLink",
	match: config.textPrimitives.unWikiLink+"?"+config.textPrimitives.wikiLink,
	handler: function(w)
	{
		if(w.matchText.substr(0,1) == config.textPrimitives.unWikiLink) {
			w.outputText(w.output,w.matchStart+1,w.nextMatch);
			return;
		}
		if(w.matchStart > 0) {
			var preRegExp = new RegExp(config.textPrimitives.anyLetterStrict,"mg");
			preRegExp.lastIndex = w.matchStart-1;
			var preMatch = preRegExp.exec(w.source);
			if(preMatch.index == w.matchStart-1) {
				w.outputText(w.output,w.matchStart,w.nextMatch);
				return;
			}
		}
		if(w.autoLinkWikiWords || store.isShadowTiddler(w.matchText)) {
			var link = createTiddlyLink(w.output,w.matchText,false,null,w.isStatic,w.tiddler);
			w.outputText(link,w.matchStart,w.nextMatch);
		} else {
			w.outputText(w.output,w.matchStart,w.nextMatch);
		}
	}
},

{
	name: "urlLink",
	match: config.textPrimitives.urlPattern,
	handler: function(w)
	{
		w.outputText(createExternalLink(w.output,w.matchText),w.matchStart,w.nextMatch);
	}
},

{
	name: "image",
	match: "\\[[<>]?[Ii][Mm][Gg]\\[",
	lookaheadRegExp: /\[([<]?)(>?)[Ii][Mm][Gg]\[(?:([^\|\]]+)\|)?([^\[\]\|]+)\](?:\[([^\]]*)\])?\]/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch && lookaheadMatch.index == w.matchStart) {
			var e = w.output;
			if(lookaheadMatch[5]) {
				var link = lookaheadMatch[5];
				e = config.formatterHelpers.isExternalLink(link) ? createExternalLink(w.output,link) : createTiddlyLink(w.output,link,false,null,w.isStatic,w.tiddler);
				jQuery(e).addClass("imageLink");
			}
			var img = createTiddlyElement(e,"img");
			if(lookaheadMatch[1])
				img.align = "left";
			else if(lookaheadMatch[2])
				img.align = "right";
			if(lookaheadMatch[3]) {
				img.title = lookaheadMatch[3];
				img.setAttribute("alt",lookaheadMatch[3]);
			}
			img.src = lookaheadMatch[4];
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "html",
	match: "<[Hh][Tt][Mm][Ll]>",
	lookaheadRegExp: /<[Hh][Tt][Mm][Ll]>((?:.|\n)*?)<\/[Hh][Tt][Mm][Ll]>/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch && lookaheadMatch.index == w.matchStart) {
			createTiddlyElement(w.output,"span").innerHTML = lookaheadMatch[1];
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "commentByBlock",
	match: "/%",
	lookaheadRegExp: /\/%((?:.|\n)*?)%\//mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch && lookaheadMatch.index == w.matchStart)
			w.nextMatch = this.lookaheadRegExp.lastIndex;
	}
},

{
	name: "characterFormat",
	match: "''|//|__|\\^\\^|~~|--(?!\\s|$)|\\{\\{\\{",
	handler: function(w)
	{
		switch(w.matchText) {
		case "''":
			w.subWikifyTerm(w.output.appendChild(document.createElement("strong")),/('')/mg);
			break;
		case "//":
			w.subWikifyTerm(createTiddlyElement(w.output,"em"),/(\/\/)/mg);
			break;
		case "__":
			w.subWikifyTerm(createTiddlyElement(w.output,"u"),/(__)/mg);
			break;
		case "^^":
			w.subWikifyTerm(createTiddlyElement(w.output,"sup"),/(\^\^)/mg);
			break;
		case "~~":
			w.subWikifyTerm(createTiddlyElement(w.output,"sub"),/(~~)/mg);
			break;
		case "--":
			w.subWikifyTerm(createTiddlyElement(w.output,"strike"),/(--)/mg);
			break;
		case "{{{":
			var lookaheadRegExp = /\{\{\{((?:.|\n)*?)\}\}\}/mg;
			lookaheadRegExp.lastIndex = w.matchStart;
			var lookaheadMatch = lookaheadRegExp.exec(w.source);
			if(lookaheadMatch && lookaheadMatch.index == w.matchStart) {
				createTiddlyElement(w.output,"code",null,null,lookaheadMatch[1]);
				w.nextMatch = lookaheadRegExp.lastIndex;
			}
			break;
		}
	}
},

{
	name: "customFormat",
	match: "@@|\\{\\{",
	handler: function(w)
	{
		switch(w.matchText) {
		case "@@":
			var e = createTiddlyElement(w.output,"span");
			var styles = config.formatterHelpers.inlineCssHelper(w);
			if(styles.length == 0)
				e.className = "marked";
			else
				config.formatterHelpers.applyCssHelper(e,styles);
			w.subWikifyTerm(e,/(@@)/mg);
			break;
		case "{{":
			var lookaheadRegExp = /\{\{[\s]*([\w]+[\s\w]*)[\s]*\{(\n?)/mg;
			lookaheadRegExp.lastIndex = w.matchStart;
			var lookaheadMatch = lookaheadRegExp.exec(w.source);
			if(lookaheadMatch) {
				w.nextMatch = lookaheadRegExp.lastIndex;
				e = createTiddlyElement(w.output,lookaheadMatch[2] == "\n" ? "div" : "span",null,lookaheadMatch[1]);
				w.subWikifyTerm(e,/(\}\}\})/mg);
			}
			break;
		}
	}
},

{
	name: "mdash",
	match: "--",
	handler: function(w)
	{
		createTiddlyElement(w.output,"span").innerHTML = "&mdash;";
	}
},

{
	name: "lineBreak",
	match: "\\n|<br ?/?>",
	handler: function(w)
	{
		createTiddlyElement(w.output,"br");
	}
},

{
	name: "rawText",
	match: "\"{3}|<nowiki>",
	lookaheadRegExp: /(?:\"{3}|<nowiki>)((?:.|\n)*?)(?:\"{3}|<\/nowiki>)/mg,
	handler: function(w)
	{
		this.lookaheadRegExp.lastIndex = w.matchStart;
		var lookaheadMatch = this.lookaheadRegExp.exec(w.source);
		if(lookaheadMatch && lookaheadMatch.index == w.matchStart) {
			createTiddlyElement(w.output,"span",null,null,lookaheadMatch[1]);
			w.nextMatch = this.lookaheadRegExp.lastIndex;
		}
	}
},

{
	name: "htmlEntitiesEncoding",
	match: "(?:(?:&#?[a-zA-Z0-9]{2,8};|.)(?:&#?(?:x0*(?:3[0-6][0-9a-fA-F]|1D[c-fC-F][0-9a-fA-F]|20[d-fD-F][0-9a-fA-F]|FE2[0-9a-fA-F])|0*(?:76[89]|7[7-9][0-9]|8[0-7][0-9]|761[6-9]|76[2-7][0-9]|84[0-3][0-9]|844[0-7]|6505[6-9]|6506[0-9]|6507[0-1]));)+|&#?[a-zA-Z0-9]{2,8};)",
	handler: function(w)
	{
		createTiddlyElement(w.output,"span").innerHTML = w.matchText;
	}
}

];

//--
//-- Wikifier
//--

function getParser(tiddler,format)
{
	if(tiddler) {
		if(!format)
			format = tiddler.fields["wikiformat"];
		var i;
		if(format) {
			for(i in config.parsers) {
				if(format == config.parsers[i].format)
					return config.parsers[i];
			}
		} else {
			for(i in config.parsers) {
				if(tiddler.isTagged(config.parsers[i].formatTag))
					return config.parsers[i];
			}
		}
	}
	return formatter;
}

function Wikifier(source,formatter,highlightRegExp,tiddler)
{
	this.source = source;
	this.output = null;
	this.formatter = formatter;
	this.nextMatch = 0;
	this.autoLinkWikiWords = tiddler && tiddler.autoLinkWikiWords() == false ? false : true;
	this.highlightRegExp = highlightRegExp;
	this.highlightMatch = null;
	this.isStatic = false;
	if(highlightRegExp) {
		highlightRegExp.lastIndex = 0;
		this.highlightMatch = highlightRegExp.exec(source);
	}
	this.tiddler = tiddler;
}

Wikifier.prototype.wikifyPlain = function()
{
	var e = createTiddlyElement(document.body,"div");
	e.style.display = "none";
	this.subWikify(e);
	var text = jQuery(e).text();
	jQuery(e).remove();
	return text;
};

Wikifier.prototype.subWikify = function(output,terminator)
{
	try {
		if(terminator)
			this.subWikifyTerm(output,new RegExp("(" + terminator + ")","mg"));
		else
			this.subWikifyUnterm(output);
	} catch(ex) {
		showException(ex);
	}
};

Wikifier.prototype.subWikifyUnterm = function(output)
{
	var oldOutput = this.output;
	this.output = output;
	this.formatter.formatterRegExp.lastIndex = this.nextMatch;
	var formatterMatch = this.formatter.formatterRegExp.exec(this.source);
	while(formatterMatch) {
		// Output any text before the match
		if(formatterMatch.index > this.nextMatch)
			this.outputText(this.output,this.nextMatch,formatterMatch.index);
		// Set the match parameters for the handler
		this.matchStart = formatterMatch.index;
		this.matchLength = formatterMatch[0].length;
		this.matchText = formatterMatch[0];
		this.nextMatch = this.formatter.formatterRegExp.lastIndex;
		var t;
		for(t=1; t<formatterMatch.length; t++) {
			if(formatterMatch[t]) {
				this.formatter.formatters[t-1].handler(this);
				this.formatter.formatterRegExp.lastIndex = this.nextMatch;
				break;
			}
		}
		formatterMatch = this.formatter.formatterRegExp.exec(this.source);
	}
	if(this.nextMatch < this.source.length) {
		this.outputText(this.output,this.nextMatch,this.source.length);
		this.nextMatch = this.source.length;
	}
	this.output = oldOutput;
};

Wikifier.prototype.subWikifyTerm = function(output,terminatorRegExp)
{
	var oldOutput = this.output;
	this.output = output;
	terminatorRegExp.lastIndex = this.nextMatch;
	var terminatorMatch = terminatorRegExp.exec(this.source);
	this.formatter.formatterRegExp.lastIndex = this.nextMatch;
	var formatterMatch = this.formatter.formatterRegExp.exec(terminatorMatch ? this.source.substr(0,terminatorMatch.index) : this.source);
	while(terminatorMatch || formatterMatch) {
		if(terminatorMatch && (!formatterMatch || terminatorMatch.index <= formatterMatch.index)) {
			if(terminatorMatch.index > this.nextMatch)
				this.outputText(this.output,this.nextMatch,terminatorMatch.index);
			this.matchText = terminatorMatch[1];
			this.matchLength = terminatorMatch[1].length;
			this.matchStart = terminatorMatch.index;
			this.nextMatch = this.matchStart + this.matchLength;
			this.output = oldOutput;
			return;
		}
		if(formatterMatch.index > this.nextMatch)
			this.outputText(this.output,this.nextMatch,formatterMatch.index);
		this.matchStart = formatterMatch.index;
		this.matchLength = formatterMatch[0].length;
		this.matchText = formatterMatch[0];
		this.nextMatch = this.formatter.formatterRegExp.lastIndex;
		var t;
		for(t=1; t<formatterMatch.length; t++) {
			if(formatterMatch[t]) {
				this.formatter.formatters[t-1].handler(this);
				this.formatter.formatterRegExp.lastIndex = this.nextMatch;
				break;
			}
		}
		terminatorRegExp.lastIndex = this.nextMatch;
		terminatorMatch = terminatorRegExp.exec(this.source);
		formatterMatch = this.formatter.formatterRegExp.exec(terminatorMatch ? this.source.substr(0,terminatorMatch.index) : this.source);
	}
	if(this.nextMatch < this.source.length) {
		this.outputText(this.output,this.nextMatch,this.source.length);
		this.nextMatch = this.source.length;
	}
	this.output = oldOutput;
};

Wikifier.prototype.outputText = function(place,startPos,endPos)
{
	while(this.highlightMatch && (this.highlightRegExp.lastIndex > startPos) && (this.highlightMatch.index < endPos) && (startPos < endPos)) {
		if(this.highlightMatch.index > startPos) {
			createTiddlyText(place,this.source.substring(startPos,this.highlightMatch.index));
			startPos = this.highlightMatch.index;
		}
		var highlightEnd = Math.min(this.highlightRegExp.lastIndex,endPos);
		createTiddlyElement(place,"span",null,"highlight",this.source.substring(startPos,highlightEnd));
		startPos = highlightEnd;
		if(startPos >= this.highlightRegExp.lastIndex)
			this.highlightMatch = this.highlightRegExp.exec(this.source);
	}
	if(startPos < endPos) {
		createTiddlyText(place,this.source.substring(startPos,endPos));
	}
};

function wikify(source,output,highlightRegExp,tiddler)
{
	if(source) {
		var wikifier = new Wikifier(source,getParser(tiddler),highlightRegExp,tiddler);
		var t0 = new Date();
		wikifier.subWikify(output);
		if(tiddler && config.options.chkDisplayInstrumentation)
			displayMessage("wikify:" +tiddler.title+ " in " + (new Date()-t0) + " ms");
	}
}

function wikifyStatic(source,highlightRegExp,tiddler,format)
{
	var e = createTiddlyElement(document.body,"pre");
	e.style.display = "none";
	var html = "";
	if(source && source != "") {
		if(!tiddler)
			tiddler = new Tiddler("temp");
		var wikifier = new Wikifier(source,getParser(tiddler,format),highlightRegExp,tiddler);
		wikifier.isStatic = true;
		wikifier.subWikify(e);
		html = e.innerHTML;
		jQuery(e).remove();
	}
	return html;
}

function wikifyPlainText(text,limit,tiddler)
{
	if(limit > 0)
		text = text.substr(0,limit);
	var wikifier = new Wikifier(text,formatter,null,tiddler);
	return wikifier.wikifyPlain();
}

function highlightify(source,output,highlightRegExp,tiddler)
{
	if(source) {
		var wikifier = new Wikifier(source,formatter,highlightRegExp,tiddler);
		wikifier.outputText(output,0,source.length);
	}
}

//--
//-- Macro definitions
//--

function invokeMacro(place,macro,params,wikifier,tiddler)
{
	try {
		var m = config.macros[macro];
		if(m && m.handler) {
			var tiddlerElem = story.findContainingTiddler(place);
			window.tiddler = tiddlerElem ? store.getTiddler(tiddlerElem.getAttribute("tiddler")) : null;
			window.place = place;
			var allowEval = true;
			if(config.evaluateMacroParameters=="system") {
				if(!tiddler || tiddler.tags.indexOf("systemAllowEval") == -1) {
					allowEval = false;
				}
			}
			m.handler(place,macro,m.noPreParse?null:params.readMacroParams(!allowEval),wikifier,params,tiddler);
		} else {
			createTiddlyError(place,config.messages.macroError.format([macro]),config.messages.macroErrorDetails.format([macro,config.messages.missingMacro]));
		}
	} catch(ex) {
		createTiddlyError(place,config.messages.macroError.format([macro]),config.messages.macroErrorDetails.format([macro,ex.toString()]));
	}
}

config.macros.version.handler = function(place)
{
	jQuery("<span/>").text(formatVersion()).appendTo(place);
};

config.macros.today.handler = function(place,macroName,params)
{
	var now = new Date();
	var text = params[0] ? now.formatString(params[0].trim()) : now.toLocaleString();
	jQuery("<span/>").text(text).appendTo(place);
};

config.macros.list.template = "<<view title link>>";
config.macros.list.handler = function(place,macroName,params,wikifier,paramString)
{
	var list = document.createElement("ul");
	jQuery(list).attr({ refresh: "macro", macroName: macroName }).data("params", paramString);
	place.appendChild(list);
	this.refresh(list);
};

config.macros.list.refresh = function(list) {
	var paramString = jQuery(list).data("params");
	var params = paramString.readMacroParams();
	var args = paramString.parseParams("anon", null, null)[0];
	var type = args.anon ? args.anon[0] : "all";
	jQuery(list).empty().addClass("list list-" + type);
	var template = args.template ? store.getTiddlerText(args.template[0]) : false;
	if(!template) {
		template = config.macros.list.template;
	}
	if(this[type].prompt)
		createTiddlyElement(list,"li",null,"listTitle",this[type].prompt);
	var results;
	if(this[type].handler)
		results = this[type].handler(params);
	var t;
	for(t = 0; t < results.length; t++) {
		var li = document.createElement("li");
		list.appendChild(li);
		var tiddler = results[t];
		if(typeof(tiddler) == 'string') { // deal with missing etc..
				tiddler = store.getTiddler(tiddler) || new Tiddler(tiddler);
		}
		wikify(template, li, null, tiddler);
	}
	if(results.length === 0 && args.emptyMessage) {
		jQuery(list).addClass("emptyList");
		jQuery("<li />").text(args.emptyMessage[0]).appendTo(list);
	}
};

config.macros.list.all.handler = function(params)
{
	return store.reverseLookup("tags","excludeLists",false,"title");
};

config.macros.list.missing.handler = function(params)
{
	return store.getMissingLinks();
};

config.macros.list.orphans.handler = function(params)
{
	return store.getOrphans();
};

config.macros.list.shadowed.handler = function(params)
{
	return store.getShadowed();
};

config.macros.list.touched.handler = function(params)
{
	return store.getTouched();
};

config.macros.list.filter.handler = function(params)
{
	var filter = params[1];
	var results = [];
	if(filter) {
		var tiddlers = store.filterTiddlers(filter);
		var t;
		for(t=0; t<tiddlers.length; t++)
			results.push(tiddlers[t].title);
	}
	return results;
};

config.macros.allTags.handler = function(place,macroName,params)
{
	var tags = store.getTags(params[0]);
	var ul = createTiddlyElement(place,"ul");
	if(tags.length == 0)
		createTiddlyElement(ul,"li",null,"listTitle",this.noTags);
	var t;
	for(t=0; t<tags.length; t++) {
		var title = tags[t][0];
		var info = getTiddlyLinkInfo(title);
		var li = createTiddlyElement(ul,"li");
		var btn = createTiddlyButton(li,title + " (" + tags[t][1] + ")",this.tooltip.format([title]),onClickTag,info.classes);
		btn.setAttribute("tag",title);
		btn.setAttribute("refresh","link");
		btn.setAttribute("tiddlyLink",title);
		if(params[1]) {
			btn.setAttribute("sortby",params[1]);
		}
	}
};

var macro = config.macros.timeline;
merge(macro, {
	handler: function(place,macroName,params, wikifier, paramString, tiddler) {
		var container = jQuery("<div />").attr("params", paramString).
			attr("macroName", macroName).appendTo(place)[0];
		macro.refresh(container);
	},
	refresh: function(container) {
		jQuery(container).attr("refresh", "macro").empty();
		var paramString = jQuery(container).attr("params");
		var args = paramString.parseParams("anon", null, null)[0];
		var params = args.anon || [];

		var field = params[0] || "modified";
		var prefix = field.charAt(0);
		var no_prefix_field = prefix === "-" || prefix === "+" ? field.substr(1, field.length) : field;
		var dateFormat = params[2] || this.dateFormat;
		var groupTemplate = macro.groupTemplate.format(no_prefix_field, dateFormat);
		groupTemplate = args.groupTemplate ? store.getTiddlerText(args.groupTemplate[0]) || groupTemplate :
			groupTemplate;

		var itemTemplate = macro.itemTemplate;
		itemTemplate = args.template ? store.getTiddlerText(args.template[0]) || itemTemplate :
			itemTemplate;

		var tiddlers = args.filter ? store.sortTiddlers(store.filterTiddlers(args.filter[0]), field) :
			store.reverseLookup("tags", "excludeLists", false, field);
		var lastGroup = "", ul;
		var last = params[1] ? tiddlers.length-Math.min(tiddlers.length,parseInt(params[1],10)) : 0;
		var t;
		for(t=tiddlers.length-1; t>=last; t--) {
			var tiddler = tiddlers[t];
			var theGroup = wikifyPlainText(groupTemplate,0,tiddler);
			if(typeof(ul) == "undefined" || theGroup != lastGroup) {
				ul = document.createElement("ul");
				jQuery(ul).addClass("timeline");
				container.appendChild(ul);
				createTiddlyElement(ul,"li",null,"listTitle",theGroup);
				lastGroup = theGroup;
			}
			var item = createTiddlyElement(ul,"li",null,"listLink");
			wikify(itemTemplate,item,null,tiddler);
		}
	},
	groupTemplate: "<<view %0 date '%1'>>",
	itemTemplate: "<<view title link>>"
});

config.macros.tiddler.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var allowEval = true;
	var stack = config.macros.tiddler.tiddlerStack;
	if(stack.length > 0 && config.evaluateMacroParameters == "system") {
		// included tiddler and "system" evaluation required, so check tiddler tagged appropriately
		var title = stack[stack.length-1];
		var pos = title.indexOf(config.textPrimitives.sectionSeparator);
		if(pos != -1) {
			title = title.substr(0,pos); // get the base tiddler title
		}
		var t = store.getTiddler(title);
		if(!t || t.tags.indexOf("systemAllowEval") == -1) {
			allowEval = false;
		}
	}
	params = paramString.parseParams("name",null,allowEval,false,true);
	var names = params[0]["name"];
	var tiddlerName = names[0];
	var className = names[1] || null;
	var args = params[0]["with"];
	var wrapper = createTiddlyElement(place,"span",null,className,null,{
		refresh: "content", tiddler: tiddlerName
	});
	if(args!==undefined)
		wrapper.setAttribute("args","[["+args.join("]] [[")+"]]");
	this.transclude(wrapper,tiddlerName,args);
};

config.macros.tiddler.transclude = function(wrapper,tiddlerName,args)
{
	var text = store.getTiddlerText(tiddlerName);
	if(!text)
		return;
	var stack = config.macros.tiddler.tiddlerStack;
	if(stack.indexOf(tiddlerName) !== -1)
		return;
	stack.push(tiddlerName);
	try {
		if(typeof args == "string")
			args = args.readBracketedList();
		var n = args ? Math.min(args.length,9) : 0;
		var i;
		for(i=0; i<n; i++) {
			var placeholderRE = new RegExp("\\$" + (i + 1),"mg");
			text = text.replace(placeholderRE,args[i]);
		}
		config.macros.tiddler.renderText(wrapper,text,tiddlerName);
	} finally {
		stack.pop();
	}
};

config.macros.tiddler.renderText = function(place,text,tiddlerName)
{
	wikify(text,place,null,store.getTiddler(tiddlerName));
};

config.macros.tiddler.tiddlerStack = [];

config.macros.tag.handler = function(place,macroName,params)
{
	var btn = createTagButton(place,params[0],null,params[1],params[2]);
	if(params[3]) {
		btn.setAttribute('sortby',params[3]);
	}
};

config.macros.tags.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams("anon",null,true,false,false);
	var ul = createTiddlyElement(place,"ul");
	var title = getParam(params,"anon","");
	if(title && store.tiddlerExists(title))
		tiddler = store.getTiddler(title);
	var sep = getParam(params,"sep"," ");
	var lingo = config.views.wikified.tag;
	var label = null;
	var t;
	for(t=0; t<tiddler.tags.length; t++) {
		var tag = store.getTiddler(tiddler.tags[t]);
		if(!tag || !tag.tags.contains("excludeLists")) {
			if(!label)
				label = createTiddlyElement(ul,"li",null,"listTitle",lingo.labelTags.format([tiddler.title]));
			createTagButton(createTiddlyElement(ul,"li"),tiddler.tags[t],tiddler.title);
			if(t<tiddler.tags.length-1)
				createTiddlyText(ul,sep);
		}
	}
	if(!label)
		createTiddlyElement(ul,"li",null,"listTitle",lingo.labelNoTags.format([tiddler.title]));
};

config.macros.tagging.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams("anon",null,true,false,false);
	var ul = createTiddlyElement(place,"ul");
	var title = getParam(params,"anon","");
	if(title == "" && tiddler instanceof Tiddler)
		title = tiddler.title;
	var sep = getParam(params,"sep"," ");
	ul.setAttribute("title",this.tooltip.format([title]));
	var sortby = getParam(params,"sortBy",false);
	var tagged = store.getTaggedTiddlers(title,sortby);
	var prompt = tagged.length == 0 ? this.labelNotTag : this.label;
	createTiddlyElement(ul,"li",null,"listTitle",prompt.format([title,tagged.length]));
	var t;
	for(t=0; t<tagged.length; t++) {
		createTiddlyLink(createTiddlyElement(ul,"li"),tagged[t].title,true);
		if(t<tagged.length-1)
			createTiddlyText(ul,sep);
	}
};

config.macros.closeAll.handler = function(place)
{
	createTiddlyButton(place,this.label,this.prompt,this.onClick);
};

config.macros.closeAll.onClick = function(e)
{
	story.closeAllTiddlers();
	return false;
};

config.macros.permaview.handler = function(place)
{
	createTiddlyButton(place,this.label,this.prompt,this.onClick);
};

config.macros.permaview.onClick = function(e)
{
	story.permaView();
	return false;
};

config.macros.saveChanges.handler = function(place,macroName,params)
{
	if(!readOnly)
		createTiddlyButton(place,params[0] || this.label,params[1] || this.prompt,this.onClick,null,null,this.accessKey);
};

config.macros.saveChanges.onClick = function(e)
{
	saveChanges();
	return false;
};

config.macros.slider.onClickSlider = function(ev)
{
	var n = this.nextSibling;
	var cookie = n.getAttribute("cookie");
	var isOpen = n.style.display != "none";
	if(config.options.chkAnimate && anim && typeof Slider == "function")
		anim.startAnimating(new Slider(n,!isOpen,null,"none"));
	else
		n.style.display = isOpen ? "none" : "block";
	config.options[cookie] = !isOpen;
	saveOption(cookie);
	return false;
};

config.macros.slider.createSlider = function(place,cookie,title,tooltip)
{
	var c = cookie || "";
	createTiddlyButton(place,title,tooltip,this.onClickSlider);
	var panel = createTiddlyElement(null,"div",null,"sliderPanel");
	panel.setAttribute("cookie",c);
	panel.style.display = config.options[c] ? "block" : "none";
	place.appendChild(panel);
	return panel;
};

config.macros.slider.handler = function(place,macroName,params)
{
	var panel = this.createSlider(place,params[0],params[2],params[3]);
	var text = store.getTiddlerText(params[1]);
	panel.setAttribute("refresh","content");
	panel.setAttribute("tiddler",params[1]);
	if(text)
		wikify(text,panel,null,store.getTiddler(params[1]));
};

// <<gradient [[tiddler name]] vert|horiz rgb rgb rgb rgb... >>
config.macros.gradient.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var panel = wikifier ? createTiddlyElement(place,"div",null,"gradient") : place;
	panel.style.position = "relative";
	panel.style.overflow = "hidden";
	panel.style.zIndex = "0";
	if(wikifier) {
		var styles = config.formatterHelpers.inlineCssHelper(wikifier);
		config.formatterHelpers.applyCssHelper(panel,styles);
	}
	params = paramString.parseParams("color");
	var locolors = [], hicolors = [];
	var t;
	for(t=2; t<params.length; t++) {
		var c = params[t].value;
		if(params[t].name == "snap") {
			hicolors[hicolors.length-1] = c;
		} else {
			locolors.push(c);
			hicolors.push(c);
		}
	}
	drawGradient(panel,params[1].value != "vert",locolors,hicolors);
	if(wikifier)
		wikifier.subWikify(panel,">>");
	if(document.all) {
		panel.style.height = "100%";
		panel.style.width = "100%";
	}
};

config.macros.message.handler = function(place,macroName,params)
{
	if(params[0]) {
		var names = params[0].split(".");
		var lookupMessage = function(root,nameIndex) {
				if(root[names[nameIndex]]) {
					if(nameIndex < names.length-1)
						return (lookupMessage(root[names[nameIndex]],nameIndex+1));
					else
						return root[names[nameIndex]];
				} else
					return null;
			};
		var m = lookupMessage(config,0);
		if(m == null)
			m = lookupMessage(window,0);
		createTiddlyText(place,m.toString().format(params.splice(1)));
	}
};


config.macros.view.depth = 0;
config.macros.view.values = [];
config.macros.view.views = {
	text: function(value,place,params,wikifier,paramString,tiddler) {
		highlightify(value,place,highlightHack,tiddler);
	},
	link: function(value,place,params,wikifier,paramString,tiddler) {
		createTiddlyLink(place,value,true);
	},
	wikified: function(value,place,params,wikifier,paramString,tiddler) {
		if(config.macros.view.depth>50)
			return;
		if(config.macros.view.depth>0) {
			if (value==config.macros.view.values[config.macros.view.depth-1]) {
				return;
			}
		}
		config.macros.view.values[config.macros.view.depth] = value;
		config.macros.view.depth++;
		if(params[2])
			value=params[2].unescapeLineBreaks().format([value]);
		wikify(value,place,highlightHack,tiddler);
		config.macros.view.depth--;
		config.macros.view.values[config.macros.view.depth] = null;
	},
	date: function(value,place,params,wikifier,paramString,tiddler) {
		value = Date.convertFromYYYYMMDDHHMM(value);
		createTiddlyText(place,value.formatString(params[2] || config.views.wikified.dateFormat));
	}
};

config.macros.view.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if((tiddler instanceof Tiddler) && params[0]) {
		var value = store.getValue(tiddler,params[0]);
		if(value) {
			var type = params[1] || config.macros.view.defaultView;
			var handler = config.macros.view.views[type];
			if(handler)
				handler(value,place,params,wikifier,paramString,tiddler);
		}
	}
};

config.macros.edit.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var field = params[0];
	var rows = params[1] || 0;
	var defVal = params[2] || '';
	if((tiddler instanceof Tiddler) && field) {
		story.setDirty(tiddler.title,true);
		var e,v;
		if(field != "text" && !rows) {
			e = createTiddlyElement(null,"input",null,null,null,{
				type: "text", edit: field, size: "40", autocomplete: "off"
			});
			e.value = store.getValue(tiddler,field) || defVal;
			place.appendChild(e);
		} else {
			var wrapper1 = createTiddlyElement(null,"fieldset",null,"fieldsetFix");
			var wrapper2 = createTiddlyElement(wrapper1,"div");
			e = createTiddlyElement(wrapper2,"textarea");
			e.value = v = store.getValue(tiddler,field) || defVal;
			rows = rows || 10;
			var lines = v.match(/\n/mg);
			var maxLines = Math.max(parseInt(config.options.txtMaxEditRows,10),5);
			if(lines != null && lines.length > rows)
				rows = lines.length + 5;
			rows = Math.min(rows,maxLines);
			e.setAttribute("rows",rows);
			e.setAttribute("edit",field);
			place.appendChild(wrapper1);
		}
		if(tiddler.isReadOnly()) {
			e.setAttribute("readOnly","readOnly");
			jQuery(e).addClass("readOnly");
		}
		return e;
	}
};

config.macros.tagChooser.onClick = function(ev)
{
	var e = ev || window.event;
	var lingo = config.views.editor.tagChooser;
	var popup = Popup.create(this);
	var tags = store.getTags(this.getAttribute("tags"));
	if(tags.length == 0)
		jQuery("<li/>").text(lingo.popupNone).appendTo(popup);
	var t;
	for(t=0; t<tags.length; t++) {
		var tag = createTiddlyButton(createTiddlyElement(popup,"li"),tags[t][0],lingo.tagTooltip.format([tags[t][0]]),config.macros.tagChooser.onTagClick);
		tag.setAttribute("tag",tags[t][0]);
		tag.setAttribute("tiddler",this.getAttribute("tiddler"));
	}
	Popup.show();
	e.cancelBubble = true;
	if(e.stopPropagation) e.stopPropagation();
	return false;
};

config.macros.tagChooser.onTagClick = function(ev)
{
	var e = ev || window.event;
	if(e.metaKey || e.ctrlKey) stopEvent(e); //# keep popup open on CTRL-click
	var tag = this.getAttribute("tag");
	var title = this.getAttribute("tiddler");
	if(!readOnly)
		story.setTiddlerTag(title,tag,0);
	return false;
};

config.macros.tagChooser.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if(tiddler instanceof Tiddler) {
		var lingo = config.views.editor.tagChooser;
		var btn = createTiddlyButton(place,lingo.text,lingo.tooltip,this.onClick);
		btn.setAttribute("tiddler",tiddler.title);
		btn.setAttribute("tags",params[0]);
	}
};

config.macros.refreshDisplay.handler = function(place)
{
	createTiddlyButton(place,this.label,this.prompt,this.onClick);
};

config.macros.refreshDisplay.onClick = function(e)
{
	refreshAll();
	return false;
};

config.macros.annotations.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var title = tiddler ? tiddler.title : null;
	var a = title ? config.annotations[title] : null;
	if(!tiddler || !title || !a)
		return;
	var text = a.format([title]);
	wikify(text,createTiddlyElement(place,"div",null,"annotation"),null,tiddler);
};
//--
//-- NewTiddler and NewJournal macros
//--

config.macros.newTiddler.createNewTiddlerButton = function(place,title,params,label,prompt,accessKey,newFocus,isJournal)
{
	var tags = [];
	var t;
	for(t=1; t<params.length; t++) {
		if((params[t].name == "anon" && t != 1) || (params[t].name == "tag"))
			tags.push(params[t].value);
	}
	label = getParam(params,"label",label);
	prompt = getParam(params,"prompt",prompt);
	accessKey = getParam(params,"accessKey",accessKey);
	newFocus = getParam(params,"focus",newFocus);
	var customFields = getParam(params,"fields","");
	if(!customFields && !store.isShadowTiddler(title))
		customFields = String.encodeHashMap(config.defaultCustomFields);
	var btn = createTiddlyButton(place,label,prompt,this.onClickNewTiddler,null,null,accessKey);
	btn.setAttribute("newTitle",title);
	btn.setAttribute("isJournal",isJournal ? "true" : "false");
	if(tags.length > 0)
		btn.setAttribute("params",tags.join("|"));
	btn.setAttribute("newFocus",newFocus);
	btn.setAttribute("newTemplate",getParam(params,"template",DEFAULT_EDIT_TEMPLATE));
	if(customFields !== "")
		btn.setAttribute("customFields",customFields);
	var text = getParam(params,"text");
	if(text !== undefined)
		btn.setAttribute("newText",text);
	return btn;
};

config.macros.newTiddler.onClickNewTiddler = function()
{
	var title = this.getAttribute("newTitle");
	if(this.getAttribute("isJournal") == "true") {
		title = new Date().formatString(title.trim());
	}
	var params = this.getAttribute("params");
	var tags = params ? params.split("|") : [];
	var focus = this.getAttribute("newFocus");
	var template = this.getAttribute("newTemplate");
	var customFields = this.getAttribute("customFields");
	if(!customFields && !store.isShadowTiddler(title))
		customFields = String.encodeHashMap(config.defaultCustomFields);
	story.displayTiddler(null,title,template,false,null,null);
	var tiddlerElem = story.getTiddler(title);
	if(customFields)
		story.addCustomFields(tiddlerElem,customFields);
	var text = this.getAttribute("newText");
	if(typeof text == "string" && story.getTiddlerField(title,"text"))
		story.getTiddlerField(title,"text").value = text.format([title]);
	var t;
	for(t=0;t<tags.length;t++)
		story.setTiddlerTag(title,tags[t],+1);
	story.focusTiddler(title,focus);
	return false;
};

config.macros.newTiddler.handler = function(place,macroName,params,wikifier,paramString)
{
	if(!readOnly) {
		params = paramString.parseParams("anon",null,true,false,false);
		var title = params[1] && params[1].name == "anon" ? params[1].value : this.title;
		title = getParam(params,"title",title);
		this.createNewTiddlerButton(place,title,params,this.label,this.prompt,this.accessKey,"title",false);
	}
};

config.macros.newJournal.handler = function(place,macroName,params,wikifier,paramString)
{
	if(!readOnly) {
		params = paramString.parseParams("anon",null,true,false,false);
		var title = params[1] && params[1].name == "anon" ? params[1].value : config.macros.timeline.dateFormat;
		title = getParam(params,"title",title);
		config.macros.newTiddler.createNewTiddlerButton(place,title,params,this.label,this.prompt,this.accessKey,"text",true);
	}
};

//--
//-- Search macro
//--

config.macros.search.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	params = paramString.parseParams("anon",null,false,false,false);
	createTiddlyButton(place,this.label,this.prompt,this.onClick,"searchButton");
	var txt = createTiddlyElement(null,"input",null,"txtOptionInput searchField");
	txt.value = getParam(params,"anon","");
	if(config.browser.isSafari) {
		txt.setAttribute("type","search");
		txt.setAttribute("results","5");
	} else {
		txt.setAttribute("type","text");
	}
	place.appendChild(txt);
	txt.onkeyup = this.onKeyPress;
	txt.onfocus = this.onFocus;
	txt.setAttribute("size",this.sizeTextbox);
	txt.setAttribute("accessKey",getParam(params,"accesskey",this.accessKey));
	txt.setAttribute("autocomplete","off");
	txt.setAttribute("lastSearchText","");
	txt.setAttribute("placeholder",getParam(params,"placeholder",this.placeholder));
};

// Global because there's only ever one outstanding incremental search timer
config.macros.search.timeout = null;

config.macros.search.doSearch = function(txt)
{
	if(txt.value.length > 0) {
		story.search(txt.value,config.options.chkCaseSensitiveSearch,config.options.chkRegExpSearch);
		txt.setAttribute("lastSearchText",txt.value);
	}
};

config.macros.search.onClick = function(e)
{
	config.macros.search.doSearch(this.nextSibling);
	return false;
};

config.macros.search.onKeyPress = function(ev)
{
	var me = config.macros.search;
	var e = ev || window.event;
	switch(e.keyCode) {
		case 9: // Tab
			return;
		case 13: // Ctrl-Enter
		case 10: // Ctrl-Enter on IE PC
			me.doSearch(this);
			break;
		case 27: // Escape
			this.value = "";
			clearMessage();
			break;
	}
	if(config.options.chkIncrementalSearch) {
		if(this.value.length > 2) {
			if(this.value != this.getAttribute("lastSearchText")) {
				if(me.timeout) {
					clearTimeout(me.timeout);
				}
				var txt = this;
				me.timeout = setTimeout(function() {me.doSearch(txt);},500);
			}
		} else {
			if(me.timeout) {
				clearTimeout(me.timeout);
			}
		}
	}
};

config.macros.search.onFocus = function(e)
{
	this.select();
};

//--
//-- Tabs macro
//--

config.macros.tabs.handler = function(place,macroName,params)
{
	var cookie = params[0];
	var numTabs = (params.length-1)/3;
	var wrapper = createTiddlyElement(null,"div",null,"tabsetWrapper " + cookie);
	var tabset = createTiddlyElement(wrapper,"div",null,"tabset");
	tabset.setAttribute("cookie",cookie);
	var validTab = false;
	var t;
	for(t=0; t<numTabs; t++) {
		var label = params[t*3+1];
		var prompt = params[t*3+2];
		var content = params[t*3+3];
		var tab = createTiddlyButton(tabset,label,prompt,this.onClickTab,"tab tabUnselected");
		createTiddlyElement(tab,"span",null,null," ",{style:"font-size:0pt;line-height:0px"});
		tab.setAttribute("tab",label);
		tab.setAttribute("content",content);
		tab.title = prompt;
		if(config.options[cookie] == label)
			validTab = true;
	}
	if(!validTab)
		config.options[cookie] = params[1];
	place.appendChild(wrapper);
	this.switchTab(tabset,config.options[cookie]);
};

config.macros.tabs.onClickTab = function(e)
{
	config.macros.tabs.switchTab(this.parentNode,this.getAttribute("tab"));
	return false;
};

config.macros.tabs.switchTab = function(tabset,tab)
{
	var cookie = tabset.getAttribute("cookie");
	var theTab = null;
	var nodes = tabset.childNodes;
	var t;
	for(t=0; t<nodes.length; t++) {
		if(nodes[t].getAttribute && nodes[t].getAttribute("tab") == tab) {
			theTab = nodes[t];
			theTab.className = "tab tabSelected";
		} else {
			nodes[t].className = "tab tabUnselected";
		}
	}
	if(theTab) {
		if(tabset.nextSibling && tabset.nextSibling.className == "tabContents")
			jQuery(tabset.nextSibling).remove();
		var tabContent = createTiddlyElement(null,"div",null,"tabContents");
		tabset.parentNode.insertBefore(tabContent,tabset.nextSibling);
		var contentTitle = theTab.getAttribute("content");
		wikify(store.getTiddlerText(contentTitle),tabContent,null,store.getTiddler(contentTitle));
		if(cookie) {
			config.options[cookie] = tab;
			saveOption(cookie);
		}
	}
};

//--
//-- Tiddler toolbar
//--

// Create a toolbar command button
config.macros.toolbar.createCommand = function(place,commandName,tiddler,className)
{
	if(typeof commandName != "string") {
		var c = null;
		var t;
		for(t in config.commands) {
			if(config.commands[t] == commandName)
				c = t;
		}
		commandName = c;
	}
	if((tiddler instanceof Tiddler) && (typeof commandName == "string")) {
		var command = config.commands[commandName];
		if(command.isEnabled ? command.isEnabled(tiddler) : this.isCommandEnabled(command,tiddler)) {
			var text = command.getText ? command.getText(tiddler) : this.getCommandText(command,tiddler);
			var tooltip = command.getTooltip ? command.getTooltip(tiddler) : this.getCommandTooltip(command,tiddler);
			var cmd = command.type == "popup" ? this.onClickPopup : this.onClickCommand;
			var btn = createTiddlyButton(null,text,tooltip,cmd);
			btn.setAttribute("commandName",commandName);
			btn.setAttribute("tiddler",tiddler.title);
			jQuery(btn).addClass("command_" + commandName);
			if(className)
				jQuery(btn).addClass(className);
			place.appendChild(btn);
		}
	}
};

config.macros.toolbar.isCommandEnabled = function(command,tiddler)
{
	var title = tiddler.title;
	var ro = tiddler.isReadOnly();
	var shadow = store.isShadowTiddler(title) && !store.tiddlerExists(title);
	return (!ro || (ro && !command.hideReadOnly)) && !(shadow && command.hideShadow);
};

config.macros.toolbar.getCommandText = function(command,tiddler)
{
	return (tiddler.isReadOnly() && command.readOnlyText) || command.text;
};

config.macros.toolbar.getCommandTooltip = function(command,tiddler)
{
	return (tiddler.isReadOnly() && command.readOnlyTooltip) || command.tooltip;
};

config.macros.toolbar.onClickCommand = function(ev)
{
	var e = ev || window.event;
	e.cancelBubble = true;
	if(e.stopPropagation) e.stopPropagation();
	var command = config.commands[this.getAttribute("commandName")];
	return command.handler(e,this,this.getAttribute("tiddler"));
};

config.macros.toolbar.onClickPopup = function(ev)
{
	var e = ev || window.event;
	e.cancelBubble = true;
	if(e.stopPropagation) e.stopPropagation();
	var popup = Popup.create(this);
	var command = config.commands[this.getAttribute("commandName")];
	var title = this.getAttribute("tiddler");
	popup.setAttribute("tiddler",title);
	command.handlePopup(popup,title);
	Popup.show();
	return false;
};

// Invoke the first command encountered from a given place that is tagged with a specified class
config.macros.toolbar.invokeCommand = function(place,className,event)
{
	var children = place.getElementsByTagName("a");
	var t;
	for(t=0; t<children.length; t++) {
		var c = children[t];
		if(jQuery(c).hasClass(className) && c.getAttribute && c.getAttribute("commandName")) {
			if(c.onclick instanceof Function)
				c.onclick.call(c,event);
			break;
		}
	}
};

config.macros.toolbar.onClickMore = function(ev)
{
	var e = this.nextSibling;
	e.style.display = "inline";
	this.style.display = "none";
	return false;
};

config.macros.toolbar.onClickLess = function(ev)
{
	var e = this.parentNode;
	var m = e.previousSibling;
	e.style.display = "none";
	m.style.display = "inline";
	return false;
};

config.macros.toolbar.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	var t;
	for(t=0; t<params.length; t++) {
		var btn;
		var c = params[t];
		switch(c) {
		case "!":
			createTiddlyText(place,this.separator);
			break;
		case "*":
			createTiddlyElement(place,"br");
			break;
		case "<":
			btn = createTiddlyButton(place,this.lessLabel,this.lessPrompt,config.macros.toolbar.onClickLess);
			jQuery(btn).addClass("lessCommand");
			break;
		case ">":
			btn = createTiddlyButton(place,this.moreLabel,this.morePrompt,config.macros.toolbar.onClickMore);
			jQuery(btn).addClass("moreCommand");
			var e = createTiddlyElement(place,"span",null,"moreCommand");
			e.style.display = "none";
			place = e;
			break;
		default:
			var className = "";
			switch(c.substr(0,1)) {
			case "+":
				className = "defaultCommand";
				c = c.substr(1);
				break;
			case "-":
				className = "cancelCommand";
				c = c.substr(1);
				break;
			}
			if(config.commands[c]) {
				this.createCommand(place,c,tiddler,className);
			} else {
				this.customCommand(place,c,wikifier,tiddler);
			}
			break;
		}
	}
};

// Overrideable function to extend toolbar handler
config.macros.toolbar.customCommand = function(place,command,wikifier,tiddler)
{
};

//--
//-- Menu and toolbar commands
//--

config.commands.closeTiddler.handler = function(event,src,title)
{
	if(story.isDirty(title) && !readOnly) {
		if(!confirm(config.commands.cancelTiddler.warning.format([title])))
			return false;
	}
	story.setDirty(title,false);
	story.closeTiddler(title,true);
	return false;
};

config.commands.closeOthers.handler = function(event,src,title)
{
	story.closeAllTiddlers(title);
	return false;
};

config.commands.editTiddler.handler = function(event,src,title)
{
	clearMessage();
	var tiddlerElem = story.getTiddler(title);
	var fields = tiddlerElem.getAttribute("tiddlyFields");
	story.displayTiddler(null,title,DEFAULT_EDIT_TEMPLATE,false,null,fields);
	var e = story.getTiddlerField(title,config.options.txtEditorFocus||"text");
	if(e) {
		setCaretPosition(e,0);
	}
	return false;
};

config.commands.saveTiddler.handler = function(event,src,title)
{
	var newTitle = story.saveTiddler(title,event.shiftKey);
	if(newTitle)
		story.displayTiddler(null,newTitle);
	return false;
};

config.commands.cancelTiddler.handler = function(event,src,title)
{
	if(story.hasChanges(title) && !readOnly) {
		if(!confirm(this.warning.format([title])))
			return false;
	}
	story.setDirty(title,false);
	story.displayTiddler(null,title);
	return false;
};

config.commands.deleteTiddler.handler = function(event,src,title)
{
	var deleteIt = true;
	if(config.options.chkConfirmDelete)
		deleteIt = confirm(this.warning.format([title]));
	if(deleteIt) {
		store.removeTiddler(title);
		story.closeTiddler(title,true);
		autoSaveChanges();
	}
	return false;
};

config.commands.permalink.handler = function(event,src,title)
{
	var t = encodeURIComponent(String.encodeTiddlyLink(title));
	if(window.location.hash != t)
		window.location.hash = t;
	return false;
};

config.commands.references.handlePopup = function(popup,title)
{
	var references = store.getReferringTiddlers(title);
	var c = false;
	var r;
	for(r=0; r<references.length; r++) {
		if(references[r].title != title && !references[r].isTagged("excludeLists")) {
			createTiddlyLink(createTiddlyElement(popup,"li"),references[r].title,true);
			c = true;
		}
	}
	if(!c)
		createTiddlyElement(popup,"li",null,"disabled",this.popupNone);
};

config.commands.jump.handlePopup = function(popup,title)
{
	story.forEachTiddler(function(title,element) {
		createTiddlyLink(createTiddlyElement(popup,"li"),title,true,null,false,null,true);
		});
};

config.commands.fields.handlePopup = function(popup,title)
{
	var tiddler = store.fetchTiddler(title);
	if(!tiddler)
		return;
	var items = [];
	store.forEachField(tiddler,function(tiddler,fieldName,value){items.push({field:fieldName,value:value});},true);
	items.sort(function(a,b) {return a.field < b.field ? -1 : (a.field == b.field ? 0 : +1);});
	if(items.length > 0)
		ListView.create(popup,items,this.listViewTemplate);
	else
		createTiddlyElement(popup,"div",null,null,this.emptyText);
};

//--
//-- Tiddler() object
//--

function Tiddler(title)
{
	this.title = title;
	this.text = "";
	this.creator = null;
	this.modifier = null;
	this.created = new Date();
	this.modified = this.created;
	this.links = [];
	this.linksUpdated = false;
	this.tags = [];
	this.fields = {};
	return this;
}

Tiddler.prototype.getLinks = function()
{
	if(this.linksUpdated==false)
		this.changed();
	return this.links;
};

// Returns the fields that are inherited in string field:"value" field2:"value2" format
Tiddler.prototype.getInheritedFields = function()
{
	var f = {};
	var i;
	for(i in this.fields) {
		if(i=="server.host" || i=="server.workspace" || i=="wikiformat"|| i=="server.type") {
			f[i] = this.fields[i];
		}
	}
	return String.encodeHashMap(f);
};

// Increment the changeCount of a tiddler
Tiddler.prototype.incChangeCount = function()
{
	var c = this.fields['changecount'];
	c = c ? parseInt(c,10) : 0;
	this.fields['changecount'] = String(c+1);
};

// Clear the changeCount of a tiddler
Tiddler.prototype.clearChangeCount = function()
{
	if(this.fields['changecount']) {
		delete this.fields['changecount'];
	}
};

Tiddler.prototype.doNotSave = function()
{
	return this.fields['doNotSave'];
};

// Returns true if the tiddler has been updated since the tiddler was created or downloaded
Tiddler.prototype.isTouched = function()
{
	var changecount = this.fields.changecount || 0;
	return changecount > 0;
};

// Change the text and other attributes of a tiddler
Tiddler.prototype.set = function(title,text,modifier,modified,tags,created,fields,creator)
{
	this.assign(title,text,modifier,modified,tags,created,fields,creator);
	this.changed();
	return this;
};

// Change the text and other attributes of a tiddler without triggered a tiddler.changed() call
Tiddler.prototype.assign = function(title,text,modifier,modified,tags,created,fields,creator)
{
	if(title != undefined)
		this.title = title;
	if(text != undefined)
		this.text = text;
	if(modifier != undefined)
		this.modifier = modifier;
	if(modified != undefined)
		this.modified = modified;
	if(creator != undefined)
		this.creator = creator;
	if(created != undefined)
		this.created = created;
	if(fields != undefined)
		this.fields = fields;
	if(tags != undefined)
		this.tags = (typeof tags == "string") ? tags.readBracketedList() : tags;
	else if(this.tags == undefined)
		this.tags = [];
	return this;
};

// Get the tags for a tiddler as a string (space delimited, using [[brackets]] for tags containing spaces)
Tiddler.prototype.getTags = function()
{
	return String.encodeTiddlyLinkList(this.tags);
};

// Test if a tiddler carries a tag
Tiddler.prototype.isTagged = function(tag)
{
	return this.tags.indexOf(tag) != -1;
};

// Static method to convert "\n" to newlines, "\s" to "\"
Tiddler.unescapeLineBreaks = function(text)
{
	return text ? text.unescapeLineBreaks() : "";
};

// Convert newlines to "\n", "\" to "\s"
Tiddler.prototype.escapeLineBreaks = function()
{
	return this.text.escapeLineBreaks();
};

// Updates the secondary information (like links[] array) after a change to a tiddler
Tiddler.prototype.changed = function()
{
	this.links = [];
	var text = this.text;
	// remove 'quoted' text before scanning tiddler source
	text = text.replace(/\/%((?:.|\n)*?)%\//g,"").
		replace(/\{{3}((?:.|\n)*?)\}{3}/g,"").
		replace(/"""((?:.|\n)*?)"""/g,"").
		replace(/<nowiki\>((?:.|\n)*?)<\/nowiki\>/g,"").
		replace(/<html\>((?:.|\n)*?)<\/html\>/g,"").
		replace(/<script((?:.|\n)*?)<\/script\>/g,"");
	var t = this.autoLinkWikiWords() ? 0 : 1;
	var tiddlerLinkRegExp = t==0 ? config.textPrimitives.tiddlerAnyLinkRegExp : config.textPrimitives.tiddlerForcedLinkRegExp;
	tiddlerLinkRegExp.lastIndex = 0;
	var formatMatch = tiddlerLinkRegExp.exec(text);
	while(formatMatch) {
		var lastIndex = tiddlerLinkRegExp.lastIndex;
		if(t==0 && formatMatch[1] && formatMatch[1] != this.title) {
			// wikiWordLink
			if(formatMatch.index > 0) {
				var preRegExp = new RegExp(config.textPrimitives.unWikiLink+"|"+config.textPrimitives.anyLetter,"mg");
				preRegExp.lastIndex = formatMatch.index-1;
				var preMatch = preRegExp.exec(text);
				if(preMatch.index != formatMatch.index-1)
					this.links.pushUnique(formatMatch[1]);
			} else {
				this.links.pushUnique(formatMatch[1]);
			}
		}
		else if(formatMatch[2-t] && !config.formatterHelpers.isExternalLink(formatMatch[3-t])) // titledBrackettedLink
			this.links.pushUnique(formatMatch[3-t]);
		else if(formatMatch[4-t] && formatMatch[4-t] != this.title) // brackettedLink
			this.links.pushUnique(formatMatch[4-t]);
		tiddlerLinkRegExp.lastIndex = lastIndex;
		formatMatch = tiddlerLinkRegExp.exec(text);
	}
	this.linksUpdated = true;
};

Tiddler.prototype.getSubtitle = function()
{
	var modifier = this.modifier;
	if(!modifier)
		modifier = config.messages.subtitleUnknown || "";
	var modified = this.modified;
	if(modified)
		modified = modified.toLocaleString();
	else
		modified = config.messages.subtitleUnknown || "";
	var f = config.messages.tiddlerLinkTooltip || "%0 - %1, %2";
	return f.format([this.title,modifier,modified]);
};

Tiddler.prototype.isReadOnly = function()
{
	return readOnly;
};

Tiddler.prototype.autoLinkWikiWords = function()
{
	return !(this.isTagged("systemConfig") || this.isTagged("excludeMissing"));
};

Tiddler.prototype.getServerType = function()
{
	var serverType = null;
	if(this.fields['server.type'])
		serverType = this.fields['server.type'];
	if(!serverType)
		serverType = this.fields['wikiformat'];
	if(serverType && !config.adaptors[serverType])
		serverType = null;
	return serverType;
};

Tiddler.prototype.getAdaptor = function()
{
	var serverType = this.getServerType();
	return serverType ? new config.adaptors[serverType]() : null;
};

//--
//-- TiddlyWiki instance contains TiddlerS
//--

function TiddlyWiki(params)
{
	var tiddlers = {}; // Hashmap by name of tiddlers
	if(params && params.config) {
		this.config = config;
	}
	this.tiddlersUpdated = false;
	this.namedNotifications = []; // Array of {name:,notify:} of notification functions
	this.notificationLevel = 0;
	this.slices = {}; // map tiddlerName->(map sliceName->sliceValue). Lazy.
	this.clear = function() {
		tiddlers = {};
		this.setDirty(false);
	};
	this.fetchTiddler = function(title) {
		var t = tiddlers[title];
		return t instanceof Tiddler ? t : null;
	};
	this.deleteTiddler = function(title) {
		delete this.slices[title];
		delete tiddlers[title];
	};
	this.addTiddler = function(tiddler) {
		delete this.slices[tiddler.title];
		tiddlers[tiddler.title] = tiddler;
	};
	this.forEachTiddler = function(callback) {
		var t;
		for(t in tiddlers) {
			var tiddler = tiddlers[t];
			if(tiddler instanceof Tiddler)
				callback.call(this,t,tiddler);
		}
	};
}

TiddlyWiki.prototype.setDirty = function(dirty)
{
	this.dirty = dirty;
};

TiddlyWiki.prototype.isDirty = function()
{
	return this.dirty;
};

TiddlyWiki.prototype.tiddlerExists = function(title)
{
	var t = this.fetchTiddler(title);
	return t != undefined;
};

TiddlyWiki.prototype.isShadowTiddler = function(title)
{
	return config.shadowTiddlers[title] === undefined ? false : true;
};

TiddlyWiki.prototype.isAvailable = function(title) {
	if (!title)
		return false;
	var s = title ? title.indexOf(config.textPrimitives.sectionSeparator) : -1;
	if(s!=-1)
		title = title.substr(0,s);
	return this.tiddlerExists(title) || this.isShadowTiddler(title);
};

TiddlyWiki.prototype.createTiddler = function(title)
{
	var tiddler = this.fetchTiddler(title);
	if(!tiddler) {
		tiddler = new Tiddler(title);
		this.addTiddler(tiddler);
		this.setDirty(true);
	}
	return tiddler;
};

TiddlyWiki.prototype.getTiddler = function(title)
{
	var t = this.fetchTiddler(title);
	if(t != undefined)
		return t;
	else
		return null;
};

TiddlyWiki.prototype.getShadowTiddlerText = function(title)
{
	if(typeof config.shadowTiddlers[title] == "string")
		return config.shadowTiddlers[title];
	else
		return "";
};

// Retrieve tiddler contents
TiddlyWiki.prototype.getTiddlerText = function(title,defaultText)
{
	if(!title)
		return defaultText;
	var pos = title.indexOf(config.textPrimitives.sectionSeparator);
	var section = null;
	if(pos != -1) {
		section = title.substr(pos + config.textPrimitives.sectionSeparator.length);
		title = title.substr(0,pos);
	}
	pos = title.indexOf(config.textPrimitives.sliceSeparator);
	if(pos != -1) {
		var slice = this.getTiddlerSlice(title.substr(0,pos),title.substr(pos + config.textPrimitives.sliceSeparator.length));
		if(slice)
			return slice;
	}
	var tiddler = this.fetchTiddler(title);
	var text = tiddler ? tiddler.text : null;
	if(!tiddler && this.isShadowTiddler(title)) {
		text = this.getShadowTiddlerText(title);
	}
	if(text) {
		if(!section)
			return text;
		var re = new RegExp("(^!{1,6}[ \t]*" + section.escapeRegExp() + "[ \t]*\n)","mg");
		re.lastIndex = 0;
		var match = re.exec(text);
		if(match) {
			var t = text.substr(match.index+match[1].length);
			var re2 = /^!/mg;
			re2.lastIndex = 0;
			match = re2.exec(t); //# search for the next heading
			if(match)
				t = t.substr(0,match.index-1);//# don't include final \n
			return t;
		}
		return defaultText;
	}
	if(defaultText != undefined)
		return defaultText;
	return null;
};

TiddlyWiki.prototype.getRecursiveTiddlerText = function(title,defaultText,depth)
{
	var bracketRegExp = new RegExp("(?:\\[\\[([^\\]]+)\\]\\])","mg");
	var text = this.getTiddlerText(title,null);
	if(text == null)
		return defaultText;
	var textOut = [];
	var match,lastPos = 0;
	do {
		match = bracketRegExp.exec(text);
		if(match) {
			textOut.push(text.substr(lastPos,match.index-lastPos));
			if(match[1]) {
				if(depth <= 0)
					textOut.push(match[1]);
				else
					textOut.push(this.getRecursiveTiddlerText(match[1],"",depth-1));
			}
			lastPos = match.index + match[0].length;
		} else {
			textOut.push(text.substr(lastPos));
		}
	} while(match);
	return textOut.join("");
};

//TiddlyWiki.prototype.slicesRE = /(?:^([\'\/]{0,2})~?([\.\w]+)\:\1[\t\x20]*([^\n]+)[\t\x20]*$)|(?:^\|([\'\/]{0,2})~?([\.\w]+)\:?\4\|[\t\x20]*([^\n]+)[\t\x20]*\|$)/gm;
TiddlyWiki.prototype.slicesRE = /(?:^([\'\/]{0,2})~?([\.\w]+)\:\1[\t\x20]*([^\n]*)[\t\x20]*$)|(?:^\|([\'\/]{0,2})~?([\.\w]+)\:?\4\|[\t\x20]*([^\|\n]*)[\t\x20]*\|$)/gm;
// @internal
TiddlyWiki.prototype.calcAllSlices = function(title)
{
	var slices = {};
	var text = this.getTiddlerText(title,"");
	this.slicesRE.lastIndex = 0;
	var m = this.slicesRE.exec(text);
	while(m) {
		if(m[2])
			slices[m[2]] = m[3];
		else
			slices[m[5]] = m[6];
		m = this.slicesRE.exec(text);
	}
	return slices;
};

// Returns the slice of text of the given name
TiddlyWiki.prototype.getTiddlerSlice = function(title,sliceName)
{
	var slices = this.slices[title];
	if(!slices) {
		slices = this.calcAllSlices(title);
		this.slices[title] = slices;
	}
	return slices[sliceName];
};

// Build an hashmap of the specified named slices of a tiddler
TiddlyWiki.prototype.getTiddlerSlices = function(title,sliceNames)
{
	var t,r = {};
	for(t=0; t<sliceNames.length; t++) {
		var slice = this.getTiddlerSlice(title,sliceNames[t]);
		if(slice)
			r[sliceNames[t]] = slice;
	}
	return r;
};

TiddlyWiki.prototype.suspendNotifications = function()
{
	this.notificationLevel--;
};

TiddlyWiki.prototype.resumeNotifications = function()
{
	this.notificationLevel++;
};

// Invoke the notification handlers for a particular tiddler
TiddlyWiki.prototype.notify = function(title,doBlanket)
{
	if(!this.notificationLevel) {
	    var t;
		for(t=0; t<this.namedNotifications.length; t++) {
			var n = this.namedNotifications[t];
			if((n.name == null && doBlanket) || (n.name == title))
				n.notify(title);
		}
	}
};

// Invoke the notification handlers for all tiddlers
TiddlyWiki.prototype.notifyAll = function()
{
	if(!this.notificationLevel) {
	    var t;
		for(t=0; t<this.namedNotifications.length; t++) {
			var n = this.namedNotifications[t];
			if(n.name)
				n.notify(n.name);
		}
	}
};

// Add a notification handler to a tiddler
TiddlyWiki.prototype.addNotification = function(title,fn)
{
	var i;
	for(i=0; i<this.namedNotifications.length; i++) {
		if((this.namedNotifications[i].name == title) && (this.namedNotifications[i].notify == fn))
			return this;
	}
	this.namedNotifications.push({name: title, notify: fn});
	return this;
};

TiddlyWiki.prototype.removeTiddler = function(title)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler) {
		this.deleteTiddler(title);
		this.notify(title,true);
		this.setDirty(true);
	}
};

// Reset the sync status of a freshly synced tiddler
TiddlyWiki.prototype.resetTiddler = function(title)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler) {
		tiddler.clearChangeCount();
		this.notify(title,true);
		this.setDirty(true);
	}
};

TiddlyWiki.prototype.setTiddlerTag = function(title,status,tag)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler) {
		var t = tiddler.tags.indexOf(tag);
		if(t != -1)
			tiddler.tags.splice(t,1);
		if(status)
			tiddler.tags.push(tag);
		tiddler.changed();
		tiddler.incChangeCount();
		this.notify(title,true);
		this.setDirty(true);
	}
};

TiddlyWiki.prototype.addTiddlerFields = function(title,fields)
{
	var tiddler = this.fetchTiddler(title);
	if(!tiddler)
		return;
	merge(tiddler.fields,fields);
	tiddler.changed();
	tiddler.incChangeCount();
	this.notify(title,true);
	this.setDirty(true);
};

// Store tiddler in TiddlyWiki instance
TiddlyWiki.prototype.saveTiddler = function(title,newTitle,newBody,modifier,modified,tags,fields,clearChangeCount,created,creator)
{
	var tiddler;
	if(title instanceof Tiddler) {
		tiddler = title;
		tiddler.fields = merge(merge({},tiddler.fields),config.defaultCustomFields,true);
		title = tiddler.title;
		newTitle = title;
	} else {
		tiddler = this.fetchTiddler(title);
		if(tiddler) {
			created = created || tiddler.created; // Preserve created date
			creator = creator || tiddler.creator;
			this.deleteTiddler(title);
		} else {
			created = created || modified;
			tiddler = new Tiddler();
		}
		fields = merge(merge({},fields),config.defaultCustomFields,true);
		tiddler.set(newTitle,newBody,modifier,modified,tags,created,fields,creator);
	}
	this.addTiddler(tiddler);
	if(clearChangeCount)
		tiddler.clearChangeCount();
	else
		tiddler.incChangeCount();
	if(title != newTitle)
		this.notify(title,true);
	this.notify(newTitle,true);
	this.setDirty(true);
	return tiddler;
};

TiddlyWiki.prototype.incChangeCount = function(title)
{
	var tiddler = this.fetchTiddler(title);
	if(tiddler)
		tiddler.incChangeCount();
};

TiddlyWiki.prototype.getLoader = function()
{
	if(!this.loader)
		this.loader = new TW21Loader();
	return this.loader;
};

TiddlyWiki.prototype.getSaver = function()
{
	if(!this.saver)
		this.saver = new TW21Saver();
	return this.saver;
};

// Return all tiddlers formatted as an HTML string
TiddlyWiki.prototype.allTiddlersAsHtml = function()
{
	return this.getSaver().externalize(store);
};

// Load contents of a TiddlyWiki from an HTML DIV
TiddlyWiki.prototype.loadFromDiv = function(src,idPrefix,noUpdate)
{
	this.idPrefix = idPrefix;
	var storeElem = (typeof src == "string") ? document.getElementById(src) : src;
	if(!storeElem)
		return;
	var tiddlers = this.getLoader().loadTiddlers(this,storeElem.childNodes);
	this.setDirty(false);
	if(!noUpdate) {
		var i;
		for(i = 0;i<tiddlers.length; i++)
			tiddlers[i].changed();
	}
	jQuery(document).trigger("loadTiddlers");
};

// Load contents of a TiddlyWiki from a string
// Returns null if there's an error
TiddlyWiki.prototype.importTiddlyWiki = function(text)
{
	var posDiv = locateStoreArea(text);
	if(!posDiv)
		return null;
	var content = "<" + "html><" + "body>" + text.substring(posDiv[0],posDiv[1] + endSaveArea.length) + "<" + "/body><" + "/html>";
	// Create the iframe
	var iframe = document.createElement("iframe");
	iframe.style.display = "none";
	document.body.appendChild(iframe);
	var doc = iframe.document;
	if(iframe.contentDocument)
		doc = iframe.contentDocument; // For NS6
	else if(iframe.contentWindow)
		doc = iframe.contentWindow.document; // For IE5.5 and IE6
	// Put the content in the iframe
	doc.open();
	doc.writeln(content);
	doc.close();
	// Load the content into a TiddlyWiki() object
	var storeArea = doc.getElementById("storeArea");
	this.loadFromDiv(storeArea,"store");
	// Get rid of the iframe
	iframe.parentNode.removeChild(iframe);
	return this;
};

TiddlyWiki.prototype.updateTiddlers = function()
{
	this.tiddlersUpdated = true;
	this.forEachTiddler(function(title,tiddler) {
		tiddler.changed();
	});
};

// Return an array of tiddlers matching a search regular expression
TiddlyWiki.prototype.search = function(searchRegExp,sortField,excludeTag,match)
{
	var candidates = this.reverseLookup("tags",excludeTag,!!match);
	var t,results = [];
	for(t=0; t<candidates.length; t++) {
		if((candidates[t].title.search(searchRegExp) != -1) || (candidates[t].text.search(searchRegExp) != -1))
			results.push(candidates[t]);
	}
	if(!sortField)
		sortField = "title";
	results.sort(function(a,b) {return a[sortField] < b[sortField] ? -1 : (a[sortField] == b[sortField] ? 0 : +1);});
	return results;
};

// Returns a list of all tags in use
//   excludeTag - if present, excludes tags that are themselves tagged with excludeTag
// Returns an array of arrays where [tag][0] is the name of the tag and [tag][1] is the number of occurances
TiddlyWiki.prototype.getTags = function(excludeTag)
{
	var results = [];
	this.forEachTiddler(function(title,tiddler) {
	    var g,c;
		for(g=0; g<tiddler.tags.length; g++) {
			var tag = tiddler.tags[g];
			var n = true;
			for(c=0; c<results.length; c++) {
				if(results[c][0] == tag) {
					n = false;
					results[c][1]++;
				}
			}
			if(n && excludeTag) {
				var t = this.fetchTiddler(tag);
				if(t && t.isTagged(excludeTag))
					n = false;
			}
			if(n)
				results.push([tag,1]);
		}
	});
	results.sort(function(a,b) {return a[0].toLowerCase() < b[0].toLowerCase() ? -1 : (a[0].toLowerCase() == b[0].toLowerCase() ? 0 : +1);});
	return results;
};

// Return an array of the tiddlers that are tagged with a given tag
TiddlyWiki.prototype.getTaggedTiddlers = function(tag,sortField)
{
	return this.reverseLookup("tags",tag,true,sortField);
};

TiddlyWiki.prototype.getValueTiddlers = function(field,value,sortField)
{
	return this.reverseLookup(field,value,true,sortField);
};

// Return an array of the tiddlers that link to a given tiddler
TiddlyWiki.prototype.getReferringTiddlers = function(title,unusedParameter,sortField)
{
	if(!this.tiddlersUpdated)
		this.updateTiddlers();
	return this.reverseLookup("links",title,true,sortField);
};

// Return an array of the tiddlers that do or do not have a specified entry in the specified storage array (ie, "links" or "tags")
// lookupMatch == true to match tiddlers, false to exclude tiddlers
TiddlyWiki.prototype.reverseLookup = function(lookupField,lookupValue,lookupMatch,sortField)
{
	var results = [];
	this.forEachTiddler(function(title,tiddler) {
		var f = !lookupMatch;
		var values;
		if(["links", "tags"].contains(lookupField)) {
			values = tiddler[lookupField];
		} else {
			var accessor = TiddlyWiki.standardFieldAccess[lookupField];
			if(accessor) {
				values = [ accessor.get(tiddler) ];
			} else {
				values = tiddler.fields[lookupField] ? [tiddler.fields[lookupField]] : [];
			}
		}
		var lookup;
		for(lookup=0; lookup<values.length; lookup++) {
			if(values[lookup] == lookupValue)
				f = lookupMatch;
		}
		if(f)
			results.push(tiddler);
	});
	if(!sortField)
		sortField = "title";
	return this.sortTiddlers(results,sortField);
};

// Return the tiddlers as a sorted array
TiddlyWiki.prototype.getTiddlers = function(field,excludeTag)
{
	var results = [];
	this.forEachTiddler(function(title,tiddler) {
		if(excludeTag == undefined || !tiddler.isTagged(excludeTag))
			results.push(tiddler);
	});
	if(field)
		results.sort(function(a,b) {return a[field] < b[field] ? -1 : (a[field] == b[field] ? 0 : +1);});
	return results;
};

// Return array of names of tiddlers that are referred to but not defined
TiddlyWiki.prototype.getMissingLinks = function()
{
	if(!this.tiddlersUpdated)
		this.updateTiddlers();
	var results = [];
	this.forEachTiddler(function (title,tiddler) {
		if(tiddler.isTagged("excludeMissing") || tiddler.isTagged("systemConfig"))
			return;
		var n;
		for(n=0; n<tiddler.links.length;n++) {
			var link = tiddler.links[n];
			if(this.getTiddlerText(link,null) == null && !this.isShadowTiddler(link) && !config.macros[link])
				results.pushUnique(link);
		}
	});
	results.sort();
	return results;
};

// Return an array of names of tiddlers that are defined but not referred to
TiddlyWiki.prototype.getOrphans = function()
{
	var results = [];
	this.forEachTiddler(function (title,tiddler) {
		if(this.getReferringTiddlers(title).length == 0 && !tiddler.isTagged("excludeLists"))
			results.push(title);
	});
	results.sort();
	return results;
};

// Return an array of names of all the shadow tiddlers
TiddlyWiki.prototype.getShadowed = function()
{
	var t,results = [];
	for(t in config.shadowTiddlers) {
		if(this.isShadowTiddler(t))
			results.push(t);
	}
	results.sort();
	return results;
};

// Return an array of tiddlers that have been touched since they were downloaded or created
TiddlyWiki.prototype.getTouched = function()
{
	var results = [];
	this.forEachTiddler(function(title,tiddler) {
		if(tiddler.isTouched())
			results.push(tiddler);
		});
	results.sort();
	return results;
};

// Resolves a Tiddler reference or tiddler title into a Tiddler object, or null if it doesn't exist
TiddlyWiki.prototype.resolveTiddler = function(tiddler)
{
	var t = (typeof tiddler == "string") ? this.getTiddler(tiddler) : tiddler;
	return t instanceof Tiddler ? t : null;
};

// Sort a list of tiddlers
TiddlyWiki.prototype.sortTiddlers = function(tiddlers,field)
{
	var asc = +1;
	switch(field.substr(0,1)) {
	case "-":
		asc = -1;
		field = field.substr(1);
		break;
	case "+":
		field = field.substr(1);
		break;
	}
	if(TiddlyWiki.standardFieldAccess[field]) {
		if(field=="title") {
			tiddlers.sort(function(a,b) {return a[field].toLowerCase() < b[field].toLowerCase() ? -asc : (a[field].toLowerCase() == b[field].toLowerCase() ? 0 : asc);});
		} else {
			tiddlers.sort(function(a,b) {return a[field] < b[field] ? -asc : (a[field] == b[field] ? 0 : asc);});
		}
	} else {
		tiddlers.sort(function(a,b) {return a.fields[field] < b.fields[field] ? -asc : (a.fields[field] == b.fields[field] ? 0 : +asc);});
	}
	return tiddlers;
};

//--
//-- Filter a list of tiddlers
//--

config.filters = {
	tiddler: function(results,match) {
		var title = match[1]||match[4];
		var tiddler = this.fetchTiddler(title);
		if(tiddler) {
			results.pushUnique(tiddler);
		} else if(this.isShadowTiddler(title)) {
			tiddler = new Tiddler();
			tiddler.set(title,this.getTiddlerText(title));
			results.pushUnique(tiddler);
		} else {
			results.pushUnique(new Tiddler(title));
		}
		return results;
	},
	tag: function(results,match) {
		var m,matched = this.getTaggedTiddlers(match[3]);
		for(m=0; m<matched.length; m++) {
			results.pushUnique(matched[m]);
		}
		return results;
	},
	sort: function(results,match) {
		return this.sortTiddlers(results,match[3]);
	},
	limit: function(results,match) {
		return results.slice(0,parseInt(match[3],10));
	},
	field: function(results,match) {
		var m,matched = this.getValueTiddlers(match[2],match[3]);
		for (m = 0; m < matched.length; m++) {
			results.pushUnique(matched[m]);
		}
		return results;
	}
};

// Filter a list of tiddlers
TiddlyWiki.prototype.filterTiddlers = function(filter)
{
	var re = /([^\s\[\]]+)|(?:\[([ \w\.\-]+)\[([^\]]+)\]\])|(?:\[\[([^\]]+)\]\])/mg;

	var results = [];
	if(filter) {
		var match = re.exec(filter);
		while(match) {
			var handler = (match[1]||match[4])?'tiddler':config.filters[match[2]]?match[2]:'field';
			results = config.filters[handler].call(this,results,match);
			match = re.exec(filter);
		}
	}
	return results;
};
// Returns true if path is a valid field name (path),
// i.e. a sequence of identifiers, separated by "."
TiddlyWiki.isValidFieldName = function(name)
{
	var match = /[a-zA-Z_]\w*(\.[a-zA-Z_]\w*)*/.exec(name);
	return match && (match[0] == name);
};

// Throws an exception when name is not a valid field name.
TiddlyWiki.checkFieldName = function(name)
{
	if(!TiddlyWiki.isValidFieldName(name))
		throw config.messages.invalidFieldName.format([name]);
};

function StringFieldAccess(n,readOnly)
{
	this.set = readOnly ?
			function(t,v) {if(v != t[n]) throw config.messages.fieldCannotBeChanged.format([n]);} :
			function(t,v) {if(v != t[n]) {t[n] = v; return true;}};
	this.get = function(t) {return t[n];};
}

function DateFieldAccess(n)
{
	this.set = function(t,v) {
		var d = v instanceof Date ? v : Date.convertFromYYYYMMDDHHMM(v);
		if(d != t[n]) {
			t[n] = d; return true;
		}
	};
	this.get = function(t) {return t[n].convertToYYYYMMDDHHMM();};
}

function LinksFieldAccess(n)
{
	this.set = function(t,v) {
		var s = (typeof v == "string") ? v.readBracketedList() : v;
		if(s.toString() != t[n].toString()) {
			t[n] = s; return true;
		}
	};
	this.get = function(t) {return String.encodeTiddlyLinkList(t[n]);};
}

TiddlyWiki.standardFieldAccess = {
	// The set functions return true when setting the data has changed the value.
	"title":    new StringFieldAccess("title",true),
	// Handle the "tiddler" field name as the title
	"tiddler":  new StringFieldAccess("title",true),
	"text":     new StringFieldAccess("text"),
	"modifier": new StringFieldAccess("modifier"),
	"modified": new DateFieldAccess("modified"),
	"creator":  new StringFieldAccess("creator"),
	"created":  new DateFieldAccess("created"),
	"tags":     new LinksFieldAccess("tags")
};

TiddlyWiki.isStandardField = function(name)
{
	return TiddlyWiki.standardFieldAccess[name] != undefined;
};

// Sets the value of the given field of the tiddler to the value.
// Setting an ExtendedField's value to null or undefined removes the field.
// Setting a namespace to undefined removes all fields of that namespace.
// The fieldName is case-insensitive.
// All values will be converted to a string value.
TiddlyWiki.prototype.setValue = function(tiddler,fieldName,value)
{
	TiddlyWiki.checkFieldName(fieldName);
	var t = this.resolveTiddler(tiddler);
	if(!t)
		return;
	fieldName = fieldName.toLowerCase();
	var isRemove = (value === undefined) || (value === null);
	var accessor = TiddlyWiki.standardFieldAccess[fieldName];
	if(accessor) {
		if(isRemove)
			// don't remove StandardFields
			return;
		var h = TiddlyWiki.standardFieldAccess[fieldName];
		if(!h.set(t,value))
			return;
	} else {
		var oldValue = t.fields[fieldName];
		if(isRemove) {
			if(oldValue !== undefined) {
				// deletes a single field
				delete t.fields[fieldName];
			} else {
				// no concrete value is defined for the fieldName
				// so we guess this is a namespace path.
				// delete all fields in a namespace
				var re = new RegExp("^"+fieldName+"\\.");
				var dirty = false;
				var n;
				for(n in t.fields) {
					if(n.match(re)) {
						delete t.fields[n];
						dirty = true;
					}
				}
				if(!dirty)
					return;
			}
		} else {
			// the "normal" set case. value is defined (not null/undefined)
			// For convenience provide a nicer conversion Date->String
			value = value instanceof Date ? value.convertToYYYYMMDDHHMMSSMMM() : String(value);
			if(oldValue == value)
				return;
			t.fields[fieldName] = value;
		}
	}
	// When we are here the tiddler/store really was changed.
	this.notify(t.title,true);
	if(!fieldName.match(/^temp\./))
		this.setDirty(true);
};

// Returns the value of the given field of the tiddler.
// The fieldName is case-insensitive.
// Will only return String values (or undefined).
TiddlyWiki.prototype.getValue = function(tiddler,fieldName)
{
	var t = this.resolveTiddler(tiddler);
	if(!t)
		return undefined;
	if(fieldName.indexOf(config.textPrimitives.sectionSeparator) === 0 || fieldName.indexOf(config.textPrimitives.sliceSeparator) === 0) {
		var sliceType = fieldName.substr(0, 2);
		var sliceName = fieldName.substring(2);
		return store.getTiddlerText("%0%1%2".format(t.title,sliceType,sliceName));
	} else {
		fieldName = fieldName.toLowerCase();
		var accessor = TiddlyWiki.standardFieldAccess[fieldName];
		if(accessor) {
			return accessor.get(t);
		}
	}
	return t.fields[fieldName];
};

// Calls the callback function for every field in the tiddler.
// When callback function returns a non-false value the iteration stops
// and that value is returned.
// The order of the fields is not defined.
// @param callback a function(tiddler,fieldName,value).
TiddlyWiki.prototype.forEachField = function(tiddler,callback,onlyExtendedFields)
{
	var t = this.resolveTiddler(tiddler);
	if(!t)
		return undefined;
	var n,result;
	for(n in t.fields) {
		result = callback(t,n,t.fields[n]);
		if(result)
			return result;
		}
	if(onlyExtendedFields)
		return undefined;
	for(n in TiddlyWiki.standardFieldAccess) {
		if(n != "tiddler") {
			// even though the "title" field can also be referenced through the name "tiddler"
			// we only visit this field once.
			result = callback(t,n,TiddlyWiki.standardFieldAccess[n].get(t));
			if(result)
				return result;
		}
	}
	return undefined;
};

//--
//-- Story functions
//--

function Story(containerId,idPrefix)
{
	this.container = containerId;
	this.idPrefix = idPrefix;
	this.highlightRegExp = null;
	this.tiddlerId = function(title) {
		title = title.replace(/_/g, "__").replace(/ /g, "_");
		var id = this.idPrefix + title;
		return id==this.container ? this.idPrefix + "_" + title : id;
	};
	this.containerId = function() {
		return this.container;
	};
}

Story.prototype.getTiddler = function(title)
{
	return document.getElementById(this.tiddlerId(title));
};

Story.prototype.getContainer = function()
{
	return document.getElementById(this.containerId());
};

Story.prototype.forEachTiddler = function(fn)
{
	var place = this.getContainer();
	if(!place)
		return;
	var e = place.firstChild;
	while(e) {
		var n = e.nextSibling;
		var title = e.getAttribute("tiddler");
		if(title) {
			fn.call(this,title,e);
		}
		e = n;
	}
};

Story.prototype.displayDefaultTiddlers = function()
{
	this.displayTiddlers(null,store.filterTiddlers(store.getTiddlerText("DefaultTiddlers")));
};

Story.prototype.displayTiddlers = function(srcElement,titles,template,animate,unused,customFields,toggle)
{
	var t;
	for(t = titles.length-1;t>=0;t--)
		this.displayTiddler(srcElement,titles[t],template,animate,unused,customFields);
};

Story.prototype.displayTiddler = function(srcElement,tiddler,template,animate,unused,customFields,toggle,animationSrc)
{
	var title = (tiddler instanceof Tiddler) ? tiddler.title : tiddler;
	var tiddlerElem = this.getTiddler(title);
	if(tiddlerElem) {
		if(toggle) {
			if(tiddlerElem.getAttribute("dirty") != "true")
				this.closeTiddler(title,true);
		} else {
			this.refreshTiddler(title,template,false,customFields);
		}
	} else {
		var place = this.getContainer();
		var before = this.positionTiddler(srcElement);
		tiddlerElem = this.createTiddler(place,before,title,template,customFields);
	}
	if(animationSrc && typeof animationSrc !== "string") {
		srcElement = animationSrc;
	}
	if(srcElement && typeof srcElement !== "string") {
		if(config.options.chkAnimate && (animate == undefined || animate == true) && anim && typeof Zoomer == "function" && typeof Scroller == "function")
			anim.startAnimating(new Zoomer(title,srcElement,tiddlerElem),new Scroller(tiddlerElem));
		else
			window.scrollTo(0,ensureVisible(tiddlerElem));
	}
	return tiddlerElem;
};

Story.prototype.positionTiddler = function(srcElement)
{
	var place = this.getContainer();
	var before = null;
	if(typeof srcElement == "string") {
		switch(srcElement) {
		case "top":
			before = place.firstChild;
			break;
		case "bottom":
			before = null;
			break;
		}
	} else {
		var after = this.findContainingTiddler(srcElement);
		if(after == null) {
			before = place.firstChild;
		} else if(after.nextSibling) {
			before = after.nextSibling;
			if(before.nodeType != 1)
				before = null;
		}
	}
	return before;
};

Story.prototype.createTiddler = function(place,before,title,template,customFields)
{
	var tiddlerElem = createTiddlyElement(null,"div",this.tiddlerId(title),"tiddler");
	tiddlerElem.setAttribute("refresh","tiddler");
	if(customFields)
		tiddlerElem.setAttribute("tiddlyFields",customFields);
	place.insertBefore(tiddlerElem,before);
	var defaultText = null;
	if(!store.tiddlerExists(title) && !store.isShadowTiddler(title))
		defaultText = this.loadMissingTiddler(title,customFields);
	this.refreshTiddler(title,template,false,customFields,defaultText);
	return tiddlerElem;
};

Story.prototype.loadMissingTiddler = function(title,fields,callback)
{
	var getTiddlerCallback = function(context)
	{
		if(context.status) {
			var t = context.tiddler;
			if(!t.created)
				t.created = new Date();
			if(!t.modified)
				t.modified = t.created;
			var dirty = store.isDirty();
			context.tiddler = store.saveTiddler(t.title,t.title,t.text,t.modifier,t.modified,t.tags,t.fields,true,t.created,t.creator);
			if(!window.allowSave())
				store.setDirty(dirty);
			autoSaveChanges();
		} else {
			story.refreshTiddler(context.title,null,true);
		}
		context.adaptor.close();
		if(callback) {
			callback(context);
		}
	};
	var tiddler = new Tiddler(title);
	tiddler.fields = typeof fields == "string" ? fields.decodeHashMap() : fields||{};
	var context = {serverType:tiddler.getServerType()};
	if(!context.serverType)
		return "";
	context.host = tiddler.fields['server.host'];
	context.workspace = tiddler.fields['server.workspace'];
	var adaptor = new config.adaptors[context.serverType]();
	adaptor.getTiddler(title,context,null,getTiddlerCallback);
	return config.messages.loadingMissingTiddler.format([title,context.serverType,context.host,context.workspace]);
};

Story.prototype.chooseTemplateForTiddler = function(title,template)
{
	if(!template)
		template = DEFAULT_VIEW_TEMPLATE;
	if(template == DEFAULT_VIEW_TEMPLATE || template == DEFAULT_EDIT_TEMPLATE)
		template = config.tiddlerTemplates[template];
	return template;
};

Story.prototype.getTemplateForTiddler = function(title,template,tiddler)
{
	return store.getRecursiveTiddlerText(template,null,10);
};

Story.prototype.refreshTiddler = function(title,template,force,customFields,defaultText)
{
	var tiddlerElem = this.getTiddler(title);
	if(tiddlerElem) {
		if(tiddlerElem.getAttribute("dirty") == "true" && !force)
			return tiddlerElem;
		template = this.chooseTemplateForTiddler(title,template);
		var currTemplate = tiddlerElem.getAttribute("template");
		if((template != currTemplate) || force) {
			var tiddler = store.getTiddler(title);
			if(!tiddler) {
				tiddler = new Tiddler();
				if(store.isShadowTiddler(title)) {
					var tags = [];
					tiddler.set(title,store.getTiddlerText(title),config.views.wikified.shadowModifier,version.date,tags,version.date);
				} else {
					var text = template=="EditTemplate" ?
								config.views.editor.defaultText.format([title]) :
								config.views.wikified.defaultText.format([title]);
					text = defaultText || text;
					var fields = customFields ? customFields.decodeHashMap() : null;
					tiddler.set(title,text,config.views.wikified.defaultModifier,version.date,[],version.date,fields);
				}
			}
			tiddlerElem.setAttribute("tags",tiddler.tags.join(" "));
			tiddlerElem.setAttribute("tiddler",title);
			tiddlerElem.setAttribute("template",template);
			tiddlerElem.onmouseover = this.onTiddlerMouseOver;
			tiddlerElem.onmouseout = this.onTiddlerMouseOut;
			tiddlerElem.ondblclick = this.onTiddlerDblClick;
			tiddlerElem[window.event?"onkeydown":"onkeypress"] = this.onTiddlerKeyPress;
			tiddlerElem.innerHTML = this.getTemplateForTiddler(title,template,tiddler);
			applyHtmlMacros(tiddlerElem,tiddler);
			if(store.getTaggedTiddlers(title).length > 0)
				jQuery(tiddlerElem).addClass("isTag");
			else
				jQuery(tiddlerElem).removeClass("isTag");
			if(store.tiddlerExists(title)) {
				jQuery(tiddlerElem).removeClass("shadow");
				jQuery(tiddlerElem).removeClass("missing");
			} else {
				jQuery(tiddlerElem).addClass(store.isShadowTiddler(title) ? "shadow" : "missing");
			}
			if(customFields)
				this.addCustomFields(tiddlerElem,customFields);
		}
	}
	return tiddlerElem;
};

Story.prototype.addCustomFields = function(place,customFields)
{
	var fields = customFields.decodeHashMap();
	var w = createTiddlyElement(place,"div",null,"customFields");
	w.style.display = "none";
	var t;
	for(t in fields) {
		var e = document.createElement("input");
		e.setAttribute("type","text");
		e.setAttribute("value",fields[t]);
		w.appendChild(e);
		e.setAttribute("edit",t);
	}
};

Story.prototype.refreshAllTiddlers = function(force)
{
	var e = this.getContainer().firstChild;
	while(e) {
		var template = e.getAttribute("template");
		if(template && e.getAttribute("dirty") != "true") {
			this.refreshTiddler(e.getAttribute("tiddler"),force ? null : template,true);
		}
		e = e.nextSibling;
	}
};

Story.prototype.onTiddlerMouseOver = function(e)
{
	jQuery(this).addClass("selected");
};

Story.prototype.onTiddlerMouseOut = function(e)
{
	jQuery(this).removeClass("selected");
};

Story.prototype.onTiddlerDblClick = function(ev)
{
	var e = ev || window.event;
	var target = resolveTarget(e);
	if(target && target.nodeName.toLowerCase() != "input" && target.nodeName.toLowerCase() != "textarea") {
		if(document.selection && document.selection.empty)
			document.selection.empty();
		config.macros.toolbar.invokeCommand(this,"defaultCommand",e);
		e.cancelBubble = true;
		if(e.stopPropagation) e.stopPropagation();
		return true;
	}
	return false;
};

Story.prototype.onTiddlerKeyPress = function(ev)
{
	var e = ev || window.event;
	clearMessage();
	var consume = false;
	var title = this.getAttribute("tiddler");
	var target = resolveTarget(e);
	switch(e.keyCode) {
	case 9: // Tab
		var ed = story.getTiddlerField(title,"text");
		if(target.tagName.toLowerCase() == "input" && ed.value==config.views.editor.defaultText.format([title])) {
			// moving from input field and editor still contains default text, so select it
			ed.focus();
			ed.select();
			consume = true;
		}
		if(config.options.chkInsertTabs && target.tagName.toLowerCase() == "textarea") {
			replaceSelection(target,String.fromCharCode(9));
			consume = true;
		}
		if(config.isOpera) {
			target.onblur = function() {
				this.focus();
				this.onblur = null;
			};
		}
		break;
	case 13: // Ctrl-Enter
	case 10: // Ctrl-Enter on IE PC
	case 77: // Ctrl-Enter is "M" on some platforms
		if(e.ctrlKey) {
			blurElement(this);
			config.macros.toolbar.invokeCommand(this,"defaultCommand",e);
			consume = true;
		}
		break;
	case 27: // Escape
		blurElement(this);
		config.macros.toolbar.invokeCommand(this,"cancelCommand",e);
		consume = true;
		break;
	}
	e.cancelBubble = consume;
	if(consume) {
		if(e.stopPropagation) e.stopPropagation(); // Stop Propagation
		e.returnValue = true; // Cancel The Event in IE
		if(e.preventDefault ) e.preventDefault(); // Cancel The Event in Moz
	}
	return !consume;
};

Story.prototype.getTiddlerField = function(title,field)
{
	var tiddlerElem = this.getTiddler(title);
	var e = null;
	if(tiddlerElem) {
		var t,children = tiddlerElem.getElementsByTagName("*");
		for(t=0; t<children.length; t++) {
			var c = children[t];
			if(c.tagName.toLowerCase() == "input" || c.tagName.toLowerCase() == "textarea") {
				if(!e)
					e = c;
				if(c.getAttribute("edit") == field)
					e = c;
			}
		}
	}
	return e;
};

Story.prototype.focusTiddler = function(title,field)
{
	var e = this.getTiddlerField(title,field);
	if(e) {
		e.focus();
		e.select();
	}
};

Story.prototype.blurTiddler = function(title)
{
	var tiddlerElem = this.getTiddler(title);
	if(tiddlerElem && tiddlerElem.focus && tiddlerElem.blur) {
		tiddlerElem.focus();
		tiddlerElem.blur();
	}
};

Story.prototype.setTiddlerField = function(title,tag,mode,field)
{
	var c = this.getTiddlerField(title,field);
	var tags = c.value.readBracketedList();
	tags.setItem(tag,mode);
	c.value = String.encodeTiddlyLinkList(tags);
};

Story.prototype.setTiddlerTag = function(title,tag,mode)
{
	this.setTiddlerField(title,tag,mode,"tags");
};

Story.prototype.closeTiddler = function(title,animate,unused)
{
	var tiddlerElem = this.getTiddler(title);
	if(tiddlerElem) {
		clearMessage();
		this.scrubTiddler(tiddlerElem);
		if(config.options.chkAnimate && animate && anim && typeof Slider == "function")
			anim.startAnimating(new Slider(tiddlerElem,false,null,"all"));
		else {
			jQuery(tiddlerElem).remove();
		}
	}
};

Story.prototype.scrubTiddler = function(tiddlerElem)
{
	tiddlerElem.id = null;
};

Story.prototype.setDirty = function(title,dirty)
{
	var tiddlerElem = this.getTiddler(title);
	if(tiddlerElem)
		tiddlerElem.setAttribute("dirty",dirty ? "true" : "false");
};

Story.prototype.isDirty = function(title)
{
	var tiddlerElem = this.getTiddler(title);
	if(tiddlerElem)
		return tiddlerElem.getAttribute("dirty") == "true";
	return null;
};

Story.prototype.areAnyDirty = function()
{
	var r = false;
	this.forEachTiddler(function(title,element) {
		if(this.isDirty(title))
			r = true;
	});
	return r;
};

Story.prototype.closeAllTiddlers = function(exclude)
{
	clearMessage();
	this.forEachTiddler(function(title,element) {
		if((title != exclude) && element.getAttribute("dirty") != "true")
			this.closeTiddler(title);
	});
	window.scrollTo(0,ensureVisible(this.container));
};

Story.prototype.isEmpty = function()
{
	var place = this.getContainer();
	return place && place.firstChild == null;
};

Story.prototype.search = function(text,useCaseSensitive,useRegExp)
{
	this.closeAllTiddlers();
	highlightHack = new RegExp(useRegExp ? text : text.escapeRegExp(),useCaseSensitive ? "mg" : "img");
	var matches = store.search(highlightHack,"title","excludeSearch");
	this.displayTiddlers(null,matches);
	highlightHack = null;
	var q = useRegExp ? "/" : "'";
	if(matches.length > 0)
		displayMessage(config.macros.search.successMsg.format([matches.length.toString(),q + text + q]));
	else
		displayMessage(config.macros.search.failureMsg.format([q + text + q]));
};

Story.prototype.findContainingTiddler = function(e)
{
	while(e && !jQuery(e).hasClass("tiddler")) {
		e = jQuery(e).hasClass("popup") && Popup.stack[0] ? Popup.stack[0].root : e.parentNode;
	}
	return e;
};

Story.prototype.gatherSaveFields = function(e,fields)
{
	if(e && e.getAttribute) {
		var f = e.getAttribute("edit");
		if(f)
			fields[f] = e.value.replace(/\r/mg,"");
		if(e.hasChildNodes()) {
			var t,c = e.childNodes;
			for(t=0; t<c.length; t++)
				this.gatherSaveFields(c[t],fields);
		}
	}
};

Story.prototype.hasChanges = function(title)
{
	var e = this.getTiddler(title);
	if(e) {
		var fields = {};
		this.gatherSaveFields(e,fields);
		if(store.fetchTiddler(title)) {
		    var n;
			for(n in fields) {
				if(store.getValue(title,n) != fields[n]) //# tiddler changed
					return true;
			}
		} else {
			if(store.isShadowTiddler(title) && store.getShadowTiddlerText(title) == fields.text) { //# not checking for title or tags
				return false;
			} else { //# changed shadow or new tiddler
				return true;
			}
		}
	}
	return false;
};

Story.prototype.saveTiddler = function(title,minorUpdate)
{
	var tiddlerElem = this.getTiddler(title);
	if(tiddlerElem) {
		var fields = {};
		this.gatherSaveFields(tiddlerElem,fields);
		var newTitle = fields.title || title;
		if(!store.tiddlerExists(newTitle)) {
			newTitle = newTitle.trim();
			var creator = config.options.txtUserName;
		}
		if(store.tiddlerExists(newTitle) && newTitle != title) {
			if(!confirm(config.messages.overwriteWarning.format([newTitle.toString()])))
				return null;
				title = newTitle;
		}
		if(newTitle != title)
			this.closeTiddler(newTitle,false);
		tiddlerElem.id = this.tiddlerId(newTitle);
		tiddlerElem.setAttribute("tiddler",newTitle);
		tiddlerElem.setAttribute("template",DEFAULT_VIEW_TEMPLATE);
		tiddlerElem.setAttribute("dirty","false");
		if(config.options.chkForceMinorUpdate)
			minorUpdate = !minorUpdate;
		if(!store.tiddlerExists(newTitle))
			minorUpdate = false;
		var newDate = new Date();
		if(store.tiddlerExists(title)) {
			var t = store.fetchTiddler(title);
			var extendedFields = t.fields;
			creator = t.creator;
		} else {
			extendedFields = merge({},config.defaultCustomFields);
		}
		var n;
		for(n in fields) {
			if(!TiddlyWiki.isStandardField(n))
				extendedFields[n] = fields[n];
		}
		var tiddler = store.saveTiddler(title,newTitle,fields.text,minorUpdate ? undefined : config.options.txtUserName,minorUpdate ? undefined : newDate,fields.tags,extendedFields,null,null,creator);
		autoSaveChanges(null,[tiddler]);
		return newTitle;
	}
	return null;
};

Story.prototype.permaView = function()
{
	var links = [];
	this.forEachTiddler(function(title,element) {
		links.push(String.encodeTiddlyLink(title));
	});
	var t = encodeURIComponent(links.join(" "));
	if(t == "")
		t = "#";
	if(window.location.hash != t)
		window.location.hash = t;
};

Story.prototype.switchTheme = function(theme)
{
	if(safeMode)
		return;

	var getSlice = function(theme,slice) {
		var r;
		if(readOnly)
			r = store.getTiddlerSlice(theme,slice+"ReadOnly") || store.getTiddlerSlice(theme,"Web"+slice);
		r = r || store.getTiddlerSlice(theme,slice);
		if(r && r.indexOf(config.textPrimitives.sectionSeparator)==0)
			r = theme + r;
		return store.isAvailable(r) ? r : slice;
	};

	var replaceNotification = function(i,name,theme,slice) {
		var newName = getSlice(theme,slice);
		if(name!=newName && store.namedNotifications[i].name==name) {
			store.namedNotifications[i].name = newName;
			return newName;
		}
		return name;
	};

	var pt = config.refresherData.pageTemplate;
	var vi = DEFAULT_VIEW_TEMPLATE;
	var vt = config.tiddlerTemplates[vi];
	var ei = DEFAULT_EDIT_TEMPLATE;
	var et = config.tiddlerTemplates[ei];

	var i;
	for(i=0; i<config.notifyTiddlers.length; i++) {
		var name = config.notifyTiddlers[i].name;
		switch(name) {
		case "PageTemplate":
			config.refresherData.pageTemplate = replaceNotification(i,config.refresherData.pageTemplate,theme,name);
			break;
		case "StyleSheet":
			removeStyleSheet(config.refresherData.styleSheet);
			config.refresherData.styleSheet = replaceNotification(i,config.refresherData.styleSheet,theme,name);
			break;
		case "ColorPalette":
			config.refresherData.colorPalette = replaceNotification(i,config.refresherData.colorPalette,theme,name);
			break;
		default:
			break;
		}
	}
	config.tiddlerTemplates[vi] = getSlice(theme,"ViewTemplate");
	config.tiddlerTemplates[ei] = getSlice(theme,"EditTemplate");
	if(!startingUp) {
		if(config.refresherData.pageTemplate!=pt || config.tiddlerTemplates[vi]!=vt || config.tiddlerTemplates[ei]!=et) {
			refreshAll();
			this.refreshAllTiddlers(true);
		} else {
			setStylesheet(store.getRecursiveTiddlerText(config.refresherData.styleSheet,"",10),config.refreshers.styleSheet);
		}
		config.options.txtTheme = theme;
		saveOption("txtTheme");
	}
};

//--
//-- Backstage
//--
// Backstage tasks
config.tasks.save.action = saveChanges;

var backstage = {
	area: null,
	toolbar: null,
	button: null,
	showButton: null,
	hideButton: null,
	cloak: null,
	panel: null,
	panelBody: null,
	panelFooter: null,
	currTabName: null,
	currTabElem: null,
	content: null,

	init: function() {
		var cmb = config.messages.backstage;
		this.area = document.getElementById("backstageArea");
		this.toolbar = jQuery("#backstageToolbar").empty()[0];
		this.button = jQuery("#backstageButton").empty()[0];
		this.button.style.display = "block";
		var t = cmb.open.text + " " + glyph("bentArrowLeft");
		this.showButton = createTiddlyButton(this.button,t,cmb.open.tooltip,
						function(e) {backstage.show(); return false;},null,"backstageShow");
		t = glyph("bentArrowRight") + " " + cmb.close.text;
		this.hideButton = createTiddlyButton(this.button,t,cmb.close.tooltip,
						function(e) {backstage.hide(); return false;},null,"backstageHide");
		this.cloak = document.getElementById("backstageCloak");
		this.panel = document.getElementById("backstagePanel");
		this.panelFooter = createTiddlyElement(this.panel,"div",null,"backstagePanelFooter");
		this.panelBody = createTiddlyElement(this.panel,"div",null,"backstagePanelBody");
		this.cloak.onmousedown = function(e) {backstage.switchTab(null);};
		createTiddlyText(this.toolbar,cmb.prompt);
		for(t=0; t<config.backstageTasks.length; t++) {
			var taskName = config.backstageTasks[t];
			var task = config.tasks[taskName];
			var handler = task.action ? this.onClickCommand : this.onClickTab;
			var text = task.text + (task.action ? "" : glyph("downTriangle"));
			var btn = createTiddlyButton(this.toolbar,text,task.tooltip,handler,"backstageTab");
			jQuery(btn).addClass(task.action ? "backstageAction" : "backstageTask");
			btn.setAttribute("task", taskName);
			}
		this.content = document.getElementById("contentWrapper");
		if(config.options.chkBackstage)
			this.show();
		else
			this.hide();
	},

	isVisible: function() {
		return this.area ? this.area.style.display == "block" : false;
	},

	show: function() {
		this.area.style.display = "block";
		if(anim && config.options.chkAnimate) {
			backstage.toolbar.style.left = findWindowWidth() + "px";
			var p = [{style: "left", start: findWindowWidth(), end: 0, template: "%0px"}];
			anim.startAnimating(new Morpher(backstage.toolbar,config.animDuration,p));
		} else {
			backstage.area.style.left = "0px";
		}
		jQuery(this.showButton).hide();
		jQuery(this.hideButton).show();
		config.options.chkBackstage = true;
		saveOption("chkBackstage");
		jQuery(this.content).addClass("backstageVisible");
	},

	hide: function() {
		if(this.currTabElem) {
			this.switchTab(null);
		} else {
			backstage.toolbar.style.left = "0px";
			if(anim && config.options.chkAnimate) {
				var p = [{style: "left", start: 0, end: findWindowWidth(), template: "%0px"}];
				var c = function(element,properties) {backstage.area.style.display = "none";};
				anim.startAnimating(new Morpher(backstage.toolbar,config.animDuration,p,c));
			} else {
				this.area.style.display = "none";
			}
			this.showButton.style.display = "block";
			this.hideButton.style.display = "none";
			config.options.chkBackstage = false;
			saveOption("chkBackstage");
			jQuery(this.content).removeClass("backstageVisible");
		}
	},

	onClickCommand: function(e) {
		var task = config.tasks[this.getAttribute("task")];
		if(task.action) {
			backstage.switchTab(null);
			task.action();
		}
		return false;
	},

	onClickTab: function(e) {
		backstage.switchTab(this.getAttribute("task"));
		return false;
	},

	// Switch to a given tab, or none if null is passed
	switchTab: function(tabName) {
		var tabElem = null;
		var e = this.toolbar.firstChild;
		while(e) {
			if(e.getAttribute && e.getAttribute("task") == tabName)
				tabElem = e;
			e = e.nextSibling;
		}
		if(tabName == backstage.currTabName) {
			backstage.hidePanel();
			return;
		}
		if(backstage.currTabElem) {
			jQuery(this.currTabElem).removeClass("backstageSelTab");
		}
		if(tabElem && tabName) {
			backstage.preparePanel();
			jQuery(tabElem).addClass("backstageSelTab");
			var task = config.tasks[tabName];
			wikify(task.content,backstage.panelBody,null,null);
			backstage.showPanel();
		} else if(backstage.currTabElem) {
			backstage.hidePanel();
		}
		backstage.currTabName = tabName;
		backstage.currTabElem = tabElem;
	},

	isPanelVisible: function() {
		return backstage.panel ? backstage.panel.style.display == "block" : false;
	},

	preparePanel: function() {
		backstage.cloak.style.height = findDocHeight() + "px";
		backstage.cloak.style.display = "block";
		jQuery(backstage.panelBody).empty();
		return backstage.panelBody;
	},

	showPanel: function() {
		backstage.panel.style.display = "block";
		if(anim && config.options.chkAnimate) {
			backstage.panel.style.top = (-backstage.panel.offsetHeight) + "px";
			var p = [{style: "top", start: -backstage.panel.offsetHeight, end: 0, template: "%0px"}];
			anim.startAnimating(new Morpher(backstage.panel,config.animDuration,p),new Scroller(backstage.panel,false));
		} else {
			backstage.panel.style.top = "0px";
		}
		return backstage.panelBody;
	},

	hidePanel: function() {
		if(backstage.currTabElem)
			jQuery(backstage.currTabElem).removeClass("backstageSelTab");
		backstage.currTabElem = null;
		backstage.currTabName = null;
		if(anim && config.options.chkAnimate) {
			var p = [
				{style: "top", start: 0, end: -(backstage.panel.offsetHeight), template: "%0px"},
				{style: "display", atEnd: "none"}
			];
			var c = function(element,properties) {backstage.cloak.style.display = "none";};
			anim.startAnimating(new Morpher(backstage.panel,config.animDuration,p,c));
		} else {
			jQuery([backstage.panel,backstage.cloak]).hide();
		}
	}
};

config.macros.backstage = {};

config.macros.backstage.handler = function(place,macroName,params)
{
	var backstageTask = config.tasks[params[0]];
	if(backstageTask)
		createTiddlyButton(place,backstageTask.text,backstageTask.tooltip,function(e) {backstage.switchTab(params[0]); return false;});
};

//--
//-- ImportTiddlers macro
//--

config.macros.importTiddlers.handler = function(place,macroName,params,wikifier,paramString,tiddler)
{
	if(readOnly) {
		createTiddlyElement(place,"div",null,"marked",this.readOnlyWarning);
		return;
	}
	var w = new Wizard();
	w.createWizard(place,this.wizardTitle);
	this.restart(w);
};

config.macros.importTiddlers.onCancel = function(e)
{
	var wizard = new Wizard(this);
	wizard.clear();
	config.macros.importTiddlers.restart(wizard);
	return false;
};

config.macros.importTiddlers.onClose = function(e)
{
	backstage.hidePanel();
	return false;
};

config.macros.importTiddlers.restart = function(wizard)
{
	var me = config.macros.importTiddlers;
	wizard.addStep(this.step1Title,this.step1Html);
	var t,s = wizard.getElement("selTypes");
	for(t in config.adaptors) {
		var e = createTiddlyElement(s,"option",null,null,config.adaptors[t].serverLabel || t);
		e.value = t;
	}
	if(config.defaultAdaptor)
		s.value = config.defaultAdaptor;
	s = wizard.getElement("selFeeds");
	var feeds = this.getFeeds();
	for(t in feeds) {
		e = createTiddlyElement(s,"option",null,null,t);
		e.value = t;
	}
	wizard.setValue("feeds",feeds);
	s.onchange = me.onFeedChange;
	var fileInput = wizard.getElement("txtBrowse");
	fileInput.onchange = me.onBrowseChange;
	fileInput.onkeyup = me.onBrowseChange;
	wizard.setButtons([{caption: this.openLabel, tooltip: this.openPrompt, onClick: me.onOpen}]);
	wizard.formElem.action = "javascript:;";
	wizard.formElem.onsubmit = function() {
		if(!this.txtPath || this.txtPath.value.length) //# check for manually entered path in first step
			this.lastChild.firstChild.onclick();
	};
};

config.macros.importTiddlers.getFeeds = function()
{
	var feeds = {};
	var t,tagged = store.getTaggedTiddlers("systemServer","title");
	for(t=0; t<tagged.length; t++) {
		var title = tagged[t].title;
		var serverType = store.getTiddlerSlice(title,"Type");
		if(!serverType)
			serverType = "file";
		feeds[title] = {title: title,
						url: store.getTiddlerSlice(title,"URL"),
						workspace: store.getTiddlerSlice(title,"Workspace"),
						workspaceList: store.getTiddlerSlice(title,"WorkspaceList"),
						tiddlerFilter: store.getTiddlerSlice(title,"TiddlerFilter"),
						serverType: serverType,
						description: store.getTiddlerSlice(title,"Description")};
	}
	return feeds;
};

config.macros.importTiddlers.onFeedChange = function(e)
{
	var wizard = new Wizard(this);
	var selTypes = wizard.getElement("selTypes");
	var fileInput = wizard.getElement("txtPath");
	var feeds = wizard.getValue("feeds");
	var f = feeds[this.value];
	if(f) {
		selTypes.value = f.serverType;
		fileInput.value = f.url;
		wizard.setValue("feedName",f.serverType);
		wizard.setValue("feedHost",f.url);
		wizard.setValue("feedWorkspace",f.workspace);
		wizard.setValue("feedWorkspaceList",f.workspaceList);
		wizard.setValue("feedTiddlerFilter",f.tiddlerFilter);
	}
	return false;
};

config.macros.importTiddlers.onBrowseChange = function(e)
{
	var wizard = new Wizard(this);
	var file = this.value;
	file = file.replace(/^C:\\fakepath\\/i,''); // remove fakepath (chrome/opera/safari)
	if(this.files && this.files[0]) {
		try {
			netscape.security.PrivilegeManager.enablePrivilege("UniversalFileRead");
			file = this.files[0].fileName; // REQUIRES PRIVILEGES.. NULL otherwise
		} catch (ex) {
			// non-priv fallback: combine filename with path to current document
			var path=getLocalPath(document.location.href);
			var slashpos=path.lastIndexOf('/'); if (slashpos==-1) slashpos=path.lastIndexOf('\\');
			if (slashpos!=-1) path=path.substr(0,slashpos+1); // remove filename, leave trailing 	slash
			file=path+file;
		}
	}
	var fileInput = wizard.getElement("txtPath");
	fileInput.value = config.macros.importTiddlers.getURLFromLocalPath(file);
	var serverType = wizard.getElement("selTypes");
	serverType.value = "file";
	return true;
};

config.macros.importTiddlers.getURLFromLocalPath = function(v)
{
	if(!v || !v.length)
		return v;
	v = v.replace(/\\/g,"/"); // use "/" for cross-platform consistency
	var u;
	var t = v.split(":");
	var p = t[1] || t[0]; // remove drive letter (if any)
	if(t[1] && (t[0] == "http" || t[0] == "https" || t[0] == "file")) {
		u = v;
	} else if(p.substr(0,1)=="/") {
		u = document.location.protocol + "//" + document.location.hostname + (t[1] ? "/" : "") + v;
	} else {
		var c = document.location.href.replace(/\\/g,"/");
		var pos = c.lastIndexOf("/");
		if(pos!=-1)
			c = c.substr(0,pos); // remove filename
		u = c + "/" + p;
	}
	return u;
};

config.macros.importTiddlers.onOpen = function(e)
{
	var me = config.macros.importTiddlers;
	var wizard = new Wizard(this);
	var fileInput = wizard.getElement("txtPath");
	var url = fileInput.value;
	var serverType = wizard.getElement("selTypes").value || config.defaultAdaptor;
	var adaptor = new config.adaptors[serverType]();
	wizard.setValue("adaptor",adaptor);
	wizard.setValue("serverType",serverType);
	wizard.setValue("host",url);
	adaptor.openHost(url,null,wizard,me.onOpenHost);
	wizard.setButtons([{caption: me.cancelLabel, tooltip: me.cancelPrompt, onClick: me.onCancel}],me.statusOpenHost);
	return false;
};

config.macros.importTiddlers.onOpenHost = function(context,wizard)
{
	var me = config.macros.importTiddlers;
	var adaptor = wizard.getValue("adaptor");
	if(context.status !== true)
		displayMessage("Error in importTiddlers.onOpenHost: " + context.statusText);
	adaptor.getWorkspaceList(context,wizard,me.onGetWorkspaceList);
	wizard.setButtons([{caption: me.cancelLabel, tooltip: me.cancelPrompt, onClick: me.onCancel}],me.statusGetWorkspaceList);
};

config.macros.importTiddlers.onGetWorkspaceList = function(context,wizard)
{
	var me = config.macros.importTiddlers;
	if(context.status !== true)
		displayMessage("Error in importTiddlers.onGetWorkspaceList: " + context.statusText);
	wizard.setValue("context",context);
	var workspace = wizard.getValue("feedWorkspace");
	if(!workspace && context.workspaces.length==1)
		workspace = context.workspaces[0].title;
	if(workspace) {
		context.adaptor.openWorkspace(workspace,context,wizard,me.onOpenWorkspace);
		wizard.setValue("workspace",workspace);
		wizard.setButtons([{caption: me.cancelLabel, tooltip: me.cancelPrompt, onClick: me.onCancel}],me.statusOpenWorkspace);
		return;
	}
	wizard.addStep(me.step2Title,me.step2Html);
	var t,s = wizard.getElement("selWorkspace");
	s.onchange = me.onWorkspaceChange;
	for(t=0; t<context.workspaces.length; t++) {
		var e = createTiddlyElement(s,"option",null,null,context.workspaces[t].title);
		e.value = context.workspaces[t].title;
	}
	var workspaceList = wizard.getValue("feedWorkspaceList");
	if(workspaceList) {
		var n,list = workspaceList.parseParams("workspace",null,false,true);
		for(n=1; n<list.length; n++) {
			if(context.workspaces.findByField("title",list[n].value) == null) {
				e = createTiddlyElement(s,"option",null,null,list[n].value);
				e.value = list[n].value;
			}
		}
	}
	if(workspace) {
		t = wizard.getElement("txtWorkspace");
		t.value = workspace;
	}
	wizard.setButtons([{caption: me.openLabel, tooltip: me.openPrompt, onClick: me.onChooseWorkspace}]);
};

config.macros.importTiddlers.onWorkspaceChange = function(e)
{
	var wizard = new Wizard(this);
	var t = wizard.getElement("txtWorkspace");
	t.value = this.value;
	this.selectedIndex = 0;
	return false;
};

config.macros.importTiddlers.onChooseWorkspace = function(e)
{
	var me = config.macros.importTiddlers;
	var wizard = new Wizard(this);
	var adaptor = wizard.getValue("adaptor");
	var workspace = wizard.getElement("txtWorkspace").value;
	wizard.setValue("workspace",workspace);
	var context = wizard.getValue("context");
	adaptor.openWorkspace(workspace,context,wizard,me.onOpenWorkspace);
	wizard.setButtons([{caption: me.cancelLabel, tooltip: me.cancelPrompt, onClick: me.onCancel}],me.statusOpenWorkspace);
	return false;
};

config.macros.importTiddlers.onOpenWorkspace = function(context,wizard)
{
	var me = config.macros.importTiddlers;
	if(context.status !== true)
		displayMessage("Error in importTiddlers.onOpenWorkspace: " + context.statusText);
	var adaptor = wizard.getValue("adaptor");
	adaptor.getTiddlerList(context,wizard,me.onGetTiddlerList,wizard.getValue("feedTiddlerFilter"));
	wizard.setButtons([{caption: me.cancelLabel, tooltip: me.cancelPrompt, onClick: me.onCancel}],me.statusGetTiddlerList);
};

config.macros.importTiddlers.onGetTiddlerList = function(context,wizard)
{
	var me = config.macros.importTiddlers;
	if(context.status !== true) {
		var error = context.statusText||me.errorGettingTiddlerList;
		if(context.host.indexOf("file://") === 0) {
			error = me.errorGettingTiddlerListFile;
		} else {
			error = context.xhr && context.xhr.status == 404 ? me.errorGettingTiddlerListHttp404 :
				me.errorGettingTiddlerListHttp;
		}
		wizard.setButtons([{caption: me.cancelLabel, tooltip: me.cancelPrompt, onClick: me.onCancel}],"");
		jQuery("span.status", wizard.footerEl).html(error); // so error message can be html
		return;
	}
	// Extract data for the listview
	var listedTiddlers = [];
	if(context.tiddlers) {
		var n;
		for(n=0; n<context.tiddlers.length; n++) {
			var tiddler = context.tiddlers[n];
			listedTiddlers.push({
				title: tiddler.title,
				modified: tiddler.modified,
				modifier: tiddler.modifier,
				text: tiddler.text ? wikifyPlainText(tiddler.text,100) : "",
				tags: tiddler.tags,
				size: tiddler.text ? tiddler.text.length : 0,
				tiddler: tiddler
			});
		}
	}
	listedTiddlers.sort(function(a,b) {return a.title < b.title ? -1 : (a.title == b.title ? 0 : +1);});
	// Display the listview
	wizard.addStep(me.step3Title,me.step3Html);
	var markList = wizard.getElement("markList");
	var listWrapper = document.createElement("div");
	markList.parentNode.insertBefore(listWrapper,markList);
	var listView = ListView.create(listWrapper,listedTiddlers,me.listViewTemplate);
	wizard.setValue("listView",listView);
	wizard.setValue("context",context);
	var txtSaveTiddler = wizard.getElement("txtSaveTiddler");
	txtSaveTiddler.value = me.generateSystemServerName(wizard);
	wizard.setButtons([
			{caption: me.cancelLabel, tooltip: me.cancelPrompt, onClick: me.onCancel},
			{caption: me.importLabel, tooltip: me.importPrompt, onClick: me.doImport}
		]);
};

config.macros.importTiddlers.generateSystemServerName = function(wizard)
{
	var serverType = wizard.getValue("serverType");
	var host = wizard.getValue("host");
	var workspace = wizard.getValue("workspace");
	var pattern = config.macros.importTiddlers[workspace ? "systemServerNamePattern" : "systemServerNamePatternNoWorkspace"];
	return pattern.format([serverType,host,workspace]);
};

config.macros.importTiddlers.saveServerTiddler = function(wizard)
{
	var me = config.macros.importTiddlers;
	var txtSaveTiddler = wizard.getElement("txtSaveTiddler").value;
	if(store.tiddlerExists(txtSaveTiddler)) {
		if(!confirm(me.confirmOverwriteSaveTiddler.format([txtSaveTiddler])))
			return;
		store.suspendNotifications();
		store.removeTiddler(txtSaveTiddler);
		store.resumeNotifications();
	}
	var serverType = wizard.getValue("serverType");
	var host = wizard.getValue("host");
	var workspace = wizard.getValue("workspace");
	var text = me.serverSaveTemplate.format([serverType,host,workspace]);
	store.saveTiddler(txtSaveTiddler,txtSaveTiddler,text,me.serverSaveModifier,new Date(),["systemServer"]);
};

config.macros.importTiddlers.doImport = function(e)
{
	var me = config.macros.importTiddlers;
	var wizard = new Wizard(this);
	if(wizard.getElement("chkSave").checked)
		me.saveServerTiddler(wizard);
	var chkSync = wizard.getElement("chkSync").checked;
	wizard.setValue("sync",chkSync);
	var listView = wizard.getValue("listView");
	var rowNames = ListView.getSelectedRows(listView);
	var adaptor = wizard.getValue("adaptor");
	var overwrite = [];
	var t;
	for(t=0; t<rowNames.length; t++) {
		if(store.tiddlerExists(rowNames[t]))
			overwrite.push(rowNames[t]);
	}
	if(overwrite.length > 0) {
		if(!confirm(me.confirmOverwriteText.format([overwrite.join(", ")])))
			return false;
	}
	wizard.addStep(me.step4Title.format([rowNames.length]),me.step4Html);
	for(t=0; t<rowNames.length; t++) {
		var link = document.createElement("div");
		createTiddlyLink(link,rowNames[t],true);
		var place = wizard.getElement("markReport");
		place.parentNode.insertBefore(link,place);
	}
	wizard.setValue("remainingImports",rowNames.length);
	wizard.setButtons([
			{caption: me.cancelLabel, tooltip: me.cancelPrompt, onClick: me.onCancel}
		],me.statusDoingImport);
	var wizardContext = wizard.getValue("context");
	var tiddlers = wizardContext ? wizardContext.tiddlers : [];
	for(t=0; t<rowNames.length; t++) {
		var context = {
			allowSynchronous:true,
			tiddler:tiddlers[tiddlers.findByField("title",rowNames[t])]
		};
		adaptor.getTiddler(rowNames[t],context,wizard,me.onGetTiddler);
	}
	return false;
};

config.macros.importTiddlers.onGetTiddler = function(context,wizard)
{
	var me = config.macros.importTiddlers;
	if(!context.status)
		displayMessage("Error in importTiddlers.onGetTiddler: " + context.statusText);
	var tiddler = context.tiddler;
	store.suspendNotifications();
	store.saveTiddler(tiddler.title, tiddler.title, tiddler.text, tiddler.modifier, tiddler.modified, tiddler.tags, tiddler.fields, true, tiddler.created);
	if(!wizard.getValue("sync")) {
		store.setValue(tiddler.title,'server',null);
	}
	store.resumeNotifications();
	if(!context.isSynchronous)
		store.notify(tiddler.title,true);
	var remainingImports = wizard.getValue("remainingImports")-1;
	wizard.setValue("remainingImports",remainingImports);
	if(remainingImports == 0) {
		if(context.isSynchronous) {
			store.notifyAll();
			refreshDisplay();
		}
		wizard.setButtons([
				{caption: me.doneLabel, tooltip: me.donePrompt, onClick: me.onClose}
			],me.statusDoneImport);
		autoSaveChanges();
	}
};

//--
//-- Upgrade macro
//--

config.macros.upgrade.handler = function(place)
{
	var w = new Wizard();
	w.createWizard(place,this.wizardTitle);
	w.addStep(this.step1Title,this.step1Html.format([this.source,this.source]));
	w.setButtons([{caption: this.upgradeLabel, tooltip: this.upgradePrompt, onClick: this.onClickUpgrade}]);
};

config.macros.upgrade.onClickUpgrade = function(e)
{
	var me = config.macros.upgrade;
	var w = new Wizard(this);
	if(!window.allowSave()) {
		alert(me.errorCantUpgrade);
		return false;
	}
	if(story.areAnyDirty() || store.isDirty()) {
		alert(me.errorNotSaved);
		return false;
	}
	var localPath = getLocalPath(document.location.toString());
	var backupPath = getBackupPath(localPath,me.backupExtension);
	w.setValue("backupPath",backupPath);
	w.setButtons([],me.statusPreparingBackup);
	var original = loadOriginal(localPath);
	w.setButtons([],me.statusSavingBackup);
	var backup = copyFile(backupPath,localPath);
	if(!backup)
		backup = saveFile(backupPath,original);
	if(!backup) {
		w.setButtons([],me.errorSavingBackup);
		alert(me.errorSavingBackup);
		return false;
	}
	w.setButtons([],me.statusLoadingCore);
	var options = {
		type:"GET",
		url:me.source,
		processData:false,
		success:function(data,textStatus,jqXHR) {
			me.onLoadCore(true,w,jqXHR.responseText,me.source,jqXHR);
		},
		error:function(jqXHR,textStatus,errorThrown) {
			me.onLoadCore(false,w,null,me.source,jqXHR);
		}
	};
	ajaxReq(options);
	return false;
};

config.macros.upgrade.onLoadCore = function(status,params,responseText,url,xhr)
{
	var me = config.macros.upgrade;
	var w = params;
	var errMsg;
	if(!status)
		errMsg = me.errorLoadingCore;
	var newVer = me.extractVersion(responseText);
	if(!newVer)
		errMsg = me.errorCoreFormat;
	if(errMsg) {
		w.setButtons([],errMsg);
		alert(errMsg);
		return;
	}
	var onStartUpgrade = function(e) {
		w.setButtons([],me.statusSavingCore);
		var localPath = getLocalPath(document.location.toString());
		saveFile(localPath,responseText);
		w.setButtons([],me.statusReloadingCore);
		var backupPath = w.getValue("backupPath");
		var newLoc = document.location.toString() + "?time=" + new Date().convertToYYYYMMDDHHMM() + "#upgrade:[[" + encodeURI(backupPath) + "]]";
		window.setTimeout(function () {window.location = newLoc;},10);
	};
	var step2 = [me.step2Html_downgrade,me.step2Html_restore,me.step2Html_upgrade][compareVersions(version,newVer) + 1];
	w.addStep(me.step2Title,step2.format([formatVersion(newVer),formatVersion(version)]));
	w.setButtons([{caption: me.startLabel, tooltip: me.startPrompt, onClick: onStartUpgrade},{caption: me.cancelLabel, tooltip: me.cancelPrompt, onClick: me.onCancel}]);
};

config.macros.upgrade.onCancel = function(e)
{
	var me = config.macros.upgrade;
	var w = new Wizard(this);
	w.addStep(me.step3Title,me.step3Html);
	w.setButtons([]);
	return false;
};

config.macros.upgrade.extractVersion = function(upgradeFile)
{
	var re = /^var version = \{title: "([^"]+)", major: (\d+), minor: (\d+), revision: (\d+)(, beta: (\d+)){0,1}, date: new Date\("([^"]+)"\)/mg;
	var m = re.exec(upgradeFile);
	return m ? {title: m[1], major: m[2], minor: m[3], revision: m[4], beta: m[6], date: new Date(m[7])} : null;
};

function upgradeFrom(path)
{
	var importStore = new TiddlyWiki();
	var tw = loadFile(path);
	if(window.netscape !== undefined)
		tw = convertUTF8ToUnicode(tw);
	importStore.importTiddlyWiki(tw);
	importStore.forEachTiddler(function(title,tiddler) {
		if(!store.getTiddler(title)) {
			store.addTiddler(tiddler);
		}
	});
	refreshDisplay();
	saveChanges(); //# To create appropriate Markup* sections
	alert(config.messages.upgradeDone.format([formatVersion()]));
	window.location = window.location.toString().substr(0,window.location.toString().lastIndexOf("?"));
}

//--
//-- Manager UI for groups of tiddlers
//--

config.macros.plugins.handler = function(place,macroName,params,wikifier,paramString)
{
	var wizard = new Wizard();
	wizard.createWizard(place,this.wizardTitle);
	wizard.addStep(this.step1Title,this.step1Html);
	var markList = wizard.getElement("markList");
	var listWrapper = document.createElement("div");
	markList.parentNode.insertBefore(listWrapper,markList);
	listWrapper.setAttribute("refresh","macro");
	listWrapper.setAttribute("macroName","plugins");
	listWrapper.setAttribute("params",paramString);
	this.refresh(listWrapper,paramString);
};

config.macros.plugins.refresh = function(listWrapper,params)
{
	var me = config.macros.plugins;
	var wizard = new Wizard(listWrapper);
	var selectedRows = [];
	ListView.forEachSelector(listWrapper,function(e,rowName) {
			if(e.checked)
				selectedRows.push(e.getAttribute("rowName"));
		});
	jQuery(listWrapper).empty();
	params = params.parseParams("anon");
	var plugins = installedPlugins.slice(0);
	var t,tiddler,p;
	var configTiddlers = store.getTaggedTiddlers("systemConfig");
	for(t=0; t<configTiddlers.length; t++) {
		tiddler = configTiddlers[t];
		if(plugins.findByField("title",tiddler.title) == null) {
			p = getPluginInfo(tiddler);
			p.executed = false;
			p.log.splice(0,0,this.skippedText);
			plugins.push(p);
		}
	}
	for(t=0; t<plugins.length; t++) {
		p = plugins[t];
		p.size = p.tiddler.text ? p.tiddler.text.length : 0;
		p.forced = p.tiddler.isTagged("systemConfigForce");
		p.disabled = p.tiddler.isTagged("systemConfigDisable");
		p.Selected = selectedRows.indexOf(plugins[t].title) != -1;
	}
	if(plugins.length == 0) {
		createTiddlyElement(listWrapper,"em",null,null,this.noPluginText);
		wizard.setButtons([]);
	} else {
		var template = readOnly ? this.listViewTemplateReadOnly : this.listViewTemplate;
		var listView = ListView.create(listWrapper,plugins,template,this.onSelectCommand);
		wizard.setValue("listView",listView);
		if(!readOnly) {
			wizard.setButtons([
				{caption: me.removeLabel, tooltip: me.removePrompt, onClick: me.doRemoveTag},
				{caption: me.deleteLabel, tooltip: me.deletePrompt, onClick: me.doDelete}
			]);
		}
	}
};

config.macros.plugins.doRemoveTag = function(e)
{
	var wizard = new Wizard(this);
	var listView = wizard.getValue("listView");
	var rowNames = ListView.getSelectedRows(listView);
	if(rowNames.length == 0) {
		alert(config.messages.nothingSelected);
	} else {
		var t;
		for(t=0; t<rowNames.length; t++) {
			store.setTiddlerTag(rowNames[t],false,"systemConfig");
		}
		autoSaveChanges();
	}
};

config.macros.plugins.doDelete = function(e)
{
	var wizard = new Wizard(this);
	var listView = wizard.getValue("listView");
	var rowNames = ListView.getSelectedRows(listView);
	if(rowNames.length == 0) {
		alert(config.messages.nothingSelected);
	} else {
		if(confirm(config.macros.plugins.confirmDeleteText.format([rowNames.join(", ")]))) {
			var t;
			for(t=0; t<rowNames.length; t++) {
				store.removeTiddler(rowNames[t]);
				story.closeTiddler(rowNames[t],true);
			}
		}
		autoSaveChanges();
	}
};

//--
//-- Message area
//--

function getMessageDiv()
{
	var msgArea = document.getElementById("messageArea");
	if(!msgArea)
		return null;
	if(!msgArea.hasChildNodes())
		createTiddlyButton(createTiddlyElement(msgArea,"div",null,"messageToolbar"),
			config.messages.messageClose.text,
			config.messages.messageClose.tooltip,
			clearMessage);
	msgArea.style.display = "block";
	return createTiddlyElement(msgArea,"div");
}

function displayMessage(text,linkText)
{
	var e = getMessageDiv();
	if(!e) {
		alert(text);
		return;
	}
	if(linkText) {
		var link = createTiddlyElement(e,"a",null,null,text);
		link.href = linkText;
		link.target = "_blank";
	} else {
		e.appendChild(document.createTextNode(text));
	}
}

function clearMessage()
{
	var msgArea = document.getElementById("messageArea");
	if(msgArea) {
		jQuery(msgArea).empty();
		msgArea.style.display = "none";
	}
	return false;
}

//--
//-- Refresh mechanism
//--

config.notifyTiddlers = [
	{name: "SystemSettings", notify: onSystemSettingsChange},
	{name: "StyleSheetLayout", notify: refreshStyles},
	{name: "StyleSheetColors", notify: refreshStyles},
	{name: "StyleSheet", notify: refreshStyles},
	{name: "StyleSheetPrint", notify: refreshStyles},
	{name: "PageTemplate", notify: refreshPageTemplate},
	{name: "SiteTitle", notify: refreshPageTitle},
	{name: "SiteSubtitle", notify: refreshPageTitle},
	{name: "WindowTitle", notify: refreshPageTitle},
	{name: "ColorPalette", notify: refreshColorPalette},
	{name: null, notify: refreshDisplay}
];

config.refreshers = {
	link: function(e,changeList)
		{
		var title = e.getAttribute("tiddlyLink");
		refreshTiddlyLink(e,title);
		return true;
		},

	tiddler: function(e,changeList)
		{
		var title = e.getAttribute("tiddler");
		var template = e.getAttribute("template");
		if(changeList && (changeList.indexOf && changeList.indexOf(title) != -1) && !story.isDirty(title))
			story.refreshTiddler(title,template,true);
		else
			refreshElements(e,changeList);
		return true;
		},

	content: function(e,changeList)
		{
		var title = e.getAttribute("tiddler");
		var force = e.getAttribute("force");
		var args = e.getAttribute("args");
		if(force != null || changeList == null || (changeList.indexOf && changeList.indexOf(title) != -1)) {
			jQuery(e).empty();
			config.macros.tiddler.transclude(e,title,args);
			return true;
		} else
			return false;
		},

	macro: function(e,changeList)
		{
		var macro = e.getAttribute("macroName");
		var params = e.getAttribute("params");
		if(macro)
			macro = config.macros[macro];
		if(macro && macro.refresh)
			macro.refresh(e,params);
		return true;
		}
};

config.refresherData = {
	styleSheet: "StyleSheet",
	defaultStyleSheet: "StyleSheet",
	pageTemplate: "PageTemplate",
	defaultPageTemplate: "PageTemplate",
	colorPalette: "ColorPalette",
	defaultColorPalette: "ColorPalette"
};

function refreshElements(root,changeList)
{
	var c,nodes = root.childNodes;
	for(c=0; c<nodes.length; c++) {
		var e = nodes[c], type = null;
		if(e.getAttribute && (e.tagName ? e.tagName != "IFRAME" : true))
			type = e.getAttribute("refresh");
		var refresher = config.refreshers[type];
		var refreshed = false;
		if(refresher != undefined)
			refreshed = refresher(e,changeList);
		if(e.hasChildNodes() && !refreshed)
			refreshElements(e,changeList);
	}
}

function applyHtmlMacros(root,tiddler)
{
	var e = root.firstChild;
	while(e) {
		var nextChild = e.nextSibling;
		if(e.getAttribute) {
			var macro = e.getAttribute("macro");
			if(macro) {
				e.removeAttribute("macro");
				var params = "";
				var p = macro.indexOf(" ");
				if(p != -1) {
					params = macro.substr(p+1);
					macro = macro.substr(0,p);
				}
				invokeMacro(e,macro,params,null,tiddler);
			}
		}
		if(e.hasChildNodes())
			applyHtmlMacros(e,tiddler);
		e = nextChild;
	}
}

function refreshPageTemplate(title)
{
	var stash = jQuery("<div/>").appendTo("body").hide()[0];
	var display = story.getContainer();
	var nodes,t;
	if(display) {
		nodes = display.childNodes;
		for(t=nodes.length-1; t>=0; t--)
			stash.appendChild(nodes[t]);
	}
	var wrapper = document.getElementById("contentWrapper");

	if(!title || !store.isAvailable(title))
		title = config.refresherData.pageTemplate;
	if(!store.isAvailable(title))
		title = config.refresherData.defaultPageTemplate; //# this one is always avaialable
	wrapper.innerHTML = store.getRecursiveTiddlerText(title,null,10);
	applyHtmlMacros(wrapper);
	refreshElements(wrapper);
	display = story.getContainer();
	jQuery(display).empty();
	if(!display)
		display = createTiddlyElement(wrapper,"div",story.containerId());
	nodes = stash.childNodes;
	for(t=nodes.length-1; t>=0; t--)
		display.appendChild(nodes[t]);
	jQuery(stash).remove();
}

function refreshDisplay(hint)
{
	if(typeof hint == "string")
		hint = [hint];
	var e = document.getElementById("contentWrapper");
	refreshElements(e,hint);
	if(backstage.isPanelVisible()) {
		e = document.getElementById("backstage");
		refreshElements(e,hint);
	}
}

function refreshPageTitle()
{
	document.title = getPageTitle();
}

function getPageTitle()
{
	return wikifyPlainText(store.getTiddlerText("WindowTitle",""),null,tiddler);
}

function refreshStyles(title,doc)
{
	setStylesheet(title == null ? "" : store.getRecursiveTiddlerText(title,"",10),title,doc || document);
}

function refreshColorPalette(title)
{
	if(!startingUp)
		refreshAll();
}

function refreshAll()
{
	refreshPageTemplate();
	refreshDisplay();
	refreshStyles("StyleSheetLayout");
	refreshStyles("StyleSheetColors");
	refreshStyles(config.refresherData.styleSheet);
	refreshStyles("StyleSheetPrint");
}

//--
//-- Option handling
//--

config.optionHandlers = {
	'txt': {
		get: function(name) {return encodeCookie(config.options[name].toString());},
		set: function(name,value) {config.options[name] = decodeCookie(value);}
	},
	'chk': {
		get: function(name) {return config.options[name] ? 'true' : 'false';},
		set: function(name,value) {config.options[name] = value == 'true';}
	}
};

function setOption(name,value)
{
	var optType = name.substr(0,3);
	if(config.optionHandlers[optType] && config.optionHandlers[optType].set)
		config.optionHandlers[optType].set(name,value);
}

// Gets the value of an option as a string. Most code should just read from config.options.* directly
function getOption(name)
{
	var optType = name.substr(0,3);
	return config.optionHandlers[optType] && config.optionHandlers[optType].get ? config.optionHandlers[optType].get(name) : null;
}

function loadOptions()
{
	if(safeMode)
		return;
	loadCookies();
	loadSystemSettings();
}
// @Deprecated; retained for backwards compatibility
var loadOptionsCookie = loadOptions;

function getCookies()
{
	var cookieList = document.cookie.split(';');
	var i,cookies = {};
	for(i=0; i<cookieList.length; i++) {
		var p = cookieList[i].indexOf('=');
		if(p != -1) {
			var name = cookieList[i].substr(0,p).trim();
			var value = cookieList[i].substr(p+1).trim();
			cookies[name] = value;
		}
	}
	return cookies;
}

function loadCookies()
{
	var i,cookies = getCookies();
	if(cookies['TiddlyWiki']) {
		cookies = cookies['TiddlyWiki'].decodeHashMap();
	}
	for(i in cookies) {
		if(config.optionsSource[i] != 'setting') {
			setOption(i,cookies[i]);
		}
	}
}

function loadSystemSettings()
{
	var key,settings = store.calcAllSlices('SystemSettings');
	config.optionsSource = {};
	for(key in settings) {
		setOption(key,settings[key]);
		config.optionsSource[key] = 'setting';
	}
}

function onSystemSettingsChange()
{
	if(!startingUp) {
		loadSystemSettings();
	}
}

function saveOption(name)
{
	if(safeMode)
		return;
	if(name.match(/[()\s]/g, '_')) {
		alert(config.messages.invalidCookie.format([name]));
		return;
	}
	saveCookie(name);
	if(config.optionsSource[name] == 'setting') {
		saveSystemSetting(name,true);
	}
}
// @Deprecated; retained for backwards compatibility
var saveOptionCookie = saveOption;

function removeCookie(name)
{
	document.cookie = name + '=; expires=Thu, 01-Jan-1970 00:00:01 UTC; path=/;';
}

function saveCookie(name)
{
	var key,cookies = {};
	for(key in config.options) {
		var value = getOption(key);
		value = value == null ? 'false' : value;
		cookies[key] = value;
	}
	document.cookie = 'TiddlyWiki=' + String.encodeHashMap(cookies) + '; expires=Fri, 1 Jan 2038 12:00:00 UTC; path=/';
	cookies = getCookies();
	var c;
	for(c in cookies) {
		var optType = c.substr(0,3);
		if(config.optionHandlers[optType])
			removeCookie(c);
	}
}

var systemSettingSave;
function commitSystemSettings(storeWasDirty)
{
	if(systemSettingSave) {
		window.clearTimeout(systemSettingSave);
	}
	systemSettingSave = window.setTimeout(function() {
		var tiddler = store.getTiddler('SystemSettings');
		autoSaveChanges(null,[tiddler]);
	}, 1000);
}

function saveSystemSetting(name,saveFile)
{
	var title = 'SystemSettings';
	var slice = store.getTiddlerSlice(title,name);
	if(readOnly || slice === getOption(name)) {
		return; //# don't save if read-only or the option hasn't changed
	}
	var slices = store.calcAllSlices(title);
	var key;
	for(key in config.optionsSource) {
		var value = getOption(key) || '';
		if(slices[key] !== value) {
			slices[key] = value;
		}
	}
	var text = [];
	for(key in slices) {
		text.push('%0: %1'.format([key,slices[key]]));
	}
	text = text.sort().join('\n');
	var storeWasDirty = store.isDirty();
	var tiddler = store.getTiddler(title);
	if(tiddler) {
		tiddler.text = text;
		tiddler = store.saveTiddler(tiddler);
	} else {
		tiddler = store.saveTiddler(title,title,text,'System',new Date(),['excludeLists'],config.defaultCustomFields);
	}
	if(saveFile) {
		commitSystemSettings(storeWasDirty);
	}
}

function encodeCookie(s)
{
	return escape(convertUnicodeToHtmlEntities(s));
}

function decodeCookie(s)
{
	s = unescape(s);
	var re = /&#[0-9]{1,5};/g;
	return s.replace(re,function($0) {return String.fromCharCode(eval($0.replace(/[&#;]/g,'')));});
}

config.macros.option.genericCreate = function(place,type,opt,className,desc)
{
	var typeInfo = config.macros.option.types[type];
	var c = document.createElement(typeInfo.elementType);
	if(typeInfo.typeValue)
		c.setAttribute('type',typeInfo.typeValue);
	c[typeInfo.eventName] = typeInfo.onChange;
	c.setAttribute('option',opt);
	c.className = className || typeInfo.className;
	if(config.optionsDesc[opt])
		c.setAttribute('title',config.optionsDesc[opt]);
	place.appendChild(c);
	if(desc != 'no')
		createTiddlyText(place,config.optionsDesc[opt] || opt);
	c[typeInfo.valueField] = config.options[opt];
	return c;
};

config.macros.option.genericOnChange = function(e)
{
	var opt = this.getAttribute('option');
	if(opt) {
		var optType = opt.substr(0,3);
		var handler = config.macros.option.types[optType];
		if(handler.elementType && handler.valueField)
			config.macros.option.propagateOption(opt,handler.valueField,this[handler.valueField],handler.elementType,this);
	}
	return true;
};

config.macros.option.types = {
	'txt': {
		elementType: 'input',
		valueField: 'value',
		eventName: 'onchange',
		className: 'txtOptionInput',
		create: config.macros.option.genericCreate,
		onChange: config.macros.option.genericOnChange
	},
	'chk': {
		elementType: 'input',
		valueField: 'checked',
		eventName: 'onclick',
		className: 'chkOptionInput',
		typeValue: 'checkbox',
		create: config.macros.option.genericCreate,
		onChange: config.macros.option.genericOnChange
	}
};

config.macros.option.propagateOption = function(opt,valueField,value,elementType,elem)
{
	config.options[opt] = value;
	saveOption(opt);
	var t,nodes = document.getElementsByTagName(elementType);
	for(t=0; t<nodes.length; t++) {
		var optNode = nodes[t].getAttribute('option');
		if(opt == optNode && nodes[t]!=elem)
			nodes[t][valueField] = value;
	}
};

config.macros.option.handler = function(place,macroName,params,wikifier,paramString)
{
	params = paramString.parseParams('anon',null,true,false,false);
	var opt = (params[1] && params[1].name == 'anon') ? params[1].value : getParam(params,'name',null);
	var className = (params[2] && params[2].name == 'anon') ? params[2].value : getParam(params,'class',null);
	var desc = getParam(params,'desc','no');
	var type = opt.substr(0,3);
	var h = config.macros.option.types[type];
	if(h && h.create)
		h.create(place,type,opt,className,desc);
};

config.macros.options.handler = function(place,macroName,params,wikifier,paramString)
{
	params = paramString.parseParams('anon',null,true,false,false);
	var showUnknown = getParam(params,'showUnknown','no');
	var wizard = new Wizard();
	wizard.createWizard(place,this.wizardTitle);
	wizard.addStep(this.step1Title,this.step1Html);
	var markList = wizard.getElement('markList');
	var chkUnknown = wizard.getElement('chkUnknown');
	chkUnknown.checked = showUnknown == 'yes';
	chkUnknown.onchange = this.onChangeUnknown;
	var listWrapper = document.createElement('div');
	markList.parentNode.insertBefore(listWrapper,markList);
	wizard.setValue('listWrapper',listWrapper);
	this.refreshOptions(listWrapper,showUnknown == 'yes');
};

config.macros.options.refreshOptions = function(listWrapper,showUnknown)
{
	var n,opts = [];
	for(n in config.options) {
		var opt = {};
		opt.option = '';
		opt.name = n;
		opt.lowlight = !config.optionsDesc[n];
		opt.description = opt.lowlight ? this.unknownDescription : config.optionsDesc[n];
		if(!opt.lowlight || showUnknown)
			opts.push(opt);
	}
	opts.sort(function(a,b) {return a.name.substr(3) < b.name.substr(3) ? -1 : (a.name.substr(3) == b.name.substr(3) ? 0 : +1);});
	ListView.create(listWrapper,opts,this.listViewTemplate);
	for(n=0; n<opts.length; n++) {
		var type = opts[n].name.substr(0,3);
		var h = config.macros.option.types[type];
		if(h && h.create) {
			h.create(opts[n].colElements['option'],type,opts[n].name,null,'no');
		}
	}
};

config.macros.options.onChangeUnknown = function(e)
{
	var wizard = new Wizard(this);
	var listWrapper = wizard.getValue('listWrapper');
	jQuery(listWrapper).empty();
	config.macros.options.refreshOptions(listWrapper,this.checked);
	return false;
};

//--
//-- Saving
//--

var saveUsingSafari = false;

var startSaveArea = '<div id="' + 'storeArea">'; // Split up into two so that indexOf() of this source doesn't find it
var startSaveAreaRE = /<((div)|(DIV)) ((id)|(ID))=["']?storeArea['"]?>/; // Used for IE6
var endSaveArea = '</d' + 'iv>';
var endSaveAreaCaps = '</D' + 'IV>';

// If there are unsaved changes, force the user to confirm before exitting
function confirmExit()
{
	hadConfirmExit = true;
	if((store && store.isDirty && store.isDirty()) || (story && story.areAnyDirty && story.areAnyDirty()))
		return config.messages.confirmExit;
}

// Give the user a chance to save changes before exitting
function checkUnsavedChanges()
{
	if(store && store.isDirty && store.isDirty() && window.hadConfirmExit === false) {
		if(confirm(config.messages.unsavedChangesWarning))
			saveChanges();
	}
}

function updateLanguageAttribute(s)
{
	if(config.locale) {
		var mRE = /(<html(?:.*?)?)(?: xml:lang\="([a-z]+)")?(?: lang\="([a-z]+)")?>/;
		var m = mRE.exec(s);
		if(m) {
			var t = m[1];
			if(m[2])
				t += ' xml:lang="' + config.locale + '"';
			if(m[3])
				t += ' lang="' + config.locale + '"';
			t += ">";
			s = s.substr(0,m.index) + t + s.substr(m.index+m[0].length);
		}
	}
	return s;
}

function updateMarkupBlock(s,blockName,tiddlerName)
{
	return s.replaceChunk(
			"<!--%0-START-->".format([blockName]),
			"<!--%0-END-->".format([blockName]),
			"\n" + convertUnicodeToFileFormat(store.getRecursiveTiddlerText(tiddlerName,"")) + "\n");
}

function updateOriginal(original,posDiv,localPath)
{
	if(!posDiv)
		posDiv = locateStoreArea(original);
	if(!posDiv) {
		alert(config.messages.invalidFileError.format([localPath]));
		return null;
	}
	var revised = original.substr(0,posDiv[0] + startSaveArea.length) + "\n" +
				convertUnicodeToFileFormat(store.allTiddlersAsHtml()) + "\n" +
				original.substr(posDiv[1]);
	var newSiteTitle = convertUnicodeToFileFormat(getPageTitle()).htmlEncode();
	revised = revised.replaceChunk("<title"+">","</title"+">"," " + newSiteTitle + " ");
	revised = updateLanguageAttribute(revised);
	revised = updateMarkupBlock(revised,"PRE-HEAD","MarkupPreHead");
	revised = updateMarkupBlock(revised,"POST-HEAD","MarkupPostHead");
	revised = updateMarkupBlock(revised,"PRE-BODY","MarkupPreBody");
	revised = updateMarkupBlock(revised,"POST-SCRIPT","MarkupPostBody");
	return revised;
}

function locateStoreArea(original)
{
	// Locate the storeArea divs
	if(!original)
		return null;
	var posOpeningDiv = original.search(startSaveAreaRE);
	var limitClosingDiv = original.indexOf("<"+"!--POST-STOREAREA--"+">");
	if(limitClosingDiv == -1)
		limitClosingDiv = original.indexOf("<"+"!--POST-BODY-START--"+">");
	var start = limitClosingDiv == -1 ? original.length : limitClosingDiv;
	var posClosingDiv = original.lastIndexOf(endSaveArea,start);
	if(posClosingDiv == -1)
		posClosingDiv = original.lastIndexOf(endSaveAreaCaps,start);
	return (posOpeningDiv != -1 && posClosingDiv != -1) ? [posOpeningDiv,posClosingDiv] : null;
}

function autoSaveChanges(onlyIfDirty,tiddlers)
{
	if(config.options.chkAutoSave)
		saveChanges(onlyIfDirty,tiddlers);
}

function loadOriginal(localPath)
{
	return loadFile(localPath);
}

// Save this tiddlywiki with the pending changes
function saveChanges(onlyIfDirty,tiddlers)
{
	if(onlyIfDirty && !store.isDirty())
		return;
	clearMessage();
	var t0 = new Date();
	var msg = config.messages;
	var originalPath = document.location.toString();
	if(!window.allowSave()) {
		alert(msg.notFileUrlError);
		if(store.tiddlerExists(msg.saveInstructions))
			story.displayTiddler(null,msg.saveInstructions);
		return;
	}
	var localPath = getLocalPath(originalPath);
	var original = loadOriginal(localPath);
	if(original == null) {
		alert(msg.cantSaveError);
		if(store.tiddlerExists(msg.saveInstructions))
			story.displayTiddler(null,msg.saveInstructions);
		return;
	}
	var posDiv = locateStoreArea(original);
	if(!posDiv) {
		alert(msg.invalidFileError.format([localPath]));
		return;
	}
	saveMain(localPath,original,posDiv);
	if(config.options.chkSaveBackups)
		saveBackup(localPath,original);
	if(config.options.chkSaveEmptyTemplate)
		saveEmpty(localPath,original,posDiv);
	if(config.options.chkGenerateAnRssFeed && saveRss instanceof Function)
		saveRss(localPath);
	if(config.options.chkDisplayInstrumentation)
		displayMessage("saveChanges " + (new Date()-t0) + " ms");
}

function saveMain(localPath,original,posDiv)
{
	var save;
	try {
		var revised = updateOriginal(original,posDiv,localPath);
		save = saveFile(localPath,revised);
	} catch (ex) {
		showException(ex);
	}
	if(save) {
		displayMessage(config.messages.mainSaved,"file://" + localPath);
		store.setDirty(false);
	} else {
		alert(config.messages.mainFailed);
	}
}

function saveBackup(localPath,original)
{
	var backupPath = getBackupPath(localPath);
	var backup = copyFile(backupPath,localPath);
	if(!backup)
		backup = saveFile(backupPath,original);
	if(backup)
		displayMessage(config.messages.backupSaved,"file://" + backupPath);
	else
		alert(config.messages.backupFailed);
}

function saveEmpty(localPath,original,posDiv)
{
	var emptyPath,p;
	if((p = localPath.lastIndexOf("/")) != -1)
		emptyPath = localPath.substr(0,p) + "/";
	else if((p = localPath.lastIndexOf("\\")) != -1)
		emptyPath = localPath.substr(0,p) + "\\";
	else
		emptyPath = localPath + ".";
	emptyPath += "empty.html";
	var empty = original.substr(0,posDiv[0] + startSaveArea.length) + original.substr(posDiv[1]);
	var emptySave = saveFile(emptyPath,empty);
	if(emptySave)
		displayMessage(config.messages.emptySaved,"file://" + emptyPath);
	else
		alert(config.messages.emptyFailed);
}

// Translate URL to local path [Preemption]
window.getLocalPath = window.getLocalPath || function(origPath)
{
	var originalPath = convertUriToUTF8(origPath,config.options.txtFileSystemCharSet);
	// Remove any location or query part of the URL
	var argPos = originalPath.indexOf("?");
	if(argPos != -1)
		originalPath = originalPath.substr(0,argPos);
	var hashPos = originalPath.indexOf("#");
	if(hashPos != -1)
		originalPath = originalPath.substr(0,hashPos);
	// Convert file://localhost/ to file:///
	if(originalPath.indexOf("file://localhost/") == 0)
		originalPath = "file://" + originalPath.substr(16);
	// Convert to a native file format
	var localPath;
	if(originalPath.charAt(9) == ":") // pc local file
		localPath = unescape(originalPath.substr(8)).replace(new RegExp("/","g"),"\\");
	else if(originalPath.indexOf("file://///") == 0) // FireFox pc network file
		localPath = "\\\\" + unescape(originalPath.substr(10)).replace(new RegExp("/","g"),"\\");
	else if(originalPath.indexOf("file:///") == 0) // mac/unix local file
		localPath = unescape(originalPath.substr(7));
	else if(originalPath.indexOf("file:/") == 0) // mac/unix local file
		localPath = unescape(originalPath.substr(5));
	else // pc network file
		localPath = "\\\\" + unescape(originalPath.substr(7)).replace(new RegExp("/","g"),"\\");
	return localPath;
}

function getBackupPath(localPath,title,extension)
{
	var slash = "\\";
	var dirPathPos = localPath.lastIndexOf("\\");
	if(dirPathPos == -1) {
		dirPathPos = localPath.lastIndexOf("/");
		slash = "/";
	}
	var backupFolder = config.options.txtBackupFolder;
	if(!backupFolder || backupFolder == "")
		backupFolder = ".";
	var backupPath = localPath.substr(0,dirPathPos) + slash + backupFolder + localPath.substr(dirPathPos);
	backupPath = backupPath.substr(0,backupPath.lastIndexOf(".")) + ".";
	if(title)
		backupPath += title.replace(/[\\\/\*\?\":<> ]/g,"_") + ".";
	backupPath += (new Date()).convertToYYYYMMDDHHMMSSMMM() + "." + (extension || "html");
	return backupPath;
}

//--
//-- RSS Saving
//--

function saveRss(localPath)
{
	var rssPath = localPath.substr(0,localPath.lastIndexOf(".")) + ".xml";
	if(saveFile(rssPath,convertUnicodeToFileFormat(generateRss())))
		displayMessage(config.messages.rssSaved,"file://" + rssPath);
	else
		alert(config.messages.rssFailed);
}

tiddlerToRssItem = function(tiddler,uri)
{
	var s = "<title" + ">" + tiddler.title.htmlEncode() + "</title" + ">\n";
	s += "<description>" + wikifyStatic(tiddler.text,null,tiddler).htmlEncode() + "</description>\n";
	var i;
	for(i=0; i<tiddler.tags.length; i++)
		s += "<category>" + tiddler.tags[i] + "</category>\n";
	s += "<link>" + uri + "#" + encodeURIComponent(String.encodeTiddlyLink(tiddler.title)) + "</link>\n";
	s +="<pubDate>" + tiddler.modified.toGMTString() + "</pubDate>\n";
	return s;
};

function generateRss()
{
	var s = [];
	var d = new Date();
	var u = store.getTiddlerText("SiteUrl");
	// Assemble the header
	s.push("<" + "?xml version=\"1.0\"?" + ">");
	s.push("<rss version=\"2.0\">");
	s.push("<channel>");
	s.push("<title" + ">" + wikifyPlainText(store.getTiddlerText("SiteTitle",""),null,tiddler).htmlEncode() + "</title" + ">");
	if(u)
		s.push("<link>" + u.htmlEncode() + "</link>");
	s.push("<description>" + wikifyPlainText(store.getTiddlerText("SiteSubtitle",""),null,tiddler).htmlEncode() + "</description>");
	s.push("<language>" + config.locale + "</language>");
	s.push("<copyright>Copyright " + d.getFullYear() + " " + config.options.txtUserName.htmlEncode() + "</copyright>");
	s.push("<pubDate>" + d.toGMTString() + "</pubDate>");
	s.push("<lastBuildDate>" + d.toGMTString() + "</lastBuildDate>");
	s.push("<docs>http://blogs.law.harvard.edu/tech/rss</docs>");
	s.push("<generator>TiddlyWiki " + formatVersion() + "</generator>");
	// The body
	var tiddlers = store.getTiddlers("modified","excludeLists");
	var i,n = config.numRssItems > tiddlers.length ? 0 : tiddlers.length-config.numRssItems;
	for(i=tiddlers.length-1; i>=n; i--) {
		s.push("<item>\n" + tiddlerToRssItem(tiddlers[i],u) + "\n</item>");
	}
	// And footer
	s.push("</channel>");
	s.push("</rss>");
	// Save it all
	return s.join("\n");
}

//--
//-- Filesystem code
//--

// Copy a file in filesystem [Preemption]
window.copyFile = window.copyFile || function(dest,source)
{
	return config.browser.isIE ? ieCopyFile(dest,source) : false;
}


// Save a file in filesystem [Preemption]
window.saveFile = window.saveFile || function(fileUrl,content)
{
	var r = mozillaSaveFile(fileUrl,content);
	if(!r)
		r = ieSaveFile(fileUrl,content);
	if(!r)
		r = javaSaveFile(fileUrl,content);
	return r;
}

// Load a file from filesystem [Preemption]
window.loadFile = window.loadFile || function(fileUrl)
{
	var r = mozillaLoadFile(fileUrl);
	if((r == null) || (r == false))
		r = ieLoadFile(fileUrl);
	if((r == null) || (r == false))
		r = javaLoadFile(fileUrl);
	return r;
}

function ieCreatePath(path)
{
	try {
		var fso = new ActiveXObject("Scripting.FileSystemObject");
	} catch(ex) {
		return null;
	}

	var pos = path.lastIndexOf("\\");
	if(pos==-1)
		pos = path.lastIndexOf("/");
	if(pos!=-1)
		path = path.substring(0,pos+1);

	var scan = [path];
	var parent = fso.GetParentFolderName(path);
	while(parent && !fso.FolderExists(parent)) {
		scan.push(parent);
		parent = fso.GetParentFolderName(parent);
	}

	for(i=scan.length-1;i>=0;i--) {
		if(!fso.FolderExists(scan[i])) {
			fso.CreateFolder(scan[i]);
		}
	}
	return true;
}

// Returns null if it can't do it, false if there's an error, true if it saved OK
function ieSaveFile(filePath,content)
{
	ieCreatePath(filePath);
	try {
		var fso = new ActiveXObject("Scripting.FileSystemObject");
	} catch(ex) {
		return null;
	}
	var file = fso.OpenTextFile(filePath,2,-1,0);
	file.Write(content);
	file.Close();
	return true;
}

// Returns null if it can't do it, false if there's an error, or a string of the content if successful
function ieLoadFile(filePath)
{
	try {
		var fso = new ActiveXObject("Scripting.FileSystemObject");
		var file = fso.OpenTextFile(filePath,1);
		var content = file.ReadAll();
		file.Close();
	} catch(ex) {
		return null;
	}
	return content;
}

function ieCopyFile(dest,source)
{
	ieCreatePath(dest);
	try {
		var fso = new ActiveXObject("Scripting.FileSystemObject");
		fso.GetFile(source).Copy(dest);
	} catch(ex) {
		return false;
	}
	return true;
}

// Returns null if it can't do it, false if there's an error, true if it saved OK
function mozillaSaveFile(filePath,content)
{
	if(window.Components) {
		try {
			netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
			var file = Components.classes["@mozilla.org/file/local;1"].createInstance(Components.interfaces.nsILocalFile);
			file.initWithPath(filePath);
			if(!file.exists())
				file.create(0,0x01B4);// 0x01B4 = 0664
			var out = Components.classes["@mozilla.org/network/file-output-stream;1"].createInstance(Components.interfaces.nsIFileOutputStream);
			out.init(file,0x22,0x04,null);
			out.write(content,content.length);
			out.flush();
			out.close();
			return true;
		} catch(ex) {
			return false;
		}
	}
	return null;
}

// Returns null if it can't do it, false if there's an error, or a string of the content if successful
function mozillaLoadFile(filePath)
{
	if(window.Components) {
		try {
			netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
			var file = Components.classes["@mozilla.org/file/local;1"].createInstance(Components.interfaces.nsILocalFile);
			file.initWithPath(filePath);
			if(!file.exists())
				return null;
			var inputStream = Components.classes["@mozilla.org/network/file-input-stream;1"].createInstance(Components.interfaces.nsIFileInputStream);
			inputStream.init(file,0x01,0x04,null);
			var sInputStream = Components.classes["@mozilla.org/scriptableinputstream;1"].createInstance(Components.interfaces.nsIScriptableInputStream);
			sInputStream.init(inputStream);
			var contents = sInputStream.read(sInputStream.available());
			sInputStream.close();
			inputStream.close();
			return contents;
		} catch(ex) {
			return false;
		}
	}
	return null;
}

function javaUrlToFilename(url)
{
	var f = "//localhost";
	if(url.indexOf(f) == 0)
		return url.substring(f.length);
	var i = url.indexOf(":");
	return i > 0 ? url.substring(i-1) : url;
}

/*
 *
 * in between when the applet has been started
 * and the user has given permission to run the applet
 * we get an applet object, but it doesn't have the methods
 * we expect yet.
 *
 */
var LOG_TIDDLYSAVER = true;
function logTiddlySaverException(msg, ex) {
	var applet = document.applets['TiddlySaver'];
	console.log(msg + ": " + ex);
	if (LOG_TIDDLYSAVER && applet) {
		try {
			console.log(msg + ": " + applet.getLastErrorMsg());
			console.log(msg + ": " + applet.getLastErrorStackTrace());
		} catch (ex) {}
	}
}

function javaDebugInformation () {
	var applet = document.applets['TiddlySaver'];
	var what = [
		["Java Version", applet.getJavaVersion],
		["Last Exception", applet.getLastErrorMessage],
		["Last Exception Stack Trace", applet.getLastErrorStackTrace],
		["System Properties", applet.getSystemProperties] ];

	function formatItem (description, method) {
		try {
			 result = String(method.call(applet));
		} catch (ex) {
			 result = String(ex)
		}
		return description + ": " + result
	}

	return jQuery.map(what, function (item) { return formatItem.apply(this, item) })
			.join('\n\n')
}

function javaSaveFile(filePath,content)
{
	var applet = document.applets['TiddlySaver'];
	try {
		if (applet && filePath)
			return applet.saveFile(javaUrlToFilename(filePath), "UTF-8", content);
	} catch(ex) {
		logTiddlySaverException("javaSaveFile", ex);
	}
	// is this next block working anywhere ? -- grmble
	try {
		var s = new java.io.PrintStream(new java.io.FileOutputStream(javaUrlToFilename(filePath)));
		s.print(content);
		s.close();
	} catch(ex2) {
		return null;
	}
	return true;
}

function javaLoadFile(filePath)
{
	var applet = document.applets['TiddlySaver'];
	try {
		if (applet && filePath) {
			var ret = applet.loadFile(javaUrlToFilename(filePath),"UTF-8");
			if(!ret)
				return null;
			return String(ret);
		}
	} catch(ex) {
		logTiddlySaverException("javaLoadFile", ex);
	}
	// is this next block working anywhere ? -- grmble
	var content = [];
	try {
		var r = new java.io.BufferedReader(new java.io.FileReader(javaUrlToFilename(filePath)));
		var line;
		while((line = r.readLine()) != null)
			content.push(String(line));
		r.close();
	} catch(ex2) {
		return null;
	}
	return content.join("\n");
}

//--
//-- Filesystem utilities
//--

function convertUTF8ToUnicode(u)
{
	return config.browser.isOpera || !window.netscape ? manualConvertUTF8ToUnicode(u) : mozConvertUTF8ToUnicode(u);
}


function manualConvertUTF8ToUnicode(utf)
{
	var uni = utf;
	var src = 0;
	var dst = 0;
	var b1, b2, b3;
	var c;
	while(src < utf.length) {
		b1 = utf.charCodeAt(src++);
		if(b1 < 0x80) {
			dst++;
		} else if(b1 < 0xE0) {
			b2 = utf.charCodeAt(src++);
			c = String.fromCharCode(((b1 & 0x1F) << 6) | (b2 & 0x3F));
			uni = uni.substring(0,dst++).concat(c,utf.substr(src));
		} else {
			b2 = utf.charCodeAt(src++);
			b3 = utf.charCodeAt(src++);
			c = String.fromCharCode(((b1 & 0xF) << 12) | ((b2 & 0x3F) << 6) | (b3 & 0x3F));
			uni = uni.substring(0,dst++).concat(c,utf.substr(src));
		}
	}
	return uni;
}

function mozConvertUTF8ToUnicode(u)
{
	try {
		netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		var converter = Components.classes["@mozilla.org/intl/scriptableunicodeconverter"].createInstance(Components.interfaces.nsIScriptableUnicodeConverter);
		converter.charset = "UTF-8";
	} catch(ex) {
		return manualConvertUTF8ToUnicode(u);
	} // fallback
	var s = converter.ConvertToUnicode(u);
	var fin = converter.Finish();
	return fin.length > 0 ? s+fin : s;
}

function convertUnicodeToFileFormat(s)
{
	return config.browser.isOpera || !window.netscape ? (config.browser.isIE ? convertUnicodeToHtmlEntities(s) : s) : mozConvertUnicodeToUTF8(s);
}

function convertUnicodeToHtmlEntities(s)
{
	var re = /[^\u0000-\u007F]/g;
	return s.replace(re,function($0) {return "&#" + $0.charCodeAt(0).toString() + ";";});
}

function convertUnicodeToUTF8(s)
{
// return convertUnicodeToFileFormat to allow plugin migration
	return convertUnicodeToFileFormat(s);
}

function manualConvertUnicodeToUTF8(s)
{
	return unescape(encodeURIComponent(s));
}

function mozConvertUnicodeToUTF8(s)
{
	try {
		netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		var converter = Components.classes["@mozilla.org/intl/scriptableunicodeconverter"].createInstance(Components.interfaces.nsIScriptableUnicodeConverter);
		converter.charset = "UTF-8";
	} catch(ex) {
		return manualConvertUnicodeToUTF8(s);
	} // fallback
	var u = converter.ConvertFromUnicode(s);
	var fin = converter.Finish();
	return fin.length > 0 ? u + fin : u;
}

function convertUriToUTF8(uri,charSet)
{
	if(window.netscape == undefined || charSet == undefined || charSet == "")
		return uri;
	try {
		netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
		var converter = Components.classes["@mozilla.org/intl/utf8converterservice;1"].getService(Components.interfaces.nsIUTF8ConverterService);
	} catch(ex) {
		return uri;
	}
	return converter.convertURISpecToUTF8(uri,charSet);
}
//--
//-- Server adaptor base class
//--

function AdaptorBase()
{
	this.host = null;
	this.store = null;
	return this;
}

AdaptorBase.prototype.close = function()
{
	return true;
};

AdaptorBase.prototype.fullHostName = function(host)
{
	if(!host)
		return '';
	host = host.trim();
	if(!host.match(/:\/\//))
		host = 'http://' + host;
	if(host.substr(host.length-1) == '/')
		host = host.substr(0,host.length-1);
	return host;
};

AdaptorBase.minHostName = function(host)
{
	return host;
};

AdaptorBase.prototype.setContext = function(context,userParams,callback)
{
	if(!context) context = {};
	context.userParams = userParams;
	if(callback) context.callback = callback;
	context.adaptor = this;
	if(!context.host)
		context.host = this.host;
	context.host = this.fullHostName(context.host);
	if(!context.workspace)
		context.workspace = this.workspace;
	return context;
};

// Open the specified host
AdaptorBase.prototype.openHost = function(host,context,userParams,callback)
{
	this.host = host;
	context = this.setContext(context,userParams,callback);
	context.status = true;
	if(callback)
		window.setTimeout(function() {context.callback(context,userParams);},10);
	return true;
};

// Open the specified workspace
AdaptorBase.prototype.openWorkspace = function(workspace,context,userParams,callback)
{
	this.workspace = workspace;
	context = this.setContext(context,userParams,callback);
	context.status = true;
	if(callback)
		window.setTimeout(function() {callback(context,userParams);},10);
	return true;
};

//--
//-- Server adaptor for talking to static TiddlyWiki files
//--

function FileAdaptor()
{
}

FileAdaptor.prototype = new AdaptorBase();

FileAdaptor.serverType = 'file';
FileAdaptor.serverLabel = 'TiddlyWiki';

FileAdaptor.loadTiddlyWikiSuccess = function(context,jqXHR)
{
	context.status = true;
	context.adaptor.store = new TiddlyWiki();
	if(!context.adaptor.store.importTiddlyWiki(jqXHR.responseText)) {
		context.statusText = config.messages.invalidFileError.format([context.host]);
		context.status = false;
	}
	context.complete(context,context.userParams);
};

FileAdaptor.loadTiddlyWikiError = function(context,jqXHR)
{
	context.status = false;
	context.statusText = jqXHR.message;
	context.complete(context,context.userParams);
};

// Get the list of workspaces on a given server
FileAdaptor.prototype.getWorkspaceList = function(context,userParams,callback)
{
	context = this.setContext(context,userParams,callback);
	context.workspaces = [{title:"(default)"}];
	context.status = true;
	if(callback)
		window.setTimeout(function() {callback(context,userParams);},10);
	return true;
};

// Gets the list of tiddlers within a given workspace
FileAdaptor.prototype.getTiddlerList = function(context,userParams,callback,filter)
{
	context = this.setContext(context,userParams,callback);
	if(!context.filter)
		context.filter = filter;
	context.complete = FileAdaptor.getTiddlerListComplete;
	if(this.store) {
		return context.complete(context,context.userParams);
	}
	var options = {
		type:"GET",
		url:context.host,
		processData:false,
		success:function(data,textStatus,jqXHR) {
			FileAdaptor.loadTiddlyWikiSuccess(context,jqXHR);
		},
		error:function(jqXHR,textStatus,errorThrown) {
			context.xhr = jqXHR;
			FileAdaptor.loadTiddlyWikiError(context,jqXHR);
		}
	};
	return ajaxReq(options);
};

FileAdaptor.getTiddlerListComplete = function(context,userParams)
{
	if(context.status) {
		if(context.filter) {
			context.tiddlers = context.adaptor.store.filterTiddlers(context.filter);
		} else {
			context.tiddlers = [];
			context.adaptor.store.forEachTiddler(function(title,tiddler) {context.tiddlers.push(tiddler);});
		}
		var i;
		for(i=0; i<context.tiddlers.length; i++) {
			context.tiddlers[i].fields['server.type'] = FileAdaptor.serverType;
			context.tiddlers[i].fields['server.host'] = AdaptorBase.minHostName(context.host);
			context.tiddlers[i].fields['server.page.revision'] = context.tiddlers[i].modified.convertToYYYYMMDDHHMM();
		}
		context.status = true;
	}
	if(context.callback) {
		window.setTimeout(function() {context.callback(context,userParams);},10);
	}
	return true;
};

FileAdaptor.prototype.generateTiddlerInfo = function(tiddler)
{
	var info = {};
	info.uri = tiddler.fields['server.host'] + "#" + tiddler.title;
	return info;
};

// Retrieve a tiddler from a given workspace on a given server
FileAdaptor.prototype.getTiddler = function(title,context,userParams,callback)
{
	context = this.setContext(context,userParams,callback);
	context.title = title;
	context.complete = FileAdaptor.getTiddlerComplete;
	if(context.adaptor.store) {
		return context.complete(context,context.userParams);
	}
	var options = {
		type:"GET",
		url:context.host,
		processData:false,
		success:function(data,textStatus,jqXHR) {
			FileAdaptor.loadTiddlyWikiSuccess(context,jqXHR);
		},
		error:function(jqXHR,textStatus,errorThrown) {
			FileAdaptor.loadTiddlyWikiError(context,jqXHR);
		}
	};
	return ajaxReq(options);
};

FileAdaptor.getTiddlerComplete = function(context,userParams)
{
	var t = context.adaptor.store.fetchTiddler(context.title);
	if(t) {
		t.fields['server.type'] = FileAdaptor.serverType;
		t.fields['server.host'] = AdaptorBase.minHostName(context.host);
		t.fields['server.page.revision'] = t.modified.convertToYYYYMMDDHHMM();
		context.tiddler = t;
		context.status = true;
	} else { //# tiddler does not exist in document
		context.status = false;
	}
	if(context.allowSynchronous) {
		context.isSynchronous = true;
		context.callback(context,userParams);
	} else {
		window.setTimeout(function() {context.callback(context,userParams);},10);
	}
	return true;
};

FileAdaptor.prototype.close = function()
{
	this.store = null;
};

config.adaptors[FileAdaptor.serverType] = FileAdaptor;

config.defaultAdaptor = FileAdaptor.serverType;

//--
//-- HTTP request code
//--

function ajaxReq(args)
{
	if (args.url.startsWith("file")) { // LOCAL FILE
		try {
			// get FireFox privileges (FF14 and earlier)
			if(window.Components && window.netscape && window.netscape.security)
				window.netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
		} catch (ex) {
			// FF15+ fallback: no privs for ajax-based LOCAL file access
			return localAjax(args);
		}
	}
	return jQuery.ajax(args);
}

function localAjax(args)
{
	var data=loadFile(getLocalPath(args.url));
	if (data) {
		var jqXHR = { responseText:data };
		args.success(data,"success",jqXHR);
	} else {
		var jqXHR = { message:"Cannot read local file" };
		args.error(jqXHR,"error",0);
	}
	return true;
}

function httpReq(type,url,callback,params,headers,data,contentType,username,password,allowCache)
{
	var httpSuccess = function(xhr) {
		try {
			// IE error sometimes returns 1223 when it should be 204 so treat it as success, see #1450
			return (!xhr.status && location.protocol === "file:") ||
				(xhr.status >= 200 && xhr.status < 300) ||
				xhr.status === 304 || xhr.status === 1223;
		} catch(e) {}
		return false;
	};

	var options = {
		type:type,
		url:url,
		processData:false,
		data:data,
		cache:!!allowCache,
		beforeSend: function(xhr) {
			var i;
			for(i in headers)
				xhr.setRequestHeader(i,headers[i]);
		}
	};

	if(callback) {
		options.complete = function(xhr,textStatus) {
			if(httpSuccess(xhr))
				callback(true,params,xhr.responseText,url,xhr);
			else
				callback(false,params,null,url,xhr);
		};
	}
	if(contentType)
		options.contentType = contentType;
	if(username)
		options.username = username;
	if(password)
		options.password = password;
	try {
		if(window.Components && window.netscape && window.netscape.security && document.location.protocol.indexOf("http") == -1)
			window.netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
	} catch (ex) {
	}
	return jQuery.ajax(options);
}
//--
//-- TiddlyWiki-specific utility functions
//--

// Returns TiddlyWiki version string
function formatVersion(v)
{
	v = v || version;
	return v.major + "." + v.minor + "." + v.revision +
		(v.alpha ? " (alpha " + v.alpha + ")" : "") +
		(v.beta ? " (beta " + v.beta + ")" : "");
}

function compareVersions(v1,v2)
{
	var x1,x2,i,a = ["major","minor","revision"];
	for(i = 0; i<a.length; i++) {
		x1 = v1[a[i]] || 0;
		x2 = v2[a[i]] || 0;
		if(x1<x2)
			return 1;
		if(x1>x2)
			return -1;
	}
	x1 = v1.beta || 9999;
	x2 = v2.beta || 9999;
	if(x1<x2)
		return 1;
	return x1 > x2 ? -1 : 0;
}

function merge(dst,src,preserveExisting)
{
	var i;
	for(i in src) {
		if(!preserveExisting || dst[i] === undefined)
			dst[i] = src[i];
	}
	return dst;
}

// Resolve the target object of an event
function resolveTarget(e)
{
	var obj;
	if(e.target)
		obj = e.target;
	else if(e.srcElement)
		obj = e.srcElement;
	if(obj.nodeType == 3) // defeat Safari bug
		obj = obj.parentNode;
	return obj;
}

// Returns a string containing the description of an exception, optionally prepended by a message
function exceptionText(e,message)
{
	var s = e.description || e.toString();
	return message ? "%0:\n%1".format([message,s]) : s;
}

// Displays an alert of an exception description with optional message
function showException(e,message)
{
	alert(exceptionText(e,message));
}

function alertAndThrow(m)
{
	alert(m);
	throw(m);
}

function glyph(name)
{
	var g = config.glyphs;
	var b = g.currBrowser;
	if(b == null) {
		b = 0;
		while(b < g.browsers.length-1 && !g.browsers[b]())
			b++;
		g.currBrowser = b;
	}
	if(!g.codes[name])
		return "";
	return g.codes[name][b];
}

function createTiddlyText(parent,text)
{
	return parent.appendChild(document.createTextNode(text));
}

function createTiddlyCheckbox(parent,caption,checked,onChange)
{
	var cb = document.createElement("input");
	cb.setAttribute("type","checkbox");
	cb.onclick = onChange;
	parent.appendChild(cb);
	cb.checked = checked;
	cb.className = "chkOptionInput";
	if(caption)
		wikify(caption,parent);
	return cb;
}

function createTiddlyElement(parent,element,id,className,text,attribs)
{
	var n,e = document.createElement(element);
	if(className != null)
		e.className = className;
	if(id != null)
		e.setAttribute("id",id);
	if(text != null)
		e.appendChild(document.createTextNode(text));
	if(attribs) {
		for(n in attribs) {
			e.setAttribute(n,attribs[n]);
		}
	}
	if(parent != null)
		parent.appendChild(e);
	return e;
}

function createTiddlyButton(parent,text,tooltip,action,className,id,accessKey,attribs)
{
	var i,btn = document.createElement("a");
	btn.setAttribute("href","javascript:;");
	if(action) {
		btn.onclick = action;
	}
	if(tooltip)
		btn.setAttribute("title",tooltip);
	if(text)
		btn.appendChild(document.createTextNode(text));
	btn.className = className || "button";
	if(id)
		btn.id = id;
	if(attribs) {
		for(i in attribs) {
			btn.setAttribute(i,attribs[i]);
		}
	}
	if(parent)
		parent.appendChild(btn);
	if(accessKey)
		btn.setAttribute("accessKey",accessKey);
	return btn;
}

function createExternalLink(place,url,label)
{
	var link = document.createElement("a");
	link.className = "externalLink";
	link.href = url;
	var f = config.messages.externalLinkTooltip;
	link.title = f ? f.format([url]) : url;
	if(config.options.chkOpenInNewWindow)
		link.target = "_blank";
	place.appendChild(link);
	if(label)
		createTiddlyText(link, label);
	return link;
}

function getTiddlyLinkInfo(title,currClasses)
{
	var classes = currClasses ? currClasses.split(" ") : [];
	classes.pushUnique("tiddlyLink");
	var tiddler = store.fetchTiddler(title);
	var subTitle;
	if(tiddler) {
		subTitle = tiddler.getSubtitle();
		classes.pushUnique("tiddlyLinkExisting");
		classes.remove("tiddlyLinkNonExisting");
		classes.remove("shadow");
	} else {
	    var f;
		classes.remove("tiddlyLinkExisting");
		classes.pushUnique("tiddlyLinkNonExisting");
		if(store.isShadowTiddler(title)) {
			f = config.messages.shadowedTiddlerToolTip;
			classes.pushUnique("shadow");
		} else {
			f = config.messages.undefinedTiddlerToolTip;
			classes.remove("shadow");
		}
		subTitle = f ? f.format([title]) : "";
	}
	if(typeof config.annotations[title]=="string")
		subTitle = config.annotations[title];
	return {classes: classes.join(" "),subTitle: subTitle};
}

// Event handler for clicking on a tiddly link
function onClickTiddlerLink(ev)
{
	var e = ev || window.event;
	var target = resolveTarget(e);
	var link = target;
	var title = null;
	var fields = null;
	var noToggle = null;
	do {
		title = link.getAttribute("tiddlyLink");
		fields = link.getAttribute("tiddlyFields");
		noToggle = link.getAttribute("noToggle");
		link = link.parentNode;
	} while(title == null && link != null);
	if(!store.isShadowTiddler(title)) {
		var f = fields ? fields.decodeHashMap() : {};
		fields = String.encodeHashMap(merge(f,config.defaultCustomFields,true));
	}
	if(title) {
		var toggling = e.metaKey || e.ctrlKey;
		if(config.options.chkToggleLinks)
			toggling = !toggling;
		if(noToggle)
			toggling = false;
		if(store.getTiddler(title))
			fields = null;
		story.displayTiddler(target,title,null,true,null,fields,toggling);
	}
	clearMessage();
	return false;
}

function createTiddlyLink(place,title,includeText,className,isStatic,linkedFromTiddler,noToggle)
{
	var title = jQuery.trim(title);
	var text = includeText ? title : null;
	var i = getTiddlyLinkInfo(title,className);
	var btn = isStatic ? createExternalLink(place,store.getTiddlerText("SiteUrl",null) + "#" + title) : createTiddlyButton(place,text,i.subTitle,onClickTiddlerLink,i.classes);
	if(isStatic)
		btn.className += ' ' + className;
	btn.setAttribute("refresh","link");
	btn.setAttribute("tiddlyLink",title);
	if(noToggle)
		btn.setAttribute("noToggle","true");
	if(linkedFromTiddler) {
		var fields = linkedFromTiddler.getInheritedFields();
		if(fields)
			btn.setAttribute("tiddlyFields",fields);
	}
	return btn;
}

function refreshTiddlyLink(e,title)
{
	var i = getTiddlyLinkInfo(title,e.className);
	e.className = i.classes;
	e.title = i.subTitle;
}

function createTiddlyDropDown(place,onchange,options,defaultValue)
{
	var sel = createTiddlyElement(place,"select");
	sel.onchange = onchange;
	var t;
	for(t=0; t<options.length; t++) {
		var e = createTiddlyElement(sel,"option",null,null,options[t].caption);
		e.value = options[t].name;
		if(options[t].name == defaultValue)
			e.selected = true;
	}
	return sel;
}

//--
//-- TiddlyWiki-specific popup utility functions
//--

// Event handler for 'open all' on a tiddler popup
function onClickTagOpenAll(ev)
{
	var tiddlers = store.getTaggedTiddlers(this.getAttribute("tag"));
	var sortby = this.getAttribute("sortby");
	if(sortby&&sortby.length) {
		store.sortTiddlers(tiddlers,sortby);
	}
	story.displayTiddlers(this,tiddlers);
	return false;
}

// Event handler for clicking on a tiddler tag
function onClickTag(ev)
{
	var e = ev || window.event;
	var popup = Popup.create(this);
	jQuery(popup).addClass("taggedTiddlerList");
	var tag = this.getAttribute("tag");
	var title = this.getAttribute("tiddler");
	if(popup && tag) {
		var tagged = tag.indexOf("[")==-1 ? store.getTaggedTiddlers(tag) : store.filterTiddlers(tag);
		var sortby = this.getAttribute("sortby");
		if(sortby&&sortby.length) {
			store.sortTiddlers(tagged,sortby);
		}
		var titles = [];
		var r;
		for(r=0;r<tagged.length;r++) {
			if(tagged[r].title != title)
				titles.push(tagged[r].title);
		}
		var lingo = config.views.wikified.tag;
		if(titles.length > 0) {
			var openAll = createTiddlyButton(createTiddlyElement(popup,"li"),lingo.openAllText.format([tag]),lingo.openAllTooltip,onClickTagOpenAll);
			openAll.setAttribute("tag",tag);
			openAll.setAttribute("sortby",sortby);
			createTiddlyElement(createTiddlyElement(popup,"li",null,"listBreak"),"div");
			for(r=0; r<titles.length; r++) {
				createTiddlyLink(createTiddlyElement(popup,"li"),titles[r],true);
			}
		} else {
			createTiddlyElement(popup,"li",null,"disabled",lingo.popupNone.format([tag]));
		}
		createTiddlyElement(createTiddlyElement(popup,"li",null,"listBreak"),"div");
		var h = createTiddlyLink(createTiddlyElement(popup,"li"),tag,false);
		createTiddlyText(h,lingo.openTag.format([tag]));
	}
	Popup.show();
	e.cancelBubble = true;
	if(e.stopPropagation) e.stopPropagation();
	return false;
}

// Create a button for a tag with a popup listing all the tiddlers that it tags
function createTagButton(place,tag,excludeTiddler,title,tooltip)
{
	var btn = createTiddlyButton(place,title||tag,(tooltip||config.views.wikified.tag.tooltip).format([tag]),onClickTag);
	btn.setAttribute("tag",tag);
	if(excludeTiddler)
		btn.setAttribute("tiddler",excludeTiddler);
	return btn;
}

function onClickTiddlyPopup(ev)
{
	var e = ev || window.event;
	var tiddler = this.tiddler;
	if(tiddler.text) {
		var popup = Popup.create(this,"div","popupTiddler");
		wikify(tiddler.text,popup,null,tiddler);
		Popup.show();
	}
	if(e) e.cancelBubble = true;
	if(e && e.stopPropagation) e.stopPropagation();
	return false;
}

function createTiddlyPopup(place,caption,tooltip,tiddler)
{
	if(tiddler.text) {
		createTiddlyLink(place,caption,true);
		var btn = createTiddlyButton(place,glyph("downArrow"),tooltip,onClickTiddlyPopup,"tiddlerPopupButton");
		btn.tiddler = tiddler;
	} else {
		createTiddlyText(place,caption);
	}
}

function onClickError(ev)
{
	var e = ev || window.event;
	var popup = Popup.create(this);
	var lines = this.getAttribute("errorText").split("\n");
	var t;
	for(t=0; t<lines.length; t++)
		createTiddlyElement(popup,"li",null,null,lines[t]);
	Popup.show();
	e.cancelBubble = true;
	if(e.stopPropagation) e.stopPropagation();
	return false;
}

function createTiddlyError(place,title,text)
{
	var btn = createTiddlyButton(place,title,null,onClickError,"errorButton");
	if(text) btn.setAttribute("errorText",text);
}
//-
//- Animation engine
//-

function Animator()
{
	this.running = 0; // Incremented at start of each animation, decremented afterwards. If zero, the interval timer is disabled
	this.timerID = 0; // ID of the timer used for animating
	this.animations = []; // List of animations in progress
	return this;
}

// Start animation engine
Animator.prototype.startAnimating = function() //# Variable number of arguments
{
	var t;
	for(t=0; t<arguments.length; t++)
		this.animations.push(arguments[t]);
	if(this.running == 0) {
		var me = this;
		this.timerID = window.setInterval(function() {me.doAnimate(me);},10);
	}
	this.running += arguments.length;
};

// Perform an animation engine tick, calling each of the known animation modules
Animator.prototype.doAnimate = function(me)
{
	var a = 0;
	while(a < me.animations.length) {
		var animation = me.animations[a];
		if(animation.tick()) {
			a++;
		} else {
			me.animations.splice(a,1);
			if(--me.running == 0)
				window.clearInterval(me.timerID);
		}
	}
};

Animator.slowInSlowOut = function(progress)
{
	return(1-((Math.cos(progress * Math.PI)+1)/2));
};

//--
//-- Morpher animation
//--

// Animate a set of properties of an element
function Morpher(element,duration,properties,callback)
{
	this.element = element;
	this.duration = duration;
	this.properties = properties;
	this.startTime = new Date();
	this.endTime = Number(this.startTime) + duration;
	this.callback = callback;
	this.tick();
	return this;
}

Morpher.prototype.assignStyle = function(element,style,value)
{
	switch(style) {
	case "-tw-vertScroll":
		window.scrollTo(findScrollX(),value);
		break;
	case "-tw-horizScroll":
		window.scrollTo(value,findScrollY());
		break;
	default:
		element.style[style] = value;
		break;
	}
};

Morpher.prototype.stop = function()
{
	var t;
	for(t=0; t<this.properties.length; t++) {
		var p = this.properties[t];
		if(p.atEnd !== undefined) {
			this.assignStyle(this.element,p.style,p.atEnd);
		}
	}
	if(this.callback)
		this.callback(this.element,this.properties);
};

Morpher.prototype.tick = function()
{
	var currTime = Number(new Date());
	var t,progress = Animator.slowInSlowOut(Math.min(1,(currTime-this.startTime)/this.duration));
	for(t=0; t<this.properties.length; t++) {
		var p = this.properties[t];
		if(p.start !== undefined && p.end !== undefined) {
			var template = p.template || "%0";
			switch(p.format) {
			case undefined:
			case "style":
				var v = p.start + (p.end-p.start) * progress;
				this.assignStyle(this.element,p.style,template.format([v]));
				break;
			case "color":
				break;
			}
		}
	}
	if(currTime >= this.endTime) {
		this.stop();
		return false;
	}
	return true;
};

//--
//-- Zoomer animation
//--

function Zoomer(text,startElement,targetElement,unused)
{
	var e = createTiddlyElement(document.body,"div",null,"zoomer");
	createTiddlyElement(e,"div",null,null,text);
	var winWidth = findWindowWidth();
	var winHeight = findWindowHeight();
	var p = [
		{style: 'left', start: findPosX(startElement), end: findPosX(targetElement), template: '%0px'},
		{style: 'top', start: findPosY(startElement), end: findPosY(targetElement), template: '%0px'},
		{style: 'width', start: Math.min(startElement.scrollWidth,winWidth), end: Math.min(targetElement.scrollWidth,winWidth), template: '%0px', atEnd: 'auto'},
		{style: 'height', start: Math.min(startElement.scrollHeight,winHeight), end: Math.min(targetElement.scrollHeight,winHeight), template: '%0px', atEnd: 'auto'},
		{style: 'fontSize', start: 8, end: 24, template: '%0pt'}
	];
	var c = function(element,properties) {jQuery(element).remove();};
	return new Morpher(e,config.animDuration,p,c);
}

//--
//-- Scroller animation
//--

function Scroller(targetElement)
{
	var p = [{style: '-tw-vertScroll', start: findScrollY(), end: ensureVisible(targetElement)}];
	return new Morpher(targetElement,config.animDuration,p);
}

//--
//-- Slider animation
//--

// deleteMode - "none", "all" [delete target element and it's children], [only] "children" [but not the target element]
function Slider(element,opening,unused,deleteMode)
{
	element.style.overflow = 'hidden';
	if(opening)
		element.style.height = '0px'; // Resolves a Firefox flashing bug
	element.style.display = 'block';
	var height = element.scrollHeight;
	var p = [];
	var c = null;
	if(opening) {
		p.push({style: 'height', start: 0, end: height, template: '%0px', atEnd: 'auto'});
		p.push({style: 'opacity', start: 0, end: 1, template: '%0'});
		p.push({style: 'filter', start: 0, end: 100, template: 'alpha(opacity:%0)'});
	} else {
		p.push({style: 'height', start: height, end: 0, template: '%0px'});
		p.push({style: 'display', atEnd: 'none'});
		p.push({style: 'opacity', start: 1, end: 0, template: '%0'});
		p.push({style: 'filter', start: 100, end: 0, template: 'alpha(opacity:%0)'});
		switch(deleteMode) {
		case "all":
			c = function(element,properties) {jQuery(element).remove();};
			break;
		case "children":
			c = function(element,properties) {jQuery(element).empty();};
			break;
		}
	}
	return new Morpher(element,config.animDuration,p,c);
}

//--
//-- Popup menu
//--

var Popup = {
	stack: [] // Array of objects with members root: and popup:
	};

Popup.create = function(root,elem,className)
{
	var stackPosition = this.find(root,"popup");
	Popup.remove(stackPosition+1);
	var popup = createTiddlyElement(document.body,elem || "ol","popup",className || "popup");
	popup.stackPosition = stackPosition;
	Popup.stack.push({root: root, popup: popup});
	return popup;
};

Popup.onDocumentClick = function(ev)
{
	var e = ev || window.event;
	if(e.eventPhase == undefined)
		Popup.remove();
	else if(e.eventPhase == Event.BUBBLING_PHASE || e.eventPhase == Event.AT_TARGET)
		Popup.remove();
	return true;
};

Popup.show = function(valign,halign,offset)
{
	var curr = Popup.stack[Popup.stack.length-1];
	this.place(curr.root,curr.popup,valign,halign,offset);
	jQuery(curr.root).addClass("highlight");
	if(config.options.chkAnimate && anim && typeof Scroller == "function")
		anim.startAnimating(new Scroller(curr.popup));
	else
		window.scrollTo(0,ensureVisible(curr.popup));
};

Popup.place = function(root,popup,valign,halign,offset)
{
	if(!offset)
		offset = {x:0,y:0};
	if(popup.stackPosition >= 0 && !valign && !halign) {
		offset.x = offset.x + root.offsetWidth;
	} else {
		offset.x = (halign == "right") ? offset.x + root.offsetWidth : offset.x;
		offset.y = (valign == "top") ? offset.y : offset.y + root.offsetHeight;
	}
	var rootLeft = findPosX(root);
	var rootTop = findPosY(root);
	var popupLeft = rootLeft + offset.x;
	var popupTop = rootTop + offset.y;
	var winWidth = findWindowWidth();
	if(popup.offsetWidth > winWidth*0.75)
		popup.style.width = winWidth*0.75 + "px";
	var popupWidth = popup.offsetWidth;
	var scrollWidth = winWidth - document.body.offsetWidth;
	if(popupLeft + popupWidth > winWidth - scrollWidth - 1) {
		if(halign == "right")
			popupLeft = popupLeft - root.offsetWidth - popupWidth;
		else
			popupLeft = winWidth - popupWidth - scrollWidth - 1;
	}
	popup.style.left = popupLeft + "px";
	popup.style.top = popupTop + "px";
	popup.style.display = "block";
};

Popup.find = function(e)
{
	var t,pos = -1;
	for(t=this.stack.length-1; t>=0; t--) {
		if(isDescendant(e,this.stack[t].popup))
			pos = t;
	}
	return pos;
};

Popup.remove = function(pos)
{
	if(!pos) pos = 0;
	if(Popup.stack.length > pos) {
		Popup.removeFrom(pos);
	}
};

Popup.removeFrom = function(from)
{
	var t;
	for(t=Popup.stack.length-1; t>=from; t--) {
		var p = Popup.stack[t];
		jQuery(p.root).removeClass("highlight");
		jQuery(p.popup).remove();
	}
	Popup.stack = Popup.stack.slice(0,from);
};

//--
//-- Wizard support
//--

function Wizard(elem)
{
	if(elem) {
		this.formElem = findRelated(elem,"wizard","className");
		this.bodyElem = findRelated(this.formElem.firstChild,"wizardBody","className","nextSibling");
		this.footElem = findRelated(this.formElem.firstChild,"wizardFooter","className","nextSibling");
	} else {
		this.formElem = null;
		this.bodyElem = null;
		this.footElem = null;
	}
}

Wizard.prototype.setValue = function(name,value)
{
	jQuery(this.formElem).data(name, value);
};

Wizard.prototype.getValue = function(name)
{
	return this.formElem ? jQuery(this.formElem).data(name) : null;
};

Wizard.prototype.createWizard = function(place,title)
{
	this.formElem = createTiddlyElement(place,"form",null,"wizard");
	createTiddlyElement(this.formElem,"h1",null,null,title);
	this.bodyElem = createTiddlyElement(this.formElem,"div",null,"wizardBody");
	this.footElem = createTiddlyElement(this.formElem,"div",null,"wizardFooter");
	return this.formElem;
};

Wizard.prototype.clear = function()
{
	jQuery(this.bodyElem).empty();
};

Wizard.prototype.setButtons = function(buttonInfo,status)
{
	jQuery(this.footElem).empty();
	var t;
	for(t=0; t<buttonInfo.length; t++) {
		createTiddlyButton(this.footElem,buttonInfo[t].caption,buttonInfo[t].tooltip,buttonInfo[t].onClick);
		insertSpacer(this.footElem);
		}
	if(typeof status == "string") {
		createTiddlyElement(this.footElem,"span",null,"status",status);
	}
};

Wizard.prototype.addStep = function(stepTitle,html)
{
	jQuery(this.bodyElem).empty();
	var w = createTiddlyElement(this.bodyElem,"div");
	createTiddlyElement(w,"h2",null,null,stepTitle);
	var step = createTiddlyElement(w,"div",null,"wizardStep");
	step.innerHTML = html;
	applyHtmlMacros(step,tiddler);
};

Wizard.prototype.getElement = function(name)
{
	return this.formElem.elements[name];
};

//--
//-- ListView gadget
//--

var ListView = {};

// Create a listview
ListView.create = function(place,listObject,listTemplate,callback,className)
{
	var table = createTiddlyElement(place,"table",null,className || "listView twtable");
	var thead = createTiddlyElement(table,"thead");
	var t,r = createTiddlyElement(thead,"tr");
	for(t=0; t<listTemplate.columns.length; t++) {
		var columnTemplate = listTemplate.columns[t];
		var c = createTiddlyElement(r,"th");
		var colType = ListView.columnTypes[columnTemplate.type];
		if(colType && colType.createHeader) {
			colType.createHeader(c,columnTemplate,t);
			if(columnTemplate.className)
				jQuery(c).addClass(columnTemplate.className);
		}
	}
	var rc,tbody = createTiddlyElement(table,"tbody");
	for(rc=0; rc<listObject.length; rc++) {
		var rowObject = listObject[rc];
		r = createTiddlyElement(tbody,"tr");
		for(c=0; c<listTemplate.rowClasses.length; c++) {
			if(rowObject[listTemplate.rowClasses[c].field])
				jQuery(r).addClass(listTemplate.rowClasses[c].className);
		}
		rowObject.rowElement = r;
		rowObject.colElements = {};
		var cc;
		for(cc=0; cc<listTemplate.columns.length; cc++) {
			c = createTiddlyElement(r,"td");
			columnTemplate = listTemplate.columns[cc];
			var field = columnTemplate.field;
			colType = ListView.columnTypes[columnTemplate.type];
			if(colType && colType.createItem) {
				colType.createItem(c,rowObject,field,columnTemplate,cc,rc);
				if(columnTemplate.className)
					jQuery(c).addClass(columnTemplate.className);
			}
			rowObject.colElements[field] = c;
		}
	}
	if(callback && listTemplate.actions)
		createTiddlyDropDown(place,ListView.getCommandHandler(callback),listTemplate.actions);
	if(callback && listTemplate.buttons) {
		for(t=0; t<listTemplate.buttons.length; t++) {
			var a = listTemplate.buttons[t];
			if(a && a.name != "")
				createTiddlyButton(place,a.caption,null,ListView.getCommandHandler(callback,a.name,a.allowEmptySelection));
		}
	}
	return table;
};

ListView.getCommandHandler = function(callback,name,allowEmptySelection)
{
	return function(e) {
		var view = findRelated(this,"TABLE",null,"previousSibling");
		var tiddlers = [];
		ListView.forEachSelector(view,function(e,rowName) {
					if(e.checked)
						tiddlers.push(rowName);
					});
		if(tiddlers.length == 0 && !allowEmptySelection) {
			alert(config.messages.nothingSelected);
		} else {
			if(this.nodeName.toLowerCase() == "select") {
				callback(view,this.value,tiddlers);
				this.selectedIndex = 0;
			} else {
				callback(view,name,tiddlers);
			}
		}
	};
};

// Invoke a callback for each selector checkbox in the listview
ListView.forEachSelector = function(view,callback)
{
	var checkboxes = view.getElementsByTagName("input");
	var t,hadOne = false;
	for(t=0; t<checkboxes.length; t++) {
		var cb = checkboxes[t];
		if(cb.getAttribute("type") == "checkbox") {
			var rn = cb.getAttribute("rowName");
			if(rn) {
				callback(cb,rn);
				hadOne = true;
			}
		}
	}
	return hadOne;
};

ListView.getSelectedRows = function(view)
{
	var rowNames = [];
	ListView.forEachSelector(view,function(e,rowName) {
				if(e.checked)
					rowNames.push(rowName);
				});
	return rowNames;
};

ListView.columnTypes = {};

ListView.columnTypes.String = {
	createHeader: function(place,columnTemplate,col)
		{
			createTiddlyText(place,columnTemplate.title);
		},
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined)
				createTiddlyText(place,v);
		}
};

ListView.columnTypes.WikiText = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined)
				wikify(v,place,null,null);
		}
};

ListView.columnTypes.Tiddler = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined && v.title)
				createTiddlyPopup(place,v.title,config.messages.listView.tiddlerTooltip,v);
		}
};

ListView.columnTypes.Size = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var msg = config.messages.sizeTemplates;
			var v = listObject[field];
			if(v != undefined) {
				var t = 0;
				while(t<msg.length-1 && v<msg[t].unit)
					t++;
				createTiddlyText(place,msg[t].template.format([Math.round(v/msg[t].unit)]));
			}
		}
};

ListView.columnTypes.Link = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			var c = columnTemplate.text;
			if(v != undefined)
				createExternalLink(place,v,c || v);
		}
};

ListView.columnTypes.Date = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined)
				createTiddlyText(place,v.formatString(columnTemplate.dateFormat));
		}
};

ListView.columnTypes.StringList = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined) {
				var t;
				for(t=0; t<v.length; t++) {
					createTiddlyText(place,v[t]);
					createTiddlyElement(place,"br");
				}
			}
		}
};

ListView.columnTypes.Selector = {
	createHeader: function(place,columnTemplate,col)
		{
			createTiddlyCheckbox(place,null,false,this.onHeaderChange);
		},
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var e = createTiddlyCheckbox(place,null,listObject[field],null);
			e.setAttribute("rowName",listObject[columnTemplate.rowName]);
		},
	onHeaderChange: function(e)
		{
			var state = this.checked;
			var view = findRelated(this,"TABLE");
			if(!view)
				return;
			ListView.forEachSelector(view,function(e,rowName) {
								e.checked = state;
							});
		}
};

ListView.columnTypes.Tags = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var tags = listObject[field];
			createTiddlyText(place,String.encodeTiddlyLinkList(tags));
		}
};

ListView.columnTypes.Boolean = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			if(listObject[field] == true)
				createTiddlyText(place,columnTemplate.trueText);
			if(listObject[field] == false)
				createTiddlyText(place,columnTemplate.falseText);
		}
};

ListView.columnTypes.TagCheckbox = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var e = createTiddlyCheckbox(place,null,listObject[field],this.onChange);
			e.setAttribute("tiddler",listObject.title);
			e.setAttribute("tag",columnTemplate.tag);
		},
	onChange : function(e)
		{
			var tag = this.getAttribute("tag");
			var tiddler = this.getAttribute("tiddler");
			store.setTiddlerTag(tiddler,this.checked,tag);
		}
};

ListView.columnTypes.TiddlerLink = {
	createHeader: ListView.columnTypes.String.createHeader,
	createItem: function(place,listObject,field,columnTemplate,col,row)
		{
			var v = listObject[field];
			if(v != undefined) {
				var link = createTiddlyLink(place,listObject[columnTemplate.tiddlerLink],false,null);
				createTiddlyText(link,listObject[field]);
			}
		}
};

//--
//-- Augmented methods for the JavaScript Array() object
//--

// Add indexOf function if browser does not support it
if(!Array.indexOf) {
Array.prototype.indexOf = function(item,from)
{
	if(!from)
		from = 0;
	var i;
	for(i=from; i<this.length; i++) {
		if(this[i] === item)
			return i;
	}
	return -1;
};}

// Find an entry in a given field of the members of an array
Array.prototype.findByField = function(field,value)
{
	var t;
	for(t=0; t<this.length; t++) {
		if(this[t][field] === value)
			return t;
	}
	return null;
};

// Return whether an entry exists in an array
Array.prototype.contains = function(item)
{
	return this.indexOf(item) != -1;
};

// Adds, removes or toggles a particular value within an array
//  value - value to add
//  mode - +1 to add value, -1 to remove value, 0 to toggle it
Array.prototype.setItem = function(value,mode)
{
	var p = this.indexOf(value);
	if(mode == 0)
		mode = (p == -1) ? +1 : -1;
	if(mode == +1) {
		if(p == -1)
			this.push(value);
	} else if(mode == -1) {
		if(p != -1)
			this.splice(p,1);
	}
};

// Return whether one of a list of values exists in an array
Array.prototype.containsAny = function(items)
{
	var i;
	for(i=0; i<items.length; i++) {
		if(this.indexOf(items[i]) != -1)
			return true;
	}
	return false;
};

// Return whether all of a list of values exists in an array
Array.prototype.containsAll = function(items)
{
	var i;
	for(i = 0; i<items.length; i++) {
		if(this.indexOf(items[i]) == -1)
			return false;
	}
	return true;
};

// Push a new value into an array only if it is not already present in the array. If the optional unique parameter is false, it reverts to a normal push
Array.prototype.pushUnique = function(item,unique)
{
	if(unique === false) {
		this.push(item);
	} else {
		if(this.indexOf(item) == -1)
			this.push(item);
	}
};

Array.prototype.remove = function(item)
{
	var p = this.indexOf(item);
	if(p != -1)
		this.splice(p,1);
};

if(!Array.prototype.map) {
Array.prototype.map = function(fn,thisObj)
{
	var scope = thisObj || window;
	var i,j,a = [];
	for(i=0, j=this.length; i < j; ++i) {
		a.push(fn.call(scope,this[i],i,this));
	}
	return a;
};}

//--
//-- Augmented methods for the JavaScript String() object
//--

// Get characters from the right end of a string
String.prototype.right = function(n)
{
	return n < this.length ? this.slice(this.length-n) : this;
};

// Trim whitespace from both ends of a string
String.prototype.trim = function()
{
	return this.replace(/^\s*|\s*$/g,"");
};

// Convert a string from a CSS style property name to a JavaScript style name ("background-color" -> "backgroundColor")
String.prototype.unDash = function()
{
	var t,s = this.split("-");
	if(s.length > 1) {
		for(t=1; t<s.length; t++)
			s[t] = s[t].substr(0,1).toUpperCase() + s[t].substr(1);
	}
	return s.join("");
};

// Substitute substrings from an array into a format string that includes '%1'-type specifiers
String.prototype.format = function(s)
{
	var substrings = s && s.constructor == Array ? s : arguments;
	var subRegExp = /(?:%(\d+))/mg;
	var currPos = 0;
	var match,r = [];
	do {
		match = subRegExp.exec(this);
		if(match && match[1]) {
			if(match.index > currPos)
				r.push(this.substring(currPos,match.index));
			r.push(substrings[parseInt(match[1],10)]);
			currPos = subRegExp.lastIndex;
		}
	} while(match);
	if(currPos < this.length)
		r.push(this.substring(currPos,this.length));
	return r.join("");
};

// Escape any special RegExp characters with that character preceded by a backslash
String.prototype.escapeRegExp = function()
{
	var s = "\\^$*+?()=!|,{}[].";
	var t,c = this;
	for(t=0; t<s.length; t++)
		c = c.replace(new RegExp("\\" + s.substr(t,1),"g"),"\\" + s.substr(t,1));
	return c;
};

// Convert "\" to "\s", newlines to "\n" (and remove carriage returns)
String.prototype.escapeLineBreaks = function()
{
	return this.replace(/\\/mg,"\\s").replace(/\n/mg,"\\n").replace(/\r/mg,"");
};

// Convert "\n" to newlines, "\b" to " ", "\s" to "\" (and remove carriage returns)
String.prototype.unescapeLineBreaks = function()
{
	return this.replace(/\\n/mg,"\n").replace(/\\b/mg," ").replace(/\\s/mg,"\\").replace(/\r/mg,"");
};

// Convert & to "&amp;", < to "&lt;", > to "&gt;" and " to "&quot;"
String.prototype.htmlEncode = function()
{
	return this.replace(/&/mg,"&amp;").replace(/</mg,"&lt;").replace(/>/mg,"&gt;").replace(/\"/mg,"&quot;");
};

// Convert "&amp;" to &, "&lt;" to <, "&gt;" to > and "&quot;" to "
String.prototype.htmlDecode = function()
{
	return this.replace(/&lt;/mg,"<").replace(/&gt;/mg,">").replace(/&quot;/mg,"\"").replace(/&amp;/mg,"&");
};

// Parse a space-separated string of name:value parameters
// The result is an array of objects:
//   result[0] = object with a member for each parameter name, value of that member being an array of values
//   result[1..n] = one object for each parameter, with 'name' and 'value' members
String.prototype.parseParams = function(defaultName,defaultValue,allowEval,noNames,cascadeDefaults)
{
	var parseToken = function(match,p) {
		var n;
		if(match[p]) // Double quoted
			n = match[p];
		else if(match[p+1]) // Single quoted
			n = match[p+1];
		else if(match[p+2]) // Double-square-bracket quoted
			n = match[p+2];
		else if(match[p+3]) // Double-brace quoted
			try {
				n = match[p+3];
				if(allowEval && config.evaluateMacroParameters != "none") {
					if(config.evaluateMacroParameters == "restricted") {
						if(window.restrictedEval) {
							n = window.restrictedEval(n);
						}
					} else {
						n = window.eval(n);
					}
				}
			} catch(ex) {
				throw "Unable to evaluate {{" + match[p+3] + "}}: " + exceptionText(ex);
			}
		else if(match[p+4]) // Unquoted
			n = match[p+4];
		else if(match[p+5]) // empty quote
			n = "";
		return n;
	};
	var r = [{}];
	var dblQuote = "(?:\"((?:(?:\\\\\")|[^\"])+)\")";
	var sngQuote = "(?:'((?:(?:\\\\\')|[^'])+)')";
	var dblSquare = "(?:\\[\\[((?:\\s|\\S)*?)\\]\\])";
	var dblBrace = "(?:\\{\\{((?:\\s|\\S)*?)\\}\\})";
	var unQuoted = noNames ? "([^\"'\\s]\\S*)" : "([^\"':\\s][^\\s:]*)";
	var emptyQuote = "((?:\"\")|(?:''))";
	var skipSpace = "(?:\\s*)";
	var token = "(?:" + dblQuote + "|" + sngQuote + "|" + dblSquare + "|" + dblBrace + "|" + unQuoted + "|" + emptyQuote + ")";
	var re = noNames ? new RegExp(token,"mg") : new RegExp(skipSpace + token + skipSpace + "(?:(\\:)" + skipSpace + token + ")?","mg");
	var match;
	do {
		match = re.exec(this);
		if(match) {
			var n = parseToken(match,1);
			if(noNames) {
				r.push({name:"",value:n});
			} else {
				var v = parseToken(match,8);
				if(v == null && defaultName) {
					v = n;
					n = defaultName;
				} else if(v == null && defaultValue) {
					v = defaultValue;
				}
				r.push({name:n,value:v});
				if(cascadeDefaults) {
					defaultName = n;
					defaultValue = v;
				}
			}
		}
	} while(match);
	// Summarise parameters into first element
	var t;
	for(t=1; t<r.length; t++) {
		if(r[0][r[t].name])
			r[0][r[t].name].push(r[t].value);
		else
			r[0][r[t].name] = [r[t].value];
	}
	return r;
};

// Process a string list of macro parameters into an array. Parameters can be quoted with "", '',
// [[]], {{ }} or left unquoted (and therefore space-separated). Double-braces {{}} results in
// an *evaluated* parameter: e.g. {{config.options.txtUserName}} results in the current user's name.
String.prototype.readMacroParams = function(notAllowEval)
{
	var p = this.parseParams("list",null,!notAllowEval,true);
	var t,n = [];
	for(t=1; t<p.length; t++)
		n.push(p[t].value);
	return n;
};

// Process a string list of unique tiddler names into an array. Tiddler names that have spaces in them must be [[bracketed]]
String.prototype.readBracketedList = function(unique)
{
	var p = this.parseParams("list",null,false,true);
	var t,n = [];
	for(t=1; t<p.length; t++) {
		if(p[t].value)
			n.pushUnique(p[t].value,unique);
	}
	return n;
};

// Returns array with start and end index of chunk between given start and end marker, or undefined.
String.prototype.getChunkRange = function(start,end)
{
	var s = this.indexOf(start);
	if(s != -1) {
		s += start.length;
		var e = this.indexOf(end,s);
		if(e != -1)
			return [s,e];
	}
};

// Replace a chunk of a string given start and end markers
String.prototype.replaceChunk = function(start,end,sub)
{
	var r = this.getChunkRange(start,end);
	return r ? this.substring(0,r[0]) + sub + this.substring(r[1]) : this;
};

// Returns a chunk of a string between start and end markers, or undefined
String.prototype.getChunk = function(start,end)
{
	var r = this.getChunkRange(start,end);
	if(r)
		return this.substring(r[0],r[1]);
};


// Static method to bracket a string with double square brackets if it contains a space
String.encodeTiddlyLink = function(title)
{
	return title.indexOf(" ") == -1 ? title : "[[" + title + "]]";
};

// Static method to encodeTiddlyLink for every item in an array and join them with spaces
String.encodeTiddlyLinkList = function(list)
{
	if(list) {
		var t,results = [];
		for(t=0; t<list.length; t++)
			results.push(String.encodeTiddlyLink(list[t]));
		return results.join(" ");
	} else {
		return "";
	}
};

// Convert a string as a sequence of name:"value" pairs into a hashmap
String.prototype.decodeHashMap = function()
{
	var fields = this.parseParams("anon","",false);
	var t,r = {};
	for(t=1; t<fields.length; t++)
		r[fields[t].name] = fields[t].value;
	return r;
};

// Static method to encode a hashmap into a name:"value"... string
String.encodeHashMap = function(hashmap)
{
	var t,r = [];
	for(t in hashmap)
		r.push(t + ':"' + hashmap[t] + '"');
	return r.join(" ");
};

// Static method to left-pad a string with 0s to a certain width
String.zeroPad = function(n,d)
{
	var s = n.toString();
	if(s.length < d)
		s = "000000000000000000000000000".substr(0,d-s.length) + s;
	return s;
};

String.prototype.startsWith = function(prefix)
{
	return !prefix || this.substring(0,prefix.length) == prefix;
};

// Returns the first value of the given named parameter.
function getParam(params,name,defaultValue)
{
	if(!params)
		return defaultValue;
	var p = params[0][name];
	return p ? p[0] : defaultValue;
}

// Returns the first value of the given boolean named parameter.
function getFlag(params,name,defaultValue)
{
	return !!getParam(params,name,defaultValue);
}

//--
//-- Augmented methods for the JavaScript Date() object
//--

// Substitute date components into a string
Date.prototype.formatString = function(template)
{
	var t = template.replace(/0hh12/g,String.zeroPad(this.getHours12(),2));
	t = t.replace(/hh12/g,this.getHours12());
	t = t.replace(/0hh/g,String.zeroPad(this.getHours(),2));
	t = t.replace(/hh/g,this.getHours());
	t = t.replace(/mmm/g,config.messages.dates.shortMonths[this.getMonth()]);
	t = t.replace(/0mm/g,String.zeroPad(this.getMinutes(),2));
	t = t.replace(/mm/g,this.getMinutes());
	t = t.replace(/0ss/g,String.zeroPad(this.getSeconds(),2));
	t = t.replace(/ss/g,this.getSeconds());
	t = t.replace(/[ap]m/g,this.getAmPm().toLowerCase());
	t = t.replace(/[AP]M/g,this.getAmPm().toUpperCase());
	t = t.replace(/wYYYY/g,this.getYearForWeekNo());
	t = t.replace(/wYY/g,String.zeroPad(this.getYearForWeekNo()-2000,2));
	t = t.replace(/YYYY/g,this.getFullYear());
	t = t.replace(/YY/g,String.zeroPad(this.getFullYear()-2000,2));
	t = t.replace(/MMM/g,config.messages.dates.months[this.getMonth()]);
	t = t.replace(/0MM/g,String.zeroPad(this.getMonth()+1,2));
	t = t.replace(/MM/g,this.getMonth()+1);
	t = t.replace(/0WW/g,String.zeroPad(this.getWeek(),2));
	t = t.replace(/WW/g,this.getWeek());
	t = t.replace(/DDD/g,config.messages.dates.days[this.getDay()]);
	t = t.replace(/ddd/g,config.messages.dates.shortDays[this.getDay()]);
	t = t.replace(/0DD/g,String.zeroPad(this.getDate(),2));
	t = t.replace(/DDth/g,this.getDate()+this.daySuffix());
	t = t.replace(/DD/g,this.getDate());
	var tz = this.getTimezoneOffset();
	var atz = Math.abs(tz);
	t = t.replace(/TZD/g,(tz < 0 ? '+' : '-') + String.zeroPad(Math.floor(atz / 60),2) + ':' + String.zeroPad(atz % 60,2));
	t = t.replace(/\\/g,"");
	return t;
};

Date.prototype.getWeek = function()
{
	var dt = new Date(this.getTime());
	var d = dt.getDay();
	if(d==0) d=7;// JavaScript Sun=0, ISO Sun=7
	dt.setTime(dt.getTime()+(4-d)*86400000);// shift day to Thurs of same week to calculate weekNo
	var n = Math.floor((dt.getTime()-new Date(dt.getFullYear(),0,1)+3600000)/86400000);
	return Math.floor(n/7)+1;
};

Date.prototype.getYearForWeekNo = function()
{
	var dt = new Date(this.getTime());
	var d = dt.getDay();
	if(d==0) d=7;// JavaScript Sun=0, ISO Sun=7
	dt.setTime(dt.getTime()+(4-d)*86400000);// shift day to Thurs of same week
	return dt.getFullYear();
};

Date.prototype.getHours12 = function()
{
	var h = this.getHours();
	return h > 12 ? h-12 : ( h > 0 ? h : 12 );
};

Date.prototype.getAmPm = function()
{
	return this.getHours() >= 12 ? config.messages.dates.pm : config.messages.dates.am;
};

Date.prototype.daySuffix = function()
{
	return config.messages.dates.daySuffixes[this.getDate()-1];
};

// Convert a date to local YYYYMMDDHHMM string format
Date.prototype.convertToLocalYYYYMMDDHHMM = function()
{
	return this.getFullYear() + String.zeroPad(this.getMonth()+1,2) + String.zeroPad(this.getDate(),2) + String.zeroPad(this.getHours(),2) + String.zeroPad(this.getMinutes(),2);
};

// Convert a date to UTC YYYYMMDDHHMM string format
Date.prototype.convertToYYYYMMDDHHMM = function()
{
	return this.getUTCFullYear() + String.zeroPad(this.getUTCMonth()+1,2) + String.zeroPad(this.getUTCDate(),2) + String.zeroPad(this.getUTCHours(),2) + String.zeroPad(this.getUTCMinutes(),2);
};

// Convert a date to UTC YYYYMMDD.HHMMSSMMM string format
Date.prototype.convertToYYYYMMDDHHMMSSMMM = function()
{
	return this.getUTCFullYear() + String.zeroPad(this.getUTCMonth()+1,2) + String.zeroPad(this.getUTCDate(),2) + "." + String.zeroPad(this.getUTCHours(),2) + String.zeroPad(this.getUTCMinutes(),2) + String.zeroPad(this.getUTCSeconds(),2) + String.zeroPad(this.getUTCMilliseconds(),3) +"0";
};

// Static method to create a date from a UTC YYYYMMDDHHMM format string
Date.convertFromYYYYMMDDHHMM = function(d)
{
	d = d?d.replace(/[^0-9]/g, ""):"";
	return Date.convertFromYYYYMMDDHHMMSSMMM(d.substr(0,12));
};

// Static method to create a date from a UTC YYYYMMDDHHMMSS format string
Date.convertFromYYYYMMDDHHMMSS = function(d)
{
	d = d?d.replace(/[^0-9]/g, ""):"";
	return Date.convertFromYYYYMMDDHHMMSSMMM(d.substr(0,14));
};

// Static method to create a date from a UTC YYYYMMDDHHMMSSMMM format string
Date.convertFromYYYYMMDDHHMMSSMMM = function(d)
{
	d = d ? d.replace(/[^0-9]/g, "") : "";
	return new Date(Date.UTC(parseInt(d.substr(0,4),10),
			parseInt(d.substr(4,2),10)-1,
			parseInt(d.substr(6,2),10),
			parseInt(d.substr(8,2)||"00",10),
			parseInt(d.substr(10,2)||"00",10),
			parseInt(d.substr(12,2)||"00",10),
			parseInt(d.substr(14,3)||"000",10)));
};

//--
//-- RGB colour object
//--

// Construct an RGB colour object from a '#rrggbb', '#rgb' or 'rgb(n,n,n)' string or from separate r,g,b values
function RGB(r,g,b)
{
	this.r = 0;
	this.g = 0;
	this.b = 0;
	if(typeof r == "string") {
		if(r.substr(0,1) == "#") {
			if(r.length == 7) {
				this.r = parseInt(r.substr(1,2),16)/255;
				this.g = parseInt(r.substr(3,2),16)/255;
				this.b = parseInt(r.substr(5,2),16)/255;
			} else {
				this.r = parseInt(r.substr(1,1),16)/15;
				this.g = parseInt(r.substr(2,1),16)/15;
				this.b = parseInt(r.substr(3,1),16)/15;
			}
		} else {
			var rgbPattern = /rgb\s*\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)/;
			var c = r.match(rgbPattern);
			if(c) {
				this.r = parseInt(c[1],10)/255;
				this.g = parseInt(c[2],10)/255;
				this.b = parseInt(c[3],10)/255;
			}
		}
	} else {
		this.r = r;
		this.g = g;
		this.b = b;
	}
	return this;
}

// Mixes this colour with another in a specified proportion
// c = other colour to mix
// f = 0..1 where 0 is this colour and 1 is the new colour
// Returns an RGB object
RGB.prototype.mix = function(c,f)
{
	return new RGB(this.r + (c.r-this.r) * f,this.g + (c.g-this.g) * f,this.b + (c.b-this.b) * f);
};

// Return an rgb colour as a #rrggbb format hex string
RGB.prototype.toString = function()
{
	var clamp = function(x,min,max) {
		return x < min ? min : (x > max ? max : x);
	};
	return "#" +
			("0" + Math.floor(clamp(this.r,0,1) * 255).toString(16)).right(2) +
			("0" + Math.floor(clamp(this.g,0,1) * 255).toString(16)).right(2) +
			("0" + Math.floor(clamp(this.b,0,1) * 255).toString(16)).right(2);
};

//--
//-- DOM utilities - many derived from www.quirksmode.org
//--

function drawGradient(place,horiz,locolors,hicolors)
{
	if(!hicolors)
		hicolors = locolors;
	var t;
	for(t=0; t<= 100; t+=2) {
		var bar = document.createElement("div");
		place.appendChild(bar);
		bar.style.position = "absolute";
		bar.style.left = horiz ? t + "%" : 0;
		bar.style.top = horiz ? 0 : t + "%";
		bar.style.width = horiz ? (101-t) + "%" : "100%";
		bar.style.height = horiz ? "100%" : (101-t) + "%";
		bar.style.zIndex = -1;
		var p = t/100*(locolors.length-1);
		var hc = hicolors[Math.floor(p)];
		if(typeof hc == "string")
			hc = new RGB(hc);
		var lc = locolors[Math.ceil(p)];
		if(typeof lc == "string")
			lc = new RGB(lc);
		bar.style.backgroundColor = hc.mix(lc,p-Math.floor(p)).toString();
	}
}

function addEvent(obj,type,fn)
{
	if(obj.attachEvent) {
		obj["e"+type+fn] = fn;
		obj[type+fn] = function(){obj["e"+type+fn](window.event);};
		obj.attachEvent("on"+type,obj[type+fn]);
	} else {
		obj.addEventListener(type,fn,false);
	}
}

function removeEvent(obj,type,fn)
{
	if(obj.detachEvent) {
		obj.detachEvent("on"+type,obj[type+fn]);
		obj[type+fn] = null;
	} else {
		obj.removeEventListener(type,fn,false);
	}
}

// Find the closest relative with a given property value (property defaults to tagName, relative defaults to parentNode)
function findRelated(e,value,name,relative)
{
	name = name || "tagName";
	relative = relative || "parentNode";
	if(name == "className") {
		while(e && !jQuery(e).hasClass(value)) {
			e = e[relative];
		}
	} else {
		while(e && e[name] != value) {
			e = e[relative];
		}
	}
	return e;
}

// Get the scroll position for window.scrollTo necessary to scroll a given element into view
function ensureVisible(e)
{
	var posTop = findPosY(e);
	var posBot = posTop + e.offsetHeight;
	var winTop = findScrollY();
	var winHeight = findWindowHeight();
	var winBot = winTop + winHeight;
	if(posTop < winTop) {
		return posTop;
	} else if(posBot > winBot) {
		if(e.offsetHeight < winHeight)
			return posTop - (winHeight - e.offsetHeight);
		else
			return posTop;
	} else {
		return winTop;
	}
}

// Get the current width of the display window
function findWindowWidth()
{
	return window.innerWidth || document.documentElement.clientWidth;
}

// Get the current height of the display window
function findWindowHeight()
{
	return window.innerHeight || document.documentElement.clientHeight;
}

// Get the current height of the document
function findDocHeight() {
    var D = document;
    return Math.max(
        Math.max(D.body.scrollHeight, D.documentElement.scrollHeight),
        Math.max(D.body.offsetHeight, D.documentElement.offsetHeight),
        Math.max(D.body.clientHeight, D.documentElement.clientHeight)
    );
}

// Get the current horizontal page scroll position
function findScrollX()
{
	return window.scrollX || document.documentElement.scrollLeft;
}

// Get the current vertical page scroll position
function findScrollY()
{
	return window.scrollY || document.documentElement.scrollTop;
}

function findPosX(obj)
{
	var curleft = 0;
	while(obj.offsetParent) {
		curleft += obj.offsetLeft;
		obj = obj.offsetParent;
	}
	return curleft;
}

function findPosY(obj)
{
	var curtop = 0;
	while(obj.offsetParent) {
		curtop += obj.offsetTop;
		obj = obj.offsetParent;
	}
	return curtop;
}

// Blur a particular element
function blurElement(e)
{
	if(e && e.focus && e.blur) {
		e.focus();
		e.blur();
	}
}

// Create a non-breaking space
function insertSpacer(place)
{
	var e = document.createTextNode(String.fromCharCode(160));
	if(place)
		place.appendChild(e);
	return e;
}

// Replace the current selection of a textarea or text input and scroll it into view
function replaceSelection(e,text)
{
	if(e.setSelectionRange) {
		var oldpos = e.selectionStart;
		var isRange = e.selectionEnd > e.selectionStart;
		e.value = e.value.substr(0,e.selectionStart) + text + e.value.substr(e.selectionEnd);
		e.setSelectionRange(isRange ? oldpos : oldpos + text.length,oldpos + text.length);
		var linecount = e.value.split("\n").length;
		var thisline = e.value.substr(0,e.selectionStart).split("\n").length-1;
		e.scrollTop = Math.floor((thisline - e.rows / 2) * e.scrollHeight / linecount);
	} else if(document.selection) {
		var range = document.selection.createRange();
		if(range.parentElement() == e) {
			var isCollapsed = range.text == "";
			range.text = text;
			if(!isCollapsed) {
				range.moveStart("character", -text.length);
				range.select();
			}
		}
	}
}

// Set the caret position in a text area
function setCaretPosition(e,pos)
{
	if(e.selectionStart || e.selectionStart == '0') {
		e.selectionStart = pos;
		e.selectionEnd = pos;
		e.focus();
	} else if(document.selection) {
		// IE support
		e.focus ();
		var sel = document.selection.createRange();
		sel.moveStart('character', -e.value.length);
		sel.moveStart('character',pos);
		sel.moveEnd('character',0);
		sel.select();
	}
}

// Returns the text of the given (text) node, possibly merging subsequent text nodes
function getNodeText(e)
{
	var t = "";
	while(e && e.nodeName == "#text") {
		t += e.nodeValue;
		e = e.nextSibling;
	}
	return t;
}

// Returns true if the element e has a given ancestor element
function isDescendant(e,ancestor)
{
	while(e) {
		if(e === ancestor)
			return true;
		e = e.parentNode;
	}
	return false;
}


// deprecate the following...

// Prevent an event from bubbling
function stopEvent(e)
{
	var ev = e || window.event;
	ev.cancelBubble = true;
	if(ev.stopPropagation) ev.stopPropagation();
	return false;
}

// Remove any event handlers or non-primitve custom attributes
function scrubNode(e)
{
	if(!config.browser.isIE)
		return;
	var att = e.attributes;
	if(att) {
		var t;
		for(t=0; t<att.length; t++) {
			var n = att[t].name;
			if(n !== "style" && (typeof e[n] === "function" || (typeof e[n] === "object" && e[n] != null))) {
				try {
					e[n] = null;
				} catch(ex) {
				}
			}
		}
	}
	var c = e.firstChild;
	while(c) {
		scrubNode(c);
		c = c.nextSibling;
	}
}

function setStylesheet(s,id,doc)
{
	jQuery.twStylesheet(s,{id:id,doc:doc});
}

function removeStyleSheet(id)
{
	jQuery.twStylesheet.remove({id:id});
}

//--
//-- LoaderBase and SaverBase
//--

function LoaderBase() {}

LoaderBase.prototype.loadTiddler = function(store,node,tiddlers)
{
	var title = this.getTitle(store,node);
	if(safeMode && store.isShadowTiddler(title))
		return;
	if(title) {
		var tiddler = store.createTiddler(title);
		this.internalizeTiddler(store,tiddler,title,node);
		tiddlers.push(tiddler);
	}
};

LoaderBase.prototype.loadTiddlers = function(store,nodes)
{
	var t,tiddlers = [];
	for(t = 0; t < nodes.length; t++) {
		try {
			this.loadTiddler(store,nodes[t],tiddlers);
		} catch(ex) {
			showException(ex,config.messages.tiddlerLoadError.format([this.getTitle(store,nodes[t])]));
		}
	}
	return tiddlers;
};

function SaverBase() {}

SaverBase.prototype.externalize = function(store)
{
	var results = [];
	var t,tiddlers = store.getTiddlers("title");
	for(t = 0; t < tiddlers.length; t++) {
		if(!tiddlers[t].doNotSave())
			results.push(this.externalizeTiddler(store, tiddlers[t]));
	}
	return results.join("\n");
};

//--
//-- TW21Loader (inherits from LoaderBase)
//--

function TW21Loader() {}

TW21Loader.prototype = new LoaderBase();

TW21Loader.prototype.getTitle = function(store,node)
{
	var title = null;
	if(node.getAttribute) {
		title = node.getAttribute("title");
		if(!title)
			title = node.getAttribute("tiddler");
	}
	if(!title && node.id) {
		var lenPrefix = store.idPrefix.length;
		if(node.id.substr(0,lenPrefix) == store.idPrefix)
			title = node.id.substr(lenPrefix);
	}
	return title;
};

TW21Loader.prototype.internalizeTiddler = function(store,tiddler,title,node)
{
	var e = node.firstChild;
	var text = null;
	if(node.getAttribute("tiddler")) {
		text = getNodeText(e).unescapeLineBreaks();
	} else {
		while(e.nodeName!="PRE" && e.nodeName!="pre") {
			e = e.nextSibling;
		}
		text = e.innerHTML.replace(/\r/mg,"").htmlDecode();
	}
	var creator = node.getAttribute("creator");
	var modifier = node.getAttribute("modifier");
	var c = node.getAttribute("created");
	var m = node.getAttribute("modified");
	var created = c ? Date.convertFromYYYYMMDDHHMMSS(c) : version.date;
	var modified = m ? Date.convertFromYYYYMMDDHHMMSS(m) : created;
	var tags = node.getAttribute("tags");
	var fields = {};
	var i,attrs = node.attributes;
	for(i = attrs.length-1; i >= 0; i--) {
		var name = attrs[i].name;
		if(attrs[i].specified && !TiddlyWiki.isStandardField(name)) {
			fields[name] = attrs[i].value.unescapeLineBreaks();
		}
	}
	tiddler.assign(title,text,modifier,modified,tags,created,fields,creator);
	return tiddler;
};

//--
//-- TW21Saver (inherits from SaverBase)
//--

function TW21Saver() {}

TW21Saver.prototype = new SaverBase();

TW21Saver.prototype.externalizeTiddler = function(store,tiddler)
{
	try {
		var extendedAttributes = "";
		var usePre = config.options.chkUsePreForStorage;
		store.forEachField(tiddler,
			function(tiddler,fieldName,value) {
				// don't store stuff from the temp namespace
				if(typeof value != "string")
					value = "";
				if(!fieldName.match(/^temp\./))
					extendedAttributes += ' %0="%1"'.format([fieldName,value.escapeLineBreaks().htmlEncode()]);
			},true);
		var created = tiddler.created;
		var modified = tiddler.modified;
		var attributes = tiddler.creator ? ' creator="' + tiddler.creator.htmlEncode() + '"' : "";
		attributes += tiddler.modifier ? ' modifier="' + tiddler.modifier.htmlEncode() + '"' : "";
		attributes += (usePre && created == version.date) ? "" :' created="' + created.convertToYYYYMMDDHHMM() + '"';
		attributes += (usePre && modified == created) ? "" : ' modified="' + modified.convertToYYYYMMDDHHMM() +'"';
		var tags = tiddler.getTags();
		if(!usePre || tags)
			attributes += ' tags="' + tags.htmlEncode() + '"';
		return ('<div %0="%1"%2%3>%4</'+'div>').format([
				usePre ? "title" : "tiddler",
				tiddler.title.htmlEncode(),
				attributes,
				extendedAttributes,
				usePre ? "\n<pre>" + tiddler.text.htmlEncode() + "</pre>\n" : tiddler.text.escapeLineBreaks().htmlEncode()
			]);
	} catch (ex) {
		throw exceptionText(ex,config.messages.tiddlerSaveError.format([tiddler.title]));
	}
};



//]]>
</script>

<script id="jsdeprecatedArea" type="text/javascript">
//<![CDATA[
//--
//-- Deprecated Crypto functions and associated conversion routines.
//-- Use the jQuery.encoding functions directly instead.
//--

// Crypto 'namespace'
function Crypto() {}

// Convert a string to an array of big-endian 32-bit words
Crypto.strToBe32s = function(str)
{
	return jQuery.encoding.strToBe32s(str);
};

// Convert an array of big-endian 32-bit words to a string
Crypto.be32sToStr = function(be)
{
	return jQuery.encoding.be32sToStr(be);
};

// Convert an array of big-endian 32-bit words to a hex string
Crypto.be32sToHex = function(be)
{
	return jQuery.encoding.be32sToHex(be);
};

// Return, in hex, the SHA-1 hash of a string
Crypto.hexSha1Str = function(str)
{
	return jQuery.encoding.digests.hexSha1Str(str);
};

// Return the SHA-1 hash of a string
Crypto.sha1Str = function(str)
{
	return jQuery.encoding.digests.sha1Str(str);
};

// Calculate the SHA-1 hash of an array of blen bytes of big-endian 32-bit words
Crypto.sha1 = function(x,blen)
{
	return jQuery.encoding.digests.sha1(x,blen);
};

//--
//-- Deprecated code
//--

// @Deprecated: Use createElementAndWikify and this.termRegExp instead
config.formatterHelpers.charFormatHelper = function(w)
{
	w.subWikify(createTiddlyElement(w.output,this.element),this.terminator);
};

// @Deprecated: Use enclosedTextHelper and this.lookaheadRegExp instead
config.formatterHelpers.monospacedByLineHelper = function(w)
{
	var lookaheadRegExp = new RegExp(this.lookahead,"mg");
	lookaheadRegExp.lastIndex = w.matchStart;
	var lookaheadMatch = lookaheadRegExp.exec(w.source);
	if(lookaheadMatch && lookaheadMatch.index == w.matchStart) {
		var text = lookaheadMatch[1];
		if(config.browser.isIE)
			text = text.replace(/\n/g,"\r");
		createTiddlyElement(w.output,"pre",null,null,text);
		w.nextMatch = lookaheadRegExp.lastIndex;
	}
};

// @Deprecated: Use <br> or <br /> instead of <<br>>
config.macros.br = {};
config.macros.br.handler = function(place)
{
	createTiddlyElement(place,"br");
};

// Find an entry in an array. Returns the array index or null
// @Deprecated: Use indexOf instead
Array.prototype.find = function(item)
{
	var i = this.indexOf(item);
	return i == -1 ? null : i;
};

// Load a tiddler from an HTML DIV. The caller should make sure to later call Tiddler.changed()
// @Deprecated: Use store.getLoader().internalizeTiddler instead
Tiddler.prototype.loadFromDiv = function(divRef,title)
{
	return store.getLoader().internalizeTiddler(store,this,title,divRef);
};

// Format the text for storage in an HTML DIV
// @Deprecated Use store.getSaver().externalizeTiddler instead.
Tiddler.prototype.saveToDiv = function()
{
	return store.getSaver().externalizeTiddler(store,this);
};

// @Deprecated: Use store.allTiddlersAsHtml() instead
function allTiddlersAsHtml()
{
	return store.allTiddlersAsHtml();
}

// @Deprecated: Use refreshPageTemplate instead
function applyPageTemplate(title)
{
	refreshPageTemplate(title);
}

// @Deprecated: Use story.displayTiddlers instead
function displayTiddlers(srcElement,titles,template,unused1,unused2,animate,unused3)
{
	story.displayTiddlers(srcElement,titles,template,animate);
}

// @Deprecated: Use story.displayTiddler instead
function displayTiddler(srcElement,title,template,unused1,unused2,animate,unused3)
{
	story.displayTiddler(srcElement,title,template,animate);
}

// @Deprecated: Use functions on right hand side directly instead
var createTiddlerPopup = Popup.create;
var scrollToTiddlerPopup = Popup.show;
var hideTiddlerPopup = Popup.remove;

// @Deprecated: Use right hand side directly instead
var regexpBackSlashEn = new RegExp("\\\\n","mg");
var regexpBackSlash = new RegExp("\\\\","mg");
var regexpBackSlashEss = new RegExp("\\\\s","mg");
var regexpNewLine = new RegExp("\n","mg");
var regexpCarriageReturn = new RegExp("\r","mg");

//--
//-- Deprecated FileAdaptor functions
//--

FileAdaptor.loadTiddlyWikiCallback = function(status,context,responseText,url,xhr)
{
	context.status = status;
	if(!status) {
		context.statusText = "Error reading file";
	} else {
		context.adaptor.store = new TiddlyWiki();
		if(!context.adaptor.store.importTiddlyWiki(responseText)) {
			context.statusText = config.messages.invalidFileError.format([url]);
			context.status = false;
		}
	}
	context.complete(context,context.userParams);
};

//--
//-- Deprecated HTTP request code
//-- Use the jQuery ajax functions directly instead
//--

function loadRemoteFile(url,callback,params)
{
	return httpReq("GET",url,callback,params);
}

function doHttp(type,url,data,contentType,username,password,callback,params,headers,allowCache)
{
	return httpReq(type,url,callback,params,headers,data,contentType,username,password,allowCache);
}

//--
//-- Deprecated String functions
//--

// @Deprecated: no direct replacement, since not used in core code
String.prototype.toJSONString = function()
{
	// Convert a string to it's JSON representation by encoding control characters, double quotes and backslash. See json.org
	var m = {
		'\b': '\\b',
		'\f': '\\f',
		'\n': '\\n',
		'\r': '\\r',
		'\t': '\\t',
		'"' : '\\"',
		'\\': '\\\\'
		};
	var replaceFn = function(a,b) {
		var c = m[b];
		if(c)
			return c;
		c = b.charCodeAt();
		return '\\u00' + Math.floor(c / 16).toString(16) + (c % 16).toString(16);
		};
	if(/["\\\x00-\x1f]/.test(this))
		return '"' + this.replace(/([\x00-\x1f\\"])/g,replaceFn) + '"';
	return '"' + this + '"';
};

//--
//-- Deprecated Tiddler code
//--

// @Deprecated: Use tiddlerToRssItem(tiddler,uri) instead
Tiddler.prototype.toRssItem = function(uri)
{
	return tiddlerToRssItem(this,uri);
};

// @Deprecated: Use "<item>\n" + tiddlerToRssItem(tiddler,uri)  + "\n</item>" instead
Tiddler.prototype.saveToRss = function(uri)
{
	return "<item>\n" + tiddlerToRssItem(this,uri) + "\n</item>";
};

// @Deprecated: Use jQuery.encoding.digests.hexSha1Str instead
Tiddler.prototype.generateFingerprint = function()
{
	return "0x" + Crypto.hexSha1Str(this.text);
};

//--
//-- Deprecated Number functions
//--

// @Deprecated: no direct replacement, since not used in core code
// Clamp a number to a range
Number.prototype.clamp = function(min,max)
{
	var c = this;
	if(c < min)
		c = min;
	if(c > max)
		c = max;
	return Number(c);
};

//--
//-- Deprecated utility functions
//-- Use the jQuery functions directly instead
//--

// Remove all children of a node
function removeChildren(e)
{
	jQuery(e).empty();
}

// Remove a node and all it's children
function removeNode(e)
{
	jQuery(e).remove();
}

// Return the content of an element as plain text with no formatting
function getPlainText(e)
{
	return jQuery(e).text();
}

function addClass(e,className)
{
	jQuery(e).addClass(className);
}

function removeClass(e,className)
{
	jQuery(e).removeClass(className);
}

function hasClass(e,className)
{
	return jQuery(e).hasClass(className);
}

//--
//-- Deprecated Wikifier code
//--

function wikifyPlain(title,theStore,limit)
{
	if(!theStore)
		theStore = store;
	if(theStore.tiddlerExists(title) || theStore.isShadowTiddler(title)) {
		return wikifyPlainText(theStore.getTiddlerText(title),limit,tiddler);
	} else {
		return "";
	}
}


//]]>
</script>
<script id="jslibArea" type="text/javascript">
//<![CDATA[
/*! jQuery v1.8.3 jquery.com | jquery.org/license */
(function(e,t){function _(e){var t=M[e]={};return v.each(e.split(y),function(e,n){t[n]=!0}),t}function H(e,n,r){if(r===t&&e.nodeType===1){var i="data-"+n.replace(P,"-$1").toLowerCase();r=e.getAttribute(i);if(typeof r=="string"){try{r=r==="true"?!0:r==="false"?!1:r==="null"?null:+r+""===r?+r:D.test(r)?v.parseJSON(r):r}catch(s){}v.data(e,n,r)}else r=t}return r}function B(e){var t;for(t in e){if(t==="data"&&v.isEmptyObject(e[t]))continue;if(t!=="toJSON")return!1}return!0}function et(){return!1}function tt(){return!0}function ut(e){return!e||!e.parentNode||e.parentNode.nodeType===11}function at(e,t){do e=e[t];while(e&&e.nodeType!==1);return e}function ft(e,t,n){t=t||0;if(v.isFunction(t))return v.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return v.grep(e,function(e,r){return e===t===n});if(typeof t=="string"){var r=v.grep(e,function(e){return e.nodeType===1});if(it.test(t))return v.filter(t,r,!n);t=v.filter(t,r)}return v.grep(e,function(e,r){return v.inArray(e,t)>=0===n})}function lt(e){var t=ct.split("|"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function At(e,t){if(t.nodeType!==1||!v.hasData(e))return;var n,r,i,s=v._data(e),o=v._data(t,s),u=s.events;if(u){delete o.handle,o.events={};for(n in u)for(r=0,i=u[n].length;r<i;r++)v.event.add(t,n,u[n][r])}o.data&&(o.data=v.extend({},o.data))}function Ot(e,t){var n;if(t.nodeType!==1)return;t.clearAttributes&&t.clearAttributes(),t.mergeAttributes&&t.mergeAttributes(e),n=t.nodeName.toLowerCase(),n==="object"?(t.parentNode&&(t.outerHTML=e.outerHTML),v.support.html5Clone&&e.innerHTML&&!v.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):n==="input"&&Et.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):n==="option"?t.selected=e.defaultSelected:n==="input"||n==="textarea"?t.defaultValue=e.defaultValue:n==="script"&&t.text!==e.text&&(t.text=e.text),t.removeAttribute(v.expando)}function Mt(e){return typeof e.getElementsByTagName!="undefined"?e.getElementsByTagName("*"):typeof e.querySelectorAll!="undefined"?e.querySelectorAll("*"):[]}function _t(e){Et.test(e.type)&&(e.defaultChecked=e.checked)}function Qt(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=Jt.length;while(i--){t=Jt[i]+n;if(t in e)return t}return r}function Gt(e,t){return e=t||e,v.css(e,"display")==="none"||!v.contains(e.ownerDocument,e)}function Yt(e,t){var n,r,i=[],s=0,o=e.length;for(;s<o;s++){n=e[s];if(!n.style)continue;i[s]=v._data(n,"olddisplay"),t?(!i[s]&&n.style.display==="none"&&(n.style.display=""),n.style.display===""&&Gt(n)&&(i[s]=v._data(n,"olddisplay",nn(n.nodeName)))):(r=Dt(n,"display"),!i[s]&&r!=="none"&&v._data(n,"olddisplay",r))}for(s=0;s<o;s++){n=e[s];if(!n.style)continue;if(!t||n.style.display==="none"||n.style.display==="")n.style.display=t?i[s]||"":"none"}return e}function Zt(e,t,n){var r=Rt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function en(e,t,n,r){var i=n===(r?"border":"content")?4:t==="width"?1:0,s=0;for(;i<4;i+=2)n==="margin"&&(s+=v.css(e,n+$t[i],!0)),r?(n==="content"&&(s-=parseFloat(Dt(e,"padding"+$t[i]))||0),n!=="margin"&&(s-=parseFloat(Dt(e,"border"+$t[i]+"Width"))||0)):(s+=parseFloat(Dt(e,"padding"+$t[i]))||0,n!=="padding"&&(s+=parseFloat(Dt(e,"border"+$t[i]+"Width"))||0));return s}function tn(e,t,n){var r=t==="width"?e.offsetWidth:e.offsetHeight,i=!0,s=v.support.boxSizing&&v.css(e,"boxSizing")==="border-box";if(r<=0||r==null){r=Dt(e,t);if(r<0||r==null)r=e.style[t];if(Ut.test(r))return r;i=s&&(v.support.boxSizingReliable||r===e.style[t]),r=parseFloat(r)||0}return r+en(e,t,n||(s?"border":"content"),i)+"px"}function nn(e){if(Wt[e])return Wt[e];var t=v("<"+e+">").appendTo(i.body),n=t.css("display");t.remove();if(n==="none"||n===""){Pt=i.body.appendChild(Pt||v.extend(i.createElement("iframe"),{frameBorder:0,width:0,height:0}));if(!Ht||!Pt.createElement)Ht=(Pt.contentWindow||Pt.contentDocument).document,Ht.write("<!doctype html><html><body>"),Ht.close();t=Ht.body.appendChild(Ht.createElement(e)),n=Dt(t,"display"),i.body.removeChild(Pt)}return Wt[e]=n,n}function fn(e,t,n,r){var i;if(v.isArray(t))v.each(t,function(t,i){n||sn.test(e)?r(e,i):fn(e+"["+(typeof i=="object"?t:"")+"]",i,n,r)});else if(!n&&v.type(t)==="object")for(i in t)fn(e+"["+i+"]",t[i],n,r);else r(e,t)}function Cn(e){return function(t,n){typeof t!="string"&&(n=t,t="*");var r,i,s,o=t.toLowerCase().split(y),u=0,a=o.length;if(v.isFunction(n))for(;u<a;u++)r=o[u],s=/^\+/.test(r),s&&(r=r.substr(1)||"*"),i=e[r]=e[r]||[],i[s?"unshift":"push"](n)}}function kn(e,n,r,i,s,o){s=s||n.dataTypes[0],o=o||{},o[s]=!0;var u,a=e[s],f=0,l=a?a.length:0,c=e===Sn;for(;f<l&&(c||!u);f++)u=a[f](n,r,i),typeof u=="string"&&(!c||o[u]?u=t:(n.dataTypes.unshift(u),u=kn(e,n,r,i,u,o)));return(c||!u)&&!o["*"]&&(u=kn(e,n,r,i,"*",o)),u}function Ln(e,n){var r,i,s=v.ajaxSettings.flatOptions||{};for(r in n)n[r]!==t&&((s[r]?e:i||(i={}))[r]=n[r]);i&&v.extend(!0,e,i)}function An(e,n,r){var i,s,o,u,a=e.contents,f=e.dataTypes,l=e.responseFields;for(s in l)s in r&&(n[l[s]]=r[s]);while(f[0]==="*")f.shift(),i===t&&(i=e.mimeType||n.getResponseHeader("content-type"));if(i)for(s in a)if(a[s]&&a[s].test(i)){f.unshift(s);break}if(f[0]in r)o=f[0];else{for(s in r){if(!f[0]||e.converters[s+" "+f[0]]){o=s;break}u||(u=s)}o=o||u}if(o)return o!==f[0]&&f.unshift(o),r[o]}function On(e,t){var n,r,i,s,o=e.dataTypes.slice(),u=o[0],a={},f=0;e.dataFilter&&(t=e.dataFilter(t,e.dataType));if(o[1])for(n in e.converters)a[n.toLowerCase()]=e.converters[n];for(;i=o[++f];)if(i!=="*"){if(u!=="*"&&u!==i){n=a[u+" "+i]||a["* "+i];if(!n)for(r in a){s=r.split(" ");if(s[1]===i){n=a[u+" "+s[0]]||a["* "+s[0]];if(n){n===!0?n=a[r]:a[r]!==!0&&(i=s[0],o.splice(f--,0,i));break}}}if(n!==!0)if(n&&e["throws"])t=n(t);else try{t=n(t)}catch(l){return{state:"parsererror",error:n?l:"No conversion from "+u+" to "+i}}}u=i}return{state:"success",data:t}}function Fn(){try{return new e.XMLHttpRequest}catch(t){}}function In(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}function $n(){return setTimeout(function(){qn=t},0),qn=v.now()}function Jn(e,t){v.each(t,function(t,n){var r=(Vn[t]||[]).concat(Vn["*"]),i=0,s=r.length;for(;i<s;i++)if(r[i].call(e,t,n))return})}function Kn(e,t,n){var r,i=0,s=0,o=Xn.length,u=v.Deferred().always(function(){delete a.elem}),a=function(){var t=qn||$n(),n=Math.max(0,f.startTime+f.duration-t),r=n/f.duration||0,i=1-r,s=0,o=f.tweens.length;for(;s<o;s++)f.tweens[s].run(i);return u.notifyWith(e,[f,i,n]),i<1&&o?n:(u.resolveWith(e,[f]),!1)},f=u.promise({elem:e,props:v.extend({},t),opts:v.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:qn||$n(),duration:n.duration,tweens:[],createTween:function(t,n,r){var i=v.Tween(e,f.opts,t,n,f.opts.specialEasing[t]||f.opts.easing);return f.tweens.push(i),i},stop:function(t){var n=0,r=t?f.tweens.length:0;for(;n<r;n++)f.tweens[n].run(1);return t?u.resolveWith(e,[f,t]):u.rejectWith(e,[f,t]),this}}),l=f.props;Qn(l,f.opts.specialEasing);for(;i<o;i++){r=Xn[i].call(f,e,l,f.opts);if(r)return r}return Jn(f,l),v.isFunction(f.opts.start)&&f.opts.start.call(e,f),v.fx.timer(v.extend(a,{anim:f,queue:f.opts.queue,elem:e})),f.progress(f.opts.progress).done(f.opts.done,f.opts.complete).fail(f.opts.fail).always(f.opts.always)}function Qn(e,t){var n,r,i,s,o;for(n in e){r=v.camelCase(n),i=t[r],s=e[n],v.isArray(s)&&(i=s[1],s=e[n]=s[0]),n!==r&&(e[r]=s,delete e[n]),o=v.cssHooks[r];if(o&&"expand"in o){s=o.expand(s),delete e[r];for(n in s)n in e||(e[n]=s[n],t[n]=i)}else t[r]=i}}function Gn(e,t,n){var r,i,s,o,u,a,f,l,c,h=this,p=e.style,d={},m=[],g=e.nodeType&&Gt(e);n.queue||(l=v._queueHooks(e,"fx"),l.unqueued==null&&(l.unqueued=0,c=l.empty.fire,l.empty.fire=function(){l.unqueued||c()}),l.unqueued++,h.always(function(){h.always(function(){l.unqueued--,v.queue(e,"fx").length||l.empty.fire()})})),e.nodeType===1&&("height"in t||"width"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],v.css(e,"display")==="inline"&&v.css(e,"float")==="none"&&(!v.support.inlineBlockNeedsLayout||nn(e.nodeName)==="inline"?p.display="inline-block":p.zoom=1)),n.overflow&&(p.overflow="hidden",v.support.shrinkWrapBlocks||h.done(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(r in t){s=t[r];if(Un.exec(s)){delete t[r],a=a||s==="toggle";if(s===(g?"hide":"show"))continue;m.push(r)}}o=m.length;if(o){u=v._data(e,"fxshow")||v._data(e,"fxshow",{}),"hidden"in u&&(g=u.hidden),a&&(u.hidden=!g),g?v(e).show():h.done(function(){v(e).hide()}),h.done(function(){var t;v.removeData(e,"fxshow",!0);for(t in d)v.style(e,t,d[t])});for(r=0;r<o;r++)i=m[r],f=h.createTween(i,g?u[i]:0),d[i]=u[i]||v.style(e,i),i in u||(u[i]=f.start,g&&(f.end=f.start,f.start=i==="width"||i==="height"?1:0))}}function Yn(e,t,n,r,i){return new Yn.prototype.init(e,t,n,r,i)}function Zn(e,t){var n,r={height:e},i=0;t=t?1:0;for(;i<4;i+=2-t)n=$t[i],r["margin"+n]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function tr(e){return v.isWindow(e)?e:e.nodeType===9?e.defaultView||e.parentWindow:!1}var n,r,i=e.document,s=e.location,o=e.navigator,u=e.jQuery,a=e.$,f=Array.prototype.push,l=Array.prototype.slice,c=Array.prototype.indexOf,h=Object.prototype.toString,p=Object.prototype.hasOwnProperty,d=String.prototype.trim,v=function(e,t){return new v.fn.init(e,t,n)},m=/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,g=/\S/,y=/\s+/,b=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,w=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,E=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,S=/^[\],:{}\s]*$/,x=/(?:^|:|,)(?:\s*\[)+/g,T=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,N=/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,C=/^-ms-/,k=/-([\da-z])/gi,L=function(e,t){return(t+"").toUpperCase()},A=function(){i.addEventListener?(i.removeEventListener("DOMContentLoaded",A,!1),v.ready()):i.readyState==="complete"&&(i.detachEvent("onreadystatechange",A),v.ready())},O={};v.fn=v.prototype={constructor:v,init:function(e,n,r){var s,o,u,a;if(!e)return this;if(e.nodeType)return this.context=this[0]=e,this.length=1,this;if(typeof e=="string"){e.charAt(0)==="<"&&e.charAt(e.length-1)===">"&&e.length>=3?s=[null,e,null]:s=w.exec(e);if(s&&(s[1]||!n)){if(s[1])return n=n instanceof v?n[0]:n,a=n&&n.nodeType?n.ownerDocument||n:i,e=v.parseHTML(s[1],a,!0),E.test(s[1])&&v.isPlainObject(n)&&this.attr.call(e,n,!0),v.merge(this,e);o=i.getElementById(s[2]);if(o&&o.parentNode){if(o.id!==s[2])return r.find(e);this.length=1,this[0]=o}return this.context=i,this.selector=e,this}return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e)}return v.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),v.makeArray(e,this))},selector:"",jquery:"1.8.3",length:0,size:function(){return this.length},toArray:function(){return l.call(this)},get:function(e){return e==null?this.toArray():e<0?this[this.length+e]:this[e]},pushStack:function(e,t,n){var r=v.merge(this.constructor(),e);return r.prevObject=this,r.context=this.context,t==="find"?r.selector=this.selector+(this.selector?" ":"")+n:t&&(r.selector=this.selector+"."+t+"("+n+")"),r},each:function(e,t){return v.each(this,e,t)},ready:function(e){return v.ready.promise().done(e),this},eq:function(e){return e=+e,e===-1?this.slice(e):this.slice(e,e+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(l.apply(this,arguments),"slice",l.call(arguments).join(","))},map:function(e){return this.pushStack(v.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:[].sort,splice:[].splice},v.fn.init.prototype=v.fn,v.extend=v.fn.extend=function(){var e,n,r,i,s,o,u=arguments[0]||{},a=1,f=arguments.length,l=!1;typeof u=="boolean"&&(l=u,u=arguments[1]||{},a=2),typeof u!="object"&&!v.isFunction(u)&&(u={}),f===a&&(u=this,--a);for(;a<f;a++)if((e=arguments[a])!=null)for(n in e){r=u[n],i=e[n];if(u===i)continue;l&&i&&(v.isPlainObject(i)||(s=v.isArray(i)))?(s?(s=!1,o=r&&v.isArray(r)?r:[]):o=r&&v.isPlainObject(r)?r:{},u[n]=v.extend(l,o,i)):i!==t&&(u[n]=i)}return u},v.extend({noConflict:function(t){return e.$===v&&(e.$=a),t&&e.jQuery===v&&(e.jQuery=u),v},isReady:!1,readyWait:1,holdReady:function(e){e?v.readyWait++:v.ready(!0)},ready:function(e){if(e===!0?--v.readyWait:v.isReady)return;if(!i.body)return setTimeout(v.ready,1);v.isReady=!0;if(e!==!0&&--v.readyWait>0)return;r.resolveWith(i,[v]),v.fn.trigger&&v(i).trigger("ready").off("ready")},isFunction:function(e){return v.type(e)==="function"},isArray:Array.isArray||function(e){return v.type(e)==="array"},isWindow:function(e){return e!=null&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return e==null?String(e):O[h.call(e)]||"object"},isPlainObject:function(e){if(!e||v.type(e)!=="object"||e.nodeType||v.isWindow(e))return!1;try{if(e.constructor&&!p.call(e,"constructor")&&!p.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(n){return!1}var r;for(r in e);return r===t||p.call(e,r)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw new Error(e)},parseHTML:function(e,t,n){var r;return!e||typeof e!="string"?null:(typeof t=="boolean"&&(n=t,t=0),t=t||i,(r=E.exec(e))?[t.createElement(r[1])]:(r=v.buildFragment([e],t,n?null:[]),v.merge([],(r.cacheable?v.clone(r.fragment):r.fragment).childNodes)))},parseJSON:function(t){if(!t||typeof t!="string")return null;t=v.trim(t);if(e.JSON&&e.JSON.parse)return e.JSON.parse(t);if(S.test(t.replace(T,"@").replace(N,"]").replace(x,"")))return(new Function("return "+t))();v.error("Invalid JSON: "+t)},parseXML:function(n){var r,i;if(!n||typeof n!="string")return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,"text/xml")):(r=new ActiveXObject("Microsoft.XMLDOM"),r.async="false",r.loadXML(n))}catch(s){r=t}return(!r||!r.documentElement||r.getElementsByTagName("parsererror").length)&&v.error("Invalid XML: "+n),r},noop:function(){},globalEval:function(t){t&&g.test(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(C,"ms-").replace(k,L)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,n,r){var i,s=0,o=e.length,u=o===t||v.isFunction(e);if(r){if(u){for(i in e)if(n.apply(e[i],r)===!1)break}else for(;s<o;)if(n.apply(e[s++],r)===!1)break}else if(u){for(i in e)if(n.call(e[i],i,e[i])===!1)break}else for(;s<o;)if(n.call(e[s],s,e[s++])===!1)break;return e},trim:d&&!d.call("\ufeff\u00a0")?function(e){return e==null?"":d.call(e)}:function(e){return e==null?"":(e+"").replace(b,"")},makeArray:function(e,t){var n,r=t||[];return e!=null&&(n=v.type(e),e.length==null||n==="string"||n==="function"||n==="regexp"||v.isWindow(e)?f.call(r,e):v.merge(r,e)),r},inArray:function(e,t,n){var r;if(t){if(c)return c.call(t,e,n);r=t.length,n=n?n<0?Math.max(0,r+n):n:0;for(;n<r;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,s=0;if(typeof r=="number")for(;s<r;s++)e[i++]=n[s];else while(n[s]!==t)e[i++]=n[s++];return e.length=i,e},grep:function(e,t,n){var r,i=[],s=0,o=e.length;n=!!n;for(;s<o;s++)r=!!t(e[s],s),n!==r&&i.push(e[s]);return i},map:function(e,n,r){var i,s,o=[],u=0,a=e.length,f=e instanceof v||a!==t&&typeof a=="number"&&(a>0&&e[0]&&e[a-1]||a===0||v.isArray(e));if(f)for(;u<a;u++)i=n(e[u],u,r),i!=null&&(o[o.length]=i);else for(s in e)i=n(e[s],s,r),i!=null&&(o[o.length]=i);return o.concat.apply([],o)},guid:1,proxy:function(e,n){var r,i,s;return typeof n=="string"&&(r=e[n],n=e,e=r),v.isFunction(e)?(i=l.call(arguments,2),s=function(){return e.apply(n,i.concat(l.call(arguments)))},s.guid=e.guid=e.guid||v.guid++,s):t},access:function(e,n,r,i,s,o,u){var a,f=r==null,l=0,c=e.length;if(r&&typeof r=="object"){for(l in r)v.access(e,n,l,r[l],1,o,i);s=1}else if(i!==t){a=u===t&&v.isFunction(i),f&&(a?(a=n,n=function(e,t,n){return a.call(v(e),n)}):(n.call(e,i),n=null));if(n)for(;l<c;l++)n(e[l],r,a?i.call(e[l],l,n(e[l],r)):i,u);s=1}return s?e:f?n.call(e):c?n(e[0],r):o},now:function(){return(new Date).getTime()}}),v.ready.promise=function(t){if(!r){r=v.Deferred();if(i.readyState==="complete")setTimeout(v.ready,1);else if(i.addEventListener)i.addEventListener("DOMContentLoaded",A,!1),e.addEventListener("load",v.ready,!1);else{i.attachEvent("onreadystatechange",A),e.attachEvent("onload",v.ready);var n=!1;try{n=e.frameElement==null&&i.documentElement}catch(s){}n&&n.doScroll&&function o(){if(!v.isReady){try{n.doScroll("left")}catch(e){return setTimeout(o,50)}v.ready()}}()}}return r.promise(t)},v.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(e,t){O["[object "+t+"]"]=t.toLowerCase()}),n=v(i);var M={};v.Callbacks=function(e){e=typeof e=="string"?M[e]||_(e):v.extend({},e);var n,r,i,s,o,u,a=[],f=!e.once&&[],l=function(t){n=e.memory&&t,r=!0,u=s||0,s=0,o=a.length,i=!0;for(;a&&u<o;u++)if(a[u].apply(t[0],t[1])===!1&&e.stopOnFalse){n=!1;break}i=!1,a&&(f?f.length&&l(f.shift()):n?a=[]:c.disable())},c={add:function(){if(a){var t=a.length;(function r(t){v.each(t,function(t,n){var i=v.type(n);i==="function"?(!e.unique||!c.has(n))&&a.push(n):n&&n.length&&i!=="string"&&r(n)})})(arguments),i?o=a.length:n&&(s=t,l(n))}return this},remove:function(){return a&&v.each(arguments,function(e,t){var n;while((n=v.inArray(t,a,n))>-1)a.splice(n,1),i&&(n<=o&&o--,n<=u&&u--)}),this},has:function(e){return v.inArray(e,a)>-1},empty:function(){return a=[],this},disable:function(){return a=f=n=t,this},disabled:function(){return!a},lock:function(){return f=t,n||c.disable(),this},locked:function(){return!f},fireWith:function(e,t){return t=t||[],t=[e,t.slice?t.slice():t],a&&(!r||f)&&(i?f.push(t):l(t)),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!r}};return c},v.extend({Deferred:function(e){var t=[["resolve","done",v.Callbacks("once memory"),"resolved"],["reject","fail",v.Callbacks("once memory"),"rejected"],["notify","progress",v.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return v.Deferred(function(n){v.each(t,function(t,r){var s=r[0],o=e[t];i[r[1]](v.isFunction(o)?function(){var e=o.apply(this,arguments);e&&v.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[s+"With"](this===i?n:this,[e])}:n[s])}),e=null}).promise()},promise:function(e){return e!=null?v.extend(e,r):r}},i={};return r.pipe=r.then,v.each(t,function(e,s){var o=s[2],u=s[3];r[s[1]]=o.add,u&&o.add(function(){n=u},t[e^1][2].disable,t[2][2].lock),i[s[0]]=o.fire,i[s[0]+"With"]=o.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=l.call(arguments),r=n.length,i=r!==1||e&&v.isFunction(e.promise)?r:0,s=i===1?e:v.Deferred(),o=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?l.call(arguments):r,n===u?s.notifyWith(t,n):--i||s.resolveWith(t,n)}},u,a,f;if(r>1){u=new Array(r),a=new Array(r),f=new Array(r);for(;t<r;t++)n[t]&&v.isFunction(n[t].promise)?n[t].promise().done(o(t,f,n)).fail(s.reject).progress(o(t,a,u)):--i}return i||s.resolveWith(f,n),s.promise()}}),v.support=function(){var t,n,r,s,o,u,a,f,l,c,h,p=i.createElement("div");p.setAttribute("className","t"),p.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",n=p.getElementsByTagName("*"),r=p.getElementsByTagName("a")[0];if(!n||!r||!n.length)return{};s=i.createElement("select"),o=s.appendChild(i.createElement("option")),u=p.getElementsByTagName("input")[0],r.style.cssText="top:1px;float:left;opacity:.5",t={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:/top/.test(r.getAttribute("style")),hrefNormalized:r.getAttribute("href")==="/a",opacity:/^0.5/.test(r.style.opacity),cssFloat:!!r.style.cssFloat,checkOn:u.value==="on",optSelected:o.selected,getSetAttribute:p.className!=="t",enctype:!!i.createElement("form").enctype,html5Clone:i.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",boxModel:i.compatMode==="CSS1Compat",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},u.checked=!0,t.noCloneChecked=u.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!o.disabled;try{delete p.test}catch(d){t.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",h=function(){t.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick"),p.detachEvent("onclick",h)),u=i.createElement("input"),u.value="t",u.setAttribute("type","radio"),t.radioValue=u.value==="t",u.setAttribute("checked","checked"),u.setAttribute("name","t"),p.appendChild(u),a=i.createDocumentFragment(),a.appendChild(p.lastChild),t.checkClone=a.cloneNode(!0).cloneNode(!0).lastChild.checked,t.appendChecked=u.checked,a.removeChild(u),a.appendChild(p);if(p.attachEvent)for(l in{submit:!0,change:!0,focusin:!0})f="on"+l,c=f in p,c||(p.setAttribute(f,"return;"),c=typeof p[f]=="function"),t[l+"Bubbles"]=c;return v(function(){var n,r,s,o,u="padding:0;margin:0;border:0;display:block;overflow:hidden;",a=i.getElementsByTagName("body")[0];if(!a)return;n=i.createElement("div"),n.style.cssText="visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",a.insertBefore(n,a.firstChild),r=i.createElement("div"),n.appendChild(r),r.innerHTML="<table><tr><td></td><td>t</td></tr></table>",s=r.getElementsByTagName("td"),s[0].style.cssText="padding:0;margin:0;border:0;display:none",c=s[0].offsetHeight===0,s[0].style.display="",s[1].style.display="none",t.reliableHiddenOffsets=c&&s[0].offsetHeight===0,r.innerHTML="",r.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",t.boxSizing=r.offsetWidth===4,t.doesNotIncludeMarginInBodyOffset=a.offsetTop!==1,e.getComputedStyle&&(t.pixelPosition=(e.getComputedStyle(r,null)||{}).top!=="1%",t.boxSizingReliable=(e.getComputedStyle(r,null)||{width:"4px"}).width==="4px",o=i.createElement("div"),o.style.cssText=r.style.cssText=u,o.style.marginRight=o.style.width="0",r.style.width="1px",r.appendChild(o),t.reliableMarginRight=!parseFloat((e.getComputedStyle(o,null)||{}).marginRight)),typeof r.style.zoom!="undefined"&&(r.innerHTML="",r.style.cssText=u+"width:1px;padding:1px;display:inline;zoom:1",t.inlineBlockNeedsLayout=r.offsetWidth===3,r.style.display="block",r.style.overflow="visible",r.innerHTML="<div></div>",r.firstChild.style.width="5px",t.shrinkWrapBlocks=r.offsetWidth!==3,n.style.zoom=1),a.removeChild(n),n=r=s=o=null}),a.removeChild(p),n=r=s=o=u=a=p=null,t}();var D=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,P=/([A-Z])/g;v.extend({cache:{},deletedIds:[],uuid:0,expando:"jQuery"+(v.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(e){return e=e.nodeType?v.cache[e[v.expando]]:e[v.expando],!!e&&!B(e)},data:function(e,n,r,i){if(!v.acceptData(e))return;var s,o,u=v.expando,a=typeof n=="string",f=e.nodeType,l=f?v.cache:e,c=f?e[u]:e[u]&&u;if((!c||!l[c]||!i&&!l[c].data)&&a&&r===t)return;c||(f?e[u]=c=v.deletedIds.pop()||v.guid++:c=u),l[c]||(l[c]={},f||(l[c].toJSON=v.noop));if(typeof n=="object"||typeof n=="function")i?l[c]=v.extend(l[c],n):l[c].data=v.extend(l[c].data,n);return s=l[c],i||(s.data||(s.data={}),s=s.data),r!==t&&(s[v.camelCase(n)]=r),a?(o=s[n],o==null&&(o=s[v.camelCase(n)])):o=s,o},removeData:function(e,t,n){if(!v.acceptData(e))return;var r,i,s,o=e.nodeType,u=o?v.cache:e,a=o?e[v.expando]:v.expando;if(!u[a])return;if(t){r=n?u[a]:u[a].data;if(r){v.isArray(t)||(t in r?t=[t]:(t=v.camelCase(t),t in r?t=[t]:t=t.split(" ")));for(i=0,s=t.length;i<s;i++)delete r[t[i]];if(!(n?B:v.isEmptyObject)(r))return}}if(!n){delete u[a].data;if(!B(u[a]))return}o?v.cleanData([e],!0):v.support.deleteExpando||u!=u.window?delete u[a]:u[a]=null},_data:function(e,t,n){return v.data(e,t,n,!0)},acceptData:function(e){var t=e.nodeName&&v.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute("classid")===t}}),v.fn.extend({data:function(e,n){var r,i,s,o,u,a=this[0],f=0,l=null;if(e===t){if(this.length){l=v.data(a);if(a.nodeType===1&&!v._data(a,"parsedAttrs")){s=a.attributes;for(u=s.length;f<u;f++)o=s[f].name,o.indexOf("data-")||(o=v.camelCase(o.substring(5)),H(a,o,l[o]));v._data(a,"parsedAttrs",!0)}}return l}return typeof e=="object"?this.each(function(){v.data(this,e)}):(r=e.split(".",2),r[1]=r[1]?"."+r[1]:"",i=r[1]+"!",v.access(this,function(n){if(n===t)return l=this.triggerHandler("getData"+i,[r[0]]),l===t&&a&&(l=v.data(a,e),l=H(a,e,l)),l===t&&r[1]?this.data(r[0]):l;r[1]=n,this.each(function(){var t=v(this);t.triggerHandler("setData"+i,r),v.data(this,e,n),t.triggerHandler("changeData"+i,r)})},null,n,arguments.length>1,null,!1))},removeData:function(e){return this.each(function(){v.removeData(this,e)})}}),v.extend({queue:function(e,t,n){var r;if(e)return t=(t||"fx")+"queue",r=v._data(e,t),n&&(!r||v.isArray(n)?r=v._data(e,t,v.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||"fx";var n=v.queue(e,t),r=n.length,i=n.shift(),s=v._queueHooks(e,t),o=function(){v.dequeue(e,t)};i==="inprogress"&&(i=n.shift(),r--),i&&(t==="fx"&&n.unshift("inprogress"),delete s.stop,i.call(e,o,s)),!r&&s&&s.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return v._data(e,n)||v._data(e,n,{empty:v.Callbacks("once memory").add(function(){v.removeData(e,t+"queue",!0),v.removeData(e,n,!0)})})}}),v.fn.extend({queue:function(e,n){var r=2;return typeof e!="string"&&(n=e,e="fx",r--),arguments.length<r?v.queue(this[0],e):n===t?this:this.each(function(){var t=v.queue(this,e,n);v._queueHooks(this,e),e==="fx"&&t[0]!=="inprogress"&&v.dequeue(this,e)})},dequeue:function(e){return this.each(function(){v.dequeue(this,e)})},delay:function(e,t){return e=v.fx?v.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,n){var r,i=1,s=v.Deferred(),o=this,u=this.length,a=function(){--i||s.resolveWith(o,[o])};typeof e!="string"&&(n=e,e=t),e=e||"fx";while(u--)r=v._data(o[u],e+"queueHooks"),r&&r.empty&&(i++,r.empty.add(a));return a(),s.promise(n)}});var j,F,I,q=/[\t\r\n]/g,R=/\r/g,U=/^(?:button|input)$/i,z=/^(?:button|input|object|select|textarea)$/i,W=/^a(?:rea|)$/i,X=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,V=v.support.getSetAttribute;v.fn.extend({attr:function(e,t){return v.access(this,v.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){v.removeAttr(this,e)})},prop:function(e,t){return v.access(this,v.prop,e,t,arguments.length>1)},removeProp:function(e){return e=v.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,s,o,u;if(v.isFunction(e))return this.each(function(t){v(this).addClass(e.call(this,t,this.className))});if(e&&typeof e=="string"){t=e.split(y);for(n=0,r=this.length;n<r;n++){i=this[n];if(i.nodeType===1)if(!i.className&&t.length===1)i.className=e;else{s=" "+i.className+" ";for(o=0,u=t.length;o<u;o++)s.indexOf(" "+t[o]+" ")<0&&(s+=t[o]+" ");i.className=v.trim(s)}}}return this},removeClass:function(e){var n,r,i,s,o,u,a;if(v.isFunction(e))return this.each(function(t){v(this).removeClass(e.call(this,t,this.className))});if(e&&typeof e=="string"||e===t){n=(e||"").split(y);for(u=0,a=this.length;u<a;u++){i=this[u];if(i.nodeType===1&&i.className){r=(" "+i.className+" ").replace(q," ");for(s=0,o=n.length;s<o;s++)while(r.indexOf(" "+n[s]+" ")>=0)r=r.replace(" "+n[s]+" "," ");i.className=e?v.trim(r):""}}}return this},toggleClass:function(e,t){var n=typeof e,r=typeof t=="boolean";return v.isFunction(e)?this.each(function(n){v(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if(n==="string"){var i,s=0,o=v(this),u=t,a=e.split(y);while(i=a[s++])u=r?u:!o.hasClass(i),o[u?"addClass":"removeClass"](i)}else if(n==="undefined"||n==="boolean")this.className&&v._data(this,"__className__",this.className),this.className=this.className||e===!1?"":v._data(this,"__className__")||""})},hasClass:function(e){var t=" "+e+" ",n=0,r=this.length;for(;n<r;n++)if(this[n].nodeType===1&&(" "+this[n].className+" ").replace(q," ").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,s=this[0];if(!arguments.length){if(s)return n=v.valHooks[s.type]||v.valHooks[s.nodeName.toLowerCase()],n&&"get"in n&&(r=n.get(s,"value"))!==t?r:(r=s.value,typeof r=="string"?r.replace(R,""):r==null?"":r);return}return i=v.isFunction(e),this.each(function(r){var s,o=v(this);if(this.nodeType!==1)return;i?s=e.call(this,r,o.val()):s=e,s==null?s="":typeof s=="number"?s+="":v.isArray(s)&&(s=v.map(s,function(e){return e==null?"":e+""})),n=v.valHooks[this.type]||v.valHooks[this.nodeName.toLowerCase()];if(!n||!("set"in n)||n.set(this,s,"value")===t)this.value=s})}}),v.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,s=e.type==="select-one"||i<0,o=s?null:[],u=s?i+1:r.length,a=i<0?u:s?i:0;for(;a<u;a++){n=r[a];if((n.selected||a===i)&&(v.support.optDisabled?!n.disabled:n.getAttribute("disabled")===null)&&(!n.parentNode.disabled||!v.nodeName(n.parentNode,"optgroup"))){t=v(n).val();if(s)return t;o.push(t)}}return o},set:function(e,t){var n=v.makeArray(t);return v(e).find("option").each(function(){this.selected=v.inArray(v(this).val(),n)>=0}),n.length||(e.selectedIndex=-1),n}}},attrFn:{},attr:function(e,n,r,i){var s,o,u,a=e.nodeType;if(!e||a===3||a===8||a===2)return;if(i&&v.isFunction(v.fn[n]))return v(e)[n](r);if(typeof e.getAttribute=="undefined")return v.prop(e,n,r);u=a!==1||!v.isXMLDoc(e),u&&(n=n.toLowerCase(),o=v.attrHooks[n]||(X.test(n)?F:j));if(r!==t){if(r===null){v.removeAttr(e,n);return}return o&&"set"in o&&u&&(s=o.set(e,r,n))!==t?s:(e.setAttribute(n,r+""),r)}return o&&"get"in o&&u&&(s=o.get(e,n))!==null?s:(s=e.getAttribute(n),s===null?t:s)},removeAttr:function(e,t){var n,r,i,s,o=0;if(t&&e.nodeType===1){r=t.split(y);for(;o<r.length;o++)i=r[o],i&&(n=v.propFix[i]||i,s=X.test(i),s||v.attr(e,i,""),e.removeAttribute(V?i:n),s&&n in e&&(e[n]=!1))}},attrHooks:{type:{set:function(e,t){if(U.test(e.nodeName)&&e.parentNode)v.error("type property can't be changed");else if(!v.support.radioValue&&t==="radio"&&v.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}},value:{get:function(e,t){return j&&v.nodeName(e,"button")?j.get(e,t):t in e?e.value:null},set:function(e,t,n){if(j&&v.nodeName(e,"button"))return j.set(e,t,n);e.value=t}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(e,n,r){var i,s,o,u=e.nodeType;if(!e||u===3||u===8||u===2)return;return o=u!==1||!v.isXMLDoc(e),o&&(n=v.propFix[n]||n,s=v.propHooks[n]),r!==t?s&&"set"in s&&(i=s.set(e,r,n))!==t?i:e[n]=r:s&&"get"in s&&(i=s.get(e,n))!==null?i:e[n]},propHooks:{tabIndex:{get:function(e){var n=e.getAttributeNode("tabindex");return n&&n.specified?parseInt(n.value,10):z.test(e.nodeName)||W.test(e.nodeName)&&e.href?0:t}}}}),F={get:function(e,n){var r,i=v.prop(e,n);return i===!0||typeof i!="boolean"&&(r=e.getAttributeNode(n))&&r.nodeValue!==!1?n.toLowerCase():t},set:function(e,t,n){var r;return t===!1?v.removeAttr(e,n):(r=v.propFix[n]||n,r in e&&(e[r]=!0),e.setAttribute(n,n.toLowerCase())),n}},V||(I={name:!0,id:!0,coords:!0},j=v.valHooks.button={get:function(e,n){var r;return r=e.getAttributeNode(n),r&&(I[n]?r.value!=="":r.specified)?r.value:t},set:function(e,t,n){var r=e.getAttributeNode(n);return r||(r=i.createAttribute(n),e.setAttributeNode(r)),r.value=t+""}},v.each(["width","height"],function(e,t){v.attrHooks[t]=v.extend(v.attrHooks[t],{set:function(e,n){if(n==="")return e.setAttribute(t,"auto"),n}})}),v.attrHooks.contenteditable={get:j.get,set:function(e,t,n){t===""&&(t="false"),j.set(e,t,n)}}),v.support.hrefNormalized||v.each(["href","src","width","height"],function(e,n){v.attrHooks[n]=v.extend(v.attrHooks[n],{get:function(e){var r=e.getAttribute(n,2);return r===null?t:r}})}),v.support.style||(v.attrHooks.style={get:function(e){return e.style.cssText.toLowerCase()||t},set:function(e,t){return e.style.cssText=t+""}}),v.support.optSelected||(v.propHooks.selected=v.extend(v.propHooks.selected,{get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),v.support.enctype||(v.propFix.enctype="encoding"),v.support.checkOn||v.each(["radio","checkbox"],function(){v.valHooks[this]={get:function(e){return e.getAttribute("value")===null?"on":e.value}}}),v.each(["radio","checkbox"],function(){v.valHooks[this]=v.extend(v.valHooks[this],{set:function(e,t){if(v.isArray(t))return e.checked=v.inArray(v(e).val(),t)>=0}})});var $=/^(?:textarea|input|select)$/i,J=/^([^\.]*|)(?:\.(.+)|)$/,K=/(?:^|\s)hover(\.\S+|)\b/,Q=/^key/,G=/^(?:mouse|contextmenu)|click/,Y=/^(?:focusinfocus|focusoutblur)$/,Z=function(e){return v.event.special.hover?e:e.replace(K,"mouseenter$1 mouseleave$1")};v.event={add:function(e,n,r,i,s){var o,u,a,f,l,c,h,p,d,m,g;if(e.nodeType===3||e.nodeType===8||!n||!r||!(o=v._data(e)))return;r.handler&&(d=r,r=d.handler,s=d.selector),r.guid||(r.guid=v.guid++),a=o.events,a||(o.events=a={}),u=o.handle,u||(o.handle=u=function(e){return typeof v=="undefined"||!!e&&v.event.triggered===e.type?t:v.event.dispatch.apply(u.elem,arguments)},u.elem=e),n=v.trim(Z(n)).split(" ");for(f=0;f<n.length;f++){l=J.exec(n[f])||[],c=l[1],h=(l[2]||"").split(".").sort(),g=v.event.special[c]||{},c=(s?g.delegateType:g.bindType)||c,g=v.event.special[c]||{},p=v.extend({type:c,origType:l[1],data:i,handler:r,guid:r.guid,selector:s,needsContext:s&&v.expr.match.needsContext.test(s),namespace:h.join(".")},d),m=a[c];if(!m){m=a[c]=[],m.delegateCount=0;if(!g.setup||g.setup.call(e,i,h,u)===!1)e.addEventListener?e.addEventListener(c,u,!1):e.attachEvent&&e.attachEvent("on"+c,u)}g.add&&(g.add.call(e,p),p.handler.guid||(p.handler.guid=r.guid)),s?m.splice(m.delegateCount++,0,p):m.push(p),v.event.global[c]=!0}e=null},global:{},remove:function(e,t,n,r,i){var s,o,u,a,f,l,c,h,p,d,m,g=v.hasData(e)&&v._data(e);if(!g||!(h=g.events))return;t=v.trim(Z(t||"")).split(" ");for(s=0;s<t.length;s++){o=J.exec(t[s])||[],u=a=o[1],f=o[2];if(!u){for(u in h)v.event.remove(e,u+t[s],n,r,!0);continue}p=v.event.special[u]||{},u=(r?p.delegateType:p.bindType)||u,d=h[u]||[],l=d.length,f=f?new RegExp("(^|\\.)"+f.split(".").sort().join("\\.(?:.*\\.|)")+"(\\.|$)"):null;for(c=0;c<d.length;c++)m=d[c],(i||a===m.origType)&&(!n||n.guid===m.guid)&&(!f||f.test(m.namespace))&&(!r||r===m.selector||r==="**"&&m.selector)&&(d.splice(c--,1),m.selector&&d.delegateCount--,p.remove&&p.remove.call(e,m));d.length===0&&l!==d.length&&((!p.teardown||p.teardown.call(e,f,g.handle)===!1)&&v.removeEvent(e,u,g.handle),delete h[u])}v.isEmptyObject(h)&&(delete g.handle,v.removeData(e,"events",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(n,r,s,o){if(!s||s.nodeType!==3&&s.nodeType!==8){var u,a,f,l,c,h,p,d,m,g,y=n.type||n,b=[];if(Y.test(y+v.event.triggered))return;y.indexOf("!")>=0&&(y=y.slice(0,-1),a=!0),y.indexOf(".")>=0&&(b=y.split("."),y=b.shift(),b.sort());if((!s||v.event.customEvent[y])&&!v.event.global[y])return;n=typeof n=="object"?n[v.expando]?n:new v.Event(y,n):new v.Event(y),n.type=y,n.isTrigger=!0,n.exclusive=a,n.namespace=b.join("."),n.namespace_re=n.namespace?new RegExp("(^|\\.)"+b.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,h=y.indexOf(":")<0?"on"+y:"";if(!s){u=v.cache;for(f in u)u[f].events&&u[f].events[y]&&v.event.trigger(n,r,u[f].handle.elem,!0);return}n.result=t,n.target||(n.target=s),r=r!=null?v.makeArray(r):[],r.unshift(n),p=v.event.special[y]||{};if(p.trigger&&p.trigger.apply(s,r)===!1)return;m=[[s,p.bindType||y]];if(!o&&!p.noBubble&&!v.isWindow(s)){g=p.delegateType||y,l=Y.test(g+y)?s:s.parentNode;for(c=s;l;l=l.parentNode)m.push([l,g]),c=l;c===(s.ownerDocument||i)&&m.push([c.defaultView||c.parentWindow||e,g])}for(f=0;f<m.length&&!n.isPropagationStopped();f++)l=m[f][0],n.type=m[f][1],d=(v._data(l,"events")||{})[n.type]&&v._data(l,"handle"),d&&d.apply(l,r),d=h&&l[h],d&&v.acceptData(l)&&d.apply&&d.apply(l,r)===!1&&n.preventDefault();return n.type=y,!o&&!n.isDefaultPrevented()&&(!p._default||p._default.apply(s.ownerDocument,r)===!1)&&(y!=="click"||!v.nodeName(s,"a"))&&v.acceptData(s)&&h&&s[y]&&(y!=="focus"&&y!=="blur"||n.target.offsetWidth!==0)&&!v.isWindow(s)&&(c=s[h],c&&(s[h]=null),v.event.triggered=y,s[y](),v.event.triggered=t,c&&(s[h]=c)),n.result}return},dispatch:function(n){n=v.event.fix(n||e.event);var r,i,s,o,u,a,f,c,h,p,d=(v._data(this,"events")||{})[n.type]||[],m=d.delegateCount,g=l.call(arguments),y=!n.exclusive&&!n.namespace,b=v.event.special[n.type]||{},w=[];g[0]=n,n.delegateTarget=this;if(b.preDispatch&&b.preDispatch.call(this,n)===!1)return;if(m&&(!n.button||n.type!=="click"))for(s=n.target;s!=this;s=s.parentNode||this)if(s.disabled!==!0||n.type!=="click"){u={},f=[];for(r=0;r<m;r++)c=d[r],h=c.selector,u[h]===t&&(u[h]=c.needsContext?v(h,this).index(s)>=0:v.find(h,this,null,[s]).length),u[h]&&f.push(c);f.length&&w.push({elem:s,matches:f})}d.length>m&&w.push({elem:this,matches:d.slice(m)});for(r=0;r<w.length&&!n.isPropagationStopped();r++){a=w[r],n.currentTarget=a.elem;for(i=0;i<a.matches.length&&!n.isImmediatePropagationStopped();i++){c=a.matches[i];if(y||!n.namespace&&!c.namespace||n.namespace_re&&n.namespace_re.test(c.namespace))n.data=c.data,n.handleObj=c,o=((v.event.special[c.origType]||{}).handle||c.handler).apply(a.elem,g),o!==t&&(n.result=o,o===!1&&(n.preventDefault(),n.stopPropagation()))}}return b.postDispatch&&b.postDispatch.call(this,n),n.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return e.which==null&&(e.which=t.charCode!=null?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,n){var r,s,o,u=n.button,a=n.fromElement;return e.pageX==null&&n.clientX!=null&&(r=e.target.ownerDocument||i,s=r.documentElement,o=r.body,e.pageX=n.clientX+(s&&s.scrollLeft||o&&o.scrollLeft||0)-(s&&s.clientLeft||o&&o.clientLeft||0),e.pageY=n.clientY+(s&&s.scrollTop||o&&o.scrollTop||0)-(s&&s.clientTop||o&&o.clientTop||0)),!e.relatedTarget&&a&&(e.relatedTarget=a===e.target?n.toElement:a),!e.which&&u!==t&&(e.which=u&1?1:u&2?3:u&4?2:0),e}},fix:function(e){if(e[v.expando])return e;var t,n,r=e,s=v.event.fixHooks[e.type]||{},o=s.props?this.props.concat(s.props):this.props;e=v.Event(r);for(t=o.length;t;)n=o[--t],e[n]=r[n];return e.target||(e.target=r.srcElement||i),e.target.nodeType===3&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,r):e},special:{load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(e,t,n){v.isWindow(this)&&(this.onbeforeunload=n)},teardown:function(e,t){this.onbeforeunload===t&&(this.onbeforeunload=null)}}},simulate:function(e,t,n,r){var i=v.extend(new v.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?v.event.trigger(i,null,t):v.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},v.event.handle=v.event.dispatch,v.removeEvent=i.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r="on"+t;e.detachEvent&&(typeof e[r]=="undefined"&&(e[r]=null),e.detachEvent(r,n))},v.Event=function(e,t){if(!(this instanceof v.Event))return new v.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?tt:et):this.type=e,t&&v.extend(this,t),this.timeStamp=e&&e.timeStamp||v.now(),this[v.expando]=!0},v.Event.prototype={preventDefault:function(){this.isDefaultPrevented=tt;var e=this.originalEvent;if(!e)return;e.preventDefault?e.preventDefault():e.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=tt;var e=this.originalEvent;if(!e)return;e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=tt,this.stopPropagation()},isDefaultPrevented:et,isPropagationStopped:et,isImmediatePropagationStopped:et},v.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(e,t){v.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,s=e.handleObj,o=s.selector;if(!i||i!==r&&!v.contains(r,i))e.type=s.origType,n=s.handler.apply(this,arguments),e.type=t;return n}}}),v.support.submitBubbles||(v.event.special.submit={setup:function(){if(v.nodeName(this,"form"))return!1;v.event.add(this,"click._submit keypress._submit",function(e){var n=e.target,r=v.nodeName(n,"input")||v.nodeName(n,"button")?n.form:t;r&&!v._data(r,"_submit_attached")&&(v.event.add(r,"submit._submit",function(e){e._submit_bubble=!0}),v._data(r,"_submit_attached",!0))})},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&v.event.simulate("submit",this.parentNode,e,!0))},teardown:function(){if(v.nodeName(this,"form"))return!1;v.event.remove(this,"._submit")}}),v.support.changeBubbles||(v.event.special.change={setup:function(){if($.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")v.event.add(this,"propertychange._change",function(e){e.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),v.event.add(this,"click._change",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),v.event.simulate("change",this,e,!0)});return!1}v.event.add(this,"beforeactivate._change",function(e){var t=e.target;$.test(t.nodeName)&&!v._data(t,"_change_attached")&&(v.event.add(t,"change._change",function(e){this.parentNode&&!e.isSimulated&&!e.isTrigger&&v.event.simulate("change",this.parentNode,e,!0)}),v._data(t,"_change_attached",!0))})},handle:function(e){var t=e.target;if(this!==t||e.isSimulated||e.isTrigger||t.type!=="radio"&&t.type!=="checkbox")return e.handleObj.handler.apply(this,arguments)},teardown:function(){return v.event.remove(this,"._change"),!$.test(this.nodeName)}}),v.support.focusinBubbles||v.each({focus:"focusin",blur:"focusout"},function(e,t){var n=0,r=function(e){v.event.simulate(t,e.target,v.event.fix(e),!0)};v.event.special[t]={setup:function(){n++===0&&i.addEventListener(e,r,!0)},teardown:function(){--n===0&&i.removeEventListener(e,r,!0)}}}),v.fn.extend({on:function(e,n,r,i,s){var o,u;if(typeof e=="object"){typeof n!="string"&&(r=r||n,n=t);for(u in e)this.on(u,n,r,e[u],s);return this}r==null&&i==null?(i=n,r=n=t):i==null&&(typeof n=="string"?(i=r,r=t):(i=r,r=n,n=t));if(i===!1)i=et;else if(!i)return this;return s===1&&(o=i,i=function(e){return v().off(e),o.apply(this,arguments)},i.guid=o.guid||(o.guid=v.guid++)),this.each(function(){v.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,s;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,v(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if(typeof e=="object"){for(s in e)this.off(s,n,e[s]);return this}if(n===!1||typeof n=="function")r=n,n=t;return r===!1&&(r=et),this.each(function(){v.event.remove(this,e,r,n)})},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},live:function(e,t,n){return v(this.context).on(e,this.selector,t,n),this},die:function(e,t){return v(this.context).off(e,this.selector||"**",t),this},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return arguments.length===1?this.off(e,"**"):this.off(t,e||"**",n)},trigger:function(e,t){return this.each(function(){v.event.trigger(e,t,this)})},triggerHandler:function(e,t){if(this[0])return v.event.trigger(e,t,this[0],!0)},toggle:function(e){var t=arguments,n=e.guid||v.guid++,r=0,i=function(n){var i=(v._data(this,"lastToggle"+e.guid)||0)%r;return v._data(this,"lastToggle"+e.guid,i+1),n.preventDefault(),t[i].apply(this,arguments)||!1};i.guid=n;while(r<t.length)t[r++].guid=n;return this.click(i)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),v.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){v.fn[t]=function(e,n){return n==null&&(n=e,e=null),arguments.length>0?this.on(t,null,e,n):this.trigger(t)},Q.test(t)&&(v.event.fixHooks[t]=v.event.keyHooks),G.test(t)&&(v.event.fixHooks[t]=v.event.mouseHooks)}),function(e,t){function nt(e,t,n,r){n=n||[],t=t||g;var i,s,a,f,l=t.nodeType;if(!e||typeof e!="string")return n;if(l!==1&&l!==9)return[];a=o(t);if(!a&&!r)if(i=R.exec(e))if(f=i[1]){if(l===9){s=t.getElementById(f);if(!s||!s.parentNode)return n;if(s.id===f)return n.push(s),n}else if(t.ownerDocument&&(s=t.ownerDocument.getElementById(f))&&u(t,s)&&s.id===f)return n.push(s),n}else{if(i[2])return S.apply(n,x.call(t.getElementsByTagName(e),0)),n;if((f=i[3])&&Z&&t.getElementsByClassName)return S.apply(n,x.call(t.getElementsByClassName(f),0)),n}return vt(e.replace(j,"$1"),t,n,r,a)}function rt(e){return function(t){var n=t.nodeName.toLowerCase();return n==="input"&&t.type===e}}function it(e){return function(t){var n=t.nodeName.toLowerCase();return(n==="input"||n==="button")&&t.type===e}}function st(e){return N(function(t){return t=+t,N(function(n,r){var i,s=e([],n.length,t),o=s.length;while(o--)n[i=s[o]]&&(n[i]=!(r[i]=n[i]))})})}function ot(e,t,n){if(e===t)return n;var r=e.nextSibling;while(r){if(r===t)return-1;r=r.nextSibling}return 1}function ut(e,t){var n,r,s,o,u,a,f,l=L[d][e+" "];if(l)return t?0:l.slice(0);u=e,a=[],f=i.preFilter;while(u){if(!n||(r=F.exec(u)))r&&(u=u.slice(r[0].length)||u),a.push(s=[]);n=!1;if(r=I.exec(u))s.push(n=new m(r.shift())),u=u.slice(n.length),n.type=r[0].replace(j," ");for(o in i.filter)(r=J[o].exec(u))&&(!f[o]||(r=f[o](r)))&&(s.push(n=new m(r.shift())),u=u.slice(n.length),n.type=o,n.matches=r);if(!n)break}return t?u.length:u?nt.error(e):L(e,a).slice(0)}function at(e,t,r){var i=t.dir,s=r&&t.dir==="parentNode",o=w++;return t.first?function(t,n,r){while(t=t[i])if(s||t.nodeType===1)return e(t,n,r)}:function(t,r,u){if(!u){var a,f=b+" "+o+" ",l=f+n;while(t=t[i])if(s||t.nodeType===1){if((a=t[d])===l)return t.sizset;if(typeof a=="string"&&a.indexOf(f)===0){if(t.sizset)return t}else{t[d]=l;if(e(t,r,u))return t.sizset=!0,t;t.sizset=!1}}}else while(t=t[i])if(s||t.nodeType===1)if(e(t,r,u))return t}}function ft(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function lt(e,t,n,r,i){var s,o=[],u=0,a=e.length,f=t!=null;for(;u<a;u++)if(s=e[u])if(!n||n(s,r,i))o.push(s),f&&t.push(u);return o}function ct(e,t,n,r,i,s){return r&&!r[d]&&(r=ct(r)),i&&!i[d]&&(i=ct(i,s)),N(function(s,o,u,a){var f,l,c,h=[],p=[],d=o.length,v=s||dt(t||"*",u.nodeType?[u]:u,[]),m=e&&(s||!t)?lt(v,h,e,u,a):v,g=n?i||(s?e:d||r)?[]:o:m;n&&n(m,g,u,a);if(r){f=lt(g,p),r(f,[],u,a),l=f.length;while(l--)if(c=f[l])g[p[l]]=!(m[p[l]]=c)}if(s){if(i||e){if(i){f=[],l=g.length;while(l--)(c=g[l])&&f.push(m[l]=c);i(null,g=[],f,a)}l=g.length;while(l--)(c=g[l])&&(f=i?T.call(s,c):h[l])>-1&&(s[f]=!(o[f]=c))}}else g=lt(g===o?g.splice(d,g.length):g),i?i(null,o,g,a):S.apply(o,g)})}function ht(e){var t,n,r,s=e.length,o=i.relative[e[0].type],u=o||i.relative[" "],a=o?1:0,f=at(function(e){return e===t},u,!0),l=at(function(e){return T.call(t,e)>-1},u,!0),h=[function(e,n,r){return!o&&(r||n!==c)||((t=n).nodeType?f(e,n,r):l(e,n,r))}];for(;a<s;a++)if(n=i.relative[e[a].type])h=[at(ft(h),n)];else{n=i.filter[e[a].type].apply(null,e[a].matches);if(n[d]){r=++a;for(;r<s;r++)if(i.relative[e[r].type])break;return ct(a>1&&ft(h),a>1&&e.slice(0,a-1).join("").replace(j,"$1"),n,a<r&&ht(e.slice(a,r)),r<s&&ht(e=e.slice(r)),r<s&&e.join(""))}h.push(n)}return ft(h)}function pt(e,t){var r=t.length>0,s=e.length>0,o=function(u,a,f,l,h){var p,d,v,m=[],y=0,w="0",x=u&&[],T=h!=null,N=c,C=u||s&&i.find.TAG("*",h&&a.parentNode||a),k=b+=N==null?1:Math.E;T&&(c=a!==g&&a,n=o.el);for(;(p=C[w])!=null;w++){if(s&&p){for(d=0;v=e[d];d++)if(v(p,a,f)){l.push(p);break}T&&(b=k,n=++o.el)}r&&((p=!v&&p)&&y--,u&&x.push(p))}y+=w;if(r&&w!==y){for(d=0;v=t[d];d++)v(x,m,a,f);if(u){if(y>0)while(w--)!x[w]&&!m[w]&&(m[w]=E.call(l));m=lt(m)}S.apply(l,m),T&&!u&&m.length>0&&y+t.length>1&&nt.uniqueSort(l)}return T&&(b=k,c=N),x};return o.el=0,r?N(o):o}function dt(e,t,n){var r=0,i=t.length;for(;r<i;r++)nt(e,t[r],n);return n}function vt(e,t,n,r,s){var o,u,f,l,c,h=ut(e),p=h.length;if(!r&&h.length===1){u=h[0]=h[0].slice(0);if(u.length>2&&(f=u[0]).type==="ID"&&t.nodeType===9&&!s&&i.relative[u[1].type]){t=i.find.ID(f.matches[0].replace($,""),t,s)[0];if(!t)return n;e=e.slice(u.shift().length)}for(o=J.POS.test(e)?-1:u.length-1;o>=0;o--){f=u[o];if(i.relative[l=f.type])break;if(c=i.find[l])if(r=c(f.matches[0].replace($,""),z.test(u[0].type)&&t.parentNode||t,s)){u.splice(o,1),e=r.length&&u.join("");if(!e)return S.apply(n,x.call(r,0)),n;break}}}return a(e,h)(r,t,s,n,z.test(e)),n}function mt(){}var n,r,i,s,o,u,a,f,l,c,h=!0,p="undefined",d=("sizcache"+Math.random()).replace(".",""),m=String,g=e.document,y=g.documentElement,b=0,w=0,E=[].pop,S=[].push,x=[].slice,T=[].indexOf||function(e){var t=0,n=this.length;for(;t<n;t++)if(this[t]===e)return t;return-1},N=function(e,t){return e[d]=t==null||t,e},C=function(){var e={},t=[];return N(function(n,r){return t.push(n)>i.cacheLength&&delete e[t.shift()],e[n+" "]=r},e)},k=C(),L=C(),A=C(),O="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",_=M.replace("w","w#"),D="([*^$|!~]?=)",P="\\["+O+"*("+M+")"+O+"*(?:"+D+O+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+_+")|)|)"+O+"*\\]",H=":("+M+")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:"+P+")|[^:]|\\\\.)*|.*))\\)|)",B=":(even|odd|eq|gt|lt|nth|first|last)(?:\\("+O+"*((?:-\\d)?\\d*)"+O+"*\\)|)(?=[^-]|$)",j=new RegExp("^"+O+"+|((?:^|[^\\\\])(?:\\\\.)*)"+O+"+$","g"),F=new RegExp("^"+O+"*,"+O+"*"),I=new RegExp("^"+O+"*([\\x20\\t\\r\\n\\f>+~])"+O+"*"),q=new RegExp(H),R=/^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,U=/^:not/,z=/[\x20\t\r\n\f]*[+~]/,W=/:not\($/,X=/h\d/i,V=/input|select|textarea|button/i,$=/\\(?!\\)/g,J={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),NAME:new RegExp("^\\[name=['\"]?("+M+")['\"]?\\]"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+P),PSEUDO:new RegExp("^"+H),POS:new RegExp(B,"i"),CHILD:new RegExp("^:(only|nth|first|last)-child(?:\\("+O+"*(even|odd|(([+-]|)(\\d*)n|)"+O+"*(?:([+-]|)"+O+"*(\\d+)|))"+O+"*\\)|)","i"),needsContext:new RegExp("^"+O+"*[>+~]|"+B,"i")},K=function(e){var t=g.createElement("div");try{return e(t)}catch(n){return!1}finally{t=null}},Q=K(function(e){return e.appendChild(g.createComment("")),!e.getElementsByTagName("*").length}),G=K(function(e){return e.innerHTML="<a href='#'></a>",e.firstChild&&typeof e.firstChild.getAttribute!==p&&e.firstChild.getAttribute("href")==="#"}),Y=K(function(e){e.innerHTML="<select></select>";var t=typeof e.lastChild.getAttribute("multiple");return t!=="boolean"&&t!=="string"}),Z=K(function(e){return e.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",!e.getElementsByClassName||!e.getElementsByClassName("e").length?!1:(e.lastChild.className="e",e.getElementsByClassName("e").length===2)}),et=K(function(e){e.id=d+0,e.innerHTML="<a name='"+d+"'></a><div name='"+d+"'></div>",y.insertBefore(e,y.firstChild);var t=g.getElementsByName&&g.getElementsByName(d).length===2+g.getElementsByName(d+0).length;return r=!g.getElementById(d),y.removeChild(e),t});try{x.call(y.childNodes,0)[0].nodeType}catch(tt){x=function(e){var t,n=[];for(;t=this[e];e++)n.push(t);return n}}nt.matches=function(e,t){return nt(e,null,null,t)},nt.matchesSelector=function(e,t){return nt(t,null,null,[e]).length>0},s=nt.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(i===1||i===9||i===11){if(typeof e.textContent=="string")return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=s(e)}else if(i===3||i===4)return e.nodeValue}else for(;t=e[r];r++)n+=s(t);return n},o=nt.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?t.nodeName!=="HTML":!1},u=nt.contains=y.contains?function(e,t){var n=e.nodeType===9?e.documentElement:e,r=t&&t.parentNode;return e===r||!!(r&&r.nodeType===1&&n.contains&&n.contains(r))}:y.compareDocumentPosition?function(e,t){return t&&!!(e.compareDocumentPosition(t)&16)}:function(e,t){while(t=t.parentNode)if(t===e)return!0;return!1},nt.attr=function(e,t){var n,r=o(e);return r||(t=t.toLowerCase()),(n=i.attrHandle[t])?n(e):r||Y?e.getAttribute(t):(n=e.getAttributeNode(t),n?typeof e[t]=="boolean"?e[t]?t:null:n.specified?n.value:null:null)},i=nt.selectors={cacheLength:50,createPseudo:N,match:J,attrHandle:G?{}:{href:function(e){return e.getAttribute("href",2)},type:function(e){return e.getAttribute("type")}},find:{ID:r?function(e,t,n){if(typeof t.getElementById!==p&&!n){var r=t.getElementById(e);return r&&r.parentNode?[r]:[]}}:function(e,n,r){if(typeof n.getElementById!==p&&!r){var i=n.getElementById(e);return i?i.id===e||typeof i.getAttributeNode!==p&&i.getAttributeNode("id").value===e?[i]:t:[]}},TAG:Q?function(e,t){if(typeof t.getElementsByTagName!==p)return t.getElementsByTagName(e)}:function(e,t){var n=t.getElementsByTagName(e);if(e==="*"){var r,i=[],s=0;for(;r=n[s];s++)r.nodeType===1&&i.push(r);return i}return n},NAME:et&&function(e,t){if(typeof t.getElementsByName!==p)return t.getElementsByName(name)},CLASS:Z&&function(e,t,n){if(typeof t.getElementsByClassName!==p&&!n)return t.getElementsByClassName(e)}},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace($,""),e[3]=(e[4]||e[5]||"").replace($,""),e[2]==="~="&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),e[1]==="nth"?(e[2]||nt.error(e[0]),e[3]=+(e[3]?e[4]+(e[5]||1):2*(e[2]==="even"||e[2]==="odd")),e[4]=+(e[6]+e[7]||e[2]==="odd")):e[2]&&nt.error(e[0]),e},PSEUDO:function(e){var t,n;if(J.CHILD.test(e[0]))return null;if(e[3])e[2]=e[3];else if(t=e[4])q.test(t)&&(n=ut(t,!0))&&(n=t.indexOf(")",t.length-n)-t.length)&&(t=t.slice(0,n),e[0]=e[0].slice(0,n)),e[2]=t;return e.slice(0,3)}},filter:{ID:r?function(e){return e=e.replace($,""),function(t){return t.getAttribute("id")===e}}:function(e){return e=e.replace($,""),function(t){var n=typeof t.getAttributeNode!==p&&t.getAttributeNode("id");return n&&n.value===e}},TAG:function(e){return e==="*"?function(){return!0}:(e=e.replace($,"").toLowerCase(),function(t){return t.nodeName&&t.nodeName.toLowerCase()===e})},CLASS:function(e){var t=k[d][e+" "];return t||(t=new RegExp("(^|"+O+")"+e+"("+O+"|$)"))&&k(e,function(e){return t.test(e.className||typeof e.getAttribute!==p&&e.getAttribute("class")||"")})},ATTR:function(e,t,n){return function(r,i){var s=nt.attr(r,e);return s==null?t==="!=":t?(s+="",t==="="?s===n:t==="!="?s!==n:t==="^="?n&&s.indexOf(n)===0:t==="*="?n&&s.indexOf(n)>-1:t==="$="?n&&s.substr(s.length-n.length)===n:t==="~="?(" "+s+" ").indexOf(n)>-1:t==="|="?s===n||s.substr(0,n.length+1)===n+"-":!1):!0}},CHILD:function(e,t,n,r){return e==="nth"?function(e){var t,i,s=e.parentNode;if(n===1&&r===0)return!0;if(s){i=0;for(t=s.firstChild;t;t=t.nextSibling)if(t.nodeType===1){i++;if(e===t)break}}return i-=r,i===n||i%n===0&&i/n>=0}:function(t){var n=t;switch(e){case"only":case"first":while(n=n.previousSibling)if(n.nodeType===1)return!1;if(e==="first")return!0;n=t;case"last":while(n=n.nextSibling)if(n.nodeType===1)return!1;return!0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||nt.error("unsupported pseudo: "+e);return r[d]?r(t):r.length>1?(n=[e,e,"",t],i.setFilters.hasOwnProperty(e.toLowerCase())?N(function(e,n){var i,s=r(e,t),o=s.length;while(o--)i=T.call(e,s[o]),e[i]=!(n[i]=s[o])}):function(e){return r(e,0,n)}):r}},pseudos:{not:N(function(e){var t=[],n=[],r=a(e.replace(j,"$1"));return r[d]?N(function(e,t,n,i){var s,o=r(e,null,i,[]),u=e.length;while(u--)if(s=o[u])e[u]=!(t[u]=s)}):function(e,i,s){return t[0]=e,r(t,null,s,n),!n.pop()}}),has:N(function(e){return function(t){return nt(e,t).length>0}}),contains:N(function(e){return function(t){return(t.textContent||t.innerText||s(t)).indexOf(e)>-1}}),enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return t==="input"&&!!e.checked||t==="option"&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},parent:function(e){return!i.pseudos.empty(e)},empty:function(e){var t;e=e.firstChild;while(e){if(e.nodeName>"@"||(t=e.nodeType)===3||t===4)return!1;e=e.nextSibling}return!0},header:function(e){return X.test(e.nodeName)},text:function(e){var t,n;return e.nodeName.toLowerCase()==="input"&&(t=e.type)==="text"&&((n=e.getAttribute("type"))==null||n.toLowerCase()===t)},radio:rt("radio"),checkbox:rt("checkbox"),file:rt("file"),password:rt("password"),image:rt("image"),submit:it("submit"),reset:it("reset"),button:function(e){var t=e.nodeName.toLowerCase();return t==="input"&&e.type==="button"||t==="button"},input:function(e){return V.test(e.nodeName)},focus:function(e){var t=e.ownerDocument;return e===t.activeElement&&(!t.hasFocus||t.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},active:function(e){return e===e.ownerDocument.activeElement},first:st(function(){return[0]}),last:st(function(e,t){return[t-1]}),eq:st(function(e,t,n){return[n<0?n+t:n]}),even:st(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:st(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:st(function(e,t,n){for(var r=n<0?n+t:n;--r>=0;)e.push(r);return e}),gt:st(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}},f=y.compareDocumentPosition?function(e,t){return e===t?(l=!0,0):(!e.compareDocumentPosition||!t.compareDocumentPosition?e.compareDocumentPosition:e.compareDocumentPosition(t)&4)?-1:1}:function(e,t){if(e===t)return l=!0,0;if(e.sourceIndex&&t.sourceIndex)return e.sourceIndex-t.sourceIndex;var n,r,i=[],s=[],o=e.parentNode,u=t.parentNode,a=o;if(o===u)return ot(e,t);if(!o)return-1;if(!u)return 1;while(a)i.unshift(a),a=a.parentNode;a=u;while(a)s.unshift(a),a=a.parentNode;n=i.length,r=s.length;for(var f=0;f<n&&f<r;f++)if(i[f]!==s[f])return ot(i[f],s[f]);return f===n?ot(e,s[f],-1):ot(i[f],t,1)},[0,0].sort(f),h=!l,nt.uniqueSort=function(e){var t,n=[],r=1,i=0;l=h,e.sort(f);if(l){for(;t=e[r];r++)t===e[r-1]&&(i=n.push(r));while(i--)e.splice(n[i],1)}return e},nt.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},a=nt.compile=function(e,t){var n,r=[],i=[],s=A[d][e+" "];if(!s){t||(t=ut(e)),n=t.length;while(n--)s=ht(t[n]),s[d]?r.push(s):i.push(s);s=A(e,pt(i,r))}return s},g.querySelectorAll&&function(){var e,t=vt,n=/'|\\/g,r=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,i=[":focus"],s=[":active"],u=y.matchesSelector||y.mozMatchesSelector||y.webkitMatchesSelector||y.oMatchesSelector||y.msMatchesSelector;K(function(e){e.innerHTML="<select><option selected=''></option></select>",e.querySelectorAll("[selected]").length||i.push("\\["+O+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),e.querySelectorAll(":checked").length||i.push(":checked")}),K(function(e){e.innerHTML="<p test=''></p>",e.querySelectorAll("[test^='']").length&&i.push("[*^$]="+O+"*(?:\"\"|'')"),e.innerHTML="<input type='hidden'/>",e.querySelectorAll(":enabled").length||i.push(":enabled",":disabled")}),i=new RegExp(i.join("|")),vt=function(e,r,s,o,u){if(!o&&!u&&!i.test(e)){var a,f,l=!0,c=d,h=r,p=r.nodeType===9&&e;if(r.nodeType===1&&r.nodeName.toLowerCase()!=="object"){a=ut(e),(l=r.getAttribute("id"))?c=l.replace(n,"\\$&"):r.setAttribute("id",c),c="[id='"+c+"'] ",f=a.length;while(f--)a[f]=c+a[f].join("");h=z.test(e)&&r.parentNode||r,p=a.join(",")}if(p)try{return S.apply(s,x.call(h.querySelectorAll(p),0)),s}catch(v){}finally{l||r.removeAttribute("id")}}return t(e,r,s,o,u)},u&&(K(function(t){e=u.call(t,"div");try{u.call(t,"[test!='']:sizzle"),s.push("!=",H)}catch(n){}}),s=new RegExp(s.join("|")),nt.matchesSelector=function(t,n){n=n.replace(r,"='$1']");if(!o(t)&&!s.test(n)&&!i.test(n))try{var a=u.call(t,n);if(a||e||t.document&&t.document.nodeType!==11)return a}catch(f){}return nt(n,null,null,[t]).length>0})}(),i.pseudos.nth=i.pseudos.eq,i.filters=mt.prototype=i.pseudos,i.setFilters=new mt,nt.attr=v.attr,v.find=nt,v.expr=nt.selectors,v.expr[":"]=v.expr.pseudos,v.unique=nt.uniqueSort,v.text=nt.getText,v.isXMLDoc=nt.isXML,v.contains=nt.contains}(e);var nt=/Until$/,rt=/^(?:parents|prev(?:Until|All))/,it=/^.[^:#\[\.,]*$/,st=v.expr.match.needsContext,ot={children:!0,contents:!0,next:!0,prev:!0};v.fn.extend({find:function(e){var t,n,r,i,s,o,u=this;if(typeof e!="string")return v(e).filter(function(){for(t=0,n=u.length;t<n;t++)if(v.contains(u[t],this))return!0});o=this.pushStack("","find",e);for(t=0,n=this.length;t<n;t++){r=o.length,v.find(e,this[t],o);if(t>0)for(i=r;i<o.length;i++)for(s=0;s<r;s++)if(o[s]===o[i]){o.splice(i--,1);break}}return o},has:function(e){var t,n=v(e,this),r=n.length;return this.filter(function(){for(t=0;t<r;t++)if(v.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e,!1),"not",e)},filter:function(e){return this.pushStack(ft(this,e,!0),"filter",e)},is:function(e){return!!e&&(typeof e=="string"?st.test(e)?v(e,this.context).index(this[0])>=0:v.filter(e,this).length>0:this.filter(e).length>0)},closest:function(e,t){var n,r=0,i=this.length,s=[],o=st.test(e)||typeof e!="string"?v(e,t||this.context):0;for(;r<i;r++){n=this[r];while(n&&n.ownerDocument&&n!==t&&n.nodeType!==11){if(o?o.index(n)>-1:v.find.matchesSelector(n,e)){s.push(n);break}n=n.parentNode}}return s=s.length>1?v.unique(s):s,this.pushStack(s,"closest",e)},index:function(e){return e?typeof e=="string"?v.inArray(this[0],v(e)):v.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(e,t){var n=typeof e=="string"?v(e,t):v.makeArray(e&&e.nodeType?[e]:e),r=v.merge(this.get(),n);return this.pushStack(ut(n[0])||ut(r[0])?r:v.unique(r))},addBack:function(e){return this.add(e==null?this.prevObject:this.prevObject.filter(e))}}),v.fn.andSelf=v.fn.addBack,v.each({parent:function(e){var t=e.parentNode;return t&&t.nodeType!==11?t:null},parents:function(e){return v.dir(e,"parentNode")},parentsUntil:function(e,t,n){return v.dir(e,"parentNode",n)},next:function(e){return at(e,"nextSibling")},prev:function(e){return at(e,"previousSibling")},nextAll:function(e){return v.dir(e,"nextSibling")},prevAll:function(e){return v.dir(e,"previousSibling")},nextUntil:function(e,t,n){return v.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return v.dir(e,"previousSibling",n)},siblings:function(e){return v.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return v.sibling(e.firstChild)},contents:function(e){return v.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:v.merge([],e.childNodes)}},function(e,t){v.fn[e]=function(n,r){var i=v.map(this,t,n);return nt.test(e)||(r=n),r&&typeof r=="string"&&(i=v.filter(r,i)),i=this.length>1&&!ot[e]?v.unique(i):i,this.length>1&&rt.test(e)&&(i=i.reverse()),this.pushStack(i,e,l.call(arguments).join(","))}}),v.extend({filter:function(e,t,n){return n&&(e=":not("+e+")"),t.length===1?v.find.matchesSelector(t[0],e)?[t[0]]:[]:v.find.matches(e,t)},dir:function(e,n,r){var i=[],s=e[n];while(s&&s.nodeType!==9&&(r===t||s.nodeType!==1||!v(s).is(r)))s.nodeType===1&&i.push(s),s=s[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)e.nodeType===1&&e!==t&&n.push(e);return n}});var ct="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",ht=/ jQuery\d+="(?:null|\d+)"/g,pt=/^\s+/,dt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,vt=/<([\w:]+)/,mt=/<tbody/i,gt=/<|&#?\w+;/,yt=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,wt=new RegExp("<(?:"+ct+")[\\s/>]","i"),Et=/^(?:checkbox|radio)$/,St=/checked\s*(?:[^=]|=\s*.checked.)/i,xt=/\/(java|ecma)script/i,Tt=/^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,Nt={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},Ct=lt(i),kt=Ct.appendChild(i.createElement("div"));Nt.optgroup=Nt.option,Nt.tbody=Nt.tfoot=Nt.colgroup=Nt.caption=Nt.thead,Nt.th=Nt.td,v.support.htmlSerialize||(Nt._default=[1,"X<div>","</div>"]),v.fn.extend({text:function(e){return v.access(this,function(e){return e===t?v.text(this):this.empty().append((this[0]&&this[0].ownerDocument||i).createTextNode(e))},null,e,arguments.length)},wrapAll:function(e){if(v.isFunction(e))return this.each(function(t){v(this).wrapAll(e.call(this,t))});if(this[0]){var t=v(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&e.firstChild.nodeType===1)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return v.isFunction(e)?this.each(function(t){v(this).wrapInner(e.call(this,t))}):this.each(function(){var t=v(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=v.isFunction(e);return this.each(function(n){v(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){v.nodeName(this,"body")||v(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(e){(this.nodeType===1||this.nodeType===11)&&this.appendChild(e)})},prepend:function(){return this.domManip(arguments,!0,function(e){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(e,this.firstChild)})},before:function(){if(!ut(this[0]))return this.domManip(arguments,!1,function(e){this.parentNode.insertBefore(e,this)});if(arguments.length){var e=v.clean(arguments);return this.pushStack(v.merge(e,this),"before",this.selector)}},after:function(){if(!ut(this[0]))return this.domManip(arguments,!1,function(e){this.parentNode.insertBefore(e,this.nextSibling)});if(arguments.length){var e=v.clean(arguments);return this.pushStack(v.merge(this,e),"after",this.selector)}},remove:function(e,t){var n,r=0;for(;(n=this[r])!=null;r++)if(!e||v.filter(e,[n]).length)!t&&n.nodeType===1&&(v.cleanData(n.getElementsByTagName("*")),v.cleanData([n])),n.parentNode&&n.parentNode.removeChild(n);return this},empty:function(){var e,t=0;for(;(e=this[t])!=null;t++){e.nodeType===1&&v.cleanData(e.getElementsByTagName("*"));while(e.firstChild)e.removeChild(e.firstChild)}return this},clone:function(e,t){return e=e==null?!1:e,t=t==null?e:t,this.map(function(){return v.clone(this,e,t)})},html:function(e){return v.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return n.nodeType===1?n.innerHTML.replace(ht,""):t;if(typeof e=="string"&&!yt.test(e)&&(v.support.htmlSerialize||!wt.test(e))&&(v.support.leadingWhitespace||!pt.test(e))&&!Nt[(vt.exec(e)||["",""])[1].toLowerCase()]){e=e.replace(dt,"<$1></$2>");try{for(;r<i;r++)n=this[r]||{},n.nodeType===1&&(v.cleanData(n.getElementsByTagName("*")),n.innerHTML=e);n=0}catch(s){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(e){return ut(this[0])?this.length?this.pushStack(v(v.isFunction(e)?e():e),"replaceWith",e):this:v.isFunction(e)?this.each(function(t){var n=v(this),r=n.html();n.replaceWith(e.call(this,t,r))}):(typeof e!="string"&&(e=v(e).detach()),this.each(function(){var t=this.nextSibling,n=this.parentNode;v(this).remove(),t?v(t).before(e):v(n).append(e)}))},detach:function(e){return this.remove(e,!0)},domManip:function(e,n,r){e=[].concat.apply([],e);var i,s,o,u,a=0,f=e[0],l=[],c=this.length;if(!v.support.checkClone&&c>1&&typeof f=="string"&&St.test(f))return this.each(function(){v(this).domManip(e,n,r)});if(v.isFunction(f))return this.each(function(i){var s=v(this);e[0]=f.call(this,i,n?s.html():t),s.domManip(e,n,r)});if(this[0]){i=v.buildFragment(e,this,l),o=i.fragment,s=o.firstChild,o.childNodes.length===1&&(o=s);if(s){n=n&&v.nodeName(s,"tr");for(u=i.cacheable||c-1;a<c;a++)r.call(n&&v.nodeName(this[a],"table")?Lt(this[a],"tbody"):this[a],a===u?o:v.clone(o,!0,!0))}o=s=null,l.length&&v.each(l,function(e,t){t.src?v.ajax?v.ajax({url:t.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):v.error("no ajax"):v.globalEval((t.text||t.textContent||t.innerHTML||"").replace(Tt,"")),t.parentNode&&t.parentNode.removeChild(t)})}return this}}),v.buildFragment=function(e,n,r){var s,o,u,a=e[0];return n=n||i,n=!n.nodeType&&n[0]||n,n=n.ownerDocument||n,e.length===1&&typeof a=="string"&&a.length<512&&n===i&&a.charAt(0)==="<"&&!bt.test(a)&&(v.support.checkClone||!St.test(a))&&(v.support.html5Clone||!wt.test(a))&&(o=!0,s=v.fragments[a],u=s!==t),s||(s=n.createDocumentFragment(),v.clean(e,n,s,r),o&&(v.fragments[a]=u&&s)),{fragment:s,cacheable:o}},v.fragments={},v.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){v.fn[e]=function(n){var r,i=0,s=[],o=v(n),u=o.length,a=this.length===1&&this[0].parentNode;if((a==null||a&&a.nodeType===11&&a.childNodes.length===1)&&u===1)return o[t](this[0]),this;for(;i<u;i++)r=(i>0?this.clone(!0):this).get(),v(o[i])[t](r),s=s.concat(r);return this.pushStack(s,e,o.selector)}}),v.extend({clone:function(e,t,n){var r,i,s,o;v.support.html5Clone||v.isXMLDoc(e)||!wt.test("<"+e.nodeName+">")?o=e.cloneNode(!0):(kt.innerHTML=e.outerHTML,kt.removeChild(o=kt.firstChild));if((!v.support.noCloneEvent||!v.support.noCloneChecked)&&(e.nodeType===1||e.nodeType===11)&&!v.isXMLDoc(e)){Ot(e,o),r=Mt(e),i=Mt(o);for(s=0;r[s];++s)i[s]&&Ot(r[s],i[s])}if(t){At(e,o);if(n){r=Mt(e),i=Mt(o);for(s=0;r[s];++s)At(r[s],i[s])}}return r=i=null,o},clean:function(e,t,n,r){var s,o,u,a,f,l,c,h,p,d,m,g,y=t===i&&Ct,b=[];if(!t||typeof t.createDocumentFragment=="undefined")t=i;for(s=0;(u=e[s])!=null;s++){typeof u=="number"&&(u+="");if(!u)continue;if(typeof u=="string")if(!gt.test(u))u=t.createTextNode(u);else{y=y||lt(t),c=t.createElement("div"),y.appendChild(c),u=u.replace(dt,"<$1></$2>"),a=(vt.exec(u)||["",""])[1].toLowerCase(),f=Nt[a]||Nt._default,l=f[0],c.innerHTML=f[1]+u+f[2];while(l--)c=c.lastChild;if(!v.support.tbody){h=mt.test(u),p=a==="table"&&!h?c.firstChild&&c.firstChild.childNodes:f[1]==="<table>"&&!h?c.childNodes:[];for(o=p.length-1;o>=0;--o)v.nodeName(p[o],"tbody")&&!p[o].childNodes.length&&p[o].parentNode.removeChild(p[o])}!v.support.leadingWhitespace&&pt.test(u)&&c.insertBefore(t.createTextNode(pt.exec(u)[0]),c.firstChild),u=c.childNodes,c.parentNode.removeChild(c)}u.nodeType?b.push(u):v.merge(b,u)}c&&(u=c=y=null);if(!v.support.appendChecked)for(s=0;(u=b[s])!=null;s++)v.nodeName(u,"input")?_t(u):typeof u.getElementsByTagName!="undefined"&&v.grep(u.getElementsByTagName("input"),_t);if(n){m=function(e){if(!e.type||xt.test(e.type))return r?r.push(e.parentNode?e.parentNode.removeChild(e):e):n.appendChild(e)};for(s=0;(u=b[s])!=null;s++)if(!v.nodeName(u,"script")||!m(u))n.appendChild(u),typeof u.getElementsByTagName!="undefined"&&(g=v.grep(v.merge([],u.getElementsByTagName("script")),m),b.splice.apply(b,[s+1,0].concat(g)),s+=g.length)}return b},cleanData:function(e,t){var n,r,i,s,o=0,u=v.expando,a=v.cache,f=v.support.deleteExpando,l=v.event.special;for(;(i=e[o])!=null;o++)if(t||v.acceptData(i)){r=i[u],n=r&&a[r];if(n){if(n.events)for(s in n.events)l[s]?v.event.remove(i,s):v.removeEvent(i,s,n.handle);a[r]&&(delete a[r],f?delete i[u]:i.removeAttribute?i.removeAttribute(u):i[u]=null,v.deletedIds.push(r))}}}}),function(){var e,t;v.uaMatch=function(e){e=e.toLowerCase();var t=/(chrome)[ \/]([\w.]+)/.exec(e)||/(webkit)[ \/]([\w.]+)/.exec(e)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e)||/(msie) ([\w.]+)/.exec(e)||e.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)||[];return{browser:t[1]||"",version:t[2]||"0"}},e=v.uaMatch(o.userAgent),t={},e.browser&&(t[e.browser]=!0,t.version=e.version),t.chrome?t.webkit=!0:t.webkit&&(t.safari=!0),v.browser=t,v.sub=function(){function e(t,n){return new e.fn.init(t,n)}v.extend(!0,e,this),e.superclass=this,e.fn=e.prototype=this(),e.fn.constructor=e,e.sub=this.sub,e.fn.init=function(r,i){return i&&i instanceof v&&!(i instanceof e)&&(i=e(i)),v.fn.init.call(this,r,i,t)},e.fn.init.prototype=e.fn;var t=e(i);return e}}();var Dt,Pt,Ht,Bt=/alpha\([^)]*\)/i,jt=/opacity=([^)]*)/,Ft=/^(top|right|bottom|left)$/,It=/^(none|table(?!-c[ea]).+)/,qt=/^margin/,Rt=new RegExp("^("+m+")(.*)$","i"),Ut=new RegExp("^("+m+")(?!px)[a-z%]+$","i"),zt=new RegExp("^([-+])=("+m+")","i"),Wt={BODY:"block"},Xt={position:"absolute",visibility:"hidden",display:"block"},Vt={letterSpacing:0,fontWeight:400},$t=["Top","Right","Bottom","Left"],Jt=["Webkit","O","Moz","ms"],Kt=v.fn.toggle;v.fn.extend({css:function(e,n){return v.access(this,function(e,n,r){return r!==t?v.style(e,n,r):v.css(e,n)},e,n,arguments.length>1)},show:function(){return Yt(this,!0)},hide:function(){return Yt(this)},toggle:function(e,t){var n=typeof e=="boolean";return v.isFunction(e)&&v.isFunction(t)?Kt.apply(this,arguments):this.each(function(){(n?e:Gt(this))?v(this).show():v(this).hide()})}}),v.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Dt(e,"opacity");return n===""?"1":n}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":v.support.cssFloat?"cssFloat":"styleFloat"},style:function(e,n,r,i){if(!e||e.nodeType===3||e.nodeType===8||!e.style)return;var s,o,u,a=v.camelCase(n),f=e.style;n=v.cssProps[a]||(v.cssProps[a]=Qt(f,a)),u=v.cssHooks[n]||v.cssHooks[a];if(r===t)return u&&"get"in u&&(s=u.get(e,!1,i))!==t?s:f[n];o=typeof r,o==="string"&&(s=zt.exec(r))&&(r=(s[1]+1)*s[2]+parseFloat(v.css(e,n)),o="number");if(r==null||o==="number"&&isNaN(r))return;o==="number"&&!v.cssNumber[a]&&(r+="px");if(!u||!("set"in u)||(r=u.set(e,r,i))!==t)try{f[n]=r}catch(l){}},css:function(e,n,r,i){var s,o,u,a=v.camelCase(n);return n=v.cssProps[a]||(v.cssProps[a]=Qt(e.style,a)),u=v.cssHooks[n]||v.cssHooks[a],u&&"get"in u&&(s=u.get(e,!0,i)),s===t&&(s=Dt(e,n)),s==="normal"&&n in Vt&&(s=Vt[n]),r||i!==t?(o=parseFloat(s),r||v.isNumeric(o)?o||0:s):s},swap:function(e,t,n){var r,i,s={};for(i in t)s[i]=e.style[i],e.style[i]=t[i];r=n.call(e);for(i in t)e.style[i]=s[i];return r}}),e.getComputedStyle?Dt=function(t,n){var r,i,s,o,u=e.getComputedStyle(t,null),a=t.style;return u&&(r=u.getPropertyValue(n)||u[n],r===""&&!v.contains(t.ownerDocument,t)&&(r=v.style(t,n)),Ut.test(r)&&qt.test(n)&&(i=a.width,s=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=u.width,a.width=i,a.minWidth=s,a.maxWidth=o)),r}:i.documentElement.currentStyle&&(Dt=function(e,t){var n,r,i=e.currentStyle&&e.currentStyle[t],s=e.style;return i==null&&s&&s[t]&&(i=s[t]),Ut.test(i)&&!Ft.test(t)&&(n=s.left,r=e.runtimeStyle&&e.runtimeStyle.left,r&&(e.runtimeStyle.left=e.currentStyle.left),s.left=t==="fontSize"?"1em":i,i=s.pixelLeft+"px",s.left=n,r&&(e.runtimeStyle.left=r)),i===""?"auto":i}),v.each(["height","width"],function(e,t){v.cssHooks[t]={get:function(e,n,r){if(n)return e.offsetWidth===0&&It.test(Dt(e,"display"))?v.swap(e,Xt,function(){return tn(e,t,r)}):tn(e,t,r)},set:function(e,n,r){return Zt(e,n,r?en(e,t,r,v.support.boxSizing&&v.css(e,"boxSizing")==="border-box"):0)}}}),v.support.opacity||(v.cssHooks.opacity={get:function(e,t){return jt.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var n=e.style,r=e.currentStyle,i=v.isNumeric(t)?"alpha(opacity="+t*100+")":"",s=r&&r.filter||n.filter||"";n.zoom=1;if(t>=1&&v.trim(s.replace(Bt,""))===""&&n.removeAttribute){n.removeAttribute("filter");if(r&&!r.filter)return}n.filter=Bt.test(s)?s.replace(Bt,i):s+" "+i}}),v(function(){v.support.reliableMarginRight||(v.cssHooks.marginRight={get:function(e,t){return v.swap(e,{display:"inline-block"},function(){if(t)return Dt(e,"marginRight")})}}),!v.support.pixelPosition&&v.fn.position&&v.each(["top","left"],function(e,t){v.cssHooks[t]={get:function(e,n){if(n){var r=Dt(e,t);return Ut.test(r)?v(e).position()[t]+"px":r}}}})}),v.expr&&v.expr.filters&&(v.expr.filters.hidden=function(e){return e.offsetWidth===0&&e.offsetHeight===0||!v.support.reliableHiddenOffsets&&(e.style&&e.style.display||Dt(e,"display"))==="none"},v.expr.filters.visible=function(e){return!v.expr.filters.hidden(e)}),v.each({margin:"",padding:"",border:"Width"},function(e,t){v.cssHooks[e+t]={expand:function(n){var r,i=typeof n=="string"?n.split(" "):[n],s={};for(r=0;r<4;r++)s[e+$t[r]+t]=i[r]||i[r-2]||i[0];return s}},qt.test(e)||(v.cssHooks[e+t].set=Zt)});var rn=/%20/g,sn=/\[\]$/,on=/\r?\n/g,un=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,an=/^(?:select|textarea)/i;v.fn.extend({serialize:function(){return v.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?v.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||an.test(this.nodeName)||un.test(this.type))}).map(function(e,t){var n=v(this).val();return n==null?null:v.isArray(n)?v.map(n,function(e,n){return{name:t.name,value:e.replace(on,"\r\n")}}):{name:t.name,value:n.replace(on,"\r\n")}}).get()}}),v.param=function(e,n){var r,i=[],s=function(e,t){t=v.isFunction(t)?t():t==null?"":t,i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};n===t&&(n=v.ajaxSettings&&v.ajaxSettings.traditional);if(v.isArray(e)||e.jquery&&!v.isPlainObject(e))v.each(e,function(){s(this.name,this.value)});else for(r in e)fn(r,e[r],n,s);return i.join("&").replace(rn,"+")};var ln,cn,hn=/#.*$/,pn=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,dn=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,vn=/^(?:GET|HEAD)$/,mn=/^\/\//,gn=/\?/,yn=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bn=/([?&])_=[^&]*/,wn=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,En=v.fn.load,Sn={},xn={},Tn=["*/"]+["*"];try{cn=s.href}catch(Nn){cn=i.createElement("a"),cn.href="",cn=cn.href}ln=wn.exec(cn.toLowerCase())||[],v.fn.load=function(e,n,r){if(typeof e!="string"&&En)return En.apply(this,arguments);if(!this.length)return this;var i,s,o,u=this,a=e.indexOf(" ");return a>=0&&(i=e.slice(a,e.length),e=e.slice(0,a)),v.isFunction(n)?(r=n,n=t):n&&typeof n=="object"&&(s="POST"),v.ajax({url:e,type:s,dataType:"html",data:n,complete:function(e,t){r&&u.each(r,o||[e.responseText,t,e])}}).done(function(e){o=arguments,u.html(i?v("<div>").append(e.replace(yn,"")).find(i):e)}),this},v.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(e,t){v.fn[t]=function(e){return this.on(t,e)}}),v.each(["get","post"],function(e,n){v[n]=function(e,r,i,s){return v.isFunction(r)&&(s=s||i,i=r,r=t),v.ajax({type:n,url:e,data:r,success:i,dataType:s})}}),v.extend({getScript:function(e,n){return v.get(e,t,n,"script")},getJSON:function(e,t,n){return v.get(e,t,n,"json")},ajaxSetup:function(e,t){return t?Ln(e,v.ajaxSettings):(t=e,e=v.ajaxSettings),Ln(e,t),e},ajaxSettings:{url:cn,isLocal:dn.test(ln[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":Tn},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":e.String,"text html":!0,"text json":v.parseJSON,"text xml":v.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:Cn(Sn),ajaxTransport:Cn(xn),ajax:function(e,n){function T(e,n,s,a){var l,y,b,w,S,T=n;if(E===2)return;E=2,u&&clearTimeout(u),o=t,i=a||"",x.readyState=e>0?4:0,s&&(w=An(c,x,s));if(e>=200&&e<300||e===304)c.ifModified&&(S=x.getResponseHeader("Last-Modified"),S&&(v.lastModified[r]=S),S=x.getResponseHeader("Etag"),S&&(v.etag[r]=S)),e===304?(T="notmodified",l=!0):(l=On(c,w),T=l.state,y=l.data,b=l.error,l=!b);else{b=T;if(!T||e)T="error",e<0&&(e=0)}x.status=e,x.statusText=(n||T)+"",l?d.resolveWith(h,[y,T,x]):d.rejectWith(h,[x,T,b]),x.statusCode(g),g=t,f&&p.trigger("ajax"+(l?"Success":"Error"),[x,c,l?y:b]),m.fireWith(h,[x,T]),f&&(p.trigger("ajaxComplete",[x,c]),--v.active||v.event.trigger("ajaxStop"))}typeof e=="object"&&(n=e,e=t),n=n||{};var r,i,s,o,u,a,f,l,c=v.ajaxSetup({},n),h=c.context||c,p=h!==c&&(h.nodeType||h instanceof v)?v(h):v.event,d=v.Deferred(),m=v.Callbacks("once memory"),g=c.statusCode||{},b={},w={},E=0,S="canceled",x={readyState:0,setRequestHeader:function(e,t){if(!E){var n=e.toLowerCase();e=w[n]=w[n]||e,b[e]=t}return this},getAllResponseHeaders:function(){return E===2?i:null},getResponseHeader:function(e){var n;if(E===2){if(!s){s={};while(n=pn.exec(i))s[n[1].toLowerCase()]=n[2]}n=s[e.toLowerCase()]}return n===t?null:n},overrideMimeType:function(e){return E||(c.mimeType=e),this},abort:function(e){return e=e||S,o&&o.abort(e),T(0,e),this}};d.promise(x),x.success=x.done,x.error=x.fail,x.complete=m.add,x.statusCode=function(e){if(e){var t;if(E<2)for(t in e)g[t]=[g[t],e[t]];else t=e[x.status],x.always(t)}return this},c.url=((e||c.url)+"").replace(hn,"").replace(mn,ln[1]+"//"),c.dataTypes=v.trim(c.dataType||"*").toLowerCase().split(y),c.crossDomain==null&&(a=wn.exec(c.url.toLowerCase()),c.crossDomain=!(!a||a[1]===ln[1]&&a[2]===ln[2]&&(a[3]||(a[1]==="http:"?80:443))==(ln[3]||(ln[1]==="http:"?80:443)))),c.data&&c.processData&&typeof c.data!="string"&&(c.data=v.param(c.data,c.traditional)),kn(Sn,c,n,x);if(E===2)return x;f=c.global,c.type=c.type.toUpperCase(),c.hasContent=!vn.test(c.type),f&&v.active++===0&&v.event.trigger("ajaxStart");if(!c.hasContent){c.data&&(c.url+=(gn.test(c.url)?"&":"?")+c.data,delete c.data),r=c.url;if(c.cache===!1){var N=v.now(),C=c.url.replace(bn,"$1_="+N);c.url=C+(C===c.url?(gn.test(c.url)?"&":"?")+"_="+N:"")}}(c.data&&c.hasContent&&c.contentType!==!1||n.contentType)&&x.setRequestHeader("Content-Type",c.contentType),c.ifModified&&(r=r||c.url,v.lastModified[r]&&x.setRequestHeader("If-Modified-Since",v.lastModified[r]),v.etag[r]&&x.setRequestHeader("If-None-Match",v.etag[r])),x.setRequestHeader("Accept",c.dataTypes[0]&&c.accepts[c.dataTypes[0]]?c.accepts[c.dataTypes[0]]+(c.dataTypes[0]!=="*"?", "+Tn+"; q=0.01":""):c.accepts["*"]);for(l in c.headers)x.setRequestHeader(l,c.headers[l]);if(!c.beforeSend||c.beforeSend.call(h,x,c)!==!1&&E!==2){S="abort";for(l in{success:1,error:1,complete:1})x[l](c[l]);o=kn(xn,c,n,x);if(!o)T(-1,"No Transport");else{x.readyState=1,f&&p.trigger("ajaxSend",[x,c]),c.async&&c.timeout>0&&(u=setTimeout(function(){x.abort("timeout")},c.timeout));try{E=1,o.send(b,T)}catch(k){if(!(E<2))throw k;T(-1,k)}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var Mn=[],_n=/\?/,Dn=/(=)\?(?=&|$)|\?\?/,Pn=v.now();v.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Mn.pop()||v.expando+"_"+Pn++;return this[e]=!0,e}}),v.ajaxPrefilter("json jsonp",function(n,r,i){var s,o,u,a=n.data,f=n.url,l=n.jsonp!==!1,c=l&&Dn.test(f),h=l&&!c&&typeof a=="string"&&!(n.contentType||"").indexOf("application/x-www-form-urlencoded")&&Dn.test(a);if(n.dataTypes[0]==="jsonp"||c||h)return s=n.jsonpCallback=v.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,o=e[s],c?n.url=f.replace(Dn,"$1"+s):h?n.data=a.replace(Dn,"$1"+s):l&&(n.url+=(_n.test(f)?"&":"?")+n.jsonp+"="+s),n.converters["script json"]=function(){return u||v.error(s+" was not called"),u[0]},n.dataTypes[0]="json",e[s]=function(){u=arguments},i.always(function(){e[s]=o,n[s]&&(n.jsonpCallback=r.jsonpCallback,Mn.push(s)),u&&v.isFunction(o)&&o(u[0]),u=o=t}),"script"}),v.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(e){return v.globalEval(e),e}}}),v.ajaxPrefilter("script",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),v.ajaxTransport("script",function(e){if(e.crossDomain){var n,r=i.head||i.getElementsByTagName("head")[0]||i.documentElement;return{send:function(s,o){n=i.createElement("script"),n.async="async",e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,i){if(i||!n.readyState||/loaded|complete/.test(n.readyState))n.onload=n.onreadystatechange=null,r&&n.parentNode&&r.removeChild(n),n=t,i||o(200,"success")},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(0,1)}}}});var Hn,Bn=e.ActiveXObject?function(){for(var e in Hn)Hn[e](0,1)}:!1,jn=0;v.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&Fn()||In()}:Fn,function(e){v.extend(v.support,{ajax:!!e,cors:!!e&&"withCredentials"in e})}(v.ajaxSettings.xhr()),v.support.ajax&&v.ajaxTransport(function(n){if(!n.crossDomain||v.support.cors){var r;return{send:function(i,s){var o,u,a=n.xhr();n.username?a.open(n.type,n.url,n.async,n.username,n.password):a.open(n.type,n.url,n.async);if(n.xhrFields)for(u in n.xhrFields)a[u]=n.xhrFields[u];n.mimeType&&a.overrideMimeType&&a.overrideMimeType(n.mimeType),!n.crossDomain&&!i["X-Requested-With"]&&(i["X-Requested-With"]="XMLHttpRequest");try{for(u in i)a.setRequestHeader(u,i[u])}catch(f){}a.send(n.hasContent&&n.data||null),r=function(e,i){var u,f,l,c,h;try{if(r&&(i||a.readyState===4)){r=t,o&&(a.onreadystatechange=v.noop,Bn&&delete Hn[o]);if(i)a.readyState!==4&&a.abort();else{u=a.status,l=a.getAllResponseHeaders(),c={},h=a.responseXML,h&&h.documentElement&&(c.xml=h);try{c.text=a.responseText}catch(p){}try{f=a.statusText}catch(p){f=""}!u&&n.isLocal&&!n.crossDomain?u=c.text?200:404:u===1223&&(u=204)}}}catch(d){i||s(-1,d)}c&&s(u,f,c,l)},n.async?a.readyState===4?setTimeout(r,0):(o=++jn,Bn&&(Hn||(Hn={},v(e).unload(Bn)),Hn[o]=r),a.onreadystatechange=r):r()},abort:function(){r&&r(0,1)}}}});var qn,Rn,Un=/^(?:toggle|show|hide)$/,zn=new RegExp("^(?:([-+])=|)("+m+")([a-z%]*)$","i"),Wn=/queueHooks$/,Xn=[Gn],Vn={"*":[function(e,t){var n,r,i=this.createTween(e,t),s=zn.exec(t),o=i.cur(),u=+o||0,a=1,f=20;if(s){n=+s[2],r=s[3]||(v.cssNumber[e]?"":"px");if(r!=="px"&&u){u=v.css(i.elem,e,!0)||n||1;do a=a||".5",u/=a,v.style(i.elem,e,u+r);while(a!==(a=i.cur()/o)&&a!==1&&--f)}i.unit=r,i.start=u,i.end=s[1]?u+(s[1]+1)*n:n}return i}]};v.Animation=v.extend(Kn,{tweener:function(e,t){v.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");var n,r=0,i=e.length;for(;r<i;r++)n=e[r],Vn[n]=Vn[n]||[],Vn[n].unshift(t)},prefilter:function(e,t){t?Xn.unshift(e):Xn.push(e)}}),v.Tween=Yn,Yn.prototype={constructor:Yn,init:function(e,t,n,r,i,s){this.elem=e,this.prop=n,this.easing=i||"swing",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=s||(v.cssNumber[n]?"":"px")},cur:function(){var e=Yn.propHooks[this.prop];return e&&e.get?e.get(this):Yn.propHooks._default.get(this)},run:function(e){var t,n=Yn.propHooks[this.prop];return this.options.duration?this.pos=t=v.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Yn.propHooks._default.set(this),this}},Yn.prototype.init.prototype=Yn.prototype,Yn.propHooks={_default:{get:function(e){var t;return e.elem[e.prop]==null||!!e.elem.style&&e.elem.style[e.prop]!=null?(t=v.css(e.elem,e.prop,!1,""),!t||t==="auto"?0:t):e.elem[e.prop]},set:function(e){v.fx.step[e.prop]?v.fx.step[e.prop](e):e.elem.style&&(e.elem.style[v.cssProps[e.prop]]!=null||v.cssHooks[e.prop])?v.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},Yn.propHooks.scrollTop=Yn.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},v.each(["toggle","show","hide"],function(e,t){var n=v.fn[t];v.fn[t]=function(r,i,s){return r==null||typeof r=="boolean"||!e&&v.isFunction(r)&&v.isFunction(i)?n.apply(this,arguments):this.animate(Zn(t,!0),r,i,s)}}),v.fn.extend({fadeTo:function(e,t,n,r){return this.filter(Gt).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=v.isEmptyObject(e),s=v.speed(t,n,r),o=function(){var t=Kn(this,v.extend({},e),s);i&&t.stop(!0)};return i||s.queue===!1?this.each(o):this.queue(s.queue,o)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return typeof e!="string"&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,n=e!=null&&e+"queueHooks",s=v.timers,o=v._data(this);if(n)o[n]&&o[n].stop&&i(o[n]);else for(n in o)o[n]&&o[n].stop&&Wn.test(n)&&i(o[n]);for(n=s.length;n--;)s[n].elem===this&&(e==null||s[n].queue===e)&&(s[n].anim.stop(r),t=!1,s.splice(n,1));(t||!r)&&v.dequeue(this,e)})}}),v.each({slideDown:Zn("show"),slideUp:Zn("hide"),slideToggle:Zn("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){v.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),v.speed=function(e,t,n){var r=e&&typeof e=="object"?v.extend({},e):{complete:n||!n&&t||v.isFunction(e)&&e,duration:e,easing:n&&t||t&&!v.isFunction(t)&&t};r.duration=v.fx.off?0:typeof r.duration=="number"?r.duration:r.duration in v.fx.speeds?v.fx.speeds[r.duration]:v.fx.speeds._default;if(r.queue==null||r.queue===!0)r.queue="fx";return r.old=r.complete,r.complete=function(){v.isFunction(r.old)&&r.old.call(this),r.queue&&v.dequeue(this,r.queue)},r},v.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},v.timers=[],v.fx=Yn.prototype.init,v.fx.tick=function(){var e,n=v.timers,r=0;qn=v.now();for(;r<n.length;r++)e=n[r],!e()&&n[r]===e&&n.splice(r--,1);n.length||v.fx.stop(),qn=t},v.fx.timer=function(e){e()&&v.timers.push(e)&&!Rn&&(Rn=setInterval(v.fx.tick,v.fx.interval))},v.fx.interval=13,v.fx.stop=function(){clearInterval(Rn),Rn=null},v.fx.speeds={slow:600,fast:200,_default:400},v.fx.step={},v.expr&&v.expr.filters&&(v.expr.filters.animated=function(e){return v.grep(v.timers,function(t){return e===t.elem}).length});var er=/^(?:body|html)$/i;v.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){v.offset.setOffset(this,e,t)});var n,r,i,s,o,u,a,f={top:0,left:0},l=this[0],c=l&&l.ownerDocument;if(!c)return;return(r=c.body)===l?v.offset.bodyOffset(l):(n=c.documentElement,v.contains(n,l)?(typeof l.getBoundingClientRect!="undefined"&&(f=l.getBoundingClientRect()),i=tr(c),s=n.clientTop||r.clientTop||0,o=n.clientLeft||r.clientLeft||0,u=i.pageYOffset||n.scrollTop,a=i.pageXOffset||n.scrollLeft,{top:f.top+u-s,left:f.left+a-o}):f)},v.offset={bodyOffset:function(e){var t=e.offsetTop,n=e.offsetLeft;return v.support.doesNotIncludeMarginInBodyOffset&&(t+=parseFloat(v.css(e,"marginTop"))||0,n+=parseFloat(v.css(e,"marginLeft"))||0),{top:t,left:n}},setOffset:function(e,t,n){var r=v.css(e,"position");r==="static"&&(e.style.position="relative");var i=v(e),s=i.offset(),o=v.css(e,"top"),u=v.css(e,"left"),a=(r==="absolute"||r==="fixed")&&v.inArray("auto",[o,u])>-1,f={},l={},c,h;a?(l=i.position(),c=l.top,h=l.left):(c=parseFloat(o)||0,h=parseFloat(u)||0),v.isFunction(t)&&(t=t.call(e,n,s)),t.top!=null&&(f.top=t.top-s.top+c),t.left!=null&&(f.left=t.left-s.left+h),"using"in t?t.using.call(e,f):i.css(f)}},v.fn.extend({position:function(){if(!this[0])return;var e=this[0],t=this.offsetParent(),n=this.offset(),r=er.test(t[0].nodeName)?{top:0,left:0}:t.offset();return n.top-=parseFloat(v.css(e,"marginTop"))||0,n.left-=parseFloat(v.css(e,"marginLeft"))||0,r.top+=parseFloat(v.css(t[0],"borderTopWidth"))||0,r.left+=parseFloat(v.css(t[0],"borderLeftWidth"))||0,{top:n.top-r.top,left:n.left-r.left}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||i.body;while(e&&!er.test(e.nodeName)&&v.css(e,"position")==="static")e=e.offsetParent;return e||i.body})}}),v.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,n){var r=/Y/.test(n);v.fn[e]=function(i){return v.access(this,function(e,i,s){var o=tr(e);if(s===t)return o?n in o?o[n]:o.document.documentElement[i]:e[i];o?o.scrollTo(r?v(o).scrollLeft():s,r?s:v(o).scrollTop()):e[i]=s},e,i,arguments.length,null)}}),v.each({Height:"height",Width:"width"},function(e,n){v.each({padding:"inner"+e,content:n,"":"outer"+e},function(r,i){v.fn[i]=function(i,s){var o=arguments.length&&(r||typeof i!="boolean"),u=r||(i===!0||s===!0?"margin":"border");return v.access(this,function(n,r,i){var s;return v.isWindow(n)?n.document.documentElement["client"+e]:n.nodeType===9?(s=n.documentElement,Math.max(n.body["scroll"+e],s["scroll"+e],n.body["offset"+e],s["offset"+e],s["client"+e])):i===t?v.css(n,r,i,u):v.style(n,r,i,u)},n,o?i:t,o,null)}})}),e.jQuery=e.$=v,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return v})})(window);
//]]>
</script>
<script id="jqueryArea" type="text/javascript">
//<![CDATA[
/*
jQuery.encoding.digests.sha1.js

SHA-1 digest and associated utility functions

Copyright (c) UnaMesa Association 2009

Dual licensed under the MIT and GPL licenses:
  http://www.opensource.org/licenses/mit-license.php
  http://www.gnu.org/licenses/gpl.html
*/

(function($) {

if(!$.encoding)
	$.encoding = {};
	$.extend($.encoding,{
		strToBe32s: function(str) {
			// Convert a string to an array of big-endian 32-bit words
			var be=[];
			var len=Math.floor(str.length/4);
			var i, j;
			for(i=0, j=0; i<len; i++, j+=4) {
				be[i]=((str.charCodeAt(j)&0xff) << 24)|((str.charCodeAt(j+1)&0xff) << 16)|((str.charCodeAt(j+2)&0xff) << 8)|(str.charCodeAt(j+3)&0xff);
			}
			while(j<str.length) {
				be[j>>2] |= (str.charCodeAt(j)&0xff)<<(24-(j*8)%32);
				j++;
			}
			return be;
		},
		be32sToStr: function(be) {
			// Convert an array of big-endian 32-bit words to a string
			var str='';
			for(var i=0;i<be.length*32;i+=8) {
				str += String.fromCharCode((be[i>>5]>>>(24-i%32)) & 0xff);
			}
			return str;
		},
		be32sToHex: function(be) {
			// Convert an array of big-endian 32-bit words to a hex string
			var hex='0123456789ABCDEF';
			var str='';
			for(var i=0;i<be.length*4;i++) {
				str += hex.charAt((be[i>>2]>>((3-i%4)*8+4))&0xF) + hex.charAt((be[i>>2]>>((3-i%4)*8))&0xF);
			}
			return str;
		}
	});
})(jQuery);


(function($) {

if(!$.encoding.digests)
	$.encoding.digests = {};
	$.extend($.encoding.digests,{
		hexSha1Str: function(str) {
			// Return, in hex, the SHA-1 hash of a string
			return $.encoding.be32sToHex($.encoding.digests.sha1Str(str));
		},
		sha1Str: function(str) {
			// Return the SHA-1 hash of a string
			return sha1($.encoding.strToBe32s(str),str.length);
		},
		sha1: function(x,blen) {
			// Calculate the SHA-1 hash of an array of blen bytes of big-endian 32-bit words
			return sha1($.encoding.strToBe32s(str),str.length);
		}
	});

	// Private functions.
	function sha1(x,blen) {
		// Calculate the SHA-1 hash of an array of blen bytes of big-endian 32-bit words
		function add32(a,b) {
			// Add 32-bit integers, wrapping at 32 bits
			// Uses 16-bit operations internally to work around bugs in some JavaScript interpreters.
			var lsw=(a&0xFFFF)+(b&0xFFFF);
			var msw=(a>>16)+(b>>16)+(lsw>>16);
			return (msw<<16)|(lsw&0xFFFF);
		}
		function AA(a,b,c,d,e) {
			// Cryptographic round helper function. Add five 32-bit integers, wrapping at 32 bits, second parameter is rotated left 5 bits before the addition
			// Uses 16-bit operations internally to work around bugs in some JavaScript interpreters.
			b=(b>>>27)|(b<<5);
			var lsw=(a&0xFFFF)+(b&0xFFFF)+(c&0xFFFF)+(d&0xFFFF)+(e&0xFFFF);
			var msw=(a>>16)+(b>>16)+(c>>16)+(d>>16)+(e>>16)+(lsw>>16);
			return (msw<<16)|(lsw&0xFFFF);
		}
		function RR(w,j) {
			// Cryptographic round helper function.
			var n=w[j-3]^w[j-8]^w[j-14]^w[j-16];
			return (n>>>31)|(n<<1);
		}

		var len=blen*8;
		x[len>>5] |= 0x80 << (24-len%32);
		x[((len+64>>9)<<4)+15]=len;
		var w=new Array(80);

		var k1=0x5A827999;
		var k2=0x6ED9EBA1;
		var k3=0x8F1BBCDC;
		var k4=0xCA62C1D6;

		var h0=0x67452301;
		var h1=0xEFCDAB89;
		var h2=0x98BADCFE;
		var h3=0x10325476;
		var h4=0xC3D2E1F0;

		for(var i=0;i<x.length;i+=16) {
			var j=0;
			var t;
			var a=h0;
			var b=h1;
			var c=h2;
			var d=h3;
			var e=h4;
			while(j<16) {
				w[j]=x[i+j];
				t=AA(e,a,d^(b&(c^d)),w[j],k1);
				e=d; d=c; c=(b>>>2)|(b<<30); b=a; a=t; j++;
			}
			while(j<20) {
				w[j]=RR(w,j);
				t=AA(e,a,d^(b&(c^d)),w[j],k1);
				e=d; d=c; c=(b>>>2)|(b<<30); b=a; a=t; j++;
			}
			while(j<40) {
				w[j]=RR(w,j);
				t=AA(e,a,b^c^d,w[j],k2);
				e=d; d=c; c=(b>>>2)|(b<<30); b=a; a=t; j++;
			}
			while(j<60) {
				w[j]=RR(w,j);
				t=AA(e,a,(b&c)|(d&(b|c)),w[j],k3);
				e=d; d=c; c=(b>>>2)|(b<<30); b=a; a=t; j++;
			}
			while(j<80) {
				w[j]=RR(w,j);
				t=AA(e,a,b^c^d,w[j],k4);
				e=d; d=c; c=(b>>>2)|(b<<30); b=a; a=t; j++;
			}
			h0=add32(h0,a);
			h1=add32(h1,b);
			h2=add32(h2,c);
			h3=add32(h3,d);
			h4=add32(h4,e);
		}
		return [h0,h1,h2,h3,h4];
	}
})(jQuery);
/*
jQuery.twStylesheet.js

jQuery plugin to dynamically insert CSS rules into a document

Usage:
  jQuery.twStylesheet applies style definitions
  jQuery.twStylesheet.remove neutralizes style definitions

Copyright (c) UnaMesa Association 2009

Triple licensed under the BSD, MIT and GPL licenses:
  http://www.opensource.org/licenses/bsd-license.php
  http://www.opensource.org/licenses/mit-license.php
  http://www.gnu.org/licenses/gpl.html
*/

(function($) {

var defaultId = "customStyleSheet"; // XXX: rename to dynamicStyleSheet?

// Add or replace a style sheet
// css argument is a string of CSS rule sets
// options.id is an optional name identifying the style sheet
// options.doc is an optional document reference
// N.B.: Uses DOM methods instead of jQuery to ensure cross-browser comaptibility.
$.twStylesheet = function(css, options) {
	options = options || {};
	var id = options.id || defaultId;
	var doc = options.doc || document;
	var el = doc.getElementById(id);
	if(doc.createStyleSheet) { // IE-specific handling
		if(el) {
			el.parentNode.removeChild(el);
		}
		doc.getElementsByTagName("head")[0].insertAdjacentHTML("beforeEnd",
			'&nbsp;<style id="' + id + '" type="text/css">' + css + '</style>'); // fails without &nbsp;
	} else { // modern browsers
		if(el) {
			el.replaceChild(doc.createTextNode(css), el.firstChild);
		} else {
			el = doc.createElement("style");
			el.type = "text/css";
			el.id = id;
			el.appendChild(doc.createTextNode(css));
			doc.getElementsByTagName("head")[0].appendChild(el);
		}
	}
};

// Remove existing style sheet
// options.id is an optional name identifying the style sheet
// options.doc is an optional document reference
$.twStylesheet.remove = function(options) {
	options = options || {};
	var id = options.id || defaultId;
	var doc = options.doc || document;
	var el = doc.getElementById(id);
	if(el) {
		el.parentNode.removeChild(el);
	}
};

})(jQuery);

//]]>
</script>
<script type="text/javascript">
//<![CDATA[
if(useJavaSaver)
	document.write("<applet style='position:absolute;left:-1px' name='TiddlySaver' code='TiddlySaver.class' archive='TiddlySaver.jar' width='1' height='1'></applet>");
//]]>
</script>
<!--POST-SCRIPT-START-->

<!--POST-SCRIPT-END-->
</body>
</html>
